; ModuleID = '/ubc/ece/home/kp/grads/lpalazzi/Documents/DependableSystemsLab/benchmarks/COMPLETED BENCHMARKS/splash2-raytrace/fault injection/llfi-O1-2/raytrace.ll'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.view = type { [4 x double], [4 x double], [4 x [4 x double]], [4 x [4 x double]], [4 x [4 x double]], [3 x double], i64, double, [3 x double], i64, i64 }
%struct.display = type { i64, i64, i64, i64, double, i64, i64, i64, double, double, double, double, double, double, double, double, %struct.pixel* }
%struct.pixel = type { float, float, float }
%struct.light = type { [4 x double], [3 x double], i64, %struct.light* }
%struct.gmem = type { i64, i64, i64, %struct.object*, %struct.grid*, %struct.node*, [4096 x [256 x i64]], [4096 x [256 x %struct.wpjob*]], %struct.anon, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, [4096 x %union.pthread_mutex_t], i64, [4096 x i64] }
%struct.object = type { i64, [32 x i8], %struct.bbox, %struct.element*, i64, %struct.pprocs*, %struct.surf*, %struct.object* }
%struct.bbox = type { [3 x double], [3 x double] }
%struct.element = type { i64, %struct.object*, i8*, %struct.bbox }
%struct.pprocs = type { i8* (...)*, void (...)*, void (...)*, void (...)*, void (...)*, i64 (...)*, i64 (...)*, void (...)*, void (...)*, void (...)* }
%struct.surf = type { [3 x double], [3 x double], double, double, double, double, double }
%struct.grid = type { i64, %struct.voxel**, i64*, %struct.element**, i64, [3 x i64], i64, [3 x double], [3 x double], i64, %struct.btnode*, %struct.grid* }
%struct.voxel = type { i64, i64, %struct.voxel*, i8*, i8, [7 x i8] }
%struct.btnode = type { %struct.element**, [3 x double], i64, [3 x i64], [3 x i64], i64, i64, [2 x %struct.btnode*] }
%struct.node = type { %struct.node*, i64, i64, i64 }
%struct.wpjob = type { i64, i64, i64, i64, %struct.wpjob* }
%struct.anon = type { %union.pthread_mutex_t, %union.pthread_cond_t, i64, i64 }
%union.pthread_cond_t = type { %struct.anon.0 }
%struct.anon.0 = type { i32, i32, i64, i64, i64, i8*, i32, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.anon.44 = type { i8, i8, i8, i8 }
%struct.r_struct = type { [4096 x i64], %struct.ray*, i64, i64, [4096 x i64] }
%struct.ray = type { i64, i64, i64, [3 x double], [3 x double], i64, %struct.rayinfo*, i64, [3 x i64], [5 x %struct.rayinfo], float, float }
%struct.rayinfo = type { %struct.grid*, [3 x double], i64, double, i64, double, [3 x double], [3 x i64], i64, [3 x i64], %struct.rayinfo* }
%struct.CTE = type { i8*, i8 }
%struct.irecord = type { double, %struct.element*, double, double, double }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }
%union.pthread_mutexattr_t = type { i32 }
%union.pthread_condattr_t = type { i32 }
%union.pthread_attr_t = type { i64, [48 x i8] }
%struct.poly = type { i64, [3 x double], double, [3 x double]*, i64*, i64 }
%struct.sphere = type { [4 x double], double, double }
%struct.rayjob = type { i64, i64, i64, i64, i64, i64 }
%struct.tri = type { [3 x double], double, [3 x double]*, [3 x double]*, [3 x i64], i64, i64, i64 }

@DataType = common global i64 0, align 8
@TraversalType = common global i64 0, align 8
@bundlex = common global i64 0, align 8
@bundley = common global i64 0, align 8
@blockx = common global i64 0, align 8
@blocky = common global i64 0, align 8
@GeoFile = common global i64 0, align 8
@PicFile = common global i64 0, align 8
@ModelNorm = common global i64 0, align 8
@ModelTransform = common global i64 0, align 8
@AntiAlias = common global i64 0, align 8
@GeoFileName = common global [80 x i8] zeroinitializer, align 16
@PicFileName = common global [80 x i8] zeroinitializer, align 16
@View = common global %struct.view zeroinitializer, align 8
@Display = common global %struct.display zeroinitializer, align 8
@lights = common global %struct.light* null, align 8
@nlights = common global i64 0, align 8
@gm = common global %struct.gmem* null, align 8
@world_level_grid = common global %struct.grid* null, align 8
@hu_max_prims_cell = common global i64 0, align 8
@hu_gridsize = common global i64 0, align 8
@hu_numbuckets = common global i64 0, align 8
@hu_max_subdiv_level = common global i64 0, align 8
@hu_lazy = common global i64 0, align 8
@prim_obj_cnt = common global i64 0, align 8
@prim_elem_cnt = common global i64 0, align 8
@subdiv_cnt = common global i64 0, align 8
@bintree_cnt = common global i64 0, align 8
@grids = common global i64 0, align 8
@total_cells = common global i64 0, align 8
@empty_voxels = common global i64 0, align 8
@nonempty_voxels = common global i64 0, align 8
@nonempty_leafs = common global i64 0, align 8
@prims_in_leafs = common global i64 0, align 8
@empty_masks = common global [64 x i64] zeroinitializer, align 16
@nonempty_masks = common global [64 x i64] zeroinitializer, align 16
@gridlist = global %struct.grid* null, align 8
@stderr = external global %struct._IO_FILE*
@.str = private unnamed_addr constant [21 x i8] c"    Print Gridlist \0A\00", align 1
@.str1 = private unnamed_addr constant [19 x i8] c"    End Gridlist \0A\00", align 1
@.str5 = private unnamed_addr constant [48 x i8] c"    gridsize                             %3ld \0A\00", align 1
@.str6 = private unnamed_addr constant [48 x i8] c"    hashtable buckets                    %3ld \0A\00", align 1
@.str7 = private unnamed_addr constant [48 x i8] c"    maximum subdivision level            %3ld \0A\00", align 1
@.str8 = private unnamed_addr constant [48 x i8] c"    maximum primitives / cell            %3ld \0A\00", align 1
@.str9 = private unnamed_addr constant [48 x i8] c"    grids                                %3ld \0A\00", align 1
@.str10 = private unnamed_addr constant [54 x i8] c"    empty voxels                    %8ld    %3ld %% \0A\00", align 1
@.str11 = private unnamed_addr constant [54 x i8] c"    nonempty voxels                 %8ld    %3ld %% \0A\00", align 1
@.str12 = private unnamed_addr constant [54 x i8] c"    empty leafs                     %8ld    %3ld %% \0A\00", align 1
@.str13 = private unnamed_addr constant [54 x i8] c"    nonempty leafs                  %8ld    %3ld %% \0A\00", align 1
@.str14 = private unnamed_addr constant [47 x i8] c"    primitives / leaf                 %6.1lf \0A\00", align 1
@.str15 = private unnamed_addr constant [66 x i8] c"bintree_lookup: gridsizes (%ld, %ld, %ld), axis %ld & nprims %ld\0A\00", align 1
@.str16 = private unnamed_addr constant [4 x i8] c"eye\00", align 1
@.str117 = private unnamed_addr constant [7 x i8] c"center\00", align 1
@.str218 = private unnamed_addr constant [6 x i8] c"light\00", align 1
@.str319 = private unnamed_addr constant [11 x i8] c"resolution\00", align 1
@.str420 = private unnamed_addr constant [8 x i8] c"shadows\00", align 1
@.str521 = private unnamed_addr constant [11 x i8] c"background\00", align 1
@.str622 = private unnamed_addr constant [10 x i8] c"viewangle\00", align 1
@.str723 = private unnamed_addr constant [10 x i8] c"antilevel\00", align 1
@.str824 = private unnamed_addr constant [10 x i8] c"minweight\00", align 1
@.str925 = private unnamed_addr constant [8 x i8] c"project\00", align 1
@.str1026 = private unnamed_addr constant [14 x i8] c"antitolerance\00", align 1
@.str1127 = private unnamed_addr constant [9 x i8] c"maxlevel\00", align 1
@.str1228 = private unnamed_addr constant [11 x i8] c"modelxform\00", align 1
@.str1329 = private unnamed_addr constant [8 x i8] c"shading\00", align 1
@.str1430 = private unnamed_addr constant [10 x i8] c"displayin\00", align 1
@.str1531 = private unnamed_addr constant [11 x i8] c"displayout\00", align 1
@.str1632 = private unnamed_addr constant [9 x i8] c"geometry\00", align 1
@.str17 = private unnamed_addr constant [12 x i8] c"texturetype\00", align 1
@.str18 = private unnamed_addr constant [12 x i8] c"texturefile\00", align 1
@.str19 = private unnamed_addr constant [6 x i8] c"image\00", align 1
@.str20 = private unnamed_addr constant [10 x i8] c"footprint\00", align 1
@.str21 = private unnamed_addr constant [10 x i8] c"traversal\00", align 1
@.str22 = private unnamed_addr constant [7 x i8] c"rlfile\00", align 1
@.str23 = private unnamed_addr constant [8 x i8] c"ambient\00", align 1
@.str24 = private unnamed_addr constant [11 x i8] c"excellprim\00", align 1
@.str25 = private unnamed_addr constant [10 x i8] c"excelldir\00", align 1
@.str26 = private unnamed_addr constant [13 x i8] c"excellsubdiv\00", align 1
@.str27 = private unnamed_addr constant [10 x i8] c"hsublevel\00", align 1
@.str28 = private unnamed_addr constant [6 x i8] c"hprim\00", align 1
@.str29 = private unnamed_addr constant [7 x i8] c"bfcull\00", align 1
@.str30 = private unnamed_addr constant [5 x i8] c"fill\00", align 1
@.str31 = private unnamed_addr constant [11 x i8] c"spheretess\00", align 1
@.str32 = private unnamed_addr constant [9 x i8] c"normdata\00", align 1
@.str33 = private unnamed_addr constant [9 x i8] c"datatype\00", align 1
@.str34 = private unnamed_addr constant [12 x i8] c"hu_maxprims\00", align 1
@.str35 = private unnamed_addr constant [12 x i8] c"hu_gridsize\00", align 1
@.str36 = private unnamed_addr constant [14 x i8] c"hu_numbuckets\00", align 1
@.str37 = private unnamed_addr constant [13 x i8] c"hu_maxsubdiv\00", align 1
@.str38 = private unnamed_addr constant [8 x i8] c"hu_lazy\00", align 1
@.str39 = private unnamed_addr constant [7 x i8] c"bundle\00", align 1
@.str40 = private unnamed_addr constant [6 x i8] c"block\00", align 1
@.str41 = private unnamed_addr constant [2 x i8] c" \00", align 1
@cmdtab = global <{ { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] } }> <{ { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([4 x i8]* @.str16, i32 0, i32 0), i8 97, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([7 x i8]* @.str117, i32 0, i32 0), i8 98, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str218, i32 0, i32 0), i8 101, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str319, i32 0, i32 0), i8 102, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str420, i32 0, i32 0), i8 109, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str521, i32 0, i32 0), i8 99, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str622, i32 0, i32 0), i8 100, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str723, i32 0, i32 0), i8 106, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str824, i32 0, i32 0), i8 104, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str925, i32 0, i32 0), i8 105, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str1026, i32 0, i32 0), i8 107, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str1127, i32 0, i32 0), i8 103, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str1228, i32 0, i32 0), i8 108, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str1329, i32 0, i32 0), i8 110, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str1430, i32 0, i32 0), i8 111, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str1531, i32 0, i32 0), i8 112, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str1632, i32 0, i32 0), i8 113, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str17, i32 0, i32 0), i8 116, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str18, i32 0, i32 0), i8 114, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str19, i32 0, i32 0), i8 117, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str20, i32 0, i32 0), i8 118, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str21, i32 0, i32 0), i8 119, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([7 x i8]* @.str22, i32 0, i32 0), i8 115, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str23, i32 0, i32 0), i8 120, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str24, i32 0, i32 0), i8 121, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str25, i32 0, i32 0), i8 122, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str26, i32 0, i32 0), i8 57, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str27, i32 0, i32 0), i8 49, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str28, i32 0, i32 0), i8 50, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([7 x i8]* @.str29, i32 0, i32 0), i8 51, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str30, i32 0, i32 0), i8 52, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str31, i32 0, i32 0), i8 53, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str32, i32 0, i32 0), i8 54, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str33, i32 0, i32 0), i8 55, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str34, i32 0, i32 0), i8 56, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str35, i32 0, i32 0), i8 64, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str36, i32 0, i32 0), i8 35, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str37, i32 0, i32 0), i8 36, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str38, i32 0, i32 0), i8 42, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([7 x i8]* @.str39, i32 0, i32 0), i8 43, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str40, i32 0, i32 0), i8 37, [7 x i8] undef }, { i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str41, i32 0, i32 0), i8 48, [7 x i8] undef } }>, align 16
@.str43 = private unnamed_addr constant [24 x i8] c"\09Eye pos:   \09 %f %f %f\0A\00", align 1
@.str44 = private unnamed_addr constant [24 x i8] c"\09Center pos:\09 %f %f %f\0A\00", align 1
@.str45 = private unnamed_addr constant [24 x i8] c"\09Background:\09 %f %f %f\0A\00", align 1
@.str46 = private unnamed_addr constant [18 x i8] c"\09View Angle:\09 %f\0A\00", align 1
@.str47 = private unnamed_addr constant [28 x i8] c"\0AAmbient Light:\09\09 %f %f %f\0A\00", align 1
@.str49 = private unnamed_addr constant [23 x i8] c"\09[%ld] Pos:\09 %f %f %f\0A\00", align 1
@.str50 = private unnamed_addr constant [21 x i8] c"\09    Col:\09 %f %f %f\0A\00", align 1
@.str51 = private unnamed_addr constant [19 x i8] c"\09    Shadow:\09 %ld\0A\00", align 1
@.str54 = private unnamed_addr constant [15 x i8] c"\09Traversal:\09\09\09\00", align 1
@.str57 = private unnamed_addr constant [26 x i8] c"\09\09\09\09\09   grid size    %ld\0A\00", align 1
@.str58 = private unnamed_addr constant [26 x i8] c"\09\09\09\09\09   max prims    %ld\0A\00", align 1
@.str59 = private unnamed_addr constant [26 x i8] c"\09\09\09\09\09   max sublevel %ld\0A\00", align 1
@.str60 = private unnamed_addr constant [26 x i8] c"\09\09\09\09\09   buckets      %ld\0A\00", align 1
@.str61 = private unnamed_addr constant [26 x i8] c"\09\09\09\09\09   lazy         %ld\0A\00", align 1
@.str62 = private unnamed_addr constant [21 x i8] c"\09Normalization DB:\09\09\00", align 1
@.str63 = private unnamed_addr constant [5 x i8] c"yes\0A\00", align 1
@.str64 = private unnamed_addr constant [4 x i8] c"no\0A\00", align 1
@.str65 = private unnamed_addr constant [20 x i8] c"\09Projection type:\09\09\00", align 1
@.str66 = private unnamed_addr constant [13 x i8] c"perspective\0A\00", align 1
@.str67 = private unnamed_addr constant [14 x i8] c"orthographic\0A\00", align 1
@.str68 = private unnamed_addr constant [13 x i8] c"\09Shadows:\09\09\09\00", align 1
@.str69 = private unnamed_addr constant [4 x i8] c"on\0A\00", align 1
@.str70 = private unnamed_addr constant [5 x i8] c"off\0A\00", align 1
@.str71 = private unnamed_addr constant [13 x i8] c"\09Shading:\09\09\09\00", align 1
@.str72 = private unnamed_addr constant [24 x i8] c"\09Resolution:\09\09\09%ld %ld\0A\00", align 1
@.str73 = private unnamed_addr constant [23 x i8] c"\09Min Ray Weight:\09\09\09%f\0A\00", align 1
@.str74 = private unnamed_addr constant [33 x i8] c"\09Max Anti Subdivison Level:\09%ld\0A\00", align 1
@.str75 = private unnamed_addr constant [23 x i8] c"\09Anti tolerance:\09\09\09%f\0A\00", align 1
@.str76 = private unnamed_addr constant [21 x i8] c"\09Bundle: \09\09\09%ld %ld\0A\00", align 1
@.str77 = private unnamed_addr constant [21 x i8] c"\09Block:  \09\09\09%ld %ld\0A\00", align 1
@.str78 = private unnamed_addr constant [22 x i8] c"\09Geometry file:\09\09\09%s\0A\00", align 1
@.str79 = private unnamed_addr constant [19 x i8] c"\09Image file:\09\09\09%s\0A\00", align 1
@.str80 = private unnamed_addr constant [6 x i8] c"env.c\00", align 1
@.str81 = private unnamed_addr constant [25 x i8] c"Invalid color %f %f %f.\0A\00", align 1
@.str82 = private unnamed_addr constant [30 x i8] c"\0A\0AInvalid command string %s.\0A\00", align 1
@.str83 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str84 = private unnamed_addr constant [37 x i8] c"Unable to open environment file %s.\0A\00", align 1
@.str85 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str86 = private unnamed_addr constant [12 x i8] c"%lf %lf %lf\00", align 1
@.str90 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str92 = private unnamed_addr constant [19 x i8] c"Invalid angle %f.\0A\00", align 1
@.str94 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str96 = private unnamed_addr constant [29 x i8] c"error: antialias level %ld.\0A\00", align 1
@.str97 = private unnamed_addr constant [33 x i8] c"maxlevel of ray recursion = %ld\0A\00", align 1
@stdout = external global %struct._IO_FILE*
@.str99 = private unnamed_addr constant [29 x i8] c"error: recursion level %ld.\0A\00", align 1
@.str101 = private unnamed_addr constant [31 x i8] c"error: invalid ray weight %f.\0A\00", align 1
@.str103 = private unnamed_addr constant [42 x i8] c"error: invalid anti tolerance weight %f.\0A\00", align 1
@.str104 = private unnamed_addr constant [8 x i8] c"%ld %ld\00", align 1
@.str106 = private unnamed_addr constant [24 x i8] c"%lf %lf %lf %lf %lf %lf\00", align 1
@.str111 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str112 = private unnamed_addr constant [20 x i8] c"error: shading %s.\0A\00", align 1
@.str113 = private unnamed_addr constant [23 x i8] c"error: projection %s.\0A\00", align 1
@.str114 = private unnamed_addr constant [12 x i8] c"perspective\00", align 1
@.str115 = private unnamed_addr constant [13 x i8] c"orthographic\00", align 1
@.str116 = private unnamed_addr constant [24 x i8] c"Invalid projection %s.\0A\00", align 1
@.str11733 = private unnamed_addr constant [22 x i8] c"error: traversal %s.\0A\00", align 1
@.str118 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str119 = private unnamed_addr constant [9 x i8] c"huniform\00", align 1
@.str120 = private unnamed_addr constant [28 x i8] c"Invalid traversal code %s.\0A\00", align 1
@.str121 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str128 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str130 = private unnamed_addr constant [7 x i8] c"binary\00", align 1
@.str138 = private unnamed_addr constant [40 x i8] c"Warning: unrecognized env command: %s.\0A\00", align 1
@image = internal unnamed_addr global [1280 x %struct.anon.44] zeroinitializer, align 16
@.str140 = private unnamed_addr constant [9 x i8] c"%c%c%c%c\00", align 1
@.str1141 = private unnamed_addr constant [7 x i8] c"fbuf.c\00", align 1
@.str2142 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str3143 = private unnamed_addr constant [33 x i8] c"Unable to open picture file %s.\0A\00", align 1
@.str4144 = private unnamed_addr constant [17 x i8] c"%c%c%c%c%c%c%c%c\00", align 1
@.str145 = private unnamed_addr constant [12 x i8] c"Object  %s\0A\00", align 1
@.str1146 = private unnamed_addr constant [27 x i8] c"\09color  %f %f %f %f %f %f\0A\00", align 1
@.str2147 = private unnamed_addr constant [24 x i8] c"\09coeffs %f %f %f %f %f\0A\00", align 1
@.str3148 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str4149 = private unnamed_addr constant [31 x i8] c"Unable to open model file %s.\0A\00", align 1
@.str5150 = private unnamed_addr constant [37 x i8] c"Incorrect comment in geometry file.\0A\00", align 1
@.str6151 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@.str7152 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str8153 = private unnamed_addr constant [31 x i8] c"Invalid object definition %s.\0A\00", align 1
@.str9154 = private unnamed_addr constant [6 x i8] c"geo.c\00", align 1
@.str10155 = private unnamed_addr constant [24 x i8] c"%lf %lf %lf %lf %lf %lf\00", align 1
@.str12157 = private unnamed_addr constant [20 x i8] c"%lf %lf %lf %lf %lf\00", align 1
@.str14159 = private unnamed_addr constant [17 x i8] c"%ld %ld %ld %ld\0A\00", align 1
@.str16161 = private unnamed_addr constant [7 x i8] c"%c %ld\00", align 1
@SphProcs = internal global %struct.pprocs { i8* (...)* bitcast (i8* ()* @SphName to i8* (...)*), void (...)* bitcast (void (%struct.object*)* @SphPrint to void (...)*), void (...)* bitcast (void (%struct.object*, %struct._IO_FILE*)* @SphRead to void (...)*), void (...)* null, void (...)* bitcast (void (%struct.object*, [4 x double]*, [4 x double]*)* @SphTransform to void (...)*), i64 (...)* bitcast (i64 (%struct.ray*, %struct.object*, %struct.irecord*)* @SphIntersect to i64 (...)*), i64 (...)* bitcast (i64 (%struct.ray*, %struct.element*, %struct.irecord*)* @SphPeIntersect to i64 (...)*), void (...)* bitcast (void (%struct.irecord*, double*, double*)* @SphNormal to void (...)*), void (...)* bitcast (void (%struct.object*, [4 x double]*)* @SphDataNormalize to void (...)*), void (...)* bitcast (void (%struct.object*)* @SphBoundBox to void (...)*) }, align 8
@PolyProcs = internal global %struct.pprocs { i8* (...)* bitcast (i8* ()* @PolyName to i8* (...)*), void (...)* bitcast (void (%struct.object*)* @PolyPrint to void (...)*), void (...)* bitcast (void (%struct.object*, %struct._IO_FILE*)* @PolyRead to void (...)*), void (...)* null, void (...)* bitcast (void (%struct.object*, [4 x double]*, [4 x double]*)* @PolyTransform to void (...)*), i64 (...)* bitcast (i64 (%struct.ray*, %struct.object*, %struct.irecord*)* @PolyIntersect to i64 (...)*), i64 (...)* bitcast (i64 (%struct.ray*, %struct.element*, %struct.irecord*)* @PolyPeIntersect to i64 (...)*), void (...)* bitcast (void (%struct.irecord*, double*, double*)* @PolyNormal to void (...)*), void (...)* bitcast (void (%struct.object*, [4 x double]*)* @PolyDataNormalize to void (...)*), void (...)* bitcast (void (%struct.object*)* @PolyBoundBox to void (...)*) }, align 8
@TriProcs = internal global %struct.pprocs { i8* (...)* bitcast (i8* ()* @TriName to i8* (...)*), void (...)* bitcast (void (%struct.object*)* @TriPrint to void (...)*), void (...)* bitcast (void (%struct.object*, %struct._IO_FILE*)* @TriRead to void (...)*), void (...)* null, void (...)* bitcast (void (%struct.object*, [4 x double]*, [4 x double]*)* @TriTransform to void (...)*), i64 (...)* bitcast (i64 (%struct.ray*, %struct.object*, %struct.irecord*)* @TriIntersect to i64 (...)*), i64 (...)* bitcast (i64 (%struct.ray*, %struct.element*, %struct.irecord*)* @TriPeIntersect to i64 (...)*), void (...)* bitcast (void (%struct.irecord*, double*, double*)* @TriNormal to void (...)*), void (...)* bitcast (void (%struct.object*, [4 x double]*)* @TriDataNormalize to void (...)*), void (...)* bitcast (void (%struct.object*)* @TriBoundBox to void (...)*) }, align 8
@.str19164 = private unnamed_addr constant [30 x i8] c"Invalid primitive type '%c'.\0A\00", align 1
@.str165 = private unnamed_addr constant [28 x i8] c"    Print Voxel  id = %ld \0A\00", align 1
@.str1166 = private unnamed_addr constant [22 x i8] c"        celltype %d \0A\00", align 1
@.str2167 = private unnamed_addr constant [20 x i8] c"        gsm_voxel \0A\00", align 1
@.str3168 = private unnamed_addr constant [33 x i8] c"        primElement index list:\0A\00", align 1
@.str4169 = private unnamed_addr constant [18 x i8] c"            %ld \0A\00", align 1
@.str5170 = private unnamed_addr constant [26 x i8] c"        gsm_grid id %ld \0A\00", align 1
@.str6171 = private unnamed_addr constant [16 x i8] c"    End Voxel \0A\00", align 1
@.str7172 = private unnamed_addr constant [22 x i8] c"    Print  Grid %ld \0A\00", align 1
@.str8173 = private unnamed_addr constant [26 x i8] c"        num_prims = %ld \0A\00", align 1
@.str9174 = private unnamed_addr constant [42 x i8] c"        indx_inc[0,1,2] = %ld, %ld, %ld \0A\00", align 1
@.str10175 = private unnamed_addr constant [28 x i8] c"        num_buckets = %ld \0A\00", align 1
@.str11176 = private unnamed_addr constant [37 x i8] c"        min[0,1,2] = %lf, %lf, %lf \0A\00", align 1
@.str12177 = private unnamed_addr constant [42 x i8] c"        cellsize[0,1,2] = %lf, %lf, %lf \0A\00", align 1
@.str13178 = private unnamed_addr constant [29 x i8] c"        subdiv_level = %ld \0A\00", align 1
@.str14179 = private unnamed_addr constant [27 x i8] c"        next grid id %ld \0A\00", align 1
@.str15180 = private unnamed_addr constant [28 x i8] c"        next grid id NULL \0A\00", align 1
@.str16181 = private unnamed_addr constant [17 x i8] c"    Voxel List \0A\00", align 1
@.str17182 = private unnamed_addr constant [30 x i8] c"        Voxel %ld is empty. \0A\00", align 1
@.str18183 = private unnamed_addr constant [15 x i8] c"    End Grid \0A\00", align 1
@.str19184 = private unnamed_addr constant [24 x i8] c"    Print Ray  id %ld \0A\00", align 1
@.str20185 = private unnamed_addr constant [43 x i8] c"        origin:        ( %lf, %lf, %lf ) \0A\00", align 1
@.str21186 = private unnamed_addr constant [43 x i8] c"        direction:     ( %lf, %lf, %lf ) \0A\00", align 1
@.str22187 = private unnamed_addr constant [48 x i8] c"        indx_inc3D[0,1,2] = [ %ld, %ld, %ld ] \0A\00", align 1
@.str23188 = private unnamed_addr constant [24 x i8] c"        ri_indx = %ld \0A\00", align 1
@.str24189 = private unnamed_addr constant [19 x i8] c"        rayinfo: \0A\00", align 1
@.str25190 = private unnamed_addr constant [33 x i8] c"            ray is in grid %ld \0A\00", align 1
@.str26191 = private unnamed_addr constant [43 x i8] c"            d[0,1,2] = [ %lf, %lf, %lf ] \0A\00", align 1
@.str27192 = private unnamed_addr constant [30 x i8] c"            entry_plane %ld \0A\00", align 1
@.str28193 = private unnamed_addr constant [25 x i8] c"            t_in = %lf \0A\00", align 1
@.str29194 = private unnamed_addr constant [29 x i8] c"            exit_plane %ld \0A\00", align 1
@.str30195 = private unnamed_addr constant [26 x i8] c"            t_out = %lf \0A\00", align 1
@.str31196 = private unnamed_addr constant [47 x i8] c"            delta[0,1,2] = [ %lf, %lf, %lf ] \0A\00", align 1
@.str32197 = private unnamed_addr constant [49 x i8] c"            index3D[0,1,2] = [ %ld, %ld, %ld ] \0A\00", align 1
@.str33198 = private unnamed_addr constant [28 x i8] c"            index1D = %ld \0A\00", align 1
@.str34199 = private unnamed_addr constant [52 x i8] c"            indx_inc1D[0,1,2] = [ %ld, %ld, %ld ] \0A\00", align 1
@.str35200 = private unnamed_addr constant [14 x i8] c"    End Ray \0A\00", align 1
@.str36201 = private unnamed_addr constant [33 x i8] c"%s: prn_PrimElem: Null pointer.\0A\00", align 1
@.str37202 = private unnamed_addr constant [56 x i8] c"PrimElem: index %ld  ptr %p, PrimObj index %ld ptr %p \0A\00", align 1
@.str38203 = private unnamed_addr constant [60 x i8] c"   BBox: ( %lf, %lf, %lf ) -> \0A         ( %lf, %lf, %lf ) \0A\00", align 1
@.str39204 = private unnamed_addr constant [16 x i8] c"Bintree node: \0A\00", align 1
@.str40205 = private unnamed_addr constant [42 x i8] c"    indecies of cell: ( %ld, %ld, %ld ) \0A\00", align 1
@.str41206 = private unnamed_addr constant [35 x i8] c"    gridsizes: ( %ld, %ld, %ld ) \0A\00", align 1
@.str42207 = private unnamed_addr constant [38 x i8] c"    minimum point ( %lf, %lf, %lf ) \0A\00", align 1
@.str43208 = private unnamed_addr constant [22 x i8] c"    subdiv axis %ld \0A\00", align 1
@.str44209 = private unnamed_addr constant [31 x i8] c"    number of primitives %ld \0A\00", align 1
@.str45210 = private unnamed_addr constant [30 x i8] c"    Primitive element list: \0A\00", align 1
@.str46211 = private unnamed_addr constant [6 x i8] c"  %ld\00", align 1
@.str48213 = private unnamed_addr constant [27 x i8] c"\0A    End of bintree node \0A\00", align 1
@.str216 = private unnamed_addr constant [26 x i8] c"Uniform Hierarchy built.\0A\00", align 1
@eps_t = global double 1.000000e-10, align 8
@.str217 = private unnamed_addr constant [18 x i8] c"hashtable error \0A\00", align 1
@.str1218 = private unnamed_addr constant [42 x i8] c"push_down_grid: Ray origin not in voxel \0A\00", align 1
@.str227 = private unnamed_addr constant [9 x i8] c"RAYTRACE\00", align 1
@ProgName = global i8* getelementptr inbounds ([9 x i8]* @.str227, i64 0, i64 0), align 8
@nprocs = global i64 1, align 8
@MaxGlobMem = global i64 32, align 8
@NumSubRays = global i64 1, align 8
@dostats = global i64 0, align 8
@.str1232 = private unnamed_addr constant [26 x i8] c"%s - parallel ray tracer\0A\00", align 1
@.str2233 = private unnamed_addr constant [13 x i8] c"Version %s\0A\0A\00", align 1
@.str3234 = private unnamed_addr constant [5 x i8] c"1.00\00", align 1
@.str4235 = private unnamed_addr constant [30 x i8] c"Usage:\09%s [options] envfile\0A\0A\00", align 1
@.str5236 = private unnamed_addr constant [31 x i8] c"\09-h\09Print this usage message.\0A\00", align 1
@.str6237 = private unnamed_addr constant [136 x i8] c"\09-a<n>\09Enable antialiasing with n subpixels (default = 1).\0A\09When using with SPLASH suite for evaluation, use default (no antialiasing)\0A\00", align 1
@.str7238 = private unnamed_addr constant [61 x i8] c"\09-m<n>\09Request n megabytes of global memory (default = 32).\0A\00", align 1
@.str8239 = private unnamed_addr constant [43 x i8] c"\09-p<n>\09Run on n processors (default = 1).\0A\00", align 1
@.str9240 = private unnamed_addr constant [55 x i8] c"\09-s\09Measure and print per-process timing information.\0A\00", align 1
@.str12243 = private unnamed_addr constant [26 x i8] c"%s: Invalid option '%c'.\0A\00", align 1
@.str13244 = private unnamed_addr constant [45 x i8] c"%s: Valid range for #processors is [1, %d].\0A\00", align 1
@.str14245 = private unnamed_addr constant [32 x i8] c"Number of processors:     \09%ld\0A\00", align 1
@.str15246 = private unnamed_addr constant [35 x i8] c"Global shared memory size:\09%ld MB\0A\00", align 1
@.str16247 = private unnamed_addr constant [32 x i8] c"Samples per pixel:        \09%ld\0A\00", align 1
@.str19250 = private unnamed_addr constant [36 x i8] c"%s: Cannot initialize global heap.\0A\00", align 1
@.str20251 = private unnamed_addr constant [35 x i8] c"Number of primitive objects: \09%ld\0A\00", align 1
@.str21252 = private unnamed_addr constant [35 x i8] c"Number of primitive elements:\09%ld\0A\00", align 1
@PThreadTable = common global [32 x i64] zeroinitializer, align 16
@.str25256 = private unnamed_addr constant [10 x i8] c"%20s%20s\0A\00", align 1
@.str26257 = private unnamed_addr constant [5 x i8] c"Proc\00", align 1
@.str27258 = private unnamed_addr constant [5 x i8] c"Time\00", align 1
@.str28259 = private unnamed_addr constant [11 x i8] c"%20s%20s\0A\0A\00", align 1
@.str29260 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str30261 = private unnamed_addr constant [13 x i8] c"Tracing Rays\00", align 1
@.str31262 = private unnamed_addr constant [12 x i8] c"%20ld%20ld\0A\00", align 1
@.str32263 = private unnamed_addr constant [12 x i8] c"\0A\0A%20s%20d\0A\00", align 1
@.str33264 = private unnamed_addr constant [7 x i8] c"Max = \00", align 1
@.str34265 = private unnamed_addr constant [10 x i8] c"%20s%20d\0A\00", align 1
@.str35266 = private unnamed_addr constant [7 x i8] c"Min = \00", align 1
@.str36267 = private unnamed_addr constant [7 x i8] c"Avg = \00", align 1
@.str268 = private unnamed_addr constant [5 x i8] c"\0A%s\0A\00", align 1
@.str2270 = private unnamed_addr constant [5 x i8] c"%f  \00", align 1
@.str4272 = private unnamed_addr constant [28 x i8] c"Unknown rotation axis %ld.\0A\00", align 1
@.str291 = private unnamed_addr constant [38 x i8] c"%s: %s cannot allocate local memory.\0A\00", align 1
@begmem = common global %struct.node* null, align 8
@.str1292 = private unnamed_addr constant [22 x i8] c"freelist ->\090x%08lX\0A\0A\00", align 1
@endmem = common global %struct.node* null, align 8
@.str4295 = private unnamed_addr constant [35 x i8] c"0x%08lX\090x%08lX\09%10ld\09%s\09\090x%08lX\0A\00", align 1
@.str5296 = private unnamed_addr constant [5 x i8] c"FREE\00", align 1
@.str6297 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str7298 = private unnamed_addr constant [43 x i8] c"GlobalHeapWalk: Invalid checksum in node.\0A\00", align 1
@nodesize = common global i64 0, align 8
@.str8299 = private unnamed_addr constant [41 x i8] c"GlobalMalloc: Invalid checksum in node.\0A\00", align 1
@.str9300 = private unnamed_addr constant [53 x i8] c"GlobalMalloc: Node in free list not marked as free.\0A\00", align 1
@.str10301 = private unnamed_addr constant [39 x i8] c"%s: %s cannot allocate global memory.\0A\00", align 1
@.str11302 = private unnamed_addr constant [13 x i8] c"GlobalCalloc\00", align 1
@.str12303 = private unnamed_addr constant [14 x i8] c"GlobalRealloc\00", align 1
@.str13304 = private unnamed_addr constant [65 x i8] c"GlobalRealloc: Attempted to realloc node with invalid checksum.\0A\00", align 1
@.str14305 = private unnamed_addr constant [58 x i8] c"GlobalRealloc: Attempted to realloc an unallocated node.\0A\00", align 1
@.str15306 = private unnamed_addr constant [55 x i8] c"GlobalRealloc: Could not find next node in free list.\0A\00", align 1
@.str16307 = private unnamed_addr constant [59 x i8] c"GlobalFree: Attempted to free node with invalid checksum.\0A\00", align 1
@.str17308 = private unnamed_addr constant [49 x i8] c"GlobalFree: Attempted to free unallocated node.\0A\00", align 1
@.str18309 = private unnamed_addr constant [48 x i8] c"GlobalFree: Invalid checksum in previous node.\0A\00", align 1
@.str19310 = private unnamed_addr constant [60 x i8] c"freelist=0x%p, curr=0x%p, size=0x%lu, pn=0x%p, endmem=0x%p\0A\00", align 1
@.str20311 = private unnamed_addr constant [63 x i8] c"GlobalFree: Search for previous block fell off end of memory.\0A\00", align 1
@.str21312 = private unnamed_addr constant [44 x i8] c"GlobalFree: Invalid checksum in next node.\0A\00", align 1
@.str22313 = private unnamed_addr constant [5 x i8] c"GRID\00", align 1
@mem_grid = common global i64 0, align 8
@maxmem_grid = common global i64 0, align 8
@.str23314 = private unnamed_addr constant [6 x i8] c"VOXEL\00", align 1
@mem_voxel = common global i64 0, align 8
@maxmem_voxel = common global i64 0, align 8
@.str24315 = private unnamed_addr constant [10 x i8] c"HASHTABLE\00", align 1
@mem_hashtable = common global i64 0, align 8
@maxmem_hashtable = common global i64 0, align 8
@.str25316 = private unnamed_addr constant [11 x i8] c"EMPTYCELLS\00", align 1
@mem_emptycells = common global i64 0, align 8
@maxmem_emptycells = common global i64 0, align 8
@.str26317 = private unnamed_addr constant [8 x i8] c"BINTREE\00", align 1
@mem_bintree = common global i64 0, align 8
@maxmem_bintree = common global i64 0, align 8
@.str27318 = private unnamed_addr constant [9 x i8] c"PEPARRAY\00", align 1
@mem_pepArray = common global i64 0, align 8
@maxmem_pepArray = common global i64 0, align 8
@.str28319 = private unnamed_addr constant [40 x i8] c"ObjectMalloc: Unknown object type: %ld\0A\00", align 1
@.str29320 = private unnamed_addr constant [38 x i8] c"ObjectFree: Unknown object type: %ld\0A\00", align 1
@.str30321 = private unnamed_addr constant [19 x i8] c"error ma_rayinfo \0A\00", align 1
@.str31322 = private unnamed_addr constant [70 x i8] c"\0A****** Hierarchial uniform grid memory allocation summary ******* \0A\0A\00", align 1
@.str32323 = private unnamed_addr constant [70 x i8] c"     < struct >:            < current >   < maximum >    < sizeof > \0A\00", align 1
@.str33324 = private unnamed_addr constant [71 x i8] c"     <  bytes >:             <  bytes >   <   bytes >    <  bytes > \0A\0A\00", align 1
@.str34325 = private unnamed_addr constant [50 x i8] c"     grid:                %11ld   %11ld   %11ld \0A\00", align 1
@.str35326 = private unnamed_addr constant [50 x i8] c"     hashtable entries:   %11ld   %11ld   %11ld \0A\00", align 1
@.str36327 = private unnamed_addr constant [50 x i8] c"     emptycell entries:   %11ld   %11ld   %11ld \0A\00", align 1
@.str37328 = private unnamed_addr constant [50 x i8] c"     voxel:               %11ld   %11ld   %11ld \0A\00", align 1
@.str38329 = private unnamed_addr constant [50 x i8] c"     bintree_node:        %11ld   %11ld   %11ld \0A\00", align 1
@.str40331 = private unnamed_addr constant [48 x i8] c"     Totals:              %11ld   %11ld      \0A\0A\00", align 1
@.str348 = private unnamed_addr constant [5 x i8] c"poly\00", align 1
@.str1349 = private unnamed_addr constant [25 x i8] c"\09polygon: %ld polygons.\0A\00", align 1
@.str2350 = private unnamed_addr constant [40 x i8] c"\09\09Vertices: %ld  Plane eq: %f %f %f %f\0A\00", align 1
@.str3351 = private unnamed_addr constant [13 x i8] c"\09\09%f %f %f \0A\00", align 1
@.str4352 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str6354 = private unnamed_addr constant [7 x i8] c"poly.c\00", align 1
@.str7355 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str9357 = private unnamed_addr constant [12 x i8] c"%lf %lf %lf\00", align 1
@.str10358 = private unnamed_addr constant [32 x i8] c"Error in PolyRead: vertex %ld.\0A\00", align 1
@.str12360 = private unnamed_addr constant [45 x i8] c"Polygon vertex count, %ld, exceeds maximum.\0A\00", align 1
@.str13361 = private unnamed_addr constant [13 x i8] c" %lf %lf %lf\00", align 1
@.str14362 = private unnamed_addr constant [37 x i8] c"Error in PolyRead: face normal %ld.\0A\00", align 1
@.str15363 = private unnamed_addr constant [38 x i8] c"Error in PolyRead: vertex index %ld.\0A\00", align 1
@raystruct = common global [4096 x %struct.r_struct] zeroinitializer, align 16
@.str382 = private unnamed_addr constant [11 x i8] c"raystack.c\00", align 1
@.str1383 = private unnamed_addr constant [30 x i8] c"%s: Ray tree stack overflow.\0A\00", align 1
@.str386 = private unnamed_addr constant [7 x i8] c"sphere\00", align 1
@.str1387 = private unnamed_addr constant [16 x i8] c"\09Sphere object\0A\00", align 1
@.str2388 = private unnamed_addr constant [20 x i8] c"\09\09center  %f %f %f\0A\00", align 1
@.str3389 = private unnamed_addr constant [25 x i8] c"\09\09        radius %f %f\0A\0A\00", align 1
@.str4390 = private unnamed_addr constant [6 x i8] c"sph.c\00", align 1
@.str5391 = private unnamed_addr constant [16 x i8] c"%lf %lf %lf %lf\00", align 1
@.str6392 = private unnamed_addr constant [31 x i8] c"Error in SphRead: sphere %ld.\0A\00", align 1
@frand.lLastRand = internal unnamed_addr global i64 0, align 8
@.str413 = private unnamed_addr constant [5 x i8] c"poly\00", align 1
@.str1414 = private unnamed_addr constant [27 x i8] c"\09triangle: %ld triangles.\0A\00", align 1
@.str2415 = private unnamed_addr constant [39 x i8] c"\09\09Vertices: 3   Plane eq: %f %f %f %f\0A\00", align 1
@.str3416 = private unnamed_addr constant [13 x i8] c"\09\09%f %f %f \0A\00", align 1
@.str4417 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str6419 = private unnamed_addr constant [6 x i8] c"tri.c\00", align 1
@.str7420 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str10423 = private unnamed_addr constant [12 x i8] c"%lf %lf %lf\00", align 1
@.str11424 = private unnamed_addr constant [31 x i8] c"Error in TriRead: vertex %ld.\0A\00", align 1
@.str12425 = private unnamed_addr constant [38 x i8] c"Error in TriRead: vertex normal %ld.\0A\00", align 1
@.str13426 = private unnamed_addr constant [13 x i8] c" %lf %lf %lf\00", align 1
@.str14427 = private unnamed_addr constant [36 x i8] c"Error in TriRead: face normal %ld.\0A\00", align 1
@.str15428 = private unnamed_addr constant [12 x i8] c"%ld %ld %ld\00", align 1
@.str16429 = private unnamed_addr constant [37 x i8] c"Error in TriRead: vertex index %ld.\0A\00", align 1
@.str448 = private unnamed_addr constant [11 x i8] c"workpool.c\00", align 1
@.str1449 = private unnamed_addr constant [73 x i8] c"Workpool entry:    pid=%3ld    xs=%3ld    ys=%3ld    xe=%3ld    ye=%3ld\0A\00", align 1
@str = private unnamed_addr constant [67 x i8] c"****** Hierarchical uniform grid data structure statistics ******\0A\00"
@str1 = private unnamed_addr constant [46 x i8] c"    Data structure evaluated as a preprocess.\00"
@str2 = private unnamed_addr constant [14 x i8] c"\0AEnvironment:\00"
@str3 = private unnamed_addr constant [9 x i8] c"\0ALights:\00"
@str4 = private unnamed_addr constant [9 x i8] c"Options:\00"
@str5 = private unnamed_addr constant [23 x i8] c"uniform grid hierarchy\00"
@str6 = private unnamed_addr constant [5 x i8] c"list\00"
@str7 = private unnamed_addr constant [53 x i8] c"Data must be normalized with this traversal method!.\00"
@str8 = private unnamed_addr constant [14 x i8] c"error: block.\00"
@str9 = private unnamed_addr constant [15 x i8] c"error: bundle.\00"
@str10 = private unnamed_addr constant [22 x i8] c"error: Huniform lazy.\00"
@str11 = private unnamed_addr constant [34 x i8] c"error: Huniform max subdiv level.\00"
@str12 = private unnamed_addr constant [28 x i8] c"error: Huniform numbuckets.\00"
@str13 = private unnamed_addr constant [26 x i8] c"error: Huniform gridsize.\00"
@str14 = private unnamed_addr constant [32 x i8] c"error: Huniform prims per cell.\00"
@str15 = private unnamed_addr constant [17 x i8] c"error: datatype.\00"
@str16 = private unnamed_addr constant [22 x i8] c"error: norm database.\00"
@str17 = private unnamed_addr constant [20 x i8] c"error: sphere tess.\00"
@str18 = private unnamed_addr constant [21 x i8] c"error: Preview fill.\00"
@str19 = private unnamed_addr constant [23 x i8] c"error: Preview bkcull.\00"
@str20 = private unnamed_addr constant [23 x i8] c"error: runlength file.\00"
@str21 = private unnamed_addr constant [22 x i8] c"error: geometry file.\00"
@str22 = private unnamed_addr constant [15 x i8] c"error: shadow.\00"
@str23 = private unnamed_addr constant [17 x i8] c"Error in matrix.\00"
@str24 = private unnamed_addr constant [32 x i8] c"error: Lights shadow indicator.\00"
@str25 = private unnamed_addr constant [15 x i8] c"error: Lights.\00"
@str26 = private unnamed_addr constant [19 x i8] c"error: resolution.\00"
@str27 = private unnamed_addr constant [30 x i8] c"error: anti tolerance weight.\00"
@str28 = private unnamed_addr constant [28 x i8] c"error: miniumum ray weight.\00"
@str29 = private unnamed_addr constant [24 x i8] c"error: recursion level.\00"
@str30 = private unnamed_addr constant [29 x i8] c"View error: antialias level.\00"
@str31 = private unnamed_addr constant [16 x i8] c"error: ambient.\00"
@str32 = private unnamed_addr constant [22 x i8] c"error: viewing angle.\00"
@str33 = private unnamed_addr constant [25 x i8] c"error: background color.\00"
@str34 = private unnamed_addr constant [21 x i8] c"error: coi position.\00"
@str35 = private unnamed_addr constant [21 x i8] c"error: eye position.\00"
@str36 = private unnamed_addr constant [53 x i8] c"Code for cylinders and quadrics not implemented yet.\00"
@str37 = private unnamed_addr constant [25 x i8] c"Object primitive opcode.\00"
@str38 = private unnamed_addr constant [49 x i8] c"Texture and/or flag information not all present.\00"
@str39 = private unnamed_addr constant [39 x i8] c"Object surface coefficients incorrect.\00"
@str40 = private unnamed_addr constant [24 x i8] c"Object color incorrect.\00"
@str41 = private unnamed_addr constant [43 x i8] c"Error while trying to get lock in barrier.\00"
@str42 = private unnamed_addr constant [27 x i8] c"\0A\0A\0APER-PROCESS STATISTICS:\00"
@str43 = private unnamed_addr constant [25 x i8] c"Error in pthread_join().\00"
@str44 = private unnamed_addr constant [27 x i8] c"Error in pthread_create().\00"
@str45 = private unnamed_addr constant [41 x i8] c"Error while initializing array of locks.\00"
@str46 = private unnamed_addr constant [34 x i8] c"Error while initializing barrier.\00"
@str47 = private unnamed_addr constant [34 x i8] c"Error while initializing barrier.\00"
@str48 = private unnamed_addr constant [55 x i8] c"node addr \09node->next\09node->size\09node->free\09node->cksm\00"
@str49 = private unnamed_addr constant [55 x i8] c"==========\09==========\09==========\09==========\09==========\00"
@str50 = private unnamed_addr constant [33 x i8] c"Error in PolyRead: vertex count.\00"
@str51 = private unnamed_addr constant [42 x i8] c"Error in PolyRead: face normal indicator.\00"
@str52 = private unnamed_addr constant [31 x i8] c"Error in PolyRead: totalverts.\00"
@str53 = private unnamed_addr constant [43 x i8] c"Error in TriRead: vertex normal indicator.\00"
@str54 = private unnamed_addr constant [41 x i8] c"Error in TriRead: face normal indicator.\00"
@str55 = private unnamed_addr constant [30 x i8] c"Error in TriRead: totalverts.\00"

; Function Attrs: nounwind uwtable
define void @InquireBoundBoxValues(%struct.bbox* nocapture readonly %pbb, double* nocapture %minx, double* nocapture %miny, double* nocapture %minz, double* nocapture %maxx, double* nocapture %maxy, double* nocapture %maxz) #0 {
  %1 = getelementptr inbounds %struct.bbox* %pbb, i64 0, i32 0, i64 0, !llfi_index !1
  %2 = load double* %1, align 8, !llfi_index !2
  store double %2, double* %minx, align 8, !llfi_index !3
  %3 = getelementptr inbounds %struct.bbox* %pbb, i64 0, i32 0, i64 1, !llfi_index !4
  %4 = load double* %3, align 8, !llfi_index !5
  store double %4, double* %miny, align 8, !llfi_index !6
  %5 = getelementptr inbounds %struct.bbox* %pbb, i64 0, i32 0, i64 2, !llfi_index !7
  %6 = load double* %5, align 8, !llfi_index !8
  store double %6, double* %minz, align 8, !llfi_index !9
  %7 = getelementptr inbounds %struct.bbox* %pbb, i64 0, i32 1, i64 0, !llfi_index !10
  %8 = load double* %7, align 8, !llfi_index !11
  store double %8, double* %maxx, align 8, !llfi_index !12
  %9 = getelementptr inbounds %struct.bbox* %pbb, i64 0, i32 1, i64 1, !llfi_index !13
  %10 = load double* %9, align 8, !llfi_index !14
  store double %10, double* %maxy, align 8, !llfi_index !15
  %11 = getelementptr inbounds %struct.bbox* %pbb, i64 0, i32 1, i64 2, !llfi_index !16
  %12 = load double* %11, align 8, !llfi_index !17
  store double %12, double* %maxz, align 8, !llfi_index !18
  ret void, !llfi_index !19
}

; Function Attrs: nounwind uwtable
define void @NormalizeBoundBox(%struct.bbox* nocapture %pbb, [4 x double]* nocapture readonly %mat) #0 {
  %tmp = alloca [4 x double], align 16, !llfi_index !20
  %1 = getelementptr inbounds %struct.bbox* %pbb, i64 0, i32 0, i64 0, !llfi_index !21
  %2 = load double* %1, align 8, !llfi_index !22
  %3 = getelementptr inbounds [4 x double]* %tmp, i64 0, i64 0, !llfi_index !23
  store double %2, double* %3, align 16, !llfi_index !24
  %4 = getelementptr inbounds %struct.bbox* %pbb, i64 0, i32 0, i64 1, !llfi_index !25
  %5 = load double* %4, align 8, !llfi_index !26
  %6 = getelementptr inbounds [4 x double]* %tmp, i64 0, i64 1, !llfi_index !27
  store double %5, double* %6, align 8, !llfi_index !28
  %7 = getelementptr inbounds %struct.bbox* %pbb, i64 0, i32 0, i64 2, !llfi_index !29
  %8 = load double* %7, align 8, !llfi_index !30
  %9 = getelementptr inbounds [4 x double]* %tmp, i64 0, i64 2, !llfi_index !31
  store double %8, double* %9, align 16, !llfi_index !32
  %10 = getelementptr inbounds [4 x double]* %tmp, i64 0, i64 3, !llfi_index !33
  store double 1.000000e+00, double* %10, align 8, !llfi_index !34
  call void @VecMatMult(double* %3, [4 x double]* %mat, double* %3), !llfi_index !35
  %11 = load double* %3, align 16, !llfi_index !36
  store double %11, double* %1, align 8, !llfi_index !37
  %12 = load double* %6, align 8, !llfi_index !38
  store double %12, double* %4, align 8, !llfi_index !39
  %13 = load double* %9, align 16, !llfi_index !40
  store double %13, double* %7, align 8, !llfi_index !41
  %14 = getelementptr inbounds %struct.bbox* %pbb, i64 0, i32 1, i64 0, !llfi_index !42
  %15 = load double* %14, align 8, !llfi_index !43
  store double %15, double* %3, align 16, !llfi_index !44
  %16 = getelementptr inbounds %struct.bbox* %pbb, i64 0, i32 1, i64 1, !llfi_index !45
  %17 = load double* %16, align 8, !llfi_index !46
  store double %17, double* %6, align 8, !llfi_index !47
  %18 = getelementptr inbounds %struct.bbox* %pbb, i64 0, i32 1, i64 2, !llfi_index !48
  %19 = load double* %18, align 8, !llfi_index !49
  store double %19, double* %9, align 16, !llfi_index !50
  store double 1.000000e+00, double* %10, align 8, !llfi_index !51
  call void @VecMatMult(double* %3, [4 x double]* %mat, double* %3), !llfi_index !52
  %20 = load double* %3, align 16, !llfi_index !53
  store double %20, double* %14, align 8, !llfi_index !54
  %21 = load double* %6, align 8, !llfi_index !55
  store double %21, double* %16, align 8, !llfi_index !56
  %22 = load double* %9, align 16, !llfi_index !57
  store double %22, double* %18, align 8, !llfi_index !58
  ret void, !llfi_index !59
}

; Function Attrs: nounwind uwtable
define void @prn_gridlist() #0 {
  %1 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !60
  %2 = tail call i64 @fwrite(i8* getelementptr inbounds ([21 x i8]* @.str, i64 0, i64 0), i64 20, i64 1, %struct._IO_FILE* %1) #9, !llfi_index !61
  %g.01 = load %struct.grid** @gridlist, align 8, !llfi_index !62
  %3 = icmp eq %struct.grid* %g.01, null, !llfi_index !63
  br i1 %3, label %._crit_edge, label %.lr.ph, !llfi_index !64

.lr.ph:                                           ; preds = %.lr.ph, %0
  %g.02 = phi %struct.grid* [ %g.0, %.lr.ph ], [ %g.01, %0 ], !llfi_index !65
  tail call void @prn_grid(%struct.grid* %g.02), !llfi_index !66
  %4 = getelementptr inbounds %struct.grid* %g.02, i64 0, i32 11, !llfi_index !67
  %g.0 = load %struct.grid** %4, align 8, !llfi_index !68
  %5 = icmp eq %struct.grid* %g.0, null, !llfi_index !69
  br i1 %5, label %._crit_edge, label %.lr.ph, !llfi_index !70

._crit_edge:                                      ; preds = %.lr.ph, %0
  %6 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !71
  %7 = tail call i64 @fwrite(i8* getelementptr inbounds ([19 x i8]* @.str1, i64 0, i64 0), i64 18, i64 1, %struct._IO_FILE* %6) #9, !llfi_index !72
  ret void, !llfi_index !73
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #1

; Function Attrs: nounwind uwtable
define void @prn_ds_stats() #0 {
  %putchar = tail call i32 @putchar(i32 10) #2, !llfi_index !74
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([67 x i8]* @str, i64 0, i64 0)), !llfi_index !75
  %puts1 = tail call i32 @puts(i8* getelementptr inbounds ([46 x i8]* @str1, i64 0, i64 0)), !llfi_index !76
  %1 = load i64* @hu_gridsize, align 8, !llfi_index !77
  %2 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str5, i64 0, i64 0), i64 %1) #2, !llfi_index !78
  %3 = load i64* @hu_numbuckets, align 8, !llfi_index !79
  %4 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str6, i64 0, i64 0), i64 %3) #2, !llfi_index !80
  %5 = load i64* @hu_max_subdiv_level, align 8, !llfi_index !81
  %6 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str7, i64 0, i64 0), i64 %5) #2, !llfi_index !82
  %7 = load i64* @hu_max_prims_cell, align 8, !llfi_index !83
  %8 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str8, i64 0, i64 0), i64 %7) #2, !llfi_index !84
  %9 = load i64* @grids, align 8, !llfi_index !85
  %10 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str9, i64 0, i64 0), i64 %9) #2, !llfi_index !86
  %11 = load i64* @empty_voxels, align 8, !llfi_index !87
  %12 = load i64* @nonempty_voxels, align 8, !llfi_index !88
  %13 = add nsw i64 %12, %11, !llfi_index !89
  %14 = load i64* @nonempty_leafs, align 8, !llfi_index !90
  %15 = add nsw i64 %14, %11, !llfi_index !91
  %16 = mul nsw i64 %11, 100, !llfi_index !92
  %17 = sdiv i64 %16, %13, !llfi_index !93
  %18 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str10, i64 0, i64 0), i64 %11, i64 %17) #2, !llfi_index !94
  %19 = load i64* @nonempty_voxels, align 8, !llfi_index !95
  %20 = mul nsw i64 %19, 100, !llfi_index !96
  %21 = sdiv i64 %20, %13, !llfi_index !97
  %22 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str11, i64 0, i64 0), i64 %19, i64 %21) #2, !llfi_index !98
  %23 = load i64* @empty_voxels, align 8, !llfi_index !99
  %24 = mul nsw i64 %23, 100, !llfi_index !100
  %25 = sdiv i64 %24, %15, !llfi_index !101
  %26 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str12, i64 0, i64 0), i64 %23, i64 %25) #2, !llfi_index !102
  %27 = load i64* @nonempty_leafs, align 8, !llfi_index !103
  %28 = mul nsw i64 %27, 100, !llfi_index !104
  %29 = sdiv i64 %28, %15, !llfi_index !105
  %30 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str13, i64 0, i64 0), i64 %27, i64 %29) #2, !llfi_index !106
  %31 = load i64* @prims_in_leafs, align 8, !llfi_index !107
  %32 = sitofp i64 %31 to double, !llfi_index !108
  %33 = sitofp i64 %15 to double, !llfi_index !109
  %34 = fdiv double %32, %33, !llfi_index !110
  %35 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([47 x i8]* @.str14, i64 0, i64 0), double %34) #2, !llfi_index !111
  %putchar2 = tail call i32 @putchar(i32 10) #2, !llfi_index !112
  ret void, !llfi_index !113
}

; Function Attrs: nounwind
declare i32 @printf(i8* nocapture readonly, ...) #1

; Function Attrs: nounwind uwtable
define void @init_masks() #0 {
  br label %1, !llfi_index !114

; <label>:1                                       ; preds = %1, %0
  %i.01 = phi i64 [ 0, %0 ], [ %6, %1 ], !llfi_index !115
  %2 = lshr i64 -9223372036854775808, %i.01, !llfi_index !116
  %3 = getelementptr inbounds [64 x i64]* @empty_masks, i64 0, i64 %i.01, !llfi_index !117
  store i64 %2, i64* %3, align 8, !llfi_index !118
  %4 = xor i64 %2, -1, !llfi_index !119
  %5 = getelementptr inbounds [64 x i64]* @nonempty_masks, i64 0, i64 %i.01, !llfi_index !120
  store i64 %4, i64* %5, align 8, !llfi_index !121
  %6 = add nsw i64 %i.01, 1, !llfi_index !122
  %exitcond = icmp eq i64 %6, 64, !llfi_index !123
  br i1 %exitcond, label %7, label %1, !llfi_index !124

; <label>:7                                       ; preds = %1
  ret void, !llfi_index !125
}

; Function Attrs: nounwind uwtable
define %struct.grid* @init_world_grid(%struct.voxel* %v, %struct.element** %pepa, i64 %num_pe) #0 {
  %1 = tail call i8* @ObjectMalloc(i64 0, i64 1), !llfi_index !126
  %2 = bitcast i8* %1 to %struct.grid*, !llfi_index !127
  %3 = load i64* @grids, align 8, !llfi_index !128
  %4 = add nsw i64 %3, 1, !llfi_index !129
  store i64 %4, i64* @grids, align 8, !llfi_index !130
  %5 = bitcast i8* %1 to i64*, !llfi_index !131
  store i64 %3, i64* %5, align 8, !llfi_index !132
  %6 = tail call i8* @ObjectMalloc(i64 2, i64 1), !llfi_index !133
  %7 = bitcast i8* %6 to %struct.voxel**, !llfi_index !134
  %8 = getelementptr inbounds i8* %1, i64 8, !llfi_index !135
  %9 = bitcast i8* %8 to %struct.voxel***, !llfi_index !136
  store %struct.voxel** %7, %struct.voxel*** %9, align 8, !llfi_index !137
  store %struct.voxel* %v, %struct.voxel** %7, align 8, !llfi_index !138
  %10 = tail call i8* @ObjectMalloc(i64 3, i64 1), !llfi_index !139
  %11 = bitcast i8* %10 to i64*, !llfi_index !140
  %12 = getelementptr inbounds i8* %1, i64 16, !llfi_index !141
  %13 = bitcast i8* %12 to i64**, !llfi_index !142
  store i64* %11, i64** %13, align 8, !llfi_index !143
  store i64 0, i64* %11, align 8, !llfi_index !144
  %14 = getelementptr inbounds i8* %1, i64 40, !llfi_index !145
  %15 = bitcast i8* %14 to i64*, !llfi_index !146
  store i64 1, i64* %15, align 8, !llfi_index !147
  %16 = getelementptr inbounds i8* %1, i64 48, !llfi_index !148
  %17 = bitcast i8* %16 to i64*, !llfi_index !149
  store i64 1, i64* %17, align 8, !llfi_index !150
  %18 = getelementptr inbounds i8* %1, i64 56, !llfi_index !151
  %19 = bitcast i8* %18 to i64*, !llfi_index !152
  store i64 1, i64* %19, align 8, !llfi_index !153
  %20 = getelementptr inbounds i8* %1, i64 64, !llfi_index !154
  %21 = bitcast i8* %20 to i64*, !llfi_index !155
  store i64 1, i64* %21, align 8, !llfi_index !156
  %22 = getelementptr inbounds i8* %1, i64 72, !llfi_index !157
  %23 = getelementptr inbounds i8* %1, i64 96, !llfi_index !158
  %24 = bitcast i8* %23 to double*, !llfi_index !159
  tail call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 24, i32 8, i1 false), !llfi_index !160
  store double 1.000000e+00, double* %24, align 8, !llfi_index !161
  %25 = getelementptr inbounds i8* %1, i64 104, !llfi_index !162
  %26 = bitcast i8* %25 to double*, !llfi_index !163
  store double 1.000000e+00, double* %26, align 8, !llfi_index !164
  %27 = getelementptr inbounds i8* %1, i64 112, !llfi_index !165
  %28 = bitcast i8* %27 to double*, !llfi_index !166
  store double 1.000000e+00, double* %28, align 8, !llfi_index !167
  %29 = getelementptr inbounds i8* %1, i64 120, !llfi_index !168
  %30 = bitcast i8* %29 to i64*, !llfi_index !169
  store i64 -1, i64* %30, align 8, !llfi_index !170
  %31 = getelementptr inbounds i8* %1, i64 32, !llfi_index !171
  %32 = bitcast i8* %31 to i64*, !llfi_index !172
  store i64 %num_pe, i64* %32, align 8, !llfi_index !173
  %33 = getelementptr inbounds i8* %1, i64 24, !llfi_index !174
  %34 = bitcast i8* %33 to %struct.element***, !llfi_index !175
  store %struct.element** %pepa, %struct.element*** %34, align 8, !llfi_index !176
  %35 = getelementptr inbounds i8* %1, i64 136, !llfi_index !177
  %36 = bitcast i8* %35 to %struct.grid**, !llfi_index !178
  store %struct.grid* null, %struct.grid** %36, align 8, !llfi_index !179
  store %struct.grid* %2, %struct.grid** @gridlist, align 8, !llfi_index !180
  ret %struct.grid* %2, !llfi_index !181
}

; Function Attrs: nounwind uwtable
define %struct.voxel* @init_world_voxel(%struct.element** %pepa, i64 %numelements) #0 {
  %1 = tail call i8* @ObjectMalloc(i64 1, i64 1), !llfi_index !182
  %2 = bitcast i8* %1 to %struct.voxel*, !llfi_index !183
  %3 = load i64* @nonempty_voxels, align 8, !llfi_index !184
  %4 = add nsw i64 %3, 1, !llfi_index !185
  store i64 %4, i64* @nonempty_voxels, align 8, !llfi_index !186
  %5 = bitcast i8* %1 to i64*, !llfi_index !187
  store i64 0, i64* %5, align 8, !llfi_index !188
  %6 = bitcast %struct.element** %pepa to i8*, !llfi_index !189
  %7 = getelementptr inbounds i8* %1, i64 24, !llfi_index !190
  %8 = bitcast i8* %7 to i8**, !llfi_index !191
  store i8* %6, i8** %8, align 8, !llfi_index !192
  %9 = getelementptr inbounds i8* %1, i64 8, !llfi_index !193
  %10 = bitcast i8* %9 to i64*, !llfi_index !194
  store i64 %numelements, i64* %10, align 8, !llfi_index !195
  %11 = getelementptr inbounds i8* %1, i64 32, !llfi_index !196
  store i8 2, i8* %11, align 1, !llfi_index !197
  %12 = getelementptr inbounds i8* %1, i64 16, !llfi_index !198
  %13 = bitcast i8* %12 to %struct.voxel**, !llfi_index !199
  store %struct.voxel* null, %struct.voxel** %13, align 8, !llfi_index !200
  ret %struct.voxel* %2, !llfi_index !201
}

; Function Attrs: nounwind uwtable
define void @mark_empty(i64 %index1D, %struct.grid* nocapture readonly %g) #0 {
  %1 = lshr i64 %index1D, 6, !llfi_index !202
  %2 = shl nuw i64 %1, 6, !llfi_index !203
  %3 = sub i64 %index1D, %2, !llfi_index !204
  %4 = getelementptr inbounds %struct.grid* %g, i64 0, i32 2, !llfi_index !205
  %5 = load i64** %4, align 8, !llfi_index !206
  %6 = getelementptr inbounds i64* %5, i64 %1, !llfi_index !207
  %7 = load i64* %6, align 8, !llfi_index !208
  %8 = getelementptr inbounds [64 x i64]* @empty_masks, i64 0, i64 %3, !llfi_index !209
  %9 = load i64* %8, align 8, !llfi_index !210
  %10 = or i64 %9, %7, !llfi_index !211
  store i64 %10, i64* %6, align 8, !llfi_index !212
  ret void, !llfi_index !213
}

; Function Attrs: nounwind uwtable
define void @mark_nonempty(i64 %index1D, %struct.grid* nocapture readonly %g) #0 {
  %1 = lshr i64 %index1D, 6, !llfi_index !214
  %2 = shl nuw i64 %1, 6, !llfi_index !215
  %3 = sub i64 %index1D, %2, !llfi_index !216
  %4 = getelementptr inbounds %struct.grid* %g, i64 0, i32 2, !llfi_index !217
  %5 = load i64** %4, align 8, !llfi_index !218
  %6 = getelementptr inbounds i64* %5, i64 %1, !llfi_index !219
  %7 = load i64* %6, align 8, !llfi_index !220
  %8 = getelementptr inbounds [64 x i64]* @nonempty_masks, i64 0, i64 %3, !llfi_index !221
  %9 = load i64* %8, align 8, !llfi_index !222
  %10 = and i64 %9, %7, !llfi_index !223
  store i64 %10, i64* %6, align 8, !llfi_index !224
  ret void, !llfi_index !225
}

; Function Attrs: nounwind uwtable
define void @insert_in_hashtable(%struct.voxel* %v, %struct.grid* nocapture readonly %g) #0 {
  %1 = getelementptr inbounds %struct.voxel* %v, i64 0, i32 0, !llfi_index !226
  %2 = load i64* %1, align 8, !llfi_index !227
  %3 = load i64* @hu_numbuckets, align 8, !llfi_index !228
  %4 = srem i64 %2, %3, !llfi_index !229
  %5 = getelementptr inbounds %struct.grid* %g, i64 0, i32 1, !llfi_index !230
  %6 = load %struct.voxel*** %5, align 8, !llfi_index !231
  %7 = getelementptr inbounds %struct.voxel** %6, i64 %4, !llfi_index !232
  %8 = load %struct.voxel** %7, align 8, !llfi_index !233
  %9 = getelementptr inbounds %struct.voxel* %v, i64 0, i32 2, !llfi_index !234
  store %struct.voxel* %8, %struct.voxel** %9, align 8, !llfi_index !235
  %10 = load %struct.voxel*** %5, align 8, !llfi_index !236
  %11 = getelementptr inbounds %struct.voxel** %10, i64 %4, !llfi_index !237
  store %struct.voxel* %v, %struct.voxel** %11, align 8, !llfi_index !238
  ret void, !llfi_index !239
}

; Function Attrs: nounwind uwtable
define %struct.element** @prims_in_box2(%struct.element** nocapture readonly %pepa, i64 %n_in, %struct.bbox* byval nocapture readonly align 8 %b, i64* nocapture %n) #0 {
  %1 = getelementptr inbounds %struct.bbox* %b, i64 0, i32 1, i64 0, !llfi_index !240
  %2 = load double* %1, align 8, !llfi_index !241
  %3 = getelementptr inbounds %struct.bbox* %b, i64 0, i32 0, i64 0, !llfi_index !242
  %4 = load double* %3, align 8, !llfi_index !243
  %5 = fsub double %2, %4, !llfi_index !244
  %6 = getelementptr inbounds %struct.bbox* %b, i64 0, i32 1, i64 1, !llfi_index !245
  %7 = load double* %6, align 8, !llfi_index !246
  %8 = getelementptr inbounds %struct.bbox* %b, i64 0, i32 0, i64 1, !llfi_index !247
  %9 = load double* %8, align 8, !llfi_index !248
  %10 = fsub double %7, %9, !llfi_index !249
  %11 = fcmp ogt double %5, %10, !llfi_index !250
  %12 = select i1 %11, double %5, double %10, !llfi_index !251
  %13 = getelementptr inbounds %struct.bbox* %b, i64 0, i32 1, i64 2, !llfi_index !252
  %14 = load double* %13, align 8, !llfi_index !253
  %15 = getelementptr inbounds %struct.bbox* %b, i64 0, i32 0, i64 2, !llfi_index !254
  %16 = load double* %15, align 8, !llfi_index !255
  %17 = fsub double %14, %16, !llfi_index !256
  %18 = fcmp ogt double %12, %17, !llfi_index !257
  %19 = select i1 %18, double %12, double %17, !llfi_index !258
  %20 = fmul double %19, 1.000000e-06, !llfi_index !259
  %21 = icmp sgt i64 %n_in, 0, !llfi_index !260
  br i1 %21, label %.lr.ph, label %30, !llfi_index !261

.lr.ph:                                           ; preds = %0
  %22 = tail call i8* @ObjectMalloc(i64 7, i64 %n_in), !llfi_index !262
  %23 = bitcast i8* %22 to %struct.element**, !llfi_index !263
  store i64 0, i64* %n, align 8, !llfi_index !264
  %24 = load double* %3, align 8, !llfi_index !265
  %25 = load double* %8, align 8, !llfi_index !266
  %26 = load double* %15, align 8, !llfi_index !267
  %27 = load double* %1, align 8, !llfi_index !268
  %28 = load double* %6, align 8, !llfi_index !269
  %29 = load double* %13, align 8, !llfi_index !270
  br label %31, !llfi_index !271

; <label>:30                                      ; preds = %0
  store i64 0, i64* %n, align 8, !llfi_index !272
  br label %.loopexit2, !llfi_index !273

; <label>:31                                      ; preds = %.loopexit.split, %.lr.ph
  %j.04 = phi i64 [ 0, %.lr.ph ], [ %62, %.loopexit.split ], !llfi_index !274
  %k.03 = phi i64 [ 0, %.lr.ph ], [ %k.1, %.loopexit.split ], !llfi_index !275
  %32 = getelementptr inbounds %struct.element** %pepa, i64 %j.04, !llfi_index !276
  %33 = load %struct.element** %32, align 8, !llfi_index !277
  %34 = getelementptr inbounds %struct.element* %33, i64 0, i32 3, i32 0, i64 0, !llfi_index !278
  %35 = load double* %34, align 8, !llfi_index !279
  %36 = getelementptr inbounds %struct.element* %33, i64 0, i32 3, i32 0, i64 1, !llfi_index !280
  %37 = load double* %36, align 8, !llfi_index !281
  %38 = getelementptr inbounds %struct.element* %33, i64 0, i32 3, i32 0, i64 2, !llfi_index !282
  %39 = load double* %38, align 8, !llfi_index !283
  %40 = getelementptr inbounds %struct.element* %33, i64 0, i32 3, i32 1, i64 0, !llfi_index !284
  %41 = load double* %40, align 8, !llfi_index !285
  %42 = getelementptr inbounds %struct.element* %33, i64 0, i32 3, i32 1, i64 1, !llfi_index !286
  %43 = load double* %42, align 8, !llfi_index !287
  %44 = getelementptr inbounds %struct.element* %33, i64 0, i32 3, i32 1, i64 2, !llfi_index !288
  %45 = load double* %44, align 8, !llfi_index !289
  %46 = fadd double %20, %41, !llfi_index !290
  %47 = fcmp ogt double %24, %46, !llfi_index !291
  %48 = fadd double %20, %43, !llfi_index !292
  %49 = fcmp ogt double %25, %48, !llfi_index !293
  %50 = fadd double %20, %45, !llfi_index !294
  %51 = fcmp ogt double %26, %50, !llfi_index !295
  %52 = fsub double %35, %20, !llfi_index !296
  %53 = fcmp olt double %27, %52, !llfi_index !297
  %54 = fsub double %37, %20, !llfi_index !298
  %55 = fcmp olt double %28, %54, !llfi_index !299
  %56 = fsub double %39, %20, !llfi_index !300
  %57 = fcmp olt double %29, %56, !llfi_index !301
  %brmerge = or i1 %47, %49, !llfi_index !302
  %brmerge5 = or i1 %brmerge, %51, !llfi_index !303
  %brmerge6 = or i1 %brmerge5, %53, !llfi_index !304
  %brmerge7 = or i1 %brmerge6, %55, !llfi_index !305
  %brmerge8 = or i1 %brmerge7, %57, !llfi_index !306
  br i1 %brmerge8, label %.loopexit.split, label %.critedge, !llfi_index !307

.critedge:                                        ; preds = %31
  %58 = add nsw i64 %k.03, 1, !llfi_index !308
  %59 = getelementptr inbounds %struct.element** %23, i64 %k.03, !llfi_index !309
  store %struct.element* %33, %struct.element** %59, align 8, !llfi_index !310
  %60 = load i64* %n, align 8, !llfi_index !311
  %61 = add nsw i64 %60, 1, !llfi_index !312
  store i64 %61, i64* %n, align 8, !llfi_index !313
  br label %.loopexit.split, !llfi_index !314

.loopexit.split:                                  ; preds = %.critedge, %31
  %k.1 = phi i64 [ %58, %.critedge ], [ %k.03, %31 ], !llfi_index !315
  %62 = add nsw i64 %j.04, 1, !llfi_index !316
  %exitcond = icmp eq i64 %62, %n_in, !llfi_index !317
  br i1 %exitcond, label %.loopexit2, label %31, !llfi_index !318

.loopexit2:                                       ; preds = %.loopexit.split, %30
  %.0 = phi %struct.element** [ null, %30 ], [ %23, %.loopexit.split ], !llfi_index !319
  ret %struct.element** %.0, !llfi_index !320
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define %struct.btnode* @init_bintree(%struct.grid* nocapture readonly %ng) #0 {
  %1 = tail call i8* @ObjectMalloc(i64 6, i64 1), !llfi_index !321
  %2 = bitcast i8* %1 to %struct.btnode*, !llfi_index !322
  %3 = getelementptr inbounds i8* %1, i64 104, !llfi_index !323
  %4 = getelementptr inbounds i8* %1, i64 88, !llfi_index !324
  %5 = bitcast i8* %4 to i64*, !llfi_index !325
  tail call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 16, i32 8, i1 false), !llfi_index !326
  store i64 -1, i64* %5, align 8, !llfi_index !327
  %6 = getelementptr inbounds %struct.grid* %ng, i64 0, i32 7, i64 0, !llfi_index !328
  %7 = load double* %6, align 8, !llfi_index !329
  %8 = getelementptr inbounds i8* %1, i64 8, !llfi_index !330
  %9 = bitcast i8* %8 to double*, !llfi_index !331
  store double %7, double* %9, align 8, !llfi_index !332
  %10 = getelementptr inbounds %struct.grid* %ng, i64 0, i32 7, i64 1, !llfi_index !333
  %11 = load double* %10, align 8, !llfi_index !334
  %12 = getelementptr inbounds i8* %1, i64 16, !llfi_index !335
  %13 = bitcast i8* %12 to double*, !llfi_index !336
  store double %11, double* %13, align 8, !llfi_index !337
  %14 = getelementptr inbounds %struct.grid* %ng, i64 0, i32 7, i64 2, !llfi_index !338
  %15 = load double* %14, align 8, !llfi_index !339
  %16 = getelementptr inbounds i8* %1, i64 24, !llfi_index !340
  %17 = bitcast i8* %16 to double*, !llfi_index !341
  store double %15, double* %17, align 8, !llfi_index !342
  %18 = getelementptr inbounds %struct.grid* %ng, i64 0, i32 5, i64 1, !llfi_index !343
  %19 = load i64* %18, align 8, !llfi_index !344
  %20 = getelementptr inbounds i8* %1, i64 40, !llfi_index !345
  %21 = bitcast i8* %20 to i64*, !llfi_index !346
  store i64 %19, i64* %21, align 8, !llfi_index !347
  %22 = load i64* %18, align 8, !llfi_index !348
  %23 = getelementptr inbounds i8* %1, i64 48, !llfi_index !349
  %24 = bitcast i8* %23 to i64*, !llfi_index !350
  store i64 %22, i64* %24, align 8, !llfi_index !351
  %25 = load i64* %18, align 8, !llfi_index !352
  %26 = getelementptr inbounds i8* %1, i64 56, !llfi_index !353
  %27 = bitcast i8* %26 to i64*, !llfi_index !354
  store i64 %25, i64* %27, align 8, !llfi_index !355
  %28 = getelementptr inbounds i8* %1, i64 64, !llfi_index !356
  %29 = getelementptr inbounds %struct.grid* %ng, i64 0, i32 4, !llfi_index !357
  tail call void @llvm.memset.p0i8.i64(i8* %28, i8 0, i64 24, i32 8, i1 false), !llfi_index !358
  %30 = load i64* %29, align 8, !llfi_index !359
  %31 = getelementptr inbounds i8* %1, i64 32, !llfi_index !360
  %32 = bitcast i8* %31 to i64*, !llfi_index !361
  store i64 %30, i64* %32, align 8, !llfi_index !362
  %33 = getelementptr inbounds i8* %1, i64 96, !llfi_index !363
  %34 = bitcast i8* %33 to i64*, !llfi_index !364
  store i64 %30, i64* %34, align 8, !llfi_index !365
  %35 = load i64* %29, align 8, !llfi_index !366
  %36 = icmp sgt i64 %35, 0, !llfi_index !367
  br i1 %36, label %37, label %41, !llfi_index !368

; <label>:37                                      ; preds = %0
  %38 = getelementptr inbounds %struct.grid* %ng, i64 0, i32 3, !llfi_index !369
  %39 = load %struct.element*** %38, align 8, !llfi_index !370
  %40 = bitcast i8* %1 to %struct.element***, !llfi_index !371
  store %struct.element** %39, %struct.element*** %40, align 8, !llfi_index !372
  br label %43, !llfi_index !373

; <label>:41                                      ; preds = %0
  %42 = bitcast i8* %1 to %struct.element***, !llfi_index !374
  store %struct.element** null, %struct.element*** %42, align 8, !llfi_index !375
  br label %43, !llfi_index !376

; <label>:43                                      ; preds = %41, %37
  ret %struct.btnode* %2, !llfi_index !377
}

; Function Attrs: nounwind uwtable
define void @subdiv_bintree(%struct.btnode* nocapture %btn, %struct.grid* nocapture readonly %g) #0 {
  %b1 = alloca %struct.bbox, align 8, !llfi_index !378
  %b2 = alloca %struct.bbox, align 8, !llfi_index !379
  %1 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 3, i64 0, !llfi_index !380
  %2 = load i64* %1, align 8, !llfi_index !381
  %3 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 3, i64 1, !llfi_index !382
  %4 = load i64* %3, align 8, !llfi_index !383
  %5 = icmp slt i64 %2, %4, !llfi_index !384
  %. = zext i1 %5 to i64, !llfi_index !385
  %.1 = select i1 %5, i64 %4, i64 %2, !llfi_index !386
  %6 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 3, i64 2, !llfi_index !387
  %7 = load i64* %6, align 8, !llfi_index !388
  %8 = icmp slt i64 %.1, %7, !llfi_index !389
  %imax.1 = select i1 %8, i64 2, i64 %., !llfi_index !390
  %9 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 5, !llfi_index !391
  store i64 %imax.1, i64* %9, align 8, !llfi_index !392
  %10 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 7, i64 0, !llfi_index !393
  %11 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 3, i64 %imax.1, !llfi_index !394
  %12 = bitcast %struct.btnode** %10 to i8*, !llfi_index !395
  tail call void @llvm.memset.p0i8.i64(i8* %12, i8 0, i64 16, i32 8, i1 false), !llfi_index !396
  %13 = load i64* %11, align 8, !llfi_index !397
  %14 = icmp sgt i64 %13, 1, !llfi_index !398
  br i1 %14, label %15, label %183, !llfi_index !399

; <label>:15                                      ; preds = %0
  %16 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 7, i64 1, !llfi_index !400
  %17 = sdiv i64 %13, 2, !llfi_index !401
  %18 = sub nsw i64 %13, %17, !llfi_index !402
  %19 = tail call i8* @ObjectMalloc(i64 6, i64 1), !llfi_index !403
  %20 = bitcast i8* %19 to %struct.btnode*, !llfi_index !404
  %21 = tail call i8* @ObjectMalloc(i64 6, i64 1), !llfi_index !405
  %22 = bitcast i8* %21 to %struct.btnode*, !llfi_index !406
  store %struct.btnode* %20, %struct.btnode** %10, align 8, !llfi_index !407
  store %struct.btnode* %22, %struct.btnode** %16, align 8, !llfi_index !408
  %23 = getelementptr inbounds i8* %19, i64 104, !llfi_index !409
  %24 = getelementptr inbounds i8* %19, i64 88, !llfi_index !410
  %25 = bitcast i8* %24 to i64*, !llfi_index !411
  tail call void @llvm.memset.p0i8.i64(i8* %23, i8 0, i64 16, i32 8, i1 false), !llfi_index !412
  store i64 -1, i64* %25, align 8, !llfi_index !413
  %26 = getelementptr inbounds i8* %21, i64 104, !llfi_index !414
  %27 = getelementptr inbounds i8* %21, i64 88, !llfi_index !415
  %28 = bitcast i8* %27 to i64*, !llfi_index !416
  tail call void @llvm.memset.p0i8.i64(i8* %26, i8 0, i64 16, i32 8, i1 false), !llfi_index !417
  store i64 -1, i64* %28, align 8, !llfi_index !418
  %29 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 4, i64 0, !llfi_index !419
  %30 = load i64* %29, align 8, !llfi_index !420
  %31 = getelementptr inbounds i8* %19, i64 64, !llfi_index !421
  %32 = bitcast i8* %31 to i64*, !llfi_index !422
  store i64 %30, i64* %32, align 8, !llfi_index !423
  %33 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 4, i64 1, !llfi_index !424
  %34 = load i64* %33, align 8, !llfi_index !425
  %35 = getelementptr inbounds i8* %19, i64 72, !llfi_index !426
  %36 = bitcast i8* %35 to i64*, !llfi_index !427
  store i64 %34, i64* %36, align 8, !llfi_index !428
  %37 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 4, i64 2, !llfi_index !429
  %38 = load i64* %37, align 8, !llfi_index !430
  %39 = getelementptr inbounds i8* %19, i64 80, !llfi_index !431
  %40 = bitcast i8* %39 to i64*, !llfi_index !432
  store i64 %38, i64* %40, align 8, !llfi_index !433
  %41 = load i64* %29, align 8, !llfi_index !434
  %42 = getelementptr inbounds i8* %21, i64 64, !llfi_index !435
  %43 = bitcast i8* %42 to [3 x i64]*, !llfi_index !436
  %44 = bitcast i8* %42 to i64*, !llfi_index !437
  store i64 %41, i64* %44, align 8, !llfi_index !438
  %45 = load i64* %33, align 8, !llfi_index !439
  %46 = getelementptr inbounds i8* %21, i64 72, !llfi_index !440
  %47 = bitcast i8* %46 to i64*, !llfi_index !441
  store i64 %45, i64* %47, align 8, !llfi_index !442
  %48 = load i64* %37, align 8, !llfi_index !443
  %49 = getelementptr inbounds i8* %21, i64 80, !llfi_index !444
  %50 = bitcast i8* %49 to i64*, !llfi_index !445
  store i64 %48, i64* %50, align 8, !llfi_index !446
  %51 = getelementptr inbounds [3 x i64]* %43, i64 0, i64 %imax.1, !llfi_index !447
  %52 = load i64* %51, align 8, !llfi_index !448
  %53 = add nsw i64 %52, %17, !llfi_index !449
  store i64 %53, i64* %51, align 8, !llfi_index !450
  %54 = load i64* %1, align 8, !llfi_index !451
  %55 = getelementptr inbounds i8* %19, i64 40, !llfi_index !452
  %56 = bitcast i8* %55 to [3 x i64]*, !llfi_index !453
  %57 = bitcast i8* %55 to i64*, !llfi_index !454
  store i64 %54, i64* %57, align 8, !llfi_index !455
  %58 = load i64* %3, align 8, !llfi_index !456
  %59 = getelementptr inbounds i8* %19, i64 48, !llfi_index !457
  %60 = bitcast i8* %59 to i64*, !llfi_index !458
  store i64 %58, i64* %60, align 8, !llfi_index !459
  %61 = load i64* %6, align 8, !llfi_index !460
  %62 = getelementptr inbounds i8* %19, i64 56, !llfi_index !461
  %63 = bitcast i8* %62 to i64*, !llfi_index !462
  store i64 %61, i64* %63, align 8, !llfi_index !463
  %64 = getelementptr inbounds [3 x i64]* %56, i64 0, i64 %imax.1, !llfi_index !464
  store i64 %17, i64* %64, align 8, !llfi_index !465
  %65 = load i64* %1, align 8, !llfi_index !466
  %66 = getelementptr inbounds i8* %21, i64 40, !llfi_index !467
  %67 = bitcast i8* %66 to [3 x i64]*, !llfi_index !468
  %68 = bitcast i8* %66 to i64*, !llfi_index !469
  store i64 %65, i64* %68, align 8, !llfi_index !470
  %69 = load i64* %3, align 8, !llfi_index !471
  %70 = getelementptr inbounds i8* %21, i64 48, !llfi_index !472
  %71 = bitcast i8* %70 to i64*, !llfi_index !473
  store i64 %69, i64* %71, align 8, !llfi_index !474
  %72 = load i64* %6, align 8, !llfi_index !475
  %73 = getelementptr inbounds i8* %21, i64 56, !llfi_index !476
  %74 = bitcast i8* %73 to i64*, !llfi_index !477
  store i64 %72, i64* %74, align 8, !llfi_index !478
  %75 = getelementptr inbounds [3 x i64]* %67, i64 0, i64 %imax.1, !llfi_index !479
  store i64 %18, i64* %75, align 8, !llfi_index !480
  %76 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 1, i64 0, !llfi_index !481
  %77 = load double* %76, align 8, !llfi_index !482
  %78 = getelementptr inbounds i8* %19, i64 8, !llfi_index !483
  %79 = bitcast i8* %78 to double*, !llfi_index !484
  store double %77, double* %79, align 8, !llfi_index !485
  %80 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 1, i64 1, !llfi_index !486
  %81 = load double* %80, align 8, !llfi_index !487
  %82 = getelementptr inbounds i8* %19, i64 16, !llfi_index !488
  %83 = bitcast i8* %82 to double*, !llfi_index !489
  store double %81, double* %83, align 8, !llfi_index !490
  %84 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 1, i64 2, !llfi_index !491
  %85 = load double* %84, align 8, !llfi_index !492
  %86 = getelementptr inbounds i8* %19, i64 24, !llfi_index !493
  %87 = bitcast i8* %86 to double*, !llfi_index !494
  store double %85, double* %87, align 8, !llfi_index !495
  %88 = load double* %76, align 8, !llfi_index !496
  %89 = getelementptr inbounds i8* %21, i64 8, !llfi_index !497
  %90 = bitcast i8* %89 to [3 x double]*, !llfi_index !498
  %91 = bitcast i8* %89 to double*, !llfi_index !499
  store double %88, double* %91, align 8, !llfi_index !500
  %92 = load double* %80, align 8, !llfi_index !501
  %93 = getelementptr inbounds i8* %21, i64 16, !llfi_index !502
  %94 = bitcast i8* %93 to double*, !llfi_index !503
  store double %92, double* %94, align 8, !llfi_index !504
  %95 = load double* %84, align 8, !llfi_index !505
  %96 = getelementptr inbounds i8* %21, i64 24, !llfi_index !506
  %97 = bitcast i8* %96 to double*, !llfi_index !507
  store double %95, double* %97, align 8, !llfi_index !508
  %98 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 1, i64 %imax.1, !llfi_index !509
  %99 = load double* %98, align 8, !llfi_index !510
  %100 = sitofp i64 %17 to double, !llfi_index !511
  %101 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 %imax.1, !llfi_index !512
  %102 = load double* %101, align 8, !llfi_index !513
  %103 = fmul double %100, %102, !llfi_index !514
  %104 = fadd double %99, %103, !llfi_index !515
  %105 = getelementptr inbounds [3 x double]* %90, i64 0, i64 %imax.1, !llfi_index !516
  store double %104, double* %105, align 8, !llfi_index !517
  %106 = load double* %79, align 8, !llfi_index !518
  %107 = getelementptr inbounds %struct.bbox* %b1, i64 0, i32 0, i64 0, !llfi_index !519
  store double %106, double* %107, align 8, !llfi_index !520
  %108 = load double* %83, align 8, !llfi_index !521
  %109 = getelementptr inbounds %struct.bbox* %b1, i64 0, i32 0, i64 1, !llfi_index !522
  store double %108, double* %109, align 8, !llfi_index !523
  %110 = load double* %87, align 8, !llfi_index !524
  %111 = getelementptr inbounds %struct.bbox* %b1, i64 0, i32 0, i64 2, !llfi_index !525
  store double %110, double* %111, align 8, !llfi_index !526
  %112 = load double* %79, align 8, !llfi_index !527
  %113 = load i64* %57, align 8, !llfi_index !528
  %114 = sitofp i64 %113 to double, !llfi_index !529
  %115 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 0, !llfi_index !530
  %116 = load double* %115, align 8, !llfi_index !531
  %117 = fmul double %114, %116, !llfi_index !532
  %118 = fadd double %112, %117, !llfi_index !533
  %119 = getelementptr inbounds %struct.bbox* %b1, i64 0, i32 1, i64 0, !llfi_index !534
  store double %118, double* %119, align 8, !llfi_index !535
  %120 = load double* %83, align 8, !llfi_index !536
  %121 = load i64* %60, align 8, !llfi_index !537
  %122 = sitofp i64 %121 to double, !llfi_index !538
  %123 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 1, !llfi_index !539
  %124 = load double* %123, align 8, !llfi_index !540
  %125 = fmul double %122, %124, !llfi_index !541
  %126 = fadd double %120, %125, !llfi_index !542
  %127 = getelementptr inbounds %struct.bbox* %b1, i64 0, i32 1, i64 1, !llfi_index !543
  store double %126, double* %127, align 8, !llfi_index !544
  %128 = load double* %87, align 8, !llfi_index !545
  %129 = load i64* %63, align 8, !llfi_index !546
  %130 = sitofp i64 %129 to double, !llfi_index !547
  %131 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 2, !llfi_index !548
  %132 = load double* %131, align 8, !llfi_index !549
  %133 = fmul double %130, %132, !llfi_index !550
  %134 = fadd double %128, %133, !llfi_index !551
  %135 = getelementptr inbounds %struct.bbox* %b1, i64 0, i32 1, i64 2, !llfi_index !552
  store double %134, double* %135, align 8, !llfi_index !553
  %136 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 0, !llfi_index !554
  %137 = load %struct.element*** %136, align 8, !llfi_index !555
  %138 = getelementptr inbounds %struct.btnode* %btn, i64 0, i32 2, !llfi_index !556
  %139 = load i64* %138, align 8, !llfi_index !557
  %140 = getelementptr inbounds i8* %19, i64 32, !llfi_index !558
  %141 = bitcast i8* %140 to i64*, !llfi_index !559
  %142 = call %struct.element** @prims_in_box2(%struct.element** %137, i64 %139, %struct.bbox* byval align 8 %b1, i64* %141), !llfi_index !560
  %143 = bitcast i8* %19 to %struct.element***, !llfi_index !561
  store %struct.element** %142, %struct.element*** %143, align 8, !llfi_index !562
  %144 = load i64* %138, align 8, !llfi_index !563
  %145 = getelementptr inbounds i8* %19, i64 96, !llfi_index !564
  %146 = bitcast i8* %145 to i64*, !llfi_index !565
  store i64 %144, i64* %146, align 8, !llfi_index !566
  %147 = load double* %91, align 8, !llfi_index !567
  %148 = getelementptr inbounds %struct.bbox* %b2, i64 0, i32 0, i64 0, !llfi_index !568
  store double %147, double* %148, align 8, !llfi_index !569
  %149 = load double* %94, align 8, !llfi_index !570
  %150 = getelementptr inbounds %struct.bbox* %b2, i64 0, i32 0, i64 1, !llfi_index !571
  store double %149, double* %150, align 8, !llfi_index !572
  %151 = load double* %97, align 8, !llfi_index !573
  %152 = getelementptr inbounds %struct.bbox* %b2, i64 0, i32 0, i64 2, !llfi_index !574
  store double %151, double* %152, align 8, !llfi_index !575
  %153 = load double* %91, align 8, !llfi_index !576
  %154 = load i64* %68, align 8, !llfi_index !577
  %155 = sitofp i64 %154 to double, !llfi_index !578
  %156 = load double* %115, align 8, !llfi_index !579
  %157 = fmul double %155, %156, !llfi_index !580
  %158 = fadd double %153, %157, !llfi_index !581
  %159 = getelementptr inbounds %struct.bbox* %b2, i64 0, i32 1, i64 0, !llfi_index !582
  store double %158, double* %159, align 8, !llfi_index !583
  %160 = load double* %94, align 8, !llfi_index !584
  %161 = load i64* %71, align 8, !llfi_index !585
  %162 = sitofp i64 %161 to double, !llfi_index !586
  %163 = load double* %123, align 8, !llfi_index !587
  %164 = fmul double %162, %163, !llfi_index !588
  %165 = fadd double %160, %164, !llfi_index !589
  %166 = getelementptr inbounds %struct.bbox* %b2, i64 0, i32 1, i64 1, !llfi_index !590
  store double %165, double* %166, align 8, !llfi_index !591
  %167 = load double* %97, align 8, !llfi_index !592
  %168 = load i64* %74, align 8, !llfi_index !593
  %169 = sitofp i64 %168 to double, !llfi_index !594
  %170 = load double* %131, align 8, !llfi_index !595
  %171 = fmul double %169, %170, !llfi_index !596
  %172 = fadd double %167, %171, !llfi_index !597
  %173 = getelementptr inbounds %struct.bbox* %b2, i64 0, i32 1, i64 2, !llfi_index !598
  store double %172, double* %173, align 8, !llfi_index !599
  %174 = load %struct.element*** %136, align 8, !llfi_index !600
  %175 = load i64* %138, align 8, !llfi_index !601
  %176 = getelementptr inbounds i8* %21, i64 32, !llfi_index !602
  %177 = bitcast i8* %176 to i64*, !llfi_index !603
  %178 = call %struct.element** @prims_in_box2(%struct.element** %174, i64 %175, %struct.bbox* byval align 8 %b2, i64* %177), !llfi_index !604
  %179 = bitcast i8* %21 to %struct.element***, !llfi_index !605
  store %struct.element** %178, %struct.element*** %179, align 8, !llfi_index !606
  %180 = load i64* %138, align 8, !llfi_index !607
  %181 = getelementptr inbounds i8* %21, i64 96, !llfi_index !608
  %182 = bitcast i8* %181 to i64*, !llfi_index !609
  store i64 %180, i64* %182, align 8, !llfi_index !610
  br label %183, !llfi_index !611

; <label>:183                                     ; preds = %15, %0
  ret void, !llfi_index !612
}

; Function Attrs: nounwind uwtable
define void @create_bintree(%struct.btnode* nocapture %root, %struct.grid* nocapture readonly %g) #0 {
  br label %tailrecurse, !llfi_index !613

tailrecurse:                                      ; preds = %12, %0
  %root.tr = phi %struct.btnode* [ %root, %0 ], [ %16, %12 ], !llfi_index !614
  %1 = getelementptr inbounds %struct.btnode* %root.tr, i64 0, i32 3, i64 0, !llfi_index !615
  %2 = load i64* %1, align 8, !llfi_index !616
  %3 = icmp eq i64 %2, 1, !llfi_index !617
  br i1 %3, label %4, label %12, !llfi_index !618

; <label>:4                                       ; preds = %tailrecurse
  %5 = getelementptr inbounds %struct.btnode* %root.tr, i64 0, i32 3, i64 1, !llfi_index !619
  %6 = load i64* %5, align 8, !llfi_index !620
  %7 = icmp eq i64 %6, 1, !llfi_index !621
  br i1 %7, label %8, label %12, !llfi_index !622

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %struct.btnode* %root.tr, i64 0, i32 3, i64 2, !llfi_index !623
  %10 = load i64* %9, align 8, !llfi_index !624
  %11 = icmp eq i64 %10, 1, !llfi_index !625
  br i1 %11, label %17, label %12, !llfi_index !626

; <label>:12                                      ; preds = %8, %4, %tailrecurse
  tail call void @subdiv_bintree(%struct.btnode* %root.tr, %struct.grid* %g), !llfi_index !627
  %13 = getelementptr inbounds %struct.btnode* %root.tr, i64 0, i32 7, i64 0, !llfi_index !628
  %14 = load %struct.btnode** %13, align 8, !llfi_index !629
  tail call void @create_bintree(%struct.btnode* %14, %struct.grid* %g), !llfi_index !630
  %15 = getelementptr inbounds %struct.btnode* %root.tr, i64 0, i32 7, i64 1, !llfi_index !631
  %16 = load %struct.btnode** %15, align 8, !llfi_index !632
  br label %tailrecurse, !llfi_index !633

; <label>:17                                      ; preds = %8
  ret void, !llfi_index !634
}

; Function Attrs: nounwind uwtable
define %struct.element** @bintree_lookup(%struct.btnode* readonly %root, i64 %i, i64 %j, i64 %k, %struct.grid* nocapture readnone %g, i64* nocapture %n) #0 {
  %ijk = alloca [3 x i64], align 16, !llfi_index !635
  %1 = getelementptr inbounds [3 x i64]* %ijk, i64 0, i64 0, !llfi_index !636
  store i64 %i, i64* %1, align 16, !llfi_index !637
  %2 = getelementptr inbounds [3 x i64]* %ijk, i64 0, i64 1, !llfi_index !638
  store i64 %j, i64* %2, align 8, !llfi_index !639
  %3 = getelementptr inbounds [3 x i64]* %ijk, i64 0, i64 2, !llfi_index !640
  store i64 %k, i64* %3, align 16, !llfi_index !641
  %4 = icmp eq %struct.btnode* %root, null, !llfi_index !642
  br i1 %4, label %5, label %.preheader, !llfi_index !643

; <label>:5                                       ; preds = %0
  store i64 0, i64* %n, align 8, !llfi_index !644
  br label %49, !llfi_index !645

.preheader:                                       ; preds = %39, %0
  %btn.0 = phi %struct.btnode* [ %41, %39 ], [ %root, %0 ], !llfi_index !646
  %6 = getelementptr inbounds %struct.btnode* %btn.0, i64 0, i32 3, i64 0, !llfi_index !647
  %7 = load i64* %6, align 8, !llfi_index !648
  %8 = icmp eq i64 %7, 1, !llfi_index !649
  br i1 %8, label %9, label %.critedge, !llfi_index !650

; <label>:9                                       ; preds = %.preheader
  %10 = getelementptr inbounds %struct.btnode* %btn.0, i64 0, i32 3, i64 1, !llfi_index !651
  %11 = load i64* %10, align 8, !llfi_index !652
  %12 = icmp eq i64 %11, 1, !llfi_index !653
  br i1 %12, label %13, label %.critedge, !llfi_index !654

; <label>:13                                      ; preds = %9
  %14 = getelementptr inbounds %struct.btnode* %btn.0, i64 0, i32 3, i64 2, !llfi_index !655
  %15 = load i64* %14, align 8, !llfi_index !656
  %16 = icmp eq i64 %15, 1, !llfi_index !657
  br i1 %16, label %44, label %.critedge, !llfi_index !658

.critedge:                                        ; preds = %13, %9, %.preheader
  %17 = getelementptr inbounds %struct.btnode* %btn.0, i64 0, i32 5, !llfi_index !659
  %18 = load i64* %17, align 8, !llfi_index !660
  %19 = icmp eq i64 %18, -1, !llfi_index !661
  br i1 %19, label %20, label %30, !llfi_index !662

; <label>:20                                      ; preds = %.critedge
  %21 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !663
  %22 = load i64* %6, align 8, !llfi_index !664
  %23 = getelementptr inbounds %struct.btnode* %btn.0, i64 0, i32 3, i64 1, !llfi_index !665
  %24 = load i64* %23, align 8, !llfi_index !666
  %25 = getelementptr inbounds %struct.btnode* %btn.0, i64 0, i32 3, i64 2, !llfi_index !667
  %26 = load i64* %25, align 8, !llfi_index !668
  %27 = getelementptr inbounds %struct.btnode* %btn.0, i64 0, i32 2, !llfi_index !669
  %28 = load i64* %27, align 8, !llfi_index !670
  %29 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([66 x i8]* @.str15, i64 0, i64 0), i64 %22, i64 %24, i64 %26, i64 %18, i64 %28) #10, !llfi_index !671
  tail call void @exit(i32 -1) #11, !llfi_index !672
  unreachable, !llfi_index !673

; <label>:30                                      ; preds = %.critedge
  %31 = getelementptr inbounds %struct.btnode* %btn.0, i64 0, i32 3, i64 %18, !llfi_index !674
  %32 = load i64* %31, align 8, !llfi_index !675
  %33 = sdiv i64 %32, 2, !llfi_index !676
  %34 = getelementptr inbounds [3 x i64]* %ijk, i64 0, i64 %18, !llfi_index !677
  %35 = load i64* %34, align 8, !llfi_index !678
  %36 = icmp slt i64 %35, %33, !llfi_index !679
  br i1 %36, label %39, label %37, !llfi_index !680

; <label>:37                                      ; preds = %30
  %38 = sub nsw i64 %35, %33, !llfi_index !681
  store i64 %38, i64* %34, align 8, !llfi_index !682
  br label %39, !llfi_index !683

; <label>:39                                      ; preds = %37, %30
  %child.0 = phi i64 [ 1, %37 ], [ 0, %30 ], !llfi_index !684
  %40 = getelementptr inbounds %struct.btnode* %btn.0, i64 0, i32 7, i64 %child.0, !llfi_index !685
  %41 = load %struct.btnode** %40, align 8, !llfi_index !686
  %42 = icmp eq %struct.btnode* %41, null, !llfi_index !687
  br i1 %42, label %43, label %.preheader, !llfi_index !688

; <label>:43                                      ; preds = %39
  store i64 0, i64* %n, align 8, !llfi_index !689
  br label %49, !llfi_index !690

; <label>:44                                      ; preds = %13
  %45 = getelementptr inbounds %struct.btnode* %btn.0, i64 0, i32 2, !llfi_index !691
  %46 = load i64* %45, align 8, !llfi_index !692
  store i64 %46, i64* %n, align 8, !llfi_index !693
  %47 = getelementptr inbounds %struct.btnode* %btn.0, i64 0, i32 0, !llfi_index !694
  %48 = load %struct.element*** %47, align 8, !llfi_index !695
  br label %49, !llfi_index !696

; <label>:49                                      ; preds = %44, %43, %5
  %.0 = phi %struct.element** [ null, %5 ], [ null, %43 ], [ %48, %44 ], !llfi_index !697
  ret %struct.element** %.0, !llfi_index !698
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #3

; Function Attrs: nounwind readnone uwtable
define void @deleteBinTree(%struct.btnode* nocapture %binTree) #4 {
  ret void, !llfi_index !699
}

; Function Attrs: nounwind uwtable
define %struct.grid* @create_grid(%struct.voxel* nocapture %v, %struct.grid* nocapture readonly %g, i64 %num_prims) #0 {
  %nprims = alloca i64, align 8, !llfi_index !700
  %1 = tail call i8* @ObjectMalloc(i64 0, i64 1), !llfi_index !701
  %2 = bitcast i8* %1 to %struct.grid*, !llfi_index !702
  %3 = load i64* @grids, align 8, !llfi_index !703
  %4 = add nsw i64 %3, 1, !llfi_index !704
  store i64 %4, i64* @grids, align 8, !llfi_index !705
  %5 = bitcast i8* %1 to i64*, !llfi_index !706
  store i64 %3, i64* %5, align 8, !llfi_index !707
  %6 = load i64* @hu_numbuckets, align 8, !llfi_index !708
  %7 = tail call i8* @ObjectMalloc(i64 2, i64 %6), !llfi_index !709
  %8 = bitcast i8* %7 to %struct.voxel**, !llfi_index !710
  %9 = getelementptr inbounds i8* %1, i64 8, !llfi_index !711
  %10 = bitcast i8* %9 to %struct.voxel***, !llfi_index !712
  store %struct.voxel** %8, %struct.voxel*** %10, align 8, !llfi_index !713
  %11 = load i64* @hu_gridsize, align 8, !llfi_index !714
  %12 = mul nsw i64 %11, %11, !llfi_index !715
  %13 = mul nsw i64 %12, %11, !llfi_index !716
  %14 = sitofp i64 %13 to double, !llfi_index !717
  %15 = load i64* @total_cells, align 8, !llfi_index !718
  %16 = sitofp i64 %15 to double, !llfi_index !719
  %17 = fadd double %16, %14, !llfi_index !720
  %18 = fptosi double %17 to i64, !llfi_index !721
  store i64 %18, i64* @total_cells, align 8, !llfi_index !722
  %19 = fptosi double %14 to i64, !llfi_index !723
  %20 = tail call i8* @ObjectMalloc(i64 3, i64 %19), !llfi_index !724
  %21 = bitcast i8* %20 to i64*, !llfi_index !725
  %22 = getelementptr inbounds i8* %1, i64 16, !llfi_index !726
  %23 = bitcast i8* %22 to i64**, !llfi_index !727
  store i64* %21, i64** %23, align 8, !llfi_index !728
  %24 = getelementptr inbounds i8* %1, i64 32, !llfi_index !729
  %25 = bitcast i8* %24 to i64*, !llfi_index !730
  store i64 %num_prims, i64* %25, align 8, !llfi_index !731
  %26 = getelementptr inbounds %struct.voxel* %v, i64 0, i32 3, !llfi_index !732
  %27 = load i8** %26, align 8, !llfi_index !733
  %28 = bitcast i8* %27 to %struct.element**, !llfi_index !734
  %29 = getelementptr inbounds i8* %1, i64 24, !llfi_index !735
  %30 = bitcast i8* %29 to %struct.element***, !llfi_index !736
  store %struct.element** %28, %struct.element*** %30, align 8, !llfi_index !737
  %31 = getelementptr inbounds i8* %1, i64 40, !llfi_index !738
  %32 = bitcast i8* %31 to i64*, !llfi_index !739
  store i64 1, i64* %32, align 8, !llfi_index !740
  %33 = load i64* @hu_gridsize, align 8, !llfi_index !741
  %34 = getelementptr inbounds i8* %1, i64 48, !llfi_index !742
  %35 = bitcast i8* %34 to i64*, !llfi_index !743
  store i64 %33, i64* %35, align 8, !llfi_index !744
  %36 = load i64* @hu_gridsize, align 8, !llfi_index !745
  %37 = mul nsw i64 %36, %36, !llfi_index !746
  %38 = getelementptr inbounds i8* %1, i64 56, !llfi_index !747
  %39 = bitcast i8* %38 to i64*, !llfi_index !748
  store i64 %37, i64* %39, align 8, !llfi_index !749
  %40 = load i64* @hu_numbuckets, align 8, !llfi_index !750
  %41 = getelementptr inbounds i8* %1, i64 64, !llfi_index !751
  %42 = bitcast i8* %41 to i64*, !llfi_index !752
  store i64 %40, i64* %42, align 8, !llfi_index !753
  %43 = getelementptr inbounds %struct.voxel* %v, i64 0, i32 0, !llfi_index !754
  %44 = load i64* %43, align 8, !llfi_index !755
  %45 = getelementptr inbounds %struct.grid* %g, i64 0, i32 5, i64 2, !llfi_index !756
  %46 = load i64* %45, align 8, !llfi_index !757
  %47 = sdiv i64 %44, %46, !llfi_index !758
  %48 = mul nsw i64 %47, %46, !llfi_index !759
  %49 = sub nsw i64 %44, %48, !llfi_index !760
  %50 = getelementptr inbounds %struct.grid* %g, i64 0, i32 5, i64 1, !llfi_index !761
  %51 = load i64* %50, align 8, !llfi_index !762
  %52 = sdiv i64 %49, %51, !llfi_index !763
  %53 = mul nsw i64 %52, %51, !llfi_index !764
  %54 = sub nsw i64 %49, %53, !llfi_index !765
  %55 = getelementptr inbounds %struct.grid* %g, i64 0, i32 7, i64 0, !llfi_index !766
  %56 = load double* %55, align 8, !llfi_index !767
  %57 = sitofp i64 %54 to double, !llfi_index !768
  %58 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 0, !llfi_index !769
  %59 = load double* %58, align 8, !llfi_index !770
  %60 = fmul double %59, %57, !llfi_index !771
  %61 = fadd double %56, %60, !llfi_index !772
  %62 = getelementptr inbounds i8* %1, i64 72, !llfi_index !773
  %63 = bitcast i8* %62 to double*, !llfi_index !774
  store double %61, double* %63, align 8, !llfi_index !775
  %64 = getelementptr inbounds %struct.grid* %g, i64 0, i32 7, i64 1, !llfi_index !776
  %65 = load double* %64, align 8, !llfi_index !777
  %66 = sitofp i64 %52 to double, !llfi_index !778
  %67 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 1, !llfi_index !779
  %68 = load double* %67, align 8, !llfi_index !780
  %69 = fmul double %66, %68, !llfi_index !781
  %70 = fadd double %65, %69, !llfi_index !782
  %71 = getelementptr inbounds i8* %1, i64 80, !llfi_index !783
  %72 = bitcast i8* %71 to double*, !llfi_index !784
  store double %70, double* %72, align 8, !llfi_index !785
  %73 = getelementptr inbounds %struct.grid* %g, i64 0, i32 7, i64 2, !llfi_index !786
  %74 = load double* %73, align 8, !llfi_index !787
  %75 = sitofp i64 %47 to double, !llfi_index !788
  %76 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 2, !llfi_index !789
  %77 = load double* %76, align 8, !llfi_index !790
  %78 = fmul double %75, %77, !llfi_index !791
  %79 = fadd double %74, %78, !llfi_index !792
  %80 = getelementptr inbounds i8* %1, i64 88, !llfi_index !793
  %81 = bitcast i8* %80 to double*, !llfi_index !794
  store double %79, double* %81, align 8, !llfi_index !795
  %82 = load double* %58, align 8, !llfi_index !796
  %83 = load i64* %35, align 8, !llfi_index !797
  %84 = sitofp i64 %83 to double, !llfi_index !798
  %85 = fdiv double %82, %84, !llfi_index !799
  %86 = getelementptr inbounds i8* %1, i64 96, !llfi_index !800
  %87 = bitcast i8* %86 to double*, !llfi_index !801
  store double %85, double* %87, align 8, !llfi_index !802
  %88 = load double* %67, align 8, !llfi_index !803
  %89 = load i64* %35, align 8, !llfi_index !804
  %90 = sitofp i64 %89 to double, !llfi_index !805
  %91 = fdiv double %88, %90, !llfi_index !806
  %92 = getelementptr inbounds i8* %1, i64 104, !llfi_index !807
  %93 = bitcast i8* %92 to double*, !llfi_index !808
  store double %91, double* %93, align 8, !llfi_index !809
  %94 = load double* %76, align 8, !llfi_index !810
  %95 = load i64* %35, align 8, !llfi_index !811
  %96 = sitofp i64 %95 to double, !llfi_index !812
  %97 = fdiv double %94, %96, !llfi_index !813
  %98 = getelementptr inbounds i8* %1, i64 112, !llfi_index !814
  %99 = bitcast i8* %98 to double*, !llfi_index !815
  store double %97, double* %99, align 8, !llfi_index !816
  %100 = getelementptr inbounds %struct.grid* %g, i64 0, i32 9, !llfi_index !817
  %101 = load i64* %100, align 8, !llfi_index !818
  %102 = add nsw i64 %101, 1, !llfi_index !819
  %103 = getelementptr inbounds i8* %1, i64 120, !llfi_index !820
  %104 = bitcast i8* %103 to i64*, !llfi_index !821
  store i64 %102, i64* %104, align 8, !llfi_index !822
  %105 = load %struct.grid** @gridlist, align 8, !llfi_index !823
  %106 = getelementptr inbounds i8* %1, i64 136, !llfi_index !824
  %107 = bitcast i8* %106 to %struct.grid**, !llfi_index !825
  store %struct.grid* %105, %struct.grid** %107, align 8, !llfi_index !826
  store %struct.grid* %2, %struct.grid** @gridlist, align 8, !llfi_index !827
  %108 = tail call %struct.btnode* @init_bintree(%struct.grid* %2), !llfi_index !828
  tail call void @create_bintree(%struct.btnode* %108, %struct.grid* %2), !llfi_index !829
  %109 = load i64* @hu_gridsize, align 8, !llfi_index !830
  %110 = icmp sgt i64 %109, 0, !llfi_index !831
  br i1 %110, label %.preheader3.preheader, label %._crit_edge10, !llfi_index !832

.preheader3.preheader:                            ; preds = %0
  %111 = mul i64 %109, %109, !llfi_index !833
  br label %.preheader3, !llfi_index !834

.preheader3:                                      ; preds = %._crit_edge6, %.preheader3.preheader
  %k.09 = phi i64 [ %152, %._crit_edge6 ], [ 0, %.preheader3.preheader ], !llfi_index !835
  %index1D.08 = phi i64 [ %151, %._crit_edge6 ], [ 0, %.preheader3.preheader ], !llfi_index !836
  br label %.preheader, !llfi_index !837

.preheader:                                       ; preds = %._crit_edge, %.preheader3
  %j.05 = phi i64 [ %150, %._crit_edge ], [ 0, %.preheader3 ], !llfi_index !838
  %index1D.14 = phi i64 [ %149, %._crit_edge ], [ %index1D.08, %.preheader3 ], !llfi_index !839
  br label %.lr.ph, !llfi_index !840

.lr.ph:                                           ; preds = %146, %.preheader
  %i.02 = phi i64 [ %148, %146 ], [ 0, %.preheader ], !llfi_index !841
  %index1D.21 = phi i64 [ %147, %146 ], [ %index1D.14, %.preheader ], !llfi_index !842
  %112 = call %struct.element** @bintree_lookup(%struct.btnode* %108, i64 %i.02, i64 %j.05, i64 %k.09, %struct.grid* undef, i64* %nprims), !llfi_index !843
  %113 = icmp eq %struct.element** %112, null, !llfi_index !844
  br i1 %113, label %143, label %114, !llfi_index !845

; <label>:114                                     ; preds = %.lr.ph
  %115 = load i64* @nonempty_voxels, align 8, !llfi_index !846
  %116 = add nsw i64 %115, 1, !llfi_index !847
  store i64 %116, i64* @nonempty_voxels, align 8, !llfi_index !848
  tail call void @mark_nonempty(i64 %index1D.21, %struct.grid* %2), !llfi_index !849
  %117 = tail call i8* @ObjectMalloc(i64 1, i64 1), !llfi_index !850
  %118 = bitcast i8* %117 to %struct.voxel*, !llfi_index !851
  %119 = bitcast i8* %117 to i64*, !llfi_index !852
  store i64 %index1D.21, i64* %119, align 8, !llfi_index !853
  %120 = getelementptr inbounds i8* %117, i64 32, !llfi_index !854
  store i8 2, i8* %120, align 1, !llfi_index !855
  %121 = bitcast %struct.element** %112 to i8*, !llfi_index !856
  %122 = getelementptr inbounds i8* %117, i64 24, !llfi_index !857
  %123 = bitcast i8* %122 to i8**, !llfi_index !858
  store i8* %121, i8** %123, align 8, !llfi_index !859
  %124 = load i64* %nprims, align 8, !llfi_index !860
  %125 = getelementptr inbounds i8* %117, i64 8, !llfi_index !861
  %126 = bitcast i8* %125 to i64*, !llfi_index !862
  store i64 %124, i64* %126, align 8, !llfi_index !863
  %127 = load i64* %nprims, align 8, !llfi_index !864
  %128 = load i64* @hu_max_prims_cell, align 8, !llfi_index !865
  %129 = icmp sgt i64 %127, %128, !llfi_index !866
  br i1 %129, label %130, label %136, !llfi_index !867

; <label>:130                                     ; preds = %114
  %131 = load i64* %104, align 8, !llfi_index !868
  %132 = load i64* @hu_max_subdiv_level, align 8, !llfi_index !869
  %133 = icmp slt i64 %131, %132, !llfi_index !870
  br i1 %133, label %134, label %136, !llfi_index !871

; <label>:134                                     ; preds = %130
  %135 = tail call %struct.grid* @create_grid(%struct.voxel* %118, %struct.grid* %2, i64 %127), !llfi_index !872
  br label %142, !llfi_index !873

; <label>:136                                     ; preds = %130, %114
  %137 = load i64* @nonempty_leafs, align 8, !llfi_index !874
  %138 = add nsw i64 %137, 1, !llfi_index !875
  store i64 %138, i64* @nonempty_leafs, align 8, !llfi_index !876
  %139 = load i64* %nprims, align 8, !llfi_index !877
  %140 = load i64* @prims_in_leafs, align 8, !llfi_index !878
  %141 = add nsw i64 %140, %139, !llfi_index !879
  store i64 %141, i64* @prims_in_leafs, align 8, !llfi_index !880
  br label %142, !llfi_index !881

; <label>:142                                     ; preds = %136, %134
  tail call void @insert_in_hashtable(%struct.voxel* %118, %struct.grid* %2), !llfi_index !882
  br label %146, !llfi_index !883

; <label>:143                                     ; preds = %.lr.ph
  %144 = load i64* @empty_voxels, align 8, !llfi_index !884
  %145 = add nsw i64 %144, 1, !llfi_index !885
  store i64 %145, i64* @empty_voxels, align 8, !llfi_index !886
  tail call void @mark_empty(i64 %index1D.21, %struct.grid* %2), !llfi_index !887
  br label %146, !llfi_index !888

; <label>:146                                     ; preds = %143, %142
  %147 = add nsw i64 %index1D.21, 1, !llfi_index !889
  %148 = add nsw i64 %i.02, 1, !llfi_index !890
  %exitcond = icmp eq i64 %148, %109, !llfi_index !891
  br i1 %exitcond, label %._crit_edge, label %.lr.ph, !llfi_index !892

._crit_edge:                                      ; preds = %146
  %149 = add i64 %index1D.14, %109, !llfi_index !893
  %150 = add nsw i64 %j.05, 1, !llfi_index !894
  %exitcond11 = icmp eq i64 %150, %109, !llfi_index !895
  br i1 %exitcond11, label %._crit_edge6, label %.preheader, !llfi_index !896

._crit_edge6:                                     ; preds = %._crit_edge
  %151 = add i64 %111, %index1D.08, !llfi_index !897
  %152 = add nsw i64 %k.09, 1, !llfi_index !898
  %exitcond12 = icmp eq i64 %152, %109, !llfi_index !899
  br i1 %exitcond12, label %._crit_edge10, label %.preheader3, !llfi_index !900

._crit_edge10:                                    ; preds = %._crit_edge6, %0
  store i8* %1, i8** %26, align 8, !llfi_index !901
  %153 = getelementptr inbounds %struct.voxel* %v, i64 0, i32 1, !llfi_index !902
  store i64 -1, i64* %153, align 8, !llfi_index !903
  %154 = getelementptr inbounds %struct.voxel* %v, i64 0, i32 4, !llfi_index !904
  store i8 3, i8* %154, align 1, !llfi_index !905
  ret %struct.grid* %2, !llfi_index !906
}

; Function Attrs: nounwind uwtable
define void @PrintEnv() #0 {
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([14 x i8]* @str2, i64 0, i64 0)), !llfi_index !907
  %1 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 0), align 8, !llfi_index !908
  %2 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 1), align 8, !llfi_index !909
  %3 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 2), align 8, !llfi_index !910
  %4 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str43, i64 0, i64 0), double %1, double %2, double %3) #2, !llfi_index !911
  %5 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 1, i64 0), align 8, !llfi_index !912
  %6 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 1, i64 1), align 8, !llfi_index !913
  %7 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 1, i64 2), align 8, !llfi_index !914
  %8 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str44, i64 0, i64 0), double %5, double %6, double %7) #2, !llfi_index !915
  %9 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 5, i64 0), align 8, !llfi_index !916
  %10 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 5, i64 1), align 8, !llfi_index !917
  %11 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 5, i64 2), align 8, !llfi_index !918
  %12 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str45, i64 0, i64 0), double %9, double %10, double %11) #2, !llfi_index !919
  %13 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 7), align 8, !llfi_index !920
  %14 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str46, i64 0, i64 0), double %13) #2, !llfi_index !921
  %15 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 8, i64 0), align 8, !llfi_index !922
  %16 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 8, i64 1), align 8, !llfi_index !923
  %17 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 8, i64 2), align 8, !llfi_index !924
  %18 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str47, i64 0, i64 0), double %15, double %16, double %17) #2, !llfi_index !925
  %puts1 = tail call i32 @puts(i8* getelementptr inbounds ([9 x i8]* @str3, i64 0, i64 0)), !llfi_index !926
  %19 = load i64* @nlights, align 8, !llfi_index !927
  %20 = icmp sgt i64 %19, 0, !llfi_index !928
  br i1 %20, label %.lr.ph, label %._crit_edge, !llfi_index !929

.lr.ph:                                           ; preds = %.lr.ph, %0
  %lp.08.in = phi %struct.light** [ %38, %.lr.ph ], [ @lights, %0 ], !llfi_index !930
  %i.07 = phi i64 [ %39, %.lr.ph ], [ 0, %0 ], !llfi_index !931
  %lp.08 = load %struct.light** %lp.08.in, align 8, !llfi_index !932
  %21 = getelementptr inbounds %struct.light* %lp.08, i64 0, i32 0, i64 0, !llfi_index !933
  %22 = load double* %21, align 8, !llfi_index !934
  %23 = getelementptr inbounds %struct.light* %lp.08, i64 0, i32 0, i64 1, !llfi_index !935
  %24 = load double* %23, align 8, !llfi_index !936
  %25 = getelementptr inbounds %struct.light* %lp.08, i64 0, i32 0, i64 2, !llfi_index !937
  %26 = load double* %25, align 8, !llfi_index !938
  %27 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([23 x i8]* @.str49, i64 0, i64 0), i64 %i.07, double %22, double %24, double %26) #2, !llfi_index !939
  %28 = getelementptr inbounds %struct.light* %lp.08, i64 0, i32 1, i64 0, !llfi_index !940
  %29 = load double* %28, align 8, !llfi_index !941
  %30 = getelementptr inbounds %struct.light* %lp.08, i64 0, i32 1, i64 1, !llfi_index !942
  %31 = load double* %30, align 8, !llfi_index !943
  %32 = getelementptr inbounds %struct.light* %lp.08, i64 0, i32 1, i64 2, !llfi_index !944
  %33 = load double* %32, align 8, !llfi_index !945
  %34 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str50, i64 0, i64 0), double %29, double %31, double %33) #2, !llfi_index !946
  %35 = getelementptr inbounds %struct.light* %lp.08, i64 0, i32 2, !llfi_index !947
  %36 = load i64* %35, align 8, !llfi_index !948
  %37 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str51, i64 0, i64 0), i64 %36) #2, !llfi_index !949
  %38 = getelementptr inbounds %struct.light* %lp.08, i64 0, i32 3, !llfi_index !950
  %39 = add nsw i64 %i.07, 1, !llfi_index !951
  %40 = load i64* @nlights, align 8, !llfi_index !952
  %41 = icmp slt i64 %39, %40, !llfi_index !953
  br i1 %41, label %.lr.ph, label %._crit_edge, !llfi_index !954

._crit_edge:                                      ; preds = %.lr.ph, %0
  %putchar = tail call i32 @putchar(i32 10) #2, !llfi_index !955
  %puts2 = tail call i32 @puts(i8* getelementptr inbounds ([9 x i8]* @str4, i64 0, i64 0)), !llfi_index !956
  %42 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str54, i64 0, i64 0)) #2, !llfi_index !957
  %43 = load i64* @TraversalType, align 8, !llfi_index !958
  switch i64 %43, label %56 [
    i64 0, label %44
    i64 1, label %45
  ], !llfi_index !959

; <label>:44                                      ; preds = %._crit_edge
  %puts5 = tail call i32 @puts(i8* getelementptr inbounds ([5 x i8]* @str6, i64 0, i64 0)), !llfi_index !960
  br label %56, !llfi_index !961

; <label>:45                                      ; preds = %._crit_edge
  %puts3 = tail call i32 @puts(i8* getelementptr inbounds ([23 x i8]* @str5, i64 0, i64 0)), !llfi_index !962
  %46 = load i64* @hu_gridsize, align 8, !llfi_index !963
  %47 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str57, i64 0, i64 0), i64 %46) #2, !llfi_index !964
  %48 = load i64* @hu_max_prims_cell, align 8, !llfi_index !965
  %49 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str58, i64 0, i64 0), i64 %48) #2, !llfi_index !966
  %50 = load i64* @hu_max_subdiv_level, align 8, !llfi_index !967
  %51 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str59, i64 0, i64 0), i64 %50) #2, !llfi_index !968
  %52 = load i64* @hu_numbuckets, align 8, !llfi_index !969
  %53 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str60, i64 0, i64 0), i64 %52) #2, !llfi_index !970
  %54 = load i64* @hu_lazy, align 8, !llfi_index !971
  %55 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str61, i64 0, i64 0), i64 %54) #2, !llfi_index !972
  br label %56, !llfi_index !973

; <label>:56                                      ; preds = %45, %44, %._crit_edge
  %57 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str62, i64 0, i64 0)) #2, !llfi_index !974
  %58 = load i64* @ModelNorm, align 8, !llfi_index !975
  %59 = icmp ne i64 %58, 0, !llfi_index !976
  %60 = select i1 %59, i8* getelementptr inbounds ([5 x i8]* @.str63, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str64, i64 0, i64 0), !llfi_index !977
  %61 = tail call i32 (i8*, ...)* @printf(i8* %60) #2, !llfi_index !978
  %62 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str65, i64 0, i64 0)) #2, !llfi_index !979
  %63 = load i64* getelementptr inbounds (%struct.view* @View, i64 0, i32 6), align 8, !llfi_index !980
  %64 = icmp eq i64 %63, 0, !llfi_index !981
  %65 = select i1 %64, i8* getelementptr inbounds ([13 x i8]* @.str66, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str67, i64 0, i64 0), !llfi_index !982
  %66 = tail call i32 (i8*, ...)* @printf(i8* %65) #2, !llfi_index !983
  %67 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str68, i64 0, i64 0)) #2, !llfi_index !984
  %68 = load i64* getelementptr inbounds (%struct.view* @View, i64 0, i32 9), align 8, !llfi_index !985
  %69 = icmp ne i64 %68, 0, !llfi_index !986
  %70 = select i1 %69, i8* getelementptr inbounds ([4 x i8]* @.str69, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str70, i64 0, i64 0), !llfi_index !987
  %71 = tail call i32 (i8*, ...)* @printf(i8* %70) #2, !llfi_index !988
  %72 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str71, i64 0, i64 0)) #2, !llfi_index !989
  %73 = load i64* getelementptr inbounds (%struct.view* @View, i64 0, i32 10), align 8, !llfi_index !990
  %74 = icmp ne i64 %73, 0, !llfi_index !991
  %75 = select i1 %74, i8* getelementptr inbounds ([4 x i8]* @.str69, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str70, i64 0, i64 0), !llfi_index !992
  %76 = tail call i32 (i8*, ...)* @printf(i8* %75) #2, !llfi_index !993
  %77 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), align 8, !llfi_index !994
  %78 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 6), align 8, !llfi_index !995
  %79 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str72, i64 0, i64 0), i64 %77, i64 %78) #2, !llfi_index !996
  %80 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 8), align 8, !llfi_index !997
  %81 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([23 x i8]* @.str73, i64 0, i64 0), double %80) #2, !llfi_index !998
  %82 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 1), align 8, !llfi_index !999
  %83 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([33 x i8]* @.str74, i64 0, i64 0), i64 %82) #2, !llfi_index !1000
  %84 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 4), align 8, !llfi_index !1001
  %85 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([23 x i8]* @.str75, i64 0, i64 0), double %84) #2, !llfi_index !1002
  %86 = load i64* @bundlex, align 8, !llfi_index !1003
  %87 = load i64* @bundley, align 8, !llfi_index !1004
  %88 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str76, i64 0, i64 0), i64 %86, i64 %87) #2, !llfi_index !1005
  %89 = load i64* @blockx, align 8, !llfi_index !1006
  %90 = load i64* @blocky, align 8, !llfi_index !1007
  %91 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str77, i64 0, i64 0), i64 %89, i64 %90) #2, !llfi_index !1008
  %92 = load i64* @GeoFile, align 8, !llfi_index !1009
  %93 = icmp eq i64 %92, 0, !llfi_index !1010
  br i1 %93, label %96, label %94, !llfi_index !1011

; <label>:94                                      ; preds = %56
  %95 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str78, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8]* @GeoFileName, i64 0, i64 0)) #2, !llfi_index !1012
  br label %96, !llfi_index !1013

; <label>:96                                      ; preds = %94, %56
  %97 = load i64* @PicFile, align 8, !llfi_index !1014
  %98 = icmp eq i64 %97, 0, !llfi_index !1015
  br i1 %98, label %101, label %99, !llfi_index !1016

; <label>:99                                      ; preds = %96
  %100 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str79, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8]* @PicFileName, i64 0, i64 0)) #2, !llfi_index !1017
  br label %101, !llfi_index !1018

; <label>:101                                     ; preds = %99, %96
  %putchar4 = tail call i32 @putchar(i32 10) #2, !llfi_index !1019
  ret void, !llfi_index !1020
}

; Function Attrs: nounwind uwtable
define void @InitEnv() #0 {
  store double 5.000000e-01, double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 0), align 8, !llfi_index !1021
  store double 5.000000e-01, double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 1), align 8, !llfi_index !1022
  store double -1.500000e+00, double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 2), align 8, !llfi_index !1023
  store double 5.000000e-01, double* getelementptr inbounds (%struct.view* @View, i64 0, i32 1, i64 0), align 8, !llfi_index !1024
  store double 5.000000e-01, double* getelementptr inbounds (%struct.view* @View, i64 0, i32 1, i64 1), align 8, !llfi_index !1025
  store double 5.000000e-01, double* getelementptr inbounds (%struct.view* @View, i64 0, i32 1, i64 2), align 8, !llfi_index !1026
  tail call void @llvm.memset.p0i8.i64(i8* bitcast (double* getelementptr inbounds (%struct.view* @View, i64 0, i32 5, i64 0) to i8*), i8 0, i64 16, i32 8, i1 false), !llfi_index !1027
  store double 8.000000e-01, double* getelementptr inbounds (%struct.view* @View, i64 0, i32 5, i64 2), align 8, !llfi_index !1028
  store double 6.000000e+01, double* getelementptr inbounds (%struct.view* @View, i64 0, i32 7), align 8, !llfi_index !1029
  store double 1.000000e-01, double* getelementptr inbounds (%struct.view* @View, i64 0, i32 8, i64 0), align 8, !llfi_index !1030
  store double 1.000000e-01, double* getelementptr inbounds (%struct.view* @View, i64 0, i32 8, i64 1), align 8, !llfi_index !1031
  store double 1.000000e-01, double* getelementptr inbounds (%struct.view* @View, i64 0, i32 8, i64 2), align 8, !llfi_index !1032
  store i64 1, i64* getelementptr inbounds (%struct.view* @View, i64 0, i32 9), align 8, !llfi_index !1033
  store i64 1, i64* getelementptr inbounds (%struct.view* @View, i64 0, i32 10), align 8, !llfi_index !1034
  store i64 0, i64* getelementptr inbounds (%struct.view* @View, i64 0, i32 6), align 8, !llfi_index !1035
  store i64 100, i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), align 8, !llfi_index !1036
  store i64 100, i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 6), align 8, !llfi_index !1037
  store i64 10000, i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 7), align 8, !llfi_index !1038
  store i64 5, i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 0), align 8, !llfi_index !1039
  store i64 0, i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 1), align 8, !llfi_index !1040
  store double 2.000000e-02, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 4), align 8, !llfi_index !1041
  store i64 8, i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 2), align 8, !llfi_index !1042
  store i64 8, i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 3), align 8, !llfi_index !1043
  store double 1.000000e-03, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 8), align 8, !llfi_index !1044
  store double 1.645000e+02, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 9), align 8, !llfi_index !1045
  store double 1.900000e+02, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 10), align 8, !llfi_index !1046
  store double 1.900000e+02, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 11), align 8, !llfi_index !1047
  %1 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 10), align 8, !llfi_index !1048
  %2 = fmul double %1, 5.000000e-01, !llfi_index !1049
  store double %2, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 12), align 8, !llfi_index !1050
  %3 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 11), align 8, !llfi_index !1051
  %4 = fmul double %3, 5.000000e-01, !llfi_index !1052
  store double %4, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 13), align 8, !llfi_index !1053
  %5 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 10), align 8, !llfi_index !1054
  %6 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), align 8, !llfi_index !1055
  %7 = sitofp i64 %6 to double, !llfi_index !1056
  %8 = fdiv double %5, %7, !llfi_index !1057
  store double %8, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 14), align 8, !llfi_index !1058
  %9 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 11), align 8, !llfi_index !1059
  %10 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 6), align 8, !llfi_index !1060
  %11 = sitofp i64 %10 to double, !llfi_index !1061
  %12 = fdiv double %9, %11, !llfi_index !1062
  store double %12, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 15), align 8, !llfi_index !1063
  tail call void @MatrixIdentity([4 x double]* getelementptr inbounds (%struct.view* @View, i64 0, i32 2, i64 0)), !llfi_index !1064
  tail call void @MatrixIdentity([4 x double]* getelementptr inbounds (%struct.view* @View, i64 0, i32 4, i64 0)), !llfi_index !1065
  store i64 0, i64* @GeoFile, align 8, !llfi_index !1066
  store i64 0, i64* @PicFile, align 8, !llfi_index !1067
  store i64 1, i64* @ModelNorm, align 8, !llfi_index !1068
  store i64 0, i64* @ModelTransform, align 8, !llfi_index !1069
  store i64 0, i64* @DataType, align 8, !llfi_index !1070
  store i64 0, i64* @TraversalType, align 8, !llfi_index !1071
  %13 = tail call i8* @GlobalMalloc(i64 72, i8* getelementptr inbounds ([6 x i8]* @.str80, i64 0, i64 0)), !llfi_index !1072
  %14 = bitcast i8* %13 to %struct.light*, !llfi_index !1073
  store %struct.light* %14, %struct.light** @lights, align 8, !llfi_index !1074
  store i64 25, i64* @bundlex, align 8, !llfi_index !1075
  store i64 25, i64* @bundley, align 8, !llfi_index !1076
  store i64 2, i64* @blockx, align 8, !llfi_index !1077
  store i64 2, i64* @blocky, align 8, !llfi_index !1078
  ret void, !llfi_index !1079
}

; Function Attrs: nounwind uwtable
define void @InitLights() #0 {
  store i64 1, i64* @nlights, align 8, !llfi_index !1080
  %1 = load %struct.light** @lights, align 8, !llfi_index !1081
  %2 = getelementptr inbounds %struct.light* %1, i64 0, i32 0, i64 0, !llfi_index !1082
  store double 0.000000e+00, double* %2, align 8, !llfi_index !1083
  %3 = load %struct.light** @lights, align 8, !llfi_index !1084
  %4 = getelementptr inbounds %struct.light* %3, i64 0, i32 0, i64 1, !llfi_index !1085
  store double 0.000000e+00, double* %4, align 8, !llfi_index !1086
  %5 = load %struct.light** @lights, align 8, !llfi_index !1087
  %6 = getelementptr inbounds %struct.light* %5, i64 0, i32 0, i64 2, !llfi_index !1088
  store double -2.000000e+03, double* %6, align 8, !llfi_index !1089
  %7 = load %struct.light** @lights, align 8, !llfi_index !1090
  %8 = getelementptr inbounds %struct.light* %7, i64 0, i32 0, i64 3, !llfi_index !1091
  store double 1.000000e+00, double* %8, align 8, !llfi_index !1092
  %9 = load %struct.light** @lights, align 8, !llfi_index !1093
  %10 = getelementptr inbounds %struct.light* %9, i64 0, i32 1, i64 0, !llfi_index !1094
  store double 1.000000e+00, double* %10, align 8, !llfi_index !1095
  %11 = load %struct.light** @lights, align 8, !llfi_index !1096
  %12 = getelementptr inbounds %struct.light* %11, i64 0, i32 1, i64 1, !llfi_index !1097
  store double 1.000000e+00, double* %12, align 8, !llfi_index !1098
  %13 = load %struct.light** @lights, align 8, !llfi_index !1099
  %14 = getelementptr inbounds %struct.light* %13, i64 0, i32 1, i64 2, !llfi_index !1100
  store double 1.000000e+00, double* %14, align 8, !llfi_index !1101
  %15 = load %struct.light** @lights, align 8, !llfi_index !1102
  %16 = getelementptr inbounds %struct.light* %15, i64 0, i32 2, !llfi_index !1103
  store i64 1, i64* %16, align 8, !llfi_index !1104
  %17 = load %struct.light** @lights, align 8, !llfi_index !1105
  %18 = getelementptr inbounds %struct.light* %17, i64 0, i32 3, !llfi_index !1106
  store %struct.light* null, %struct.light** %18, align 8, !llfi_index !1107
  ret void, !llfi_index !1108
}

; Function Attrs: nounwind uwtable
define void @InitDisplay() #0 {
  %1 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), align 8, !llfi_index !1109
  %2 = sitofp i64 %1 to double, !llfi_index !1110
  %3 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 6), align 8, !llfi_index !1111
  %4 = sitofp i64 %3 to double, !llfi_index !1112
  %5 = fdiv double %2, %4, !llfi_index !1113
  %6 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 7), align 8, !llfi_index !1114
  %7 = fmul double %6, 5.000000e-01, !llfi_index !1115
  %8 = fmul double %7, 1.750000e-02, !llfi_index !1116
  %9 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 11), align 8, !llfi_index !1117
  %10 = fmul double %5, %9, !llfi_index !1118
  store double %10, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 10), align 8, !llfi_index !1119
  %11 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 11), align 8, !llfi_index !1120
  %12 = fmul double %11, 5.000000e-01, !llfi_index !1121
  %13 = tail call double @tan(double %8) #2, !llfi_index !1122
  %14 = fdiv double %12, %13, !llfi_index !1123
  store double %14, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 9), align 8, !llfi_index !1124
  %15 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 10), align 8, !llfi_index !1125
  %16 = fmul double %15, 5.000000e-01, !llfi_index !1126
  store double %16, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 12), align 8, !llfi_index !1127
  %17 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 11), align 8, !llfi_index !1128
  %18 = fmul double %17, 5.000000e-01, !llfi_index !1129
  store double %18, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 13), align 8, !llfi_index !1130
  %19 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 10), align 8, !llfi_index !1131
  %20 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), align 8, !llfi_index !1132
  %21 = sitofp i64 %20 to double, !llfi_index !1133
  %22 = fdiv double %19, %21, !llfi_index !1134
  store double %22, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 14), align 8, !llfi_index !1135
  %23 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 11), align 8, !llfi_index !1136
  %24 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 6), align 8, !llfi_index !1137
  %25 = sitofp i64 %24 to double, !llfi_index !1138
  %26 = fdiv double %23, %25, !llfi_index !1139
  store double %26, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 15), align 8, !llfi_index !1140
  ret void, !llfi_index !1141
}

; Function Attrs: nounwind
declare double @tan(double) #1

; Function Attrs: nounwind uwtable
define i64 @VerifyColorRange(double* nocapture readonly %c) #0 {
  %1 = load double* %c, align 8, !llfi_index !1142
  %2 = fcmp olt double %1, 0.000000e+00, !llfi_index !1143
  %3 = fcmp ogt double %1, 1.000000e+00, !llfi_index !1144
  %or.cond = or i1 %2, %3, !llfi_index !1145
  br i1 %or.cond, label %14, label %4, !llfi_index !1146

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds double* %c, i64 1, !llfi_index !1147
  %6 = load double* %5, align 8, !llfi_index !1148
  %7 = fcmp olt double %6, 0.000000e+00, !llfi_index !1149
  %8 = fcmp ogt double %6, 1.000000e+00, !llfi_index !1150
  %or.cond1 = or i1 %7, %8, !llfi_index !1151
  br i1 %or.cond1, label %14, label %9, !llfi_index !1152

; <label>:9                                       ; preds = %4
  %10 = getelementptr inbounds double* %c, i64 2, !llfi_index !1153
  %11 = load double* %10, align 8, !llfi_index !1154
  %12 = fcmp olt double %11, 0.000000e+00, !llfi_index !1155
  %13 = fcmp ogt double %11, 1.000000e+00, !llfi_index !1156
  %or.cond2 = or i1 %12, %13, !llfi_index !1157
  br i1 %or.cond2, label %14, label %21, !llfi_index !1158

; <label>:14                                      ; preds = %9, %4, %0
  %15 = load double* %c, align 8, !llfi_index !1159
  %16 = getelementptr inbounds double* %c, i64 1, !llfi_index !1160
  %17 = load double* %16, align 8, !llfi_index !1161
  %18 = getelementptr inbounds double* %c, i64 2, !llfi_index !1162
  %19 = load double* %18, align 8, !llfi_index !1163
  %20 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str81, i64 0, i64 0), double %15, double %17, double %19) #2, !llfi_index !1164
  br label %21, !llfi_index !1165

; <label>:21                                      ; preds = %14, %9
  %.0 = phi i64 [ 0, %14 ], [ 1, %9 ], !llfi_index !1166
  ret i64 %.0, !llfi_index !1167
}

; Function Attrs: nounwind uwtable
define void @TransformLights([4 x double]* nocapture readonly %m) #0 {
  %1 = load i64* @nlights, align 8, !llfi_index !1168
  %2 = icmp sgt i64 %1, 0, !llfi_index !1169
  br i1 %2, label %.lr.ph, label %._crit_edge, !llfi_index !1170

.lr.ph:                                           ; preds = %.lr.ph, %0
  %lp.03.in = phi %struct.light** [ %4, %.lr.ph ], [ @lights, %0 ], !llfi_index !1171
  %i.02 = phi i64 [ %5, %.lr.ph ], [ 0, %0 ], !llfi_index !1172
  %lp.03 = load %struct.light** %lp.03.in, align 8, !llfi_index !1173
  %3 = getelementptr inbounds %struct.light* %lp.03, i64 0, i32 0, i64 0, !llfi_index !1174
  tail call void @VecMatMult(double* %3, [4 x double]* %m, double* %3), !llfi_index !1175
  %4 = getelementptr inbounds %struct.light* %lp.03, i64 0, i32 3, !llfi_index !1176
  %5 = add nsw i64 %i.02, 1, !llfi_index !1177
  %6 = load i64* @nlights, align 8, !llfi_index !1178
  %7 = icmp slt i64 %5, %6, !llfi_index !1179
  br i1 %7, label %.lr.ph, label %._crit_edge, !llfi_index !1180

._crit_edge:                                      ; preds = %.lr.ph, %0
  ret void, !llfi_index !1181
}

; Function Attrs: nounwind uwtable
define void @ViewRotate([4 x double]* nocapture %M, double %x, double %y, double %z) #0 {
  %1 = fmul double %x, %x, !llfi_index !1182
  %2 = fmul double %z, %z, !llfi_index !1183
  %3 = fadd double %1, %2, !llfi_index !1184
  %4 = tail call double @sqrt(double %3) #2, !llfi_index !1185
  %5 = fcmp ogt double %4, 0.000000e+00, !llfi_index !1186
  br i1 %5, label %8, label %6, !llfi_index !1187

; <label>:6                                       ; preds = %0
  %7 = fsub double -0.000000e+00, %4, !llfi_index !1188
  br label %8, !llfi_index !1189

; <label>:8                                       ; preds = %6, %0
  %9 = phi double [ %7, %6 ], [ %4, %0 ], !llfi_index !1190
  %10 = fcmp olt double %9, 1.000000e-07, !llfi_index !1191
  br i1 %10, label %11, label %14, !llfi_index !1192

; <label>:11                                      ; preds = %8
  tail call void @MatrixIdentity([4 x double]* %M), !llfi_index !1193
  %12 = fcmp ogt double %y, 0.000000e+00, !llfi_index !1194
  %13 = select i1 %12, double 0x3FF921FB54442D18, double 0xBFF921FB54442D18, !llfi_index !1195
  tail call void @Rotate(i64 1, [4 x double]* %M, double %13), !llfi_index !1196
  br label %46, !llfi_index !1197

; <label>:14                                      ; preds = %8
  %15 = fmul double %y, %y, !llfi_index !1198
  %16 = fadd double %1, %15, !llfi_index !1199
  %17 = fadd double %16, %2, !llfi_index !1200
  %18 = tail call double @sqrt(double %17) #2, !llfi_index !1201
  %19 = fdiv double %z, %4, !llfi_index !1202
  %20 = getelementptr inbounds [4 x double]* %M, i64 0, i64 0, !llfi_index !1203
  store double %19, double* %20, align 8, !llfi_index !1204
  %21 = fsub double -0.000000e+00, %x, !llfi_index !1205
  %22 = fmul double %21, %y, !llfi_index !1206
  %23 = fmul double %4, %18, !llfi_index !1207
  %24 = fdiv double %22, %23, !llfi_index !1208
  %25 = getelementptr inbounds [4 x double]* %M, i64 0, i64 1, !llfi_index !1209
  store double %24, double* %25, align 8, !llfi_index !1210
  %26 = fdiv double %x, %18, !llfi_index !1211
  %27 = getelementptr inbounds [4 x double]* %M, i64 0, i64 2, !llfi_index !1212
  store double %26, double* %27, align 8, !llfi_index !1213
  %28 = getelementptr inbounds [4 x double]* %M, i64 0, i64 3, !llfi_index !1214
  %29 = fdiv double %4, %18, !llfi_index !1215
  %30 = getelementptr inbounds [4 x double]* %M, i64 1, i64 1, !llfi_index !1216
  %31 = bitcast double* %28 to i8*, !llfi_index !1217
  tail call void @llvm.memset.p0i8.i64(i8* %31, i8 0, i64 16, i32 8, i1 false), !llfi_index !1218
  store double %29, double* %30, align 8, !llfi_index !1219
  %32 = fdiv double %y, %18, !llfi_index !1220
  %33 = getelementptr inbounds [4 x double]* %M, i64 1, i64 2, !llfi_index !1221
  store double %32, double* %33, align 8, !llfi_index !1222
  %34 = getelementptr inbounds [4 x double]* %M, i64 1, i64 3, !llfi_index !1223
  store double 0.000000e+00, double* %34, align 8, !llfi_index !1224
  %35 = fdiv double %21, %4, !llfi_index !1225
  %36 = getelementptr inbounds [4 x double]* %M, i64 2, i64 0, !llfi_index !1226
  store double %35, double* %36, align 8, !llfi_index !1227
  %37 = fmul double %y, %z, !llfi_index !1228
  %38 = fsub double -0.000000e+00, %37, !llfi_index !1229
  %39 = fdiv double %38, %23, !llfi_index !1230
  %40 = getelementptr inbounds [4 x double]* %M, i64 2, i64 1, !llfi_index !1231
  store double %39, double* %40, align 8, !llfi_index !1232
  %41 = fdiv double %z, %18, !llfi_index !1233
  %42 = getelementptr inbounds [4 x double]* %M, i64 2, i64 2, !llfi_index !1234
  store double %41, double* %42, align 8, !llfi_index !1235
  %43 = getelementptr inbounds [4 x double]* %M, i64 2, i64 3, !llfi_index !1236
  %44 = getelementptr inbounds [4 x double]* %M, i64 3, i64 3, !llfi_index !1237
  %45 = bitcast double* %43 to i8*, !llfi_index !1238
  tail call void @llvm.memset.p0i8.i64(i8* %45, i8 0, i64 32, i32 8, i1 false), !llfi_index !1239
  store double 1.000000e+00, double* %44, align 8, !llfi_index !1240
  br label %46, !llfi_index !1241

; <label>:46                                      ; preds = %14, %11
  ret void, !llfi_index !1242
}

; Function Attrs: nounwind
declare double @sqrt(double) #1

; Function Attrs: nounwind uwtable
define void @CreateViewMatrix() #0 {
  %T = alloca [4 x [4 x double]], align 16, !llfi_index !1243
  %R = alloca [4 x [4 x double]], align 16, !llfi_index !1244
  %1 = getelementptr inbounds [4 x [4 x double]]* %T, i64 0, i64 0, !llfi_index !1245
  %2 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 0), align 8, !llfi_index !1246
  %3 = fsub double -0.000000e+00, %2, !llfi_index !1247
  %4 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 1), align 8, !llfi_index !1248
  %5 = fsub double -0.000000e+00, %4, !llfi_index !1249
  %6 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 2), align 8, !llfi_index !1250
  %7 = fsub double -0.000000e+00, %6, !llfi_index !1251
  call void @Translate([4 x double]* %1, double %3, double %5, double %7), !llfi_index !1252
  call void @MatrixMult([4 x double]* getelementptr inbounds (%struct.view* @View, i64 0, i32 2, i64 0), [4 x double]* getelementptr inbounds (%struct.view* @View, i64 0, i32 2, i64 0), [4 x double]* %1), !llfi_index !1253
  %8 = getelementptr inbounds [4 x [4 x double]]* %R, i64 0, i64 0, !llfi_index !1254
  %9 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 1, i64 0), align 8, !llfi_index !1255
  %10 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 0), align 8, !llfi_index !1256
  %11 = fsub double %9, %10, !llfi_index !1257
  %12 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 1, i64 1), align 8, !llfi_index !1258
  %13 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 1), align 8, !llfi_index !1259
  %14 = fsub double %12, %13, !llfi_index !1260
  %15 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 1, i64 2), align 8, !llfi_index !1261
  %16 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 2), align 8, !llfi_index !1262
  %17 = fsub double %15, %16, !llfi_index !1263
  call void @ViewRotate([4 x double]* %8, double %11, double %14, double %17), !llfi_index !1264
  call void @MatrixMult([4 x double]* getelementptr inbounds (%struct.view* @View, i64 0, i32 2, i64 0), [4 x double]* getelementptr inbounds (%struct.view* @View, i64 0, i32 2, i64 0), [4 x double]* %8), !llfi_index !1265
  ret void, !llfi_index !1266
}

; Function Attrs: nounwind uwtable
define void @TransformViewRay(double* nocapture %tray) #0 {
  tail call void @VecMatMult(double* %tray, [4 x double]* getelementptr inbounds (%struct.view* @View, i64 0, i32 3, i64 0), double* %tray), !llfi_index !1267
  ret void, !llfi_index !1268
}

; Function Attrs: nounwind uwtable
define void @NormalizeEnv([4 x double]* nocapture readonly %normMat) #0 {
  store double 1.000000e+00, double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 3), align 8, !llfi_index !1269
  tail call void @VecMatMult(double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 0), [4 x double]* %normMat, double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 0)), !llfi_index !1270
  store double 1.000000e+00, double* getelementptr inbounds (%struct.view* @View, i64 0, i32 1, i64 3), align 8, !llfi_index !1271
  tail call void @VecMatMult(double* getelementptr inbounds (%struct.view* @View, i64 0, i32 1, i64 0), [4 x double]* %normMat, double* getelementptr inbounds (%struct.view* @View, i64 0, i32 1, i64 0)), !llfi_index !1272
  tail call void @TransformLights([4 x double]* %normMat), !llfi_index !1273
  ret void, !llfi_index !1274
}

; Function Attrs: nounwind uwtable
define signext i8 @LookupCommand(i8* %s) #0 {
  br label %3, !llfi_index !1275

; <label>:1                                       ; preds = %3
  %2 = icmp ult i64 %8, 42, !llfi_index !1276
  br i1 %2, label %3, label %12, !llfi_index !1277

; <label>:3                                       ; preds = %1, %0
  %i.02 = phi i64 [ 0, %0 ], [ %8, %1 ], !llfi_index !1278
  %4 = getelementptr inbounds [42 x %struct.CTE]* bitcast (<{ { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] } }>* @cmdtab to [42 x %struct.CTE]*), i64 0, i64 %i.02, i32 0, !llfi_index !1279
  %5 = load i8** %4, align 16, !llfi_index !1280
  %6 = tail call i32 @strcmp(i8* %s, i8* %5) #12, !llfi_index !1281
  %7 = icmp eq i32 %6, 0, !llfi_index !1282
  %8 = add nsw i64 %i.02, 1, !llfi_index !1283
  br i1 %7, label %9, label %1, !llfi_index !1284

; <label>:9                                       ; preds = %3
  %10 = getelementptr inbounds [42 x %struct.CTE]* bitcast (<{ { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] } }>* @cmdtab to [42 x %struct.CTE]*), i64 0, i64 %i.02, i32 1, !llfi_index !1285
  %11 = load i8* %10, align 8, !llfi_index !1286
  br label %14, !llfi_index !1287

; <label>:12                                      ; preds = %1
  %13 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str82, i64 0, i64 0), i8* %s) #2, !llfi_index !1288
  br label %14, !llfi_index !1289

; <label>:14                                      ; preds = %12, %9
  %.0 = phi i8 [ %11, %9 ], [ 48, %12 ], !llfi_index !1290
  ret i8 %.0, !llfi_index !1291
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #5

; Function Attrs: nounwind uwtable
define void @ReadEnvFile(i8* %EnvFileName) #0 {
  %dummy = alloca i64, align 8, !llfi_index !1292
  %command = alloca [30 x i8], align 16, !llfi_index !1293
  %opparam = alloca [30 x i8], align 16, !llfi_index !1294
  %dummy_char = alloca [60 x i8], align 16, !llfi_index !1295
  %datafile = alloca [10 x i8], align 1, !llfi_index !1296
  %1 = call %struct._IO_FILE* @fopen(i8* %EnvFileName, i8* getelementptr inbounds ([2 x i8]* @.str83, i64 0, i64 0)) #2, !llfi_index !1297
  %2 = icmp eq %struct._IO_FILE* %1, null, !llfi_index !1298
  br i1 %2, label %3, label %5, !llfi_index !1299

; <label>:3                                       ; preds = %0
  %4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str84, i64 0, i64 0), i8* %EnvFileName) #2, !llfi_index !1300
  call void @exit(i32 -1) #11, !llfi_index !1301
  unreachable, !llfi_index !1302

; <label>:5                                       ; preds = %0
  call void @InitEnv(), !llfi_index !1303
  store i64 0, i64* @nlights, align 8, !llfi_index !1304
  %6 = getelementptr inbounds [30 x i8]* %command, i64 0, i64 0, !llfi_index !1305
  %7 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([3 x i8]* @.str85, i64 0, i64 0), i8* %6) #2, !llfi_index !1306
  %8 = icmp eq i32 %7, -1, !llfi_index !1307
  br i1 %8, label %._crit_edge, label %.lr.ph, !llfi_index !1308

.lr.ph:                                           ; preds = %5
  %9 = getelementptr inbounds [30 x i8]* %opparam, i64 0, i64 0, !llfi_index !1309
  %10 = getelementptr inbounds [60 x i8]* %dummy_char, i64 0, i64 0, !llfi_index !1310
  %11 = getelementptr inbounds [10 x i8]* %datafile, i64 0, i64 0, !llfi_index !1311
  br label %12, !llfi_index !1312

; <label>:12                                      ; preds = %.backedge, %.lr.ph
  %lastlight.096 = phi %struct.light* [ undef, %.lr.ph ], [ %lastlight.0.be, %.backedge ], !llfi_index !1313
  %lights_set.095 = phi i64 [ 0, %.lr.ph ], [ %lights_set.0.be, %.backedge ], !llfi_index !1314
  %13 = call signext i8 @LookupCommand(i8* %6), !llfi_index !1315
  %14 = sext i8 %13 to i32, !llfi_index !1316
  switch i32 %14, label %263 [
    i32 97, label %15
    i32 98, label %19
    i32 99, label %23
    i32 100, label %31
    i32 120, label %41
    i32 106, label %49
    i32 103, label %58
    i32 104, label %71
    i32 107, label %81
    i32 102, label %91
    i32 101, label %95
    i32 108, label %.preheader
    i32 109, label %144
    i32 110, label %153
    i32 105, label %163
    i32 119, label %178
    i32 113, label %193
    i32 115, label %198
    i32 51, label %203
    i32 52, label %207
    i32 53, label %211
    i32 54, label %215
    i32 55, label %223
    i32 56, label %231
    i32 64, label %235
    i32 35, label %239
    i32 36, label %243
    i32 42, label %251
    i32 43, label %255
    i32 37, label %259
  ], !llfi_index !1317

; <label>:15                                      ; preds = %12
  %16 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8]* @.str86, i64 0, i64 0), double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 0), double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 1), double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 2)) #2, !llfi_index !1318
  %17 = icmp eq i32 %16, 3, !llfi_index !1319
  br i1 %17, label %.backedge, label %18, !llfi_index !1320

; <label>:18                                      ; preds = %15
  %puts41 = call i32 @puts(i8* getelementptr inbounds ([21 x i8]* @str35, i64 0, i64 0)), !llfi_index !1321
  call void @exit(i32 -1) #11, !llfi_index !1322
  unreachable, !llfi_index !1323

; <label>:19                                      ; preds = %12
  %20 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8]* @.str86, i64 0, i64 0), double* getelementptr inbounds (%struct.view* @View, i64 0, i32 1, i64 0), double* getelementptr inbounds (%struct.view* @View, i64 0, i32 1, i64 1), double* getelementptr inbounds (%struct.view* @View, i64 0, i32 1, i64 2)) #2, !llfi_index !1324
  %21 = icmp eq i32 %20, 3, !llfi_index !1325
  br i1 %21, label %.backedge, label %22, !llfi_index !1326

; <label>:22                                      ; preds = %19
  %puts40 = call i32 @puts(i8* getelementptr inbounds ([21 x i8]* @str34, i64 0, i64 0)), !llfi_index !1327
  call void @exit(i32 -1) #11, !llfi_index !1328
  unreachable, !llfi_index !1329

; <label>:23                                      ; preds = %12
  %24 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8]* @.str86, i64 0, i64 0), double* getelementptr inbounds (%struct.view* @View, i64 0, i32 5, i64 0), double* getelementptr inbounds (%struct.view* @View, i64 0, i32 5, i64 1), double* getelementptr inbounds (%struct.view* @View, i64 0, i32 5, i64 2)) #2, !llfi_index !1330
  %25 = icmp eq i32 %24, 3, !llfi_index !1331
  br i1 %25, label %27, label %26, !llfi_index !1332

; <label>:26                                      ; preds = %23
  %puts39 = call i32 @puts(i8* getelementptr inbounds ([25 x i8]* @str33, i64 0, i64 0)), !llfi_index !1333
  call void @exit(i32 -1) #11, !llfi_index !1334
  unreachable, !llfi_index !1335

; <label>:27                                      ; preds = %23
  %28 = call i64 @VerifyColorRange(double* getelementptr inbounds (%struct.view* @View, i64 0, i32 5, i64 0)), !llfi_index !1336
  %29 = icmp eq i64 %28, 0, !llfi_index !1337
  br i1 %29, label %30, label %.backedge, !llfi_index !1338

; <label>:30                                      ; preds = %27
  call void @exit(i32 -1) #11, !llfi_index !1339
  unreachable, !llfi_index !1340

; <label>:31                                      ; preds = %12
  %32 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str90, i64 0, i64 0), double* getelementptr inbounds (%struct.view* @View, i64 0, i32 7)) #2, !llfi_index !1341
  %33 = icmp eq i32 %32, 1, !llfi_index !1342
  br i1 %33, label %35, label %34, !llfi_index !1343

; <label>:34                                      ; preds = %31
  %puts38 = call i32 @puts(i8* getelementptr inbounds ([22 x i8]* @str32, i64 0, i64 0)), !llfi_index !1344
  call void @exit(i32 -1) #11, !llfi_index !1345
  unreachable, !llfi_index !1346

; <label>:35                                      ; preds = %31
  %36 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 7), align 8, !llfi_index !1347
  %37 = fcmp olt double %36, 0.000000e+00, !llfi_index !1348
  %38 = fcmp ogt double %36, 1.000000e+02, !llfi_index !1349
  %or.cond = or i1 %37, %38, !llfi_index !1350
  br i1 %or.cond, label %39, label %.backedge, !llfi_index !1351

; <label>:39                                      ; preds = %35
  %40 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str92, i64 0, i64 0), double %36) #2, !llfi_index !1352
  call void @exit(i32 -1) #11, !llfi_index !1353
  unreachable, !llfi_index !1354

; <label>:41                                      ; preds = %12
  %42 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8]* @.str86, i64 0, i64 0), double* getelementptr inbounds (%struct.view* @View, i64 0, i32 8, i64 0), double* getelementptr inbounds (%struct.view* @View, i64 0, i32 8, i64 1), double* getelementptr inbounds (%struct.view* @View, i64 0, i32 8, i64 2)) #2, !llfi_index !1355
  %43 = icmp eq i32 %42, 3, !llfi_index !1356
  br i1 %43, label %45, label %44, !llfi_index !1357

; <label>:44                                      ; preds = %41
  %puts37 = call i32 @puts(i8* getelementptr inbounds ([16 x i8]* @str31, i64 0, i64 0)), !llfi_index !1358
  call void @exit(i32 -1) #11, !llfi_index !1359
  unreachable, !llfi_index !1360

; <label>:45                                      ; preds = %41
  %46 = call i64 @VerifyColorRange(double* getelementptr inbounds (%struct.view* @View, i64 0, i32 8, i64 0)), !llfi_index !1361
  %47 = icmp eq i64 %46, 0, !llfi_index !1362
  br i1 %47, label %48, label %.backedge, !llfi_index !1363

; <label>:48                                      ; preds = %45
  call void @exit(i32 -1) #11, !llfi_index !1364
  unreachable, !llfi_index !1365

; <label>:49                                      ; preds = %12
  %50 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str94, i64 0, i64 0), i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 1)) #2, !llfi_index !1366
  %51 = icmp eq i32 %50, 1, !llfi_index !1367
  br i1 %51, label %53, label %52, !llfi_index !1368

; <label>:52                                      ; preds = %49
  %puts36 = call i32 @puts(i8* getelementptr inbounds ([29 x i8]* @str30, i64 0, i64 0)), !llfi_index !1369
  call void @exit(i32 -1) #11, !llfi_index !1370
  unreachable, !llfi_index !1371

; <label>:53                                      ; preds = %49
  %54 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 1), align 8, !llfi_index !1372
  %55 = icmp ugt i64 %54, 3, !llfi_index !1373
  br i1 %55, label %56, label %.backedge, !llfi_index !1374

; <label>:56                                      ; preds = %53
  %57 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str96, i64 0, i64 0), i64 %54) #2, !llfi_index !1375
  call void @exit(i32 -1) #11, !llfi_index !1376
  unreachable, !llfi_index !1377

; <label>:58                                      ; preds = %12
  %59 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str94, i64 0, i64 0), i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 0)) #2, !llfi_index !1378
  %60 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 0), align 8, !llfi_index !1379
  %61 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([33 x i8]* @.str97, i64 0, i64 0), i64 %60) #2, !llfi_index !1380
  %62 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !1381
  %63 = call i32 @fflush(%struct._IO_FILE* %62) #2, !llfi_index !1382
  %64 = icmp eq i32 %59, 1, !llfi_index !1383
  br i1 %64, label %66, label %65, !llfi_index !1384

; <label>:65                                      ; preds = %58
  %puts35 = call i32 @puts(i8* getelementptr inbounds ([24 x i8]* @str29, i64 0, i64 0)), !llfi_index !1385
  call void @exit(i32 -1) #11, !llfi_index !1386
  unreachable, !llfi_index !1387

; <label>:66                                      ; preds = %58
  %67 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 0), align 8, !llfi_index !1388
  %68 = icmp ugt i64 %67, 5, !llfi_index !1389
  br i1 %68, label %69, label %.backedge, !llfi_index !1390

; <label>:69                                      ; preds = %66
  %70 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str99, i64 0, i64 0), i64 %67) #2, !llfi_index !1391
  call void @exit(i32 -1) #11, !llfi_index !1392
  unreachable, !llfi_index !1393

; <label>:71                                      ; preds = %12
  %72 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str90, i64 0, i64 0), double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 8)) #2, !llfi_index !1394
  %73 = icmp eq i32 %72, 1, !llfi_index !1395
  br i1 %73, label %75, label %74, !llfi_index !1396

; <label>:74                                      ; preds = %71
  %puts34 = call i32 @puts(i8* getelementptr inbounds ([28 x i8]* @str28, i64 0, i64 0)), !llfi_index !1397
  call void @exit(i32 -1) #11, !llfi_index !1398
  unreachable, !llfi_index !1399

; <label>:75                                      ; preds = %71
  %76 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 8), align 8, !llfi_index !1400
  %77 = fcmp olt double %76, 0.000000e+00, !llfi_index !1401
  %78 = fcmp ogt double %76, 1.000000e+00, !llfi_index !1402
  %or.cond7 = or i1 %77, %78, !llfi_index !1403
  br i1 %or.cond7, label %79, label %.backedge, !llfi_index !1404

; <label>:79                                      ; preds = %75
  %80 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str101, i64 0, i64 0), double %76) #2, !llfi_index !1405
  call void @exit(i32 -1) #11, !llfi_index !1406
  unreachable, !llfi_index !1407

; <label>:81                                      ; preds = %12
  %82 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str90, i64 0, i64 0), double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 4)) #2, !llfi_index !1408
  %83 = icmp eq i32 %82, 1, !llfi_index !1409
  br i1 %83, label %85, label %84, !llfi_index !1410

; <label>:84                                      ; preds = %81
  %puts33 = call i32 @puts(i8* getelementptr inbounds ([30 x i8]* @str27, i64 0, i64 0)), !llfi_index !1411
  call void @exit(i32 -1) #11, !llfi_index !1412
  unreachable, !llfi_index !1413

; <label>:85                                      ; preds = %81
  %86 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 4), align 8, !llfi_index !1414
  %87 = fcmp olt double %86, 0.000000e+00, !llfi_index !1415
  %88 = fcmp ogt double %86, 1.000000e+00, !llfi_index !1416
  %or.cond9 = or i1 %87, %88, !llfi_index !1417
  br i1 %or.cond9, label %89, label %.backedge, !llfi_index !1418

; <label>:89                                      ; preds = %85
  %90 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([42 x i8]* @.str103, i64 0, i64 0), double %86) #2, !llfi_index !1419
  call void @exit(i32 -1) #11, !llfi_index !1420
  unreachable, !llfi_index !1421

; <label>:91                                      ; preds = %12
  %92 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([8 x i8]* @.str104, i64 0, i64 0), i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 6)) #2, !llfi_index !1422
  %93 = icmp eq i32 %92, 2, !llfi_index !1423
  br i1 %93, label %.backedge, label %94, !llfi_index !1424

; <label>:94                                      ; preds = %91
  %puts32 = call i32 @puts(i8* getelementptr inbounds ([19 x i8]* @str26, i64 0, i64 0)), !llfi_index !1425
  call void @exit(i32 -1) #11, !llfi_index !1426
  unreachable, !llfi_index !1427

; <label>:95                                      ; preds = %12
  %96 = load i64* @nlights, align 8, !llfi_index !1428
  %97 = icmp sgt i64 %96, 0, !llfi_index !1429
  br i1 %97, label %98, label %101, !llfi_index !1430

; <label>:98                                      ; preds = %95
  %99 = call i8* @GlobalMalloc(i64 72, i8* getelementptr inbounds ([6 x i8]* @.str80, i64 0, i64 0)), !llfi_index !1431
  %100 = bitcast i8* %99 to %struct.light*, !llfi_index !1432
  br label %103, !llfi_index !1433

; <label>:101                                     ; preds = %95
  %102 = load %struct.light** @lights, align 8, !llfi_index !1434
  br label %103, !llfi_index !1435

; <label>:103                                     ; preds = %101, %98
  %lptr.0 = phi %struct.light* [ %100, %98 ], [ %102, %101 ], !llfi_index !1436
  %104 = getelementptr inbounds %struct.light* %lptr.0, i64 0, i32 0, i64 0, !llfi_index !1437
  %105 = getelementptr inbounds %struct.light* %lptr.0, i64 0, i32 0, i64 1, !llfi_index !1438
  %106 = getelementptr inbounds %struct.light* %lptr.0, i64 0, i32 0, i64 2, !llfi_index !1439
  %107 = getelementptr inbounds %struct.light* %lptr.0, i64 0, i32 1, i64 0, !llfi_index !1440
  %108 = getelementptr inbounds %struct.light* %lptr.0, i64 0, i32 1, i64 1, !llfi_index !1441
  %109 = getelementptr inbounds %struct.light* %lptr.0, i64 0, i32 1, i64 2, !llfi_index !1442
  %110 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([24 x i8]* @.str106, i64 0, i64 0), double* %104, double* %105, double* %106, double* %107, double* %108, double* %109) #2, !llfi_index !1443
  %111 = icmp eq i32 %110, 6, !llfi_index !1444
  br i1 %111, label %113, label %112, !llfi_index !1445

; <label>:112                                     ; preds = %103
  %puts31 = call i32 @puts(i8* getelementptr inbounds ([15 x i8]* @str25, i64 0, i64 0)), !llfi_index !1446
  call void @exit(i32 -1) #11, !llfi_index !1447
  unreachable, !llfi_index !1448

; <label>:113                                     ; preds = %103
  %114 = call i64 @VerifyColorRange(double* %107), !llfi_index !1449
  %115 = icmp eq i64 %114, 0, !llfi_index !1450
  br i1 %115, label %116, label %117, !llfi_index !1451

; <label>:116                                     ; preds = %113
  call void @exit(i32 -1) #11, !llfi_index !1452
  unreachable, !llfi_index !1453

; <label>:117                                     ; preds = %113
  %118 = getelementptr inbounds %struct.light* %lptr.0, i64 0, i32 0, i64 3, !llfi_index !1454
  store double 1.000000e+00, double* %118, align 8, !llfi_index !1455
  %119 = getelementptr inbounds %struct.light* %lptr.0, i64 0, i32 2, !llfi_index !1456
  %120 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str94, i64 0, i64 0), i64* %119) #2, !llfi_index !1457
  %121 = icmp eq i32 %120, 1, !llfi_index !1458
  br i1 %121, label %123, label %122, !llfi_index !1459

; <label>:122                                     ; preds = %117
  %puts30 = call i32 @puts(i8* getelementptr inbounds ([32 x i8]* @str24, i64 0, i64 0)), !llfi_index !1460
  call void @exit(i32 -1) #11, !llfi_index !1461
  unreachable, !llfi_index !1462

; <label>:123                                     ; preds = %117
  %124 = getelementptr inbounds %struct.light* %lptr.0, i64 0, i32 3, !llfi_index !1463
  store %struct.light* null, %struct.light** %124, align 8, !llfi_index !1464
  %125 = load i64* @nlights, align 8, !llfi_index !1465
  %126 = icmp sgt i64 %125, 0, !llfi_index !1466
  br i1 %126, label %127, label %129, !llfi_index !1467

; <label>:127                                     ; preds = %123
  %128 = getelementptr inbounds %struct.light* %lastlight.096, i64 0, i32 3, !llfi_index !1468
  store %struct.light* %lptr.0, %struct.light** %128, align 8, !llfi_index !1469
  br label %129, !llfi_index !1470

; <label>:129                                     ; preds = %127, %123
  %130 = load i64* @nlights, align 8, !llfi_index !1471
  %131 = add nsw i64 %130, 1, !llfi_index !1472
  store i64 %131, i64* @nlights, align 8, !llfi_index !1473
  br label %.backedge, !llfi_index !1474

.preheader:                                       ; preds = %140, %12
  %i.044 = phi i64 [ %141, %140 ], [ 0, %12 ], !llfi_index !1475
  br label %134, !llfi_index !1476

; <label>:132                                     ; preds = %134
  %133 = icmp slt i64 %138, 4, !llfi_index !1477
  br i1 %133, label %134, label %140, !llfi_index !1478

; <label>:134                                     ; preds = %132, %.preheader
  %j.042 = phi i64 [ 0, %.preheader ], [ %138, %132 ], !llfi_index !1479
  %135 = getelementptr inbounds %struct.view* @View, i64 0, i32 4, i64 %i.044, i64 %j.042, !llfi_index !1480
  %136 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str90, i64 0, i64 0), double* %135) #2, !llfi_index !1481
  %137 = icmp eq i32 %136, 1, !llfi_index !1482
  %138 = add nsw i64 %j.042, 1, !llfi_index !1483
  br i1 %137, label %132, label %139, !llfi_index !1484

; <label>:139                                     ; preds = %134
  %puts29 = call i32 @puts(i8* getelementptr inbounds ([17 x i8]* @str23, i64 0, i64 0)), !llfi_index !1485
  call void @exit(i32 -1) #11, !llfi_index !1486
  unreachable, !llfi_index !1487

; <label>:140                                     ; preds = %132
  %141 = add nsw i64 %i.044, 1, !llfi_index !1488
  %142 = icmp slt i64 %141, 4, !llfi_index !1489
  br i1 %142, label %.preheader, label %143, !llfi_index !1490

; <label>:143                                     ; preds = %140
  store i64 1, i64* @ModelTransform, align 8, !llfi_index !1491
  br label %.backedge, !llfi_index !1492

; <label>:144                                     ; preds = %12
  %145 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([3 x i8]* @.str85, i64 0, i64 0), i8* %9) #2, !llfi_index !1493
  %146 = icmp eq i32 %145, 1, !llfi_index !1494
  br i1 %146, label %148, label %147, !llfi_index !1495

; <label>:147                                     ; preds = %144
  %puts28 = call i32 @puts(i8* getelementptr inbounds ([15 x i8]* @str22, i64 0, i64 0)), !llfi_index !1496
  call void @exit(i32 -1) #11, !llfi_index !1497
  unreachable, !llfi_index !1498

; <label>:148                                     ; preds = %144
  %149 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([3 x i8]* @.str111, i64 0, i64 0)) #12, !llfi_index !1499
  %150 = icmp eq i32 %149, 0, !llfi_index !1500
  br i1 %150, label %151, label %152, !llfi_index !1501

; <label>:151                                     ; preds = %148
  store i64 1, i64* getelementptr inbounds (%struct.view* @View, i64 0, i32 9), align 8, !llfi_index !1502
  br label %.backedge, !llfi_index !1503

; <label>:152                                     ; preds = %148
  store i64 0, i64* getelementptr inbounds (%struct.view* @View, i64 0, i32 9), align 8, !llfi_index !1504
  br label %.backedge, !llfi_index !1505

; <label>:153                                     ; preds = %12
  %154 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([3 x i8]* @.str85, i64 0, i64 0), i8* %9) #2, !llfi_index !1506
  %155 = icmp eq i32 %154, 1, !llfi_index !1507
  br i1 %155, label %158, label %156, !llfi_index !1508

; <label>:156                                     ; preds = %153
  %157 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str112, i64 0, i64 0), i8* %9) #2, !llfi_index !1509
  call void @exit(i32 -1) #11, !llfi_index !1510
  unreachable, !llfi_index !1511

; <label>:158                                     ; preds = %153
  %159 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([3 x i8]* @.str111, i64 0, i64 0)) #12, !llfi_index !1512
  %160 = icmp eq i32 %159, 0, !llfi_index !1513
  br i1 %160, label %161, label %162, !llfi_index !1514

; <label>:161                                     ; preds = %158
  store i64 1, i64* getelementptr inbounds (%struct.view* @View, i64 0, i32 10), align 8, !llfi_index !1515
  br label %.backedge, !llfi_index !1516

; <label>:162                                     ; preds = %158
  store i64 0, i64* getelementptr inbounds (%struct.view* @View, i64 0, i32 10), align 8, !llfi_index !1517
  br label %.backedge, !llfi_index !1518

; <label>:163                                     ; preds = %12
  %164 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([3 x i8]* @.str85, i64 0, i64 0), i8* %9) #2, !llfi_index !1519
  %165 = icmp eq i32 %164, 1, !llfi_index !1520
  br i1 %165, label %168, label %166, !llfi_index !1521

; <label>:166                                     ; preds = %163
  %167 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([23 x i8]* @.str113, i64 0, i64 0), i8* %9) #2, !llfi_index !1522
  call void @exit(i32 -1) #11, !llfi_index !1523
  unreachable, !llfi_index !1524

; <label>:168                                     ; preds = %163
  %169 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([12 x i8]* @.str114, i64 0, i64 0)) #12, !llfi_index !1525
  %170 = icmp eq i32 %169, 0, !llfi_index !1526
  br i1 %170, label %171, label %172, !llfi_index !1527

; <label>:171                                     ; preds = %168
  store i64 0, i64* getelementptr inbounds (%struct.view* @View, i64 0, i32 6), align 8, !llfi_index !1528
  br label %.backedge, !llfi_index !1529

; <label>:172                                     ; preds = %168
  %173 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([13 x i8]* @.str115, i64 0, i64 0)) #12, !llfi_index !1530
  %174 = icmp eq i32 %173, 0, !llfi_index !1531
  br i1 %174, label %175, label %176, !llfi_index !1532

; <label>:175                                     ; preds = %172
  store i64 1, i64* getelementptr inbounds (%struct.view* @View, i64 0, i32 6), align 8, !llfi_index !1533
  br label %.backedge, !llfi_index !1534

; <label>:176                                     ; preds = %172
  %177 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str116, i64 0, i64 0), i8* %9) #2, !llfi_index !1535
  call void @exit(i32 -1) #11, !llfi_index !1536
  unreachable, !llfi_index !1537

; <label>:178                                     ; preds = %12
  %179 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([3 x i8]* @.str85, i64 0, i64 0), i8* %9) #2, !llfi_index !1538
  %180 = icmp eq i32 %179, 1, !llfi_index !1539
  br i1 %180, label %183, label %181, !llfi_index !1540

; <label>:181                                     ; preds = %178
  %182 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str11733, i64 0, i64 0), i8* %9) #2, !llfi_index !1541
  call void @exit(i32 -1) #11, !llfi_index !1542
  unreachable, !llfi_index !1543

; <label>:183                                     ; preds = %178
  %184 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([5 x i8]* @.str118, i64 0, i64 0)) #12, !llfi_index !1544
  %185 = icmp eq i32 %184, 0, !llfi_index !1545
  br i1 %185, label %186, label %187, !llfi_index !1546

; <label>:186                                     ; preds = %183
  store i64 0, i64* @TraversalType, align 8, !llfi_index !1547
  br label %.backedge, !llfi_index !1548

; <label>:187                                     ; preds = %183
  %188 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([9 x i8]* @.str119, i64 0, i64 0)) #12, !llfi_index !1549
  %189 = icmp eq i32 %188, 0, !llfi_index !1550
  br i1 %189, label %190, label %191, !llfi_index !1551

; <label>:190                                     ; preds = %187
  store i64 1, i64* @TraversalType, align 8, !llfi_index !1552
  br label %.backedge, !llfi_index !1553

; <label>:191                                     ; preds = %187
  %192 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str120, i64 0, i64 0), i8* %9) #2, !llfi_index !1554
  call void @exit(i32 -1) #11, !llfi_index !1555
  unreachable, !llfi_index !1556

; <label>:193                                     ; preds = %12
  %194 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str121, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8]* @GeoFileName, i64 0, i64 0)) #2, !llfi_index !1557
  %195 = icmp eq i32 %194, 1, !llfi_index !1558
  br i1 %195, label %197, label %196, !llfi_index !1559

; <label>:196                                     ; preds = %193
  %puts27 = call i32 @puts(i8* getelementptr inbounds ([22 x i8]* @str21, i64 0, i64 0)), !llfi_index !1560
  call void @exit(i32 -1) #11, !llfi_index !1561
  unreachable, !llfi_index !1562

; <label>:197                                     ; preds = %193
  store i64 1, i64* @GeoFile, align 8, !llfi_index !1563
  br label %.backedge, !llfi_index !1564

; <label>:198                                     ; preds = %12
  %199 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str121, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8]* @PicFileName, i64 0, i64 0)) #2, !llfi_index !1565
  %200 = icmp eq i32 %199, 1, !llfi_index !1566
  br i1 %200, label %202, label %201, !llfi_index !1567

; <label>:201                                     ; preds = %198
  %puts26 = call i32 @puts(i8* getelementptr inbounds ([23 x i8]* @str20, i64 0, i64 0)), !llfi_index !1568
  call void @exit(i32 -1) #11, !llfi_index !1569
  unreachable, !llfi_index !1570

; <label>:202                                     ; preds = %198
  store i64 1, i64* @PicFile, align 8, !llfi_index !1571
  br label %.backedge, !llfi_index !1572

; <label>:203                                     ; preds = %12
  %204 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str94, i64 0, i64 0), i64* %dummy) #2, !llfi_index !1573
  %205 = icmp eq i32 %204, 1, !llfi_index !1574
  br i1 %205, label %.backedge, label %206, !llfi_index !1575

; <label>:206                                     ; preds = %203
  %puts25 = call i32 @puts(i8* getelementptr inbounds ([23 x i8]* @str19, i64 0, i64 0)), !llfi_index !1576
  call void @exit(i32 -1) #11, !llfi_index !1577
  unreachable, !llfi_index !1578

; <label>:207                                     ; preds = %12
  %208 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str94, i64 0, i64 0), i64* %dummy) #2, !llfi_index !1579
  %209 = icmp eq i32 %208, 1, !llfi_index !1580
  br i1 %209, label %.backedge, label %210, !llfi_index !1581

; <label>:210                                     ; preds = %207
  %puts24 = call i32 @puts(i8* getelementptr inbounds ([21 x i8]* @str18, i64 0, i64 0)), !llfi_index !1582
  call void @exit(i32 -1) #11, !llfi_index !1583
  unreachable, !llfi_index !1584

; <label>:211                                     ; preds = %12
  %212 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([3 x i8]* @.str85, i64 0, i64 0), i8* %10) #2, !llfi_index !1585
  %213 = icmp eq i32 %212, 1, !llfi_index !1586
  br i1 %213, label %.backedge, label %214, !llfi_index !1587

; <label>:214                                     ; preds = %211
  %puts23 = call i32 @puts(i8* getelementptr inbounds ([20 x i8]* @str17, i64 0, i64 0)), !llfi_index !1588
  call void @exit(i32 -1) #11, !llfi_index !1589
  unreachable, !llfi_index !1590

; <label>:215                                     ; preds = %12
  %216 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([3 x i8]* @.str85, i64 0, i64 0), i8* %9) #2, !llfi_index !1591
  %217 = icmp eq i32 %216, 1, !llfi_index !1592
  br i1 %217, label %219, label %218, !llfi_index !1593

; <label>:218                                     ; preds = %215
  %puts22 = call i32 @puts(i8* getelementptr inbounds ([22 x i8]* @str16, i64 0, i64 0)), !llfi_index !1594
  call void @exit(i32 -1) #11, !llfi_index !1595
  unreachable, !llfi_index !1596

; <label>:219                                     ; preds = %215
  %220 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([3 x i8]* @.str128, i64 0, i64 0)) #12, !llfi_index !1597
  %221 = icmp eq i32 %220, 0, !llfi_index !1598
  br i1 %221, label %222, label %.backedge, !llfi_index !1599

; <label>:222                                     ; preds = %219
  store i64 0, i64* @ModelNorm, align 8, !llfi_index !1600
  br label %.backedge, !llfi_index !1601

; <label>:223                                     ; preds = %12
  %224 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([3 x i8]* @.str85, i64 0, i64 0), i8* %11) #2, !llfi_index !1602
  %225 = icmp eq i32 %224, 1, !llfi_index !1603
  br i1 %225, label %227, label %226, !llfi_index !1604

; <label>:226                                     ; preds = %223
  %puts21 = call i32 @puts(i8* getelementptr inbounds ([17 x i8]* @str15, i64 0, i64 0)), !llfi_index !1605
  call void @exit(i32 -1) #11, !llfi_index !1606
  unreachable, !llfi_index !1607

; <label>:227                                     ; preds = %223
  %228 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([7 x i8]* @.str130, i64 0, i64 0)) #12, !llfi_index !1608
  %229 = icmp eq i32 %228, 0, !llfi_index !1609
  br i1 %229, label %230, label %.backedge, !llfi_index !1610

; <label>:230                                     ; preds = %227
  store i64 1, i64* @DataType, align 8, !llfi_index !1611
  br label %.backedge, !llfi_index !1612

; <label>:231                                     ; preds = %12
  %232 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str94, i64 0, i64 0), i64* @hu_max_prims_cell) #2, !llfi_index !1613
  %233 = icmp eq i32 %232, 1, !llfi_index !1614
  br i1 %233, label %.backedge, label %234, !llfi_index !1615

; <label>:234                                     ; preds = %231
  %puts20 = call i32 @puts(i8* getelementptr inbounds ([32 x i8]* @str14, i64 0, i64 0)), !llfi_index !1616
  call void @exit(i32 -1) #11, !llfi_index !1617
  unreachable, !llfi_index !1618

; <label>:235                                     ; preds = %12
  %236 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str94, i64 0, i64 0), i64* @hu_gridsize) #2, !llfi_index !1619
  %237 = icmp eq i32 %236, 1, !llfi_index !1620
  br i1 %237, label %.backedge, label %238, !llfi_index !1621

; <label>:238                                     ; preds = %235
  %puts19 = call i32 @puts(i8* getelementptr inbounds ([26 x i8]* @str13, i64 0, i64 0)), !llfi_index !1622
  call void @exit(i32 -1) #11, !llfi_index !1623
  unreachable, !llfi_index !1624

; <label>:239                                     ; preds = %12
  %240 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str94, i64 0, i64 0), i64* @hu_numbuckets) #2, !llfi_index !1625
  %241 = icmp eq i32 %240, 1, !llfi_index !1626
  br i1 %241, label %.backedge, label %242, !llfi_index !1627

; <label>:242                                     ; preds = %239
  %puts18 = call i32 @puts(i8* getelementptr inbounds ([28 x i8]* @str12, i64 0, i64 0)), !llfi_index !1628
  call void @exit(i32 -1) #11, !llfi_index !1629
  unreachable, !llfi_index !1630

; <label>:243                                     ; preds = %12
  %244 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str94, i64 0, i64 0), i64* @hu_max_subdiv_level) #2, !llfi_index !1631
  %245 = icmp ne i32 %244, 1, !llfi_index !1632
  %246 = load i64* @hu_max_subdiv_level, align 8, !llfi_index !1633
  %247 = icmp sgt i64 %246, 3, !llfi_index !1634
  %or.cond11 = or i1 %245, %247, !llfi_index !1635
  br i1 %or.cond11, label %250, label %.backedge, !llfi_index !1636

.backedge:                                        ; preds = %263, %259, %255, %251, %243, %239, %235, %231, %230, %227, %222, %219, %211, %207, %203, %202, %197, %190, %186, %175, %171, %162, %161, %152, %151, %143, %129, %91, %85, %75, %66, %53, %45, %35, %27, %19, %15
  %lights_set.0.be = phi i64 [ %lights_set.095, %263 ], [ %lights_set.095, %259 ], [ %lights_set.095, %255 ], [ %lights_set.095, %251 ], [ %lights_set.095, %243 ], [ %lights_set.095, %239 ], [ %lights_set.095, %235 ], [ %lights_set.095, %231 ], [ %lights_set.095, %230 ], [ %lights_set.095, %227 ], [ %lights_set.095, %222 ], [ %lights_set.095, %219 ], [ %lights_set.095, %211 ], [ %lights_set.095, %207 ], [ %lights_set.095, %203 ], [ %lights_set.095, %202 ], [ %lights_set.095, %197 ], [ %lights_set.095, %186 ], [ %lights_set.095, %190 ], [ %lights_set.095, %171 ], [ %lights_set.095, %175 ], [ %lights_set.095, %161 ], [ %lights_set.095, %162 ], [ %lights_set.095, %151 ], [ %lights_set.095, %152 ], [ %lights_set.095, %143 ], [ 1, %129 ], [ %lights_set.095, %91 ], [ %lights_set.095, %85 ], [ %lights_set.095, %75 ], [ %lights_set.095, %66 ], [ %lights_set.095, %53 ], [ %lights_set.095, %45 ], [ %lights_set.095, %35 ], [ %lights_set.095, %27 ], [ %lights_set.095, %19 ], [ %lights_set.095, %15 ], !llfi_index !1637
  %lastlight.0.be = phi %struct.light* [ %lastlight.096, %263 ], [ %lastlight.096, %259 ], [ %lastlight.096, %255 ], [ %lastlight.096, %251 ], [ %lastlight.096, %243 ], [ %lastlight.096, %239 ], [ %lastlight.096, %235 ], [ %lastlight.096, %231 ], [ %lastlight.096, %230 ], [ %lastlight.096, %227 ], [ %lastlight.096, %222 ], [ %lastlight.096, %219 ], [ %lastlight.096, %211 ], [ %lastlight.096, %207 ], [ %lastlight.096, %203 ], [ %lastlight.096, %202 ], [ %lastlight.096, %197 ], [ %lastlight.096, %186 ], [ %lastlight.096, %190 ], [ %lastlight.096, %171 ], [ %lastlight.096, %175 ], [ %lastlight.096, %161 ], [ %lastlight.096, %162 ], [ %lastlight.096, %151 ], [ %lastlight.096, %152 ], [ %lastlight.096, %143 ], [ %lptr.0, %129 ], [ %lastlight.096, %91 ], [ %lastlight.096, %85 ], [ %lastlight.096, %75 ], [ %lastlight.096, %66 ], [ %lastlight.096, %53 ], [ %lastlight.096, %45 ], [ %lastlight.096, %35 ], [ %lastlight.096, %27 ], [ %lastlight.096, %19 ], [ %lastlight.096, %15 ], !llfi_index !1638
  %248 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([3 x i8]* @.str85, i64 0, i64 0), i8* %6) #2, !llfi_index !1639
  %249 = icmp eq i32 %248, -1, !llfi_index !1640
  br i1 %249, label %._crit_edge, label %12, !llfi_index !1641

; <label>:250                                     ; preds = %243
  %puts17 = call i32 @puts(i8* getelementptr inbounds ([34 x i8]* @str11, i64 0, i64 0)), !llfi_index !1642
  call void @exit(i32 -1) #11, !llfi_index !1643
  unreachable, !llfi_index !1644

; <label>:251                                     ; preds = %12
  %252 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([4 x i8]* @.str94, i64 0, i64 0), i64* @hu_lazy) #2, !llfi_index !1645
  %253 = icmp eq i32 %252, 1, !llfi_index !1646
  br i1 %253, label %.backedge, label %254, !llfi_index !1647

; <label>:254                                     ; preds = %251
  %puts16 = call i32 @puts(i8* getelementptr inbounds ([22 x i8]* @str10, i64 0, i64 0)), !llfi_index !1648
  call void @exit(i32 -1) #11, !llfi_index !1649
  unreachable, !llfi_index !1650

; <label>:255                                     ; preds = %12
  %256 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([8 x i8]* @.str104, i64 0, i64 0), i64* @bundlex, i64* @bundley) #2, !llfi_index !1651
  %257 = icmp eq i32 %256, 2, !llfi_index !1652
  br i1 %257, label %.backedge, label %258, !llfi_index !1653

; <label>:258                                     ; preds = %255
  %puts15 = call i32 @puts(i8* getelementptr inbounds ([15 x i8]* @str9, i64 0, i64 0)), !llfi_index !1654
  call void @exit(i32 -1) #11, !llfi_index !1655
  unreachable, !llfi_index !1656

; <label>:259                                     ; preds = %12
  %260 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([8 x i8]* @.str104, i64 0, i64 0), i64* @blockx, i64* @blocky) #2, !llfi_index !1657
  %261 = icmp eq i32 %260, 2, !llfi_index !1658
  br i1 %261, label %.backedge, label %262, !llfi_index !1659

; <label>:262                                     ; preds = %259
  %puts14 = call i32 @puts(i8* getelementptr inbounds ([14 x i8]* @str8, i64 0, i64 0)), !llfi_index !1660
  call void @exit(i32 -1) #11, !llfi_index !1661
  unreachable, !llfi_index !1662

; <label>:263                                     ; preds = %12
  %264 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([40 x i8]* @.str138, i64 0, i64 0), i8* %6) #2, !llfi_index !1663
  br label %.backedge, !llfi_index !1664

._crit_edge:                                      ; preds = %.backedge, %5
  %lights_set.0.lcssa = phi i64 [ 0, %5 ], [ %lights_set.0.be, %.backedge ], !llfi_index !1665
  %265 = call i32 @fclose(%struct._IO_FILE* %1) #2, !llfi_index !1666
  %266 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), align 8, !llfi_index !1667
  %267 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 6), align 8, !llfi_index !1668
  %268 = mul nsw i64 %267, %266, !llfi_index !1669
  store i64 %268, i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 7), align 8, !llfi_index !1670
  %269 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 10), align 8, !llfi_index !1671
  %270 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), align 8, !llfi_index !1672
  %271 = sitofp i64 %270 to double, !llfi_index !1673
  %272 = fdiv double %269, %271, !llfi_index !1674
  store double %272, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 14), align 8, !llfi_index !1675
  %273 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 11), align 8, !llfi_index !1676
  %274 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 6), align 8, !llfi_index !1677
  %275 = sitofp i64 %274 to double, !llfi_index !1678
  %276 = fdiv double %273, %275, !llfi_index !1679
  store double %276, double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 15), align 8, !llfi_index !1680
  %277 = icmp eq i64 %lights_set.0.lcssa, 0, !llfi_index !1681
  br i1 %277, label %278, label %279, !llfi_index !1682

; <label>:278                                     ; preds = %._crit_edge
  call void @InitLights(), !llfi_index !1683
  br label %279, !llfi_index !1684

; <label>:279                                     ; preds = %278, %._crit_edge
  call void @InitDisplay(), !llfi_index !1685
  %280 = load i64* @TraversalType, align 8, !llfi_index !1686
  %281 = icmp ne i64 %280, 0, !llfi_index !1687
  %282 = load i64* @ModelNorm, align 8, !llfi_index !1688
  %283 = icmp eq i64 %282, 0, !llfi_index !1689
  %or.cond13 = and i1 %281, %283, !llfi_index !1690
  br i1 %or.cond13, label %284, label %285, !llfi_index !1691

; <label>:284                                     ; preds = %279
  %puts = call i32 @puts(i8* getelementptr inbounds ([53 x i8]* @str7, i64 0, i64 0)), !llfi_index !1692
  store i64 1, i64* @ModelNorm, align 8, !llfi_index !1693
  br label %285, !llfi_index !1694

; <label>:285                                     ; preds = %284, %279
  ret void, !llfi_index !1695
}

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) #1

declare i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) #6

; Function Attrs: nounwind
declare i32 @fflush(%struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind uwtable
define void @RunLengthEncode(%struct._IO_FILE* nocapture %pf, %struct.pixel* nocapture readonly %fb, i64 %xsize) #0 {
  %1 = getelementptr inbounds %struct.pixel* %fb, i64 0, i32 0, !llfi_index !1696
  %2 = load float* %1, align 4, !llfi_index !1697
  %3 = fpext float %2 to double, !llfi_index !1698
  %4 = fmul double %3, 2.550000e+02, !llfi_index !1699
  %5 = fptosi double %4 to i64, !llfi_index !1700
  %6 = trunc i64 %5 to i8, !llfi_index !1701
  store i8 %6, i8* getelementptr inbounds ([1280 x %struct.anon.44]* @image, i64 0, i64 0, i32 0), align 16, !llfi_index !1702
  %7 = getelementptr inbounds %struct.pixel* %fb, i64 0, i32 1, !llfi_index !1703
  %8 = load float* %7, align 4, !llfi_index !1704
  %9 = fpext float %8 to double, !llfi_index !1705
  %10 = fmul double %9, 2.550000e+02, !llfi_index !1706
  %11 = fptosi double %10 to i64, !llfi_index !1707
  %12 = trunc i64 %11 to i8, !llfi_index !1708
  store i8 %12, i8* getelementptr inbounds ([1280 x %struct.anon.44]* @image, i64 0, i64 0, i32 1), align 1, !llfi_index !1709
  %13 = getelementptr inbounds %struct.pixel* %fb, i64 0, i32 2, !llfi_index !1710
  %14 = load float* %13, align 4, !llfi_index !1711
  %15 = fpext float %14 to double, !llfi_index !1712
  %16 = fmul double %15, 2.550000e+02, !llfi_index !1713
  %17 = fptosi double %16 to i64, !llfi_index !1714
  %18 = trunc i64 %17 to i8, !llfi_index !1715
  store i8 %18, i8* getelementptr inbounds ([1280 x %struct.anon.44]* @image, i64 0, i64 0, i32 2), align 2, !llfi_index !1716
  %19 = icmp sgt i64 %xsize, 1, !llfi_index !1717
  br i1 %19, label %.lr.ph7, label %._crit_edge8.thread, !llfi_index !1718

._crit_edge8.thread:                              ; preds = %0
  store i8 0, i8* getelementptr inbounds ([1280 x %struct.anon.44]* @image, i64 0, i64 0, i32 3), align 1, !llfi_index !1719
  br label %.lr.ph, !llfi_index !1720

.lr.ph7:                                          ; preds = %59, %0
  %x.05 = phi i64 [ %60, %59 ], [ 1, %0 ], !llfi_index !1721
  %rl.04 = phi i64 [ %rl.1, %59 ], [ 0, %0 ], !llfi_index !1722
  %numpixels.03 = phi i64 [ %numpixels.1, %59 ], [ 0, %0 ], !llfi_index !1723
  %20 = getelementptr inbounds %struct.pixel* %fb, i64 %x.05, i32 0, !llfi_index !1724
  %21 = load float* %20, align 4, !llfi_index !1725
  %22 = fpext float %21 to double, !llfi_index !1726
  %23 = fmul double %22, 2.550000e+02, !llfi_index !1727
  %24 = fptosi double %23 to i64, !llfi_index !1728
  %25 = trunc i64 %24 to i8, !llfi_index !1729
  %26 = getelementptr inbounds %struct.pixel* %fb, i64 %x.05, i32 1, !llfi_index !1730
  %27 = load float* %26, align 4, !llfi_index !1731
  %28 = fpext float %27 to double, !llfi_index !1732
  %29 = fmul double %28, 2.550000e+02, !llfi_index !1733
  %30 = fptosi double %29 to i64, !llfi_index !1734
  %31 = trunc i64 %30 to i8, !llfi_index !1735
  %32 = getelementptr inbounds %struct.pixel* %fb, i64 %x.05, i32 2, !llfi_index !1736
  %33 = load float* %32, align 4, !llfi_index !1737
  %34 = fpext float %33 to double, !llfi_index !1738
  %35 = fmul double %34, 2.550000e+02, !llfi_index !1739
  %36 = fptosi double %35 to i64, !llfi_index !1740
  %37 = trunc i64 %36 to i8, !llfi_index !1741
  %38 = getelementptr inbounds [1280 x %struct.anon.44]* @image, i64 0, i64 %rl.04, i32 0, !llfi_index !1742
  %39 = load i8* %38, align 4, !llfi_index !1743
  %40 = icmp eq i8 %39, %25, !llfi_index !1744
  br i1 %40, label %41, label %52, !llfi_index !1745

; <label>:41                                      ; preds = %.lr.ph7
  %42 = getelementptr inbounds [1280 x %struct.anon.44]* @image, i64 0, i64 %rl.04, i32 1, !llfi_index !1746
  %43 = load i8* %42, align 1, !llfi_index !1747
  %44 = icmp eq i8 %43, %31, !llfi_index !1748
  br i1 %44, label %45, label %52, !llfi_index !1749

; <label>:45                                      ; preds = %41
  %46 = getelementptr inbounds [1280 x %struct.anon.44]* @image, i64 0, i64 %rl.04, i32 2, !llfi_index !1750
  %47 = load i8* %46, align 2, !llfi_index !1751
  %48 = icmp eq i8 %47, %37, !llfi_index !1752
  %49 = icmp slt i64 %numpixels.03, 255, !llfi_index !1753
  %or.cond = and i1 %48, %49, !llfi_index !1754
  br i1 %or.cond, label %50, label %52, !llfi_index !1755

; <label>:50                                      ; preds = %45
  %51 = add nsw i64 %numpixels.03, 1, !llfi_index !1756
  br label %59, !llfi_index !1757

; <label>:52                                      ; preds = %45, %41, %.lr.ph7
  %53 = trunc i64 %numpixels.03 to i8, !llfi_index !1758
  %54 = getelementptr inbounds [1280 x %struct.anon.44]* @image, i64 0, i64 %rl.04, i32 3, !llfi_index !1759
  store i8 %53, i8* %54, align 1, !llfi_index !1760
  %55 = add nsw i64 %rl.04, 1, !llfi_index !1761
  %56 = getelementptr inbounds [1280 x %struct.anon.44]* @image, i64 0, i64 %55, i32 0, !llfi_index !1762
  store i8 %25, i8* %56, align 4, !llfi_index !1763
  %57 = getelementptr inbounds [1280 x %struct.anon.44]* @image, i64 0, i64 %55, i32 1, !llfi_index !1764
  store i8 %31, i8* %57, align 1, !llfi_index !1765
  %58 = getelementptr inbounds [1280 x %struct.anon.44]* @image, i64 0, i64 %55, i32 2, !llfi_index !1766
  store i8 %37, i8* %58, align 2, !llfi_index !1767
  br label %59, !llfi_index !1768

; <label>:59                                      ; preds = %52, %50
  %numpixels.1 = phi i64 [ %51, %50 ], [ 0, %52 ], !llfi_index !1769
  %rl.1 = phi i64 [ %rl.04, %50 ], [ %55, %52 ], !llfi_index !1770
  %60 = add nsw i64 %x.05, 1, !llfi_index !1771
  %exitcond10 = icmp eq i64 %60, %xsize, !llfi_index !1772
  br i1 %exitcond10, label %._crit_edge8, label %.lr.ph7, !llfi_index !1773

._crit_edge8:                                     ; preds = %59
  %61 = trunc i64 %numpixels.1 to i8, !llfi_index !1774
  %62 = getelementptr inbounds [1280 x %struct.anon.44]* @image, i64 0, i64 %rl.1, i32 3, !llfi_index !1775
  store i8 %61, i8* %62, align 1, !llfi_index !1776
  %63 = icmp slt i64 %rl.1, 0, !llfi_index !1777
  br i1 %63, label %._crit_edge, label %.lr.ph, !llfi_index !1778

.lr.ph:                                           ; preds = %._crit_edge8, %._crit_edge8.thread
  %rl.0.lcssa11 = phi i64 [ 0, %._crit_edge8.thread ], [ %rl.1, %._crit_edge8 ], !llfi_index !1779
  br label %64, !llfi_index !1780

; <label>:64                                      ; preds = %64, %.lr.ph
  %x.12 = phi i64 [ 0, %.lr.ph ], [ %78, %64 ], !llfi_index !1781
  %65 = getelementptr inbounds [1280 x %struct.anon.44]* @image, i64 0, i64 %x.12, i32 0, !llfi_index !1782
  %66 = load i8* %65, align 4, !llfi_index !1783
  %67 = zext i8 %66 to i32, !llfi_index !1784
  %68 = getelementptr inbounds [1280 x %struct.anon.44]* @image, i64 0, i64 %x.12, i32 1, !llfi_index !1785
  %69 = load i8* %68, align 1, !llfi_index !1786
  %70 = zext i8 %69 to i32, !llfi_index !1787
  %71 = getelementptr inbounds [1280 x %struct.anon.44]* @image, i64 0, i64 %x.12, i32 2, !llfi_index !1788
  %72 = load i8* %71, align 2, !llfi_index !1789
  %73 = zext i8 %72 to i32, !llfi_index !1790
  %74 = getelementptr inbounds [1280 x %struct.anon.44]* @image, i64 0, i64 %x.12, i32 3, !llfi_index !1791
  %75 = load i8* %74, align 1, !llfi_index !1792
  %76 = zext i8 %75 to i32, !llfi_index !1793
  %77 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %pf, i8* getelementptr inbounds ([9 x i8]* @.str140, i64 0, i64 0), i32 %67, i32 %70, i32 %73, i32 %76) #2, !llfi_index !1794
  %78 = add nsw i64 %x.12, 1, !llfi_index !1795
  %exitcond = icmp eq i64 %x.12, %rl.0.lcssa11, !llfi_index !1796
  br i1 %exitcond, label %._crit_edge, label %64, !llfi_index !1797

._crit_edge:                                      ; preds = %64, %._crit_edge8
  ret void, !llfi_index !1798
}

; Function Attrs: nounwind uwtable
define void @OpenFrameBuffer() #0 {
  %1 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 7), align 8, !llfi_index !1799
  %2 = mul i64 %1, 12, !llfi_index !1800
  %3 = tail call i8* @GlobalMalloc(i64 %2, i8* getelementptr inbounds ([7 x i8]* @.str1141, i64 0, i64 0)), !llfi_index !1801
  %4 = bitcast i8* %3 to %struct.pixel*, !llfi_index !1802
  store %struct.pixel* %4, %struct.pixel** getelementptr inbounds (%struct.display* @Display, i64 0, i32 16), align 8, !llfi_index !1803
  %5 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 7), align 8, !llfi_index !1804
  %6 = icmp sgt i64 %5, 0, !llfi_index !1805
  br i1 %6, label %.lr.ph, label %._crit_edge, !llfi_index !1806

.lr.ph:                                           ; preds = %.lr.ph, %0
  %fb.02 = phi %struct.pixel* [ %10, %.lr.ph ], [ %4, %0 ], !llfi_index !1807
  %i.01 = phi i64 [ %11, %.lr.ph ], [ 0, %0 ], !llfi_index !1808
  %7 = getelementptr inbounds %struct.pixel* %fb.02, i64 0, i32 0, !llfi_index !1809
  store float 0.000000e+00, float* %7, align 4, !llfi_index !1810
  %8 = getelementptr inbounds %struct.pixel* %fb.02, i64 0, i32 1, !llfi_index !1811
  store float 0.000000e+00, float* %8, align 4, !llfi_index !1812
  %9 = getelementptr inbounds %struct.pixel* %fb.02, i64 0, i32 2, !llfi_index !1813
  store float 0.000000e+00, float* %9, align 4, !llfi_index !1814
  %10 = getelementptr inbounds %struct.pixel* %fb.02, i64 1, !llfi_index !1815
  %11 = add nsw i64 %i.01, 1, !llfi_index !1816
  %12 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 7), align 8, !llfi_index !1817
  %13 = icmp slt i64 %11, %12, !llfi_index !1818
  br i1 %13, label %.lr.ph, label %._crit_edge, !llfi_index !1819

._crit_edge:                                      ; preds = %.lr.ph, %0
  ret void, !llfi_index !1820
}

; Function Attrs: nounwind uwtable
define void @AddPixelColor(double* nocapture readonly %c, i64 %x, i64 %y) #0 {
  %1 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), align 8, !llfi_index !1821
  %2 = mul nsw i64 %1, %y, !llfi_index !1822
  %3 = add nsw i64 %2, %x, !llfi_index !1823
  %4 = load %struct.pixel** getelementptr inbounds (%struct.display* @Display, i64 0, i32 16), align 8, !llfi_index !1824
  %5 = load double* %c, align 8, !llfi_index !1825
  %6 = getelementptr inbounds %struct.pixel* %4, i64 %3, i32 0, !llfi_index !1826
  %7 = load float* %6, align 4, !llfi_index !1827
  %8 = fpext float %7 to double, !llfi_index !1828
  %9 = fadd double %5, %8, !llfi_index !1829
  %10 = fptrunc double %9 to float, !llfi_index !1830
  store float %10, float* %6, align 4, !llfi_index !1831
  %11 = getelementptr inbounds double* %c, i64 1, !llfi_index !1832
  %12 = load double* %11, align 8, !llfi_index !1833
  %13 = getelementptr inbounds %struct.pixel* %4, i64 %3, i32 1, !llfi_index !1834
  %14 = load float* %13, align 4, !llfi_index !1835
  %15 = fpext float %14 to double, !llfi_index !1836
  %16 = fadd double %12, %15, !llfi_index !1837
  %17 = fptrunc double %16 to float, !llfi_index !1838
  store float %17, float* %13, align 4, !llfi_index !1839
  %18 = getelementptr inbounds double* %c, i64 2, !llfi_index !1840
  %19 = load double* %18, align 8, !llfi_index !1841
  %20 = getelementptr inbounds %struct.pixel* %4, i64 %3, i32 2, !llfi_index !1842
  %21 = load float* %20, align 4, !llfi_index !1843
  %22 = fpext float %21 to double, !llfi_index !1844
  %23 = fadd double %19, %22, !llfi_index !1845
  %24 = fptrunc double %23 to float, !llfi_index !1846
  store float %24, float* %20, align 4, !llfi_index !1847
  ret void, !llfi_index !1848
}

; Function Attrs: nounwind uwtable
define void @CloseFrameBuffer(i8* %PicFileName) #0 {
  %1 = tail call %struct._IO_FILE* @fopen(i8* %PicFileName, i8* getelementptr inbounds ([3 x i8]* @.str2142, i64 0, i64 0)) #2, !llfi_index !1849
  %2 = icmp eq %struct._IO_FILE* %1, null, !llfi_index !1850
  br i1 %2, label %3, label %5, !llfi_index !1851

; <label>:3                                       ; preds = %0
  %4 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([33 x i8]* @.str3143, i64 0, i64 0), i8* %PicFileName) #2, !llfi_index !1852
  tail call void @exit(i32 -1) #11, !llfi_index !1853
  unreachable, !llfi_index !1854

; <label>:5                                       ; preds = %0
  %6 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), align 8, !llfi_index !1855
  %7 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 6), align 8, !llfi_index !1856
  %8 = load %struct.pixel** getelementptr inbounds (%struct.display* @Display, i64 0, i32 16), align 8, !llfi_index !1857
  %9 = sdiv i64 %6, 256, !llfi_index !1858
  %10 = trunc i64 %9 to i32, !llfi_index !1859
  %sext = shl i32 %10, 24, !llfi_index !1860
  %11 = ashr exact i32 %sext, 24, !llfi_index !1861
  %12 = trunc i64 %6 to i32, !llfi_index !1862
  %sext1 = shl i32 %12, 24, !llfi_index !1863
  %13 = ashr exact i32 %sext1, 24, !llfi_index !1864
  %14 = sdiv i64 %7, 256, !llfi_index !1865
  %15 = trunc i64 %14 to i32, !llfi_index !1866
  %sext2 = shl i32 %15, 24, !llfi_index !1867
  %16 = ashr exact i32 %sext2, 24, !llfi_index !1868
  %17 = trunc i64 %7 to i32, !llfi_index !1869
  %sext3 = shl i32 %17, 24, !llfi_index !1870
  %18 = ashr exact i32 %sext3, 24, !llfi_index !1871
  %19 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([17 x i8]* @.str4144, i64 0, i64 0), i32 0, i32 0, i32 %11, i32 %13, i32 0, i32 0, i32 %16, i32 %18) #2, !llfi_index !1872
  %20 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 6), align 8, !llfi_index !1873
  %21 = icmp sgt i64 %20, 0, !llfi_index !1874
  br i1 %21, label %.preheaderthread-pre-split, label %._crit_edge8, !llfi_index !1875

.preheaderthread-pre-split:                       ; preds = %5
  %.pr = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), align 8, !llfi_index !1876
  br label %.preheader, !llfi_index !1877

.preheader:                                       ; preds = %._crit_edge, %.preheaderthread-pre-split
  %22 = phi i64 [ %.pr, %.preheaderthread-pre-split ], [ %54, %._crit_edge ], !llfi_index !1878
  %fb.06 = phi %struct.pixel* [ %8, %.preheaderthread-pre-split ], [ %55, %._crit_edge ], !llfi_index !1879
  %y.05 = phi i64 [ 0, %.preheaderthread-pre-split ], [ %56, %._crit_edge ], !llfi_index !1880
  %23 = icmp sgt i64 %22, 0, !llfi_index !1881
  br i1 %23, label %.lr.ph, label %._crit_edge, !llfi_index !1882

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %x.04 = phi i64 [ %51, %.lr.ph ], [ 0, %.preheader ], !llfi_index !1883
  %24 = getelementptr inbounds %struct.pixel* %fb.06, i64 %x.04, i32 0, !llfi_index !1884
  %25 = load float* %24, align 4, !llfi_index !1885
  %26 = fpext float %25 to double, !llfi_index !1886
  %27 = fadd double %26, -1.000000e+00, !llfi_index !1887
  %28 = fcmp olt double %27, 0.000000e+00, !llfi_index !1888
  %29 = select i1 %28, float %25, float 1.000000e+00, !llfi_index !1889
  store float %29, float* %24, align 4, !llfi_index !1890
  %30 = getelementptr inbounds %struct.pixel* %fb.06, i64 %x.04, i32 1, !llfi_index !1891
  %31 = load float* %30, align 4, !llfi_index !1892
  %32 = fpext float %31 to double, !llfi_index !1893
  %33 = fadd double %32, -1.000000e+00, !llfi_index !1894
  %34 = fcmp olt double %33, 0.000000e+00, !llfi_index !1895
  %35 = select i1 %34, float %31, float 1.000000e+00, !llfi_index !1896
  store float %35, float* %30, align 4, !llfi_index !1897
  %36 = getelementptr inbounds %struct.pixel* %fb.06, i64 %x.04, i32 2, !llfi_index !1898
  %37 = load float* %36, align 4, !llfi_index !1899
  %38 = fpext float %37 to double, !llfi_index !1900
  %39 = fadd double %38, -1.000000e+00, !llfi_index !1901
  %40 = fcmp olt double %39, 0.000000e+00, !llfi_index !1902
  %41 = select i1 %40, float %37, float 1.000000e+00, !llfi_index !1903
  store float %41, float* %36, align 4, !llfi_index !1904
  %42 = load float* %24, align 4, !llfi_index !1905
  %43 = fcmp ogt float %42, 0.000000e+00, !llfi_index !1906
  %44 = select i1 %43, float %42, float 0.000000e+00, !llfi_index !1907
  store float %44, float* %24, align 4, !llfi_index !1908
  %45 = load float* %30, align 4, !llfi_index !1909
  %46 = fcmp ogt float %45, 0.000000e+00, !llfi_index !1910
  %47 = select i1 %46, float %45, float 0.000000e+00, !llfi_index !1911
  store float %47, float* %30, align 4, !llfi_index !1912
  %48 = load float* %36, align 4, !llfi_index !1913
  %49 = fcmp ogt float %48, 0.000000e+00, !llfi_index !1914
  %50 = select i1 %49, float %48, float 0.000000e+00, !llfi_index !1915
  store float %50, float* %36, align 4, !llfi_index !1916
  %51 = add nsw i64 %x.04, 1, !llfi_index !1917
  %52 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), align 8, !llfi_index !1918
  %53 = icmp slt i64 %51, %52, !llfi_index !1919
  br i1 %53, label %.lr.ph, label %._crit_edge, !llfi_index !1920

._crit_edge:                                      ; preds = %.lr.ph, %.preheader
  %.lcssa = phi i64 [ %22, %.preheader ], [ %52, %.lr.ph ], !llfi_index !1921
  tail call void @RunLengthEncode(%struct._IO_FILE* %1, %struct.pixel* %fb.06, i64 %.lcssa), !llfi_index !1922
  %54 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), align 8, !llfi_index !1923
  %55 = getelementptr inbounds %struct.pixel* %fb.06, i64 %54, !llfi_index !1924
  %56 = add nsw i64 %y.05, 1, !llfi_index !1925
  %57 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 6), align 8, !llfi_index !1926
  %58 = icmp slt i64 %56, %57, !llfi_index !1927
  br i1 %58, label %.preheader, label %._crit_edge8, !llfi_index !1928

._crit_edge8:                                     ; preds = %._crit_edge, %5
  %59 = tail call i32 @fclose(%struct._IO_FILE* %1) #2, !llfi_index !1929
  %60 = load %struct.pixel** getelementptr inbounds (%struct.display* @Display, i64 0, i32 16), align 8, !llfi_index !1930
  %61 = bitcast %struct.pixel* %60 to i8*, !llfi_index !1931
  tail call void @GlobalFree(i8* %61), !llfi_index !1932
  ret void, !llfi_index !1933
}

; Function Attrs: nounwind uwtable
define %struct.element** @MakeElementArray(i64* nocapture %totalElements) #0 {
  %1 = load %struct.gmem** @gm, align 8, !llfi_index !1934
  %2 = getelementptr inbounds %struct.gmem* %1, i64 0, i32 3, !llfi_index !1935
  %3 = load %struct.object** %2, align 8, !llfi_index !1936
  store i64 0, i64* %totalElements, align 8, !llfi_index !1937
  %4 = icmp eq %struct.object* %3, null, !llfi_index !1938
  br i1 %4, label %._crit_edge9, label %.lr.ph8, !llfi_index !1939

.lr.ph8:                                          ; preds = %.lr.ph8, %0
  %po.06 = phi %struct.object* [ %10, %.lr.ph8 ], [ %3, %0 ], !llfi_index !1940
  %5 = getelementptr inbounds %struct.object* %po.06, i64 0, i32 4, !llfi_index !1941
  %6 = load i64* %5, align 8, !llfi_index !1942
  %7 = load i64* %totalElements, align 8, !llfi_index !1943
  %8 = add nsw i64 %7, %6, !llfi_index !1944
  store i64 %8, i64* %totalElements, align 8, !llfi_index !1945
  %9 = getelementptr inbounds %struct.object* %po.06, i64 0, i32 7, !llfi_index !1946
  %10 = load %struct.object** %9, align 8, !llfi_index !1947
  %11 = icmp eq %struct.object* %10, null, !llfi_index !1948
  br i1 %11, label %._crit_edge9, label %.lr.ph8, !llfi_index !1949

._crit_edge9:                                     ; preds = %.lr.ph8, %0
  %12 = load %struct.gmem** @gm, align 8, !llfi_index !1950
  %13 = getelementptr inbounds %struct.gmem* %12, i64 0, i32 3, !llfi_index !1951
  %14 = load %struct.object** %13, align 8, !llfi_index !1952
  %15 = load i64* %totalElements, align 8, !llfi_index !1953
  %16 = tail call i8* @ObjectMalloc(i64 7, i64 %15), !llfi_index !1954
  %17 = bitcast i8* %16 to %struct.element**, !llfi_index !1955
  %18 = icmp eq %struct.object* %14, null, !llfi_index !1956
  br i1 %18, label %._crit_edge5, label %.preheader, !llfi_index !1957

.preheader:                                       ; preds = %._crit_edge, %._crit_edge9
  %currArrayPosition.04 = phi i64 [ %currArrayPosition.1.lcssa, %._crit_edge ], [ 0, %._crit_edge9 ], !llfi_index !1958
  %po.13 = phi %struct.object* [ %32, %._crit_edge ], [ %14, %._crit_edge9 ], !llfi_index !1959
  %19 = getelementptr inbounds %struct.object* %po.13, i64 0, i32 4, !llfi_index !1960
  %20 = load i64* %19, align 8, !llfi_index !1961
  %21 = icmp sgt i64 %20, 0, !llfi_index !1962
  br i1 %21, label %.lr.ph, label %._crit_edge, !llfi_index !1963

.lr.ph:                                           ; preds = %.preheader
  %22 = getelementptr inbounds %struct.object* %po.13, i64 0, i32 3, !llfi_index !1964
  br label %23, !llfi_index !1965

; <label>:23                                      ; preds = %23, %.lr.ph
  %i.02 = phi i64 [ 0, %.lr.ph ], [ %28, %23 ], !llfi_index !1966
  %currArrayPosition.11 = phi i64 [ %currArrayPosition.04, %.lr.ph ], [ %26, %23 ], !llfi_index !1967
  %24 = load %struct.element** %22, align 8, !llfi_index !1968
  %25 = getelementptr inbounds %struct.element* %24, i64 %i.02, !llfi_index !1969
  %26 = add nsw i64 %currArrayPosition.11, 1, !llfi_index !1970
  %27 = getelementptr inbounds %struct.element** %17, i64 %currArrayPosition.11, !llfi_index !1971
  store %struct.element* %25, %struct.element** %27, align 8, !llfi_index !1972
  %28 = add nsw i64 %i.02, 1, !llfi_index !1973
  %29 = load i64* %19, align 8, !llfi_index !1974
  %30 = icmp slt i64 %28, %29, !llfi_index !1975
  br i1 %30, label %23, label %._crit_edge, !llfi_index !1976

._crit_edge:                                      ; preds = %23, %.preheader
  %currArrayPosition.1.lcssa = phi i64 [ %currArrayPosition.04, %.preheader ], [ %26, %23 ], !llfi_index !1977
  %31 = getelementptr inbounds %struct.object* %po.13, i64 0, i32 7, !llfi_index !1978
  %32 = load %struct.object** %31, align 8, !llfi_index !1979
  %33 = icmp eq %struct.object* %32, null, !llfi_index !1980
  br i1 %33, label %._crit_edge5, label %.preheader, !llfi_index !1981

._crit_edge5:                                     ; preds = %._crit_edge, %._crit_edge9
  ret %struct.element** %17, !llfi_index !1982
}

; Function Attrs: nounwind uwtable
define void @PrintGeo(%struct.object* %po) #0 {
  %1 = icmp eq %struct.object* %po, null, !llfi_index !1983
  br i1 %1, label %._crit_edge, label %.lr.ph, !llfi_index !1984

.lr.ph:                                           ; preds = %.lr.ph, %0
  %.01 = phi %struct.object* [ %40, %.lr.ph ], [ %po, %0 ], !llfi_index !1985
  %2 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !1986
  %3 = getelementptr inbounds %struct.object* %.01, i64 0, i32 1, i64 0, !llfi_index !1987
  %4 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([12 x i8]* @.str145, i64 0, i64 0), i8* %3) #2, !llfi_index !1988
  %5 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !1989
  %6 = getelementptr inbounds %struct.object* %.01, i64 0, i32 6, !llfi_index !1990
  %7 = load %struct.surf** %6, align 8, !llfi_index !1991
  %8 = getelementptr inbounds %struct.surf* %7, i64 0, i32 0, i64 0, !llfi_index !1992
  %9 = load double* %8, align 8, !llfi_index !1993
  %10 = getelementptr inbounds %struct.surf* %7, i64 0, i32 0, i64 1, !llfi_index !1994
  %11 = load double* %10, align 8, !llfi_index !1995
  %12 = getelementptr inbounds %struct.surf* %7, i64 0, i32 0, i64 2, !llfi_index !1996
  %13 = load double* %12, align 8, !llfi_index !1997
  %14 = getelementptr inbounds %struct.surf* %7, i64 0, i32 1, i64 0, !llfi_index !1998
  %15 = load double* %14, align 8, !llfi_index !1999
  %16 = getelementptr inbounds %struct.surf* %7, i64 0, i32 1, i64 1, !llfi_index !2000
  %17 = load double* %16, align 8, !llfi_index !2001
  %18 = getelementptr inbounds %struct.surf* %7, i64 0, i32 1, i64 2, !llfi_index !2002
  %19 = load double* %18, align 8, !llfi_index !2003
  %20 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([27 x i8]* @.str1146, i64 0, i64 0), double %9, double %11, double %13, double %15, double %17, double %19) #2, !llfi_index !2004
  %21 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !2005
  %22 = load %struct.surf** %6, align 8, !llfi_index !2006
  %23 = getelementptr inbounds %struct.surf* %22, i64 0, i32 2, !llfi_index !2007
  %24 = load double* %23, align 8, !llfi_index !2008
  %25 = getelementptr inbounds %struct.surf* %22, i64 0, i32 3, !llfi_index !2009
  %26 = load double* %25, align 8, !llfi_index !2010
  %27 = getelementptr inbounds %struct.surf* %22, i64 0, i32 4, !llfi_index !2011
  %28 = load double* %27, align 8, !llfi_index !2012
  %29 = getelementptr inbounds %struct.surf* %22, i64 0, i32 5, !llfi_index !2013
  %30 = load double* %29, align 8, !llfi_index !2014
  %31 = getelementptr inbounds %struct.surf* %22, i64 0, i32 6, !llfi_index !2015
  %32 = load double* %31, align 8, !llfi_index !2016
  %33 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([24 x i8]* @.str2147, i64 0, i64 0), double %24, double %26, double %28, double %30, double %32) #2, !llfi_index !2017
  %34 = getelementptr inbounds %struct.object* %.01, i64 0, i32 5, !llfi_index !2018
  %35 = load %struct.pprocs** %34, align 8, !llfi_index !2019
  %36 = getelementptr inbounds %struct.pprocs* %35, i64 0, i32 1, !llfi_index !2020
  %37 = load void (...)** %36, align 8, !llfi_index !2021
  %38 = bitcast void (...)* %37 to void (%struct.object*, ...)*, !llfi_index !2022
  tail call void (%struct.object*, ...)* %38(%struct.object* %.01) #2, !llfi_index !2023
  %39 = getelementptr inbounds %struct.object* %.01, i64 0, i32 7, !llfi_index !2024
  %40 = load %struct.object** %39, align 8, !llfi_index !2025
  %41 = icmp eq %struct.object* %40, null, !llfi_index !2026
  br i1 %41, label %._crit_edge, label %.lr.ph, !llfi_index !2027

._crit_edge:                                      ; preds = %.lr.ph, %0
  ret void, !llfi_index !2028
}

; Function Attrs: nounwind uwtable
define void @NormalizeGeo(%struct.object* %po, [4 x double]* nocapture readnone %model, [4 x double]* nocapture readnone %modelInvT) #0 {
  %normMat = alloca [4 x [4 x double]], align 16, !llfi_index !2029
  %tempMat = alloca [4 x [4 x double]], align 16, !llfi_index !2030
  %1 = load i64* @TraversalType, align 8, !llfi_index !2031
  %2 = load i64* @ModelNorm, align 8, !llfi_index !2032
  %3 = or i64 %2, %1, !llfi_index !2033
  %4 = icmp eq i64 %3, 0, !llfi_index !2034
  br i1 %4, label %.loopexit, label %.preheader, !llfi_index !2035

.preheader:                                       ; preds = %0
  %5 = icmp eq %struct.object* %po, null, !llfi_index !2036
  br i1 %5, label %._crit_edge, label %.lr.ph10, !llfi_index !2037

.lr.ph10:                                         ; preds = %.lr.ph10, %.preheader
  %.09 = phi %struct.object* [ %34, %.lr.ph10 ], [ %po, %.preheader ], !llfi_index !2038
  %norm_minx.08 = phi double [ %norm_minx.0., %.lr.ph10 ], [ 1.000000e+32, %.preheader ], !llfi_index !2039
  %norm_miny.07 = phi double [ %14, %.lr.ph10 ], [ 1.000000e+32, %.preheader ], !llfi_index !2040
  %norm_minz.06 = phi double [ %norm_minz.0., %.lr.ph10 ], [ 1.000000e+32, %.preheader ], !llfi_index !2041
  %norm_maxx.05 = phi double [ %23, %.lr.ph10 ], [ -1.000000e+32, %.preheader ], !llfi_index !2042
  %norm_maxz.04 = phi double [ %32, %.lr.ph10 ], [ -1.000000e+32, %.preheader ], !llfi_index !2043
  %norm_maxy.03 = phi double [ %norm_maxy.0., %.lr.ph10 ], [ -1.000000e+32, %.preheader ], !llfi_index !2044
  %6 = getelementptr inbounds %struct.object* %.09, i64 0, i32 2, i32 0, i64 0, !llfi_index !2045
  %7 = load double* %6, align 8, !llfi_index !2046
  %8 = fsub double %norm_minx.08, %7, !llfi_index !2047
  %9 = fcmp olt double %8, 0.000000e+00, !llfi_index !2048
  %norm_minx.0. = select i1 %9, double %norm_minx.08, double %7, !llfi_index !2049
  %10 = getelementptr inbounds %struct.object* %.09, i64 0, i32 2, i32 0, i64 1, !llfi_index !2050
  %11 = load double* %10, align 8, !llfi_index !2051
  %12 = fsub double %norm_miny.07, %11, !llfi_index !2052
  %13 = fcmp olt double %12, 0.000000e+00, !llfi_index !2053
  %14 = select i1 %13, double %norm_miny.07, double %11, !llfi_index !2054
  %15 = getelementptr inbounds %struct.object* %.09, i64 0, i32 2, i32 0, i64 2, !llfi_index !2055
  %16 = load double* %15, align 8, !llfi_index !2056
  %17 = fsub double %norm_minz.06, %16, !llfi_index !2057
  %18 = fcmp olt double %17, 0.000000e+00, !llfi_index !2058
  %norm_minz.0. = select i1 %18, double %norm_minz.06, double %16, !llfi_index !2059
  %19 = getelementptr inbounds %struct.object* %.09, i64 0, i32 2, i32 1, i64 0, !llfi_index !2060
  %20 = load double* %19, align 8, !llfi_index !2061
  %21 = fsub double %norm_maxx.05, %20, !llfi_index !2062
  %22 = fcmp ogt double %21, 0.000000e+00, !llfi_index !2063
  %23 = select i1 %22, double %norm_maxx.05, double %20, !llfi_index !2064
  %24 = getelementptr inbounds %struct.object* %.09, i64 0, i32 2, i32 1, i64 1, !llfi_index !2065
  %25 = load double* %24, align 8, !llfi_index !2066
  %26 = fsub double %norm_maxy.03, %25, !llfi_index !2067
  %27 = fcmp ogt double %26, 0.000000e+00, !llfi_index !2068
  %norm_maxy.0. = select i1 %27, double %norm_maxy.03, double %25, !llfi_index !2069
  %28 = getelementptr inbounds %struct.object* %.09, i64 0, i32 2, i32 1, i64 2, !llfi_index !2070
  %29 = load double* %28, align 8, !llfi_index !2071
  %30 = fsub double %norm_maxz.04, %29, !llfi_index !2072
  %31 = fcmp ogt double %30, 0.000000e+00, !llfi_index !2073
  %32 = select i1 %31, double %norm_maxz.04, double %29, !llfi_index !2074
  %33 = getelementptr inbounds %struct.object* %.09, i64 0, i32 7, !llfi_index !2075
  %34 = load %struct.object** %33, align 8, !llfi_index !2076
  %35 = icmp eq %struct.object* %34, null, !llfi_index !2077
  br i1 %35, label %._crit_edge, label %.lr.ph10, !llfi_index !2078

._crit_edge:                                      ; preds = %.lr.ph10, %.preheader
  %norm_minx.0.lcssa = phi double [ 1.000000e+32, %.preheader ], [ %norm_minx.0., %.lr.ph10 ], !llfi_index !2079
  %norm_miny.0.lcssa = phi double [ 1.000000e+32, %.preheader ], [ %14, %.lr.ph10 ], !llfi_index !2080
  %norm_minz.0.lcssa = phi double [ 1.000000e+32, %.preheader ], [ %norm_minz.0., %.lr.ph10 ], !llfi_index !2081
  %norm_maxx.0.lcssa = phi double [ -1.000000e+32, %.preheader ], [ %23, %.lr.ph10 ], !llfi_index !2082
  %norm_maxz.0.lcssa = phi double [ -1.000000e+32, %.preheader ], [ %32, %.lr.ph10 ], !llfi_index !2083
  %norm_maxy.0.lcssa = phi double [ -1.000000e+32, %.preheader ], [ %norm_maxy.0., %.lr.ph10 ], !llfi_index !2084
  %36 = fsub double %norm_minx.0.lcssa, %norm_miny.0.lcssa, !llfi_index !2085
  %37 = fcmp olt double %36, 0.000000e+00, !llfi_index !2086
  %38 = select i1 %37, double %norm_minx.0.lcssa, double %norm_miny.0.lcssa, !llfi_index !2087
  %39 = fsub double %38, %norm_minz.0.lcssa, !llfi_index !2088
  %40 = fcmp olt double %39, 0.000000e+00, !llfi_index !2089
  %41 = select i1 %40, double %38, double %norm_minz.0.lcssa, !llfi_index !2090
  %42 = fsub double %norm_maxx.0.lcssa, %norm_maxy.0.lcssa, !llfi_index !2091
  %43 = fcmp ogt double %42, 0.000000e+00, !llfi_index !2092
  %44 = select i1 %43, double %norm_maxx.0.lcssa, double %norm_maxy.0.lcssa, !llfi_index !2093
  %45 = fsub double %44, %norm_maxz.0.lcssa, !llfi_index !2094
  %46 = fcmp ogt double %45, 0.000000e+00, !llfi_index !2095
  %47 = select i1 %46, double %44, double %norm_maxz.0.lcssa, !llfi_index !2096
  %48 = fsub double %47, %41, !llfi_index !2097
  %49 = fdiv double 1.000000e+00, %48, !llfi_index !2098
  %50 = fmul double %49, %41, !llfi_index !2099
  %51 = fsub double -0.000000e+00, %50, !llfi_index !2100
  %52 = getelementptr inbounds [4 x [4 x double]]* %tempMat, i64 0, i64 0, !llfi_index !2101
  call void @Scale([4 x double]* %52, double %49, double %49, double %49), !llfi_index !2102
  %53 = getelementptr inbounds [4 x [4 x double]]* %normMat, i64 0, i64 0, !llfi_index !2103
  call void @Translate([4 x double]* %53, double %51, double %51, double %51), !llfi_index !2104
  call void @MatrixMult([4 x double]* %53, [4 x double]* %52, [4 x double]* %53), !llfi_index !2105
  br i1 %5, label %.loopexit, label %.lr.ph, !llfi_index !2106

.lr.ph:                                           ; preds = %.lr.ph, %._crit_edge
  %.12 = phi %struct.object* [ %60, %.lr.ph ], [ %po, %._crit_edge ], !llfi_index !2107
  %54 = getelementptr inbounds %struct.object* %.12, i64 0, i32 5, !llfi_index !2108
  %55 = load %struct.pprocs** %54, align 8, !llfi_index !2109
  %56 = getelementptr inbounds %struct.pprocs* %55, i64 0, i32 8, !llfi_index !2110
  %57 = load void (...)** %56, align 8, !llfi_index !2111
  %58 = bitcast void (...)* %57 to void (%struct.object*, [4 x double]*, ...)*, !llfi_index !2112
  call void (%struct.object*, [4 x double]*, ...)* %58(%struct.object* %.12, [4 x double]* %53) #2, !llfi_index !2113
  %59 = getelementptr inbounds %struct.object* %.12, i64 0, i32 7, !llfi_index !2114
  %60 = load %struct.object** %59, align 8, !llfi_index !2115
  %61 = icmp eq %struct.object* %60, null, !llfi_index !2116
  br i1 %61, label %.loopexit, label %.lr.ph, !llfi_index !2117

.loopexit:                                        ; preds = %.lr.ph, %._crit_edge, %0
  ret void, !llfi_index !2118
}

; Function Attrs: nounwind uwtable
define void @ReadGeoFile(i8* %GeoFileName) #0 {
  %dummy = alloca i64, align 8, !llfi_index !2119
  %primop = alloca i8, align 1, !llfi_index !2120
  %objstr = alloca [32 x i8], align 16, !llfi_index !2121
  %objname = alloca [32 x i8], align 16, !llfi_index !2122
  %model = alloca [4 x [4 x double]], align 16, !llfi_index !2123
  %modelInv = alloca [4 x [4 x double]], align 16, !llfi_index !2124
  %modelInvT = alloca [4 x [4 x double]], align 16, !llfi_index !2125
  %1 = call %struct._IO_FILE* @fopen(i8* %GeoFileName, i8* getelementptr inbounds ([2 x i8]* @.str3148, i64 0, i64 0)) #2, !llfi_index !2126
  %2 = icmp eq %struct._IO_FILE* %1, null, !llfi_index !2127
  br i1 %2, label %3, label %5, !llfi_index !2128

; <label>:3                                       ; preds = %0
  %4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str4149, i64 0, i64 0), i8* %GeoFileName) #2, !llfi_index !2129
  call void @exit(i32 1) #11, !llfi_index !2130
  unreachable, !llfi_index !2131

; <label>:5                                       ; preds = %0
  %6 = load %struct.gmem** @gm, align 8, !llfi_index !2132
  %7 = getelementptr inbounds %struct.gmem* %6, i64 0, i32 3, !llfi_index !2133
  store %struct.object* null, %struct.object** %7, align 8, !llfi_index !2134
  store i64 0, i64* @prim_obj_cnt, align 8, !llfi_index !2135
  store i64 0, i64* @prim_elem_cnt, align 8, !llfi_index !2136
  %8 = getelementptr inbounds [4 x [4 x double]]* %model, i64 0, i64 0, !llfi_index !2137
  call void @MatrixCopy([4 x double]* %8, [4 x double]* getelementptr inbounds (%struct.view* @View, i64 0, i32 4, i64 0)), !llfi_index !2138
  %9 = getelementptr inbounds [4 x [4 x double]]* %modelInv, i64 0, i64 0, !llfi_index !2139
  call void @MatrixInverse([4 x double]* %9, [4 x double]* %8), !llfi_index !2140
  %10 = getelementptr inbounds [4 x [4 x double]]* %modelInvT, i64 0, i64 0, !llfi_index !2141
  call void @MatrixTranspose([4 x double]* %10, [4 x double]* %9), !llfi_index !2142
  %11 = call i32 @_IO_getc(%struct._IO_FILE* %1) #2, !llfi_index !2143
  %sext = shl i32 %11, 24, !llfi_index !2144
  %12 = ashr exact i32 %sext, 24, !llfi_index !2145
  %13 = icmp eq i32 %12, 35, !llfi_index !2146
  br i1 %13, label %.preheader18, label %14, !llfi_index !2147

; <label>:14                                      ; preds = %5
  %15 = call i32 @ungetc(i32 %12, %struct._IO_FILE* %1) #2, !llfi_index !2148
  br label %.preheader, !llfi_index !2149

.preheader18:                                     ; preds = %19, %5
  %comchar.0 = phi i32 [ %20, %19 ], [ 0, %5 ], !llfi_index !2150
  %sext1.mask = and i32 %comchar.0, 255, !llfi_index !2151
  %16 = icmp eq i32 %sext1.mask, 35, !llfi_index !2152
  br i1 %16, label %.preheader, label %19, !llfi_index !2153

.preheader:                                       ; preds = %.preheader18, %14
  %17 = getelementptr inbounds [32 x i8]* %objstr, i64 0, i64 0, !llfi_index !2154
  %18 = getelementptr inbounds [32 x i8]* %objname, i64 0, i64 0, !llfi_index !2155
  br label %25, !llfi_index !2156

; <label>:19                                      ; preds = %.preheader18
  %20 = call i32 @_IO_getc(%struct._IO_FILE* %1) #2, !llfi_index !2157
  %sext6.mask = and i32 %20, 255, !llfi_index !2158
  %21 = icmp eq i32 %sext6.mask, 255, !llfi_index !2159
  br i1 %21, label %22, label %.preheader18, !llfi_index !2160

; <label>:22                                      ; preds = %19
  %23 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2161
  %24 = call i64 @fwrite(i8* getelementptr inbounds ([37 x i8]* @.str5150, i64 0, i64 0), i64 36, i64 1, %struct._IO_FILE* %23) #9, !llfi_index !2162
  call void @exit(i32 -1) #11, !llfi_index !2163
  unreachable, !llfi_index !2164

; <label>:25                                      ; preds = %._crit_edge, %.preheader
  %prev.0 = phi %struct.object* [ %36, %._crit_edge ], [ null, %.preheader ], !llfi_index !2165
  %26 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([6 x i8]* @.str6151, i64 0, i64 0), i8* %17, i8* %18) #2, !llfi_index !2166
  switch i32 %26, label %30 [
    i32 -1, label %128
    i32 2, label %27
  ], !llfi_index !2167

; <label>:27                                      ; preds = %25
  %28 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([7 x i8]* @.str7152, i64 0, i64 0)) #12, !llfi_index !2168
  %29 = icmp eq i32 %28, 0, !llfi_index !2169
  br i1 %29, label %32, label %30, !llfi_index !2170

; <label>:30                                      ; preds = %27, %25
  %31 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str8153, i64 0, i64 0), i8* %17) #2, !llfi_index !2171
  call void @exit(i32 -1) #11, !llfi_index !2172
  unreachable, !llfi_index !2173

; <label>:32                                      ; preds = %27
  %33 = load i64* @prim_obj_cnt, align 8, !llfi_index !2174
  %34 = add nsw i64 %33, 1, !llfi_index !2175
  store i64 %34, i64* @prim_obj_cnt, align 8, !llfi_index !2176
  %35 = call i8* @GlobalMalloc(i64 128, i8* getelementptr inbounds ([6 x i8]* @.str9154, i64 0, i64 0)), !llfi_index !2177
  %36 = bitcast i8* %35 to %struct.object*, !llfi_index !2178
  %37 = load i64* @prim_obj_cnt, align 8, !llfi_index !2179
  %38 = bitcast i8* %35 to i64*, !llfi_index !2180
  store i64 %37, i64* %38, align 8, !llfi_index !2181
  %39 = getelementptr inbounds i8* %35, i64 120, !llfi_index !2182
  %40 = bitcast i8* %39 to %struct.object**, !llfi_index !2183
  store %struct.object* null, %struct.object** %40, align 8, !llfi_index !2184
  %41 = getelementptr inbounds i8* %35, i64 8, !llfi_index !2185
  %42 = call i8* @strcpy(i8* %41, i8* %18) #2, !llfi_index !2186
  %43 = load %struct.gmem** @gm, align 8, !llfi_index !2187
  %44 = getelementptr inbounds %struct.gmem* %43, i64 0, i32 3, !llfi_index !2188
  %45 = load %struct.object** %44, align 8, !llfi_index !2189
  %46 = icmp eq %struct.object* %45, null, !llfi_index !2190
  br i1 %46, label %47, label %48, !llfi_index !2191

; <label>:47                                      ; preds = %32
  store %struct.object* %36, %struct.object** %44, align 8, !llfi_index !2192
  br label %50, !llfi_index !2193

; <label>:48                                      ; preds = %32
  %49 = getelementptr inbounds %struct.object* %prev.0, i64 0, i32 7, !llfi_index !2194
  store %struct.object* %36, %struct.object** %49, align 8, !llfi_index !2195
  br label %50, !llfi_index !2196

; <label>:50                                      ; preds = %48, %47
  %51 = call i8* @GlobalMalloc(i64 88, i8* getelementptr inbounds ([6 x i8]* @.str9154, i64 0, i64 0)), !llfi_index !2197
  %52 = bitcast i8* %51 to %struct.surf*, !llfi_index !2198
  %53 = getelementptr inbounds i8* %35, i64 112, !llfi_index !2199
  %54 = bitcast i8* %53 to %struct.surf**, !llfi_index !2200
  store %struct.surf* %52, %struct.surf** %54, align 8, !llfi_index !2201
  %55 = getelementptr inbounds i8* %51, i64 8, !llfi_index !2202
  %56 = getelementptr inbounds i8* %51, i64 16, !llfi_index !2203
  %57 = getelementptr inbounds i8* %51, i64 24, !llfi_index !2204
  %58 = getelementptr inbounds i8* %51, i64 32, !llfi_index !2205
  %59 = getelementptr inbounds i8* %51, i64 40, !llfi_index !2206
  %60 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([24 x i8]* @.str10155, i64 0, i64 0), i8* %51, i8* %55, i8* %56, i8* %57, i8* %58, i8* %59) #2, !llfi_index !2207
  %61 = icmp eq i32 %60, 6, !llfi_index !2208
  br i1 %61, label %63, label %62, !llfi_index !2209

; <label>:62                                      ; preds = %50
  %puts5 = call i32 @puts(i8* getelementptr inbounds ([24 x i8]* @str40, i64 0, i64 0)), !llfi_index !2210
  call void @exit(i32 -1) #11, !llfi_index !2211
  unreachable, !llfi_index !2212

; <label>:63                                      ; preds = %50
  %64 = getelementptr inbounds i8* %51, i64 48, !llfi_index !2213
  %65 = getelementptr inbounds i8* %51, i64 56, !llfi_index !2214
  %66 = getelementptr inbounds i8* %51, i64 64, !llfi_index !2215
  %67 = getelementptr inbounds i8* %51, i64 72, !llfi_index !2216
  %68 = getelementptr inbounds i8* %51, i64 80, !llfi_index !2217
  %69 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([20 x i8]* @.str12157, i64 0, i64 0), i8* %64, i8* %65, i8* %66, i8* %67, i8* %68) #2, !llfi_index !2218
  %70 = icmp eq i32 %69, 5, !llfi_index !2219
  br i1 %70, label %72, label %71, !llfi_index !2220

; <label>:71                                      ; preds = %63
  %puts4 = call i32 @puts(i8* getelementptr inbounds ([39 x i8]* @str39, i64 0, i64 0)), !llfi_index !2221
  call void @exit(i32 -1) #11, !llfi_index !2222
  unreachable, !llfi_index !2223

; <label>:72                                      ; preds = %63
  %73 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([17 x i8]* @.str14159, i64 0, i64 0), i64* %dummy, i64* %dummy, i64* %dummy, i64* %dummy) #2, !llfi_index !2224
  %74 = icmp eq i32 %73, 4, !llfi_index !2225
  br i1 %74, label %76, label %75, !llfi_index !2226

; <label>:75                                      ; preds = %72
  %puts3 = call i32 @puts(i8* getelementptr inbounds ([49 x i8]* @str38, i64 0, i64 0)), !llfi_index !2227
  call void @exit(i32 -1) #11, !llfi_index !2228
  unreachable, !llfi_index !2229

; <label>:76                                      ; preds = %72
  %77 = getelementptr inbounds i8* %35, i64 96, !llfi_index !2230
  %78 = bitcast i8* %77 to i64*, !llfi_index !2231
  %79 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([7 x i8]* @.str16161, i64 0, i64 0), i8* %primop, i8* %77) #2, !llfi_index !2232
  %80 = icmp eq i32 %79, 2, !llfi_index !2233
  br i1 %80, label %82, label %81, !llfi_index !2234

; <label>:81                                      ; preds = %76
  %puts2 = call i32 @puts(i8* getelementptr inbounds ([25 x i8]* @str37, i64 0, i64 0)), !llfi_index !2235
  call void @exit(i32 -1) #11, !llfi_index !2236
  unreachable, !llfi_index !2237

; <label>:82                                      ; preds = %76
  %83 = load i8* %primop, align 1, !llfi_index !2238
  %84 = sext i8 %83 to i32, !llfi_index !2239
  switch i32 %84, label %95 [
    i32 115, label %85
    i32 112, label %88
    i32 116, label %91
    i32 99, label %94
    i32 113, label %94
  ], !llfi_index !2240

; <label>:85                                      ; preds = %82
  %86 = getelementptr inbounds i8* %35, i64 104, !llfi_index !2241
  %87 = bitcast i8* %86 to %struct.pprocs**, !llfi_index !2242
  store %struct.pprocs* @SphProcs, %struct.pprocs** %87, align 8, !llfi_index !2243
  br label %97, !llfi_index !2244

; <label>:88                                      ; preds = %82
  %89 = getelementptr inbounds i8* %35, i64 104, !llfi_index !2245
  %90 = bitcast i8* %89 to %struct.pprocs**, !llfi_index !2246
  store %struct.pprocs* @PolyProcs, %struct.pprocs** %90, align 8, !llfi_index !2247
  br label %97, !llfi_index !2248

; <label>:91                                      ; preds = %82
  %92 = getelementptr inbounds i8* %35, i64 104, !llfi_index !2249
  %93 = bitcast i8* %92 to %struct.pprocs**, !llfi_index !2250
  store %struct.pprocs* @TriProcs, %struct.pprocs** %93, align 8, !llfi_index !2251
  br label %97, !llfi_index !2252

; <label>:94                                      ; preds = %82, %82
  %puts = call i32 @puts(i8* getelementptr inbounds ([53 x i8]* @str36, i64 0, i64 0)), !llfi_index !2253
  call void @exit(i32 -1) #11, !llfi_index !2254
  unreachable, !llfi_index !2255

; <label>:95                                      ; preds = %82
  %96 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str19164, i64 0, i64 0), i32 %84) #2, !llfi_index !2256
  call void @exit(i32 -1) #11, !llfi_index !2257
  unreachable, !llfi_index !2258

; <label>:97                                      ; preds = %91, %88, %85
  %98 = load i64* %78, align 8, !llfi_index !2259
  %99 = mul i64 %98, 72, !llfi_index !2260
  %100 = call i8* @GlobalMalloc(i64 %99, i8* getelementptr inbounds ([6 x i8]* @.str9154, i64 0, i64 0)), !llfi_index !2261
  %101 = bitcast i8* %100 to %struct.element*, !llfi_index !2262
  %102 = getelementptr inbounds i8* %35, i64 88, !llfi_index !2263
  %103 = bitcast i8* %102 to %struct.element**, !llfi_index !2264
  store %struct.element* %101, %struct.element** %103, align 8, !llfi_index !2265
  %104 = load i64* %78, align 8, !llfi_index !2266
  %105 = load i64* @prim_elem_cnt, align 8, !llfi_index !2267
  %106 = add nsw i64 %105, %104, !llfi_index !2268
  store i64 %106, i64* @prim_elem_cnt, align 8, !llfi_index !2269
  %107 = load i64* %78, align 8, !llfi_index !2270
  %108 = icmp slt i64 %107, 1, !llfi_index !2271
  br i1 %108, label %._crit_edge, label %.lr.ph, !llfi_index !2272

.lr.ph:                                           ; preds = %.lr.ph, %97
  %pe.08 = phi %struct.element* [ %111, %.lr.ph ], [ %101, %97 ], !llfi_index !2273
  %i.07 = phi i64 [ %110, %.lr.ph ], [ 1, %97 ], !llfi_index !2274
  %109 = getelementptr inbounds %struct.element* %pe.08, i64 0, i32 0, !llfi_index !2275
  store i64 %i.07, i64* %109, align 8, !llfi_index !2276
  %110 = add nsw i64 %i.07, 1, !llfi_index !2277
  %111 = getelementptr inbounds %struct.element* %pe.08, i64 1, !llfi_index !2278
  %112 = load i64* %78, align 8, !llfi_index !2279
  %113 = icmp slt i64 %i.07, %112, !llfi_index !2280
  br i1 %113, label %.lr.ph, label %._crit_edge, !llfi_index !2281

._crit_edge:                                      ; preds = %.lr.ph, %97
  %114 = getelementptr inbounds i8* %35, i64 104, !llfi_index !2282
  %115 = bitcast i8* %114 to %struct.pprocs**, !llfi_index !2283
  %116 = load %struct.pprocs** %115, align 8, !llfi_index !2284
  %117 = getelementptr inbounds %struct.pprocs* %116, i64 0, i32 2, !llfi_index !2285
  %118 = load void (...)** %117, align 8, !llfi_index !2286
  %119 = bitcast void (...)* %118 to void (%struct.object*, %struct._IO_FILE*, ...)*, !llfi_index !2287
  call void (%struct.object*, %struct._IO_FILE*, ...)* %119(%struct.object* %36, %struct._IO_FILE* %1) #2, !llfi_index !2288
  %120 = load %struct.pprocs** %115, align 8, !llfi_index !2289
  %121 = getelementptr inbounds %struct.pprocs* %120, i64 0, i32 4, !llfi_index !2290
  %122 = load void (...)** %121, align 8, !llfi_index !2291
  %123 = bitcast void (...)* %122 to void (%struct.object*, [4 x double]*, [4 x double]*, ...)*, !llfi_index !2292
  call void (%struct.object*, [4 x double]*, [4 x double]*, ...)* %123(%struct.object* %36, [4 x double]* %8, [4 x double]* %10) #2, !llfi_index !2293
  %124 = load %struct.pprocs** %115, align 8, !llfi_index !2294
  %125 = getelementptr inbounds %struct.pprocs* %124, i64 0, i32 9, !llfi_index !2295
  %126 = load void (...)** %125, align 8, !llfi_index !2296
  %127 = bitcast void (...)* %126 to void (%struct.object*, ...)*, !llfi_index !2297
  call void (%struct.object*, ...)* %127(%struct.object* %36) #2, !llfi_index !2298
  br label %25, !llfi_index !2299

; <label>:128                                     ; preds = %25
  %129 = load %struct.gmem** @gm, align 8, !llfi_index !2300
  %130 = getelementptr inbounds %struct.gmem* %129, i64 0, i32 3, !llfi_index !2301
  %131 = load %struct.object** %130, align 8, !llfi_index !2302
  call void @NormalizeGeo(%struct.object* %131, [4 x double]* undef, [4 x double]* undef), !llfi_index !2303
  %132 = call i32 @fclose(%struct._IO_FILE* %1) #2, !llfi_index !2304
  ret void, !llfi_index !2305
}

; Function Attrs: nounwind
declare i32 @_IO_getc(%struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind
declare i32 @ungetc(i32, %struct._IO_FILE* nocapture) #1

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8* nocapture readonly) #1

; Function Attrs: nounwind uwtable
define void @prn_voxel(%struct.voxel* nocapture readonly %v) #0 {
  %1 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2306
  %2 = getelementptr inbounds %struct.voxel* %v, i64 0, i32 0, !llfi_index !2307
  %3 = load i64* %2, align 8, !llfi_index !2308
  %4 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([28 x i8]* @.str165, i64 0, i64 0), i64 %3) #10, !llfi_index !2309
  %5 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2310
  %6 = getelementptr inbounds %struct.voxel* %v, i64 0, i32 4, !llfi_index !2311
  %7 = load i8* %6, align 1, !llfi_index !2312
  %8 = sext i8 %7 to i32, !llfi_index !2313
  %9 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([22 x i8]* @.str1166, i64 0, i64 0), i32 %8) #10, !llfi_index !2314
  %10 = load i8* %6, align 1, !llfi_index !2315
  %11 = icmp eq i8 %10, 2, !llfi_index !2316
  br i1 %11, label %12, label %32, !llfi_index !2317

; <label>:12                                      ; preds = %0
  %13 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2318
  %14 = tail call i64 @fwrite(i8* getelementptr inbounds ([20 x i8]* @.str2167, i64 0, i64 0), i64 19, i64 1, %struct._IO_FILE* %13) #9, !llfi_index !2319
  %15 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2320
  %16 = tail call i64 @fwrite(i8* getelementptr inbounds ([33 x i8]* @.str3168, i64 0, i64 0), i64 32, i64 1, %struct._IO_FILE* %15) #9, !llfi_index !2321
  %17 = getelementptr inbounds %struct.voxel* %v, i64 0, i32 3, !llfi_index !2322
  %18 = load i8** %17, align 8, !llfi_index !2323
  %19 = bitcast i8* %18 to %struct.element**, !llfi_index !2324
  %20 = getelementptr inbounds %struct.voxel* %v, i64 0, i32 1, !llfi_index !2325
  %21 = load i64* %20, align 8, !llfi_index !2326
  %22 = icmp sgt i64 %21, 0, !llfi_index !2327
  br i1 %22, label %.lr.ph, label %thread-pre-split, !llfi_index !2328

.lr.ph:                                           ; preds = %.lr.ph, %12
  %i.01 = phi i64 [ %29, %.lr.ph ], [ 0, %12 ], !llfi_index !2329
  %23 = getelementptr inbounds %struct.element** %19, i64 %i.01, !llfi_index !2330
  %24 = load %struct.element** %23, align 8, !llfi_index !2331
  %25 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2332
  %26 = getelementptr inbounds %struct.element* %24, i64 0, i32 0, !llfi_index !2333
  %27 = load i64* %26, align 8, !llfi_index !2334
  %28 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([18 x i8]* @.str4169, i64 0, i64 0), i64 %27) #10, !llfi_index !2335
  %29 = add nsw i64 %i.01, 1, !llfi_index !2336
  %30 = load i64* %20, align 8, !llfi_index !2337
  %31 = icmp slt i64 %29, %30, !llfi_index !2338
  br i1 %31, label %.lr.ph, label %thread-pre-split, !llfi_index !2339

thread-pre-split:                                 ; preds = %.lr.ph, %12
  %.pr = load i8* %6, align 1, !llfi_index !2340
  br label %32, !llfi_index !2341

; <label>:32                                      ; preds = %thread-pre-split, %0
  %33 = phi i8 [ %.pr, %thread-pre-split ], [ %10, %0 ], !llfi_index !2342
  %34 = icmp eq i8 %33, 3, !llfi_index !2343
  br i1 %34, label %35, label %43, !llfi_index !2344

; <label>:35                                      ; preds = %32
  %36 = getelementptr inbounds %struct.voxel* %v, i64 0, i32 3, !llfi_index !2345
  %37 = load i8** %36, align 8, !llfi_index !2346
  %38 = bitcast i8* %37 to %struct.grid*, !llfi_index !2347
  tail call void @prn_grid(%struct.grid* %38), !llfi_index !2348
  %39 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2349
  %40 = bitcast i8* %37 to i64*, !llfi_index !2350
  %41 = load i64* %40, align 8, !llfi_index !2351
  %42 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([26 x i8]* @.str5170, i64 0, i64 0), i64 %41) #10, !llfi_index !2352
  br label %43, !llfi_index !2353

; <label>:43                                      ; preds = %35, %32
  %44 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2354
  %45 = tail call i64 @fwrite(i8* getelementptr inbounds ([16 x i8]* @.str6171, i64 0, i64 0), i64 15, i64 1, %struct._IO_FILE* %44) #9, !llfi_index !2355
  ret void, !llfi_index !2356
}

; Function Attrs: nounwind uwtable
define void @prn_grid(%struct.grid* nocapture readonly %g) #0 {
  %1 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2357
  %2 = getelementptr inbounds %struct.grid* %g, i64 0, i32 0, !llfi_index !2358
  %3 = load i64* %2, align 8, !llfi_index !2359
  %4 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([22 x i8]* @.str7172, i64 0, i64 0), i64 %3) #10, !llfi_index !2360
  %5 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2361
  %6 = getelementptr inbounds %struct.grid* %g, i64 0, i32 4, !llfi_index !2362
  %7 = load i64* %6, align 8, !llfi_index !2363
  %8 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([26 x i8]* @.str8173, i64 0, i64 0), i64 %7) #10, !llfi_index !2364
  %9 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2365
  %10 = getelementptr inbounds %struct.grid* %g, i64 0, i32 5, i64 0, !llfi_index !2366
  %11 = load i64* %10, align 8, !llfi_index !2367
  %12 = getelementptr inbounds %struct.grid* %g, i64 0, i32 5, i64 1, !llfi_index !2368
  %13 = load i64* %12, align 8, !llfi_index !2369
  %14 = getelementptr inbounds %struct.grid* %g, i64 0, i32 5, i64 2, !llfi_index !2370
  %15 = load i64* %14, align 8, !llfi_index !2371
  %16 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([42 x i8]* @.str9174, i64 0, i64 0), i64 %11, i64 %13, i64 %15) #10, !llfi_index !2372
  %17 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2373
  %18 = getelementptr inbounds %struct.grid* %g, i64 0, i32 6, !llfi_index !2374
  %19 = load i64* %18, align 8, !llfi_index !2375
  %20 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([28 x i8]* @.str10175, i64 0, i64 0), i64 %19) #10, !llfi_index !2376
  %21 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2377
  %22 = getelementptr inbounds %struct.grid* %g, i64 0, i32 7, i64 0, !llfi_index !2378
  %23 = load double* %22, align 8, !llfi_index !2379
  %24 = getelementptr inbounds %struct.grid* %g, i64 0, i32 7, i64 1, !llfi_index !2380
  %25 = load double* %24, align 8, !llfi_index !2381
  %26 = getelementptr inbounds %struct.grid* %g, i64 0, i32 7, i64 2, !llfi_index !2382
  %27 = load double* %26, align 8, !llfi_index !2383
  %28 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([37 x i8]* @.str11176, i64 0, i64 0), double %23, double %25, double %27) #10, !llfi_index !2384
  %29 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2385
  %30 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 0, !llfi_index !2386
  %31 = load double* %30, align 8, !llfi_index !2387
  %32 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 1, !llfi_index !2388
  %33 = load double* %32, align 8, !llfi_index !2389
  %34 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 2, !llfi_index !2390
  %35 = load double* %34, align 8, !llfi_index !2391
  %36 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([42 x i8]* @.str12177, i64 0, i64 0), double %31, double %33, double %35) #10, !llfi_index !2392
  %37 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2393
  %38 = getelementptr inbounds %struct.grid* %g, i64 0, i32 9, !llfi_index !2394
  %39 = load i64* %38, align 8, !llfi_index !2395
  %40 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([29 x i8]* @.str13178, i64 0, i64 0), i64 %39) #10, !llfi_index !2396
  %41 = getelementptr inbounds %struct.grid* %g, i64 0, i32 11, !llfi_index !2397
  %42 = load %struct.grid** %41, align 8, !llfi_index !2398
  %43 = icmp eq %struct.grid* %42, null, !llfi_index !2399
  %44 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2400
  br i1 %43, label %49, label %45, !llfi_index !2401

; <label>:45                                      ; preds = %0
  %46 = getelementptr inbounds %struct.grid* %42, i64 0, i32 0, !llfi_index !2402
  %47 = load i64* %46, align 8, !llfi_index !2403
  %48 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([27 x i8]* @.str14179, i64 0, i64 0), i64 %47) #10, !llfi_index !2404
  br label %51, !llfi_index !2405

; <label>:49                                      ; preds = %0
  %50 = tail call i64 @fwrite(i8* getelementptr inbounds ([28 x i8]* @.str15180, i64 0, i64 0), i64 27, i64 1, %struct._IO_FILE* %44) #9, !llfi_index !2406
  br label %51, !llfi_index !2407

; <label>:51                                      ; preds = %49, %45
  %52 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2408
  %53 = tail call i64 @fwrite(i8* getelementptr inbounds ([17 x i8]* @.str16181, i64 0, i64 0), i64 16, i64 1, %struct._IO_FILE* %52) #9, !llfi_index !2409
  %54 = load i64* %12, align 8, !llfi_index !2410
  %55 = load i64* %14, align 8, !llfi_index !2411
  %56 = mul nsw i64 %55, %54, !llfi_index !2412
  %57 = icmp sgt i64 %56, 0, !llfi_index !2413
  br i1 %57, label %.lr.ph, label %._crit_edge, !llfi_index !2414

.lr.ph:                                           ; preds = %51
  %58 = mul i64 %55, %54, !llfi_index !2415
  br label %59, !llfi_index !2416

; <label>:59                                      ; preds = %67, %.lr.ph
  %i.01 = phi i64 [ 0, %.lr.ph ], [ %68, %67 ], !llfi_index !2417
  %60 = tail call i64 @lookup_emptycells(i64 %i.01, %struct.grid* %g), !llfi_index !2418
  %61 = icmp eq i64 %60, 1, !llfi_index !2419
  br i1 %61, label %62, label %65, !llfi_index !2420

; <label>:62                                      ; preds = %59
  %63 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2421
  %64 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([30 x i8]* @.str17182, i64 0, i64 0), i64 %i.01) #10, !llfi_index !2422
  br label %67, !llfi_index !2423

; <label>:65                                      ; preds = %59
  %66 = tail call %struct.voxel* @lookup_hashtable(i64 %i.01, %struct.grid* %g), !llfi_index !2424
  tail call void @prn_voxel(%struct.voxel* %66), !llfi_index !2425
  br label %67, !llfi_index !2426

; <label>:67                                      ; preds = %65, %62
  %68 = add nsw i64 %i.01, 1, !llfi_index !2427
  %exitcond = icmp eq i64 %68, %58, !llfi_index !2428
  br i1 %exitcond, label %._crit_edge, label %59, !llfi_index !2429

._crit_edge:                                      ; preds = %67, %51
  %69 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2430
  %70 = tail call i64 @fwrite(i8* getelementptr inbounds ([15 x i8]* @.str18183, i64 0, i64 0), i64 14, i64 1, %struct._IO_FILE* %69) #9, !llfi_index !2431
  ret void, !llfi_index !2432
}

; Function Attrs: nounwind uwtable
define void @prn_ray(%struct.ray* nocapture readonly %r) #0 {
  %1 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2433
  %2 = getelementptr inbounds %struct.ray* %r, i64 0, i32 0, !llfi_index !2434
  %3 = load i64* %2, align 8, !llfi_index !2435
  %4 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([24 x i8]* @.str19184, i64 0, i64 0), i64 %3) #10, !llfi_index !2436
  %5 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2437
  %6 = getelementptr inbounds %struct.ray* %r, i64 0, i32 3, i64 0, !llfi_index !2438
  %7 = load double* %6, align 8, !llfi_index !2439
  %8 = getelementptr inbounds %struct.ray* %r, i64 0, i32 3, i64 1, !llfi_index !2440
  %9 = load double* %8, align 8, !llfi_index !2441
  %10 = getelementptr inbounds %struct.ray* %r, i64 0, i32 3, i64 2, !llfi_index !2442
  %11 = load double* %10, align 8, !llfi_index !2443
  %12 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([43 x i8]* @.str20185, i64 0, i64 0), double %7, double %9, double %11) #10, !llfi_index !2444
  %13 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2445
  %14 = getelementptr inbounds %struct.ray* %r, i64 0, i32 4, i64 0, !llfi_index !2446
  %15 = load double* %14, align 8, !llfi_index !2447
  %16 = getelementptr inbounds %struct.ray* %r, i64 0, i32 4, i64 1, !llfi_index !2448
  %17 = load double* %16, align 8, !llfi_index !2449
  %18 = getelementptr inbounds %struct.ray* %r, i64 0, i32 4, i64 2, !llfi_index !2450
  %19 = load double* %18, align 8, !llfi_index !2451
  %20 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([43 x i8]* @.str21186, i64 0, i64 0), double %15, double %17, double %19) #10, !llfi_index !2452
  %21 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2453
  %22 = getelementptr inbounds %struct.ray* %r, i64 0, i32 8, i64 0, !llfi_index !2454
  %23 = load i64* %22, align 8, !llfi_index !2455
  %24 = getelementptr inbounds %struct.ray* %r, i64 0, i32 8, i64 1, !llfi_index !2456
  %25 = load i64* %24, align 8, !llfi_index !2457
  %26 = getelementptr inbounds %struct.ray* %r, i64 0, i32 8, i64 2, !llfi_index !2458
  %27 = load i64* %26, align 8, !llfi_index !2459
  %28 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([48 x i8]* @.str22187, i64 0, i64 0), i64 %23, i64 %25, i64 %27) #10, !llfi_index !2460
  %29 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2461
  %30 = getelementptr inbounds %struct.ray* %r, i64 0, i32 7, !llfi_index !2462
  %31 = load i64* %30, align 8, !llfi_index !2463
  %32 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([24 x i8]* @.str23188, i64 0, i64 0), i64 %31) #10, !llfi_index !2464
  %33 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2465
  %34 = tail call i64 @fwrite(i8* getelementptr inbounds ([19 x i8]* @.str24189, i64 0, i64 0), i64 18, i64 1, %struct._IO_FILE* %33) #9, !llfi_index !2466
  %35 = getelementptr inbounds %struct.ray* %r, i64 0, i32 6, !llfi_index !2467
  %36 = load %struct.rayinfo** %35, align 8, !llfi_index !2468
  %37 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 0, !llfi_index !2469
  %38 = load %struct.grid** %37, align 8, !llfi_index !2470
  %39 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2471
  %40 = getelementptr inbounds %struct.grid* %38, i64 0, i32 0, !llfi_index !2472
  %41 = load i64* %40, align 8, !llfi_index !2473
  %42 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([33 x i8]* @.str25190, i64 0, i64 0), i64 %41) #10, !llfi_index !2474
  %43 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2475
  %44 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 1, i64 0, !llfi_index !2476
  %45 = load double* %44, align 8, !llfi_index !2477
  %46 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 1, i64 1, !llfi_index !2478
  %47 = load double* %46, align 8, !llfi_index !2479
  %48 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 1, i64 2, !llfi_index !2480
  %49 = load double* %48, align 8, !llfi_index !2481
  %50 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([43 x i8]* @.str26191, i64 0, i64 0), double %45, double %47, double %49) #10, !llfi_index !2482
  %51 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2483
  %52 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 2, !llfi_index !2484
  %53 = load i64* %52, align 8, !llfi_index !2485
  %54 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([30 x i8]* @.str27192, i64 0, i64 0), i64 %53) #10, !llfi_index !2486
  %55 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2487
  %56 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 3, !llfi_index !2488
  %57 = load double* %56, align 8, !llfi_index !2489
  %58 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([25 x i8]* @.str28193, i64 0, i64 0), double %57) #10, !llfi_index !2490
  %59 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2491
  %60 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 4, !llfi_index !2492
  %61 = load i64* %60, align 8, !llfi_index !2493
  %62 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([29 x i8]* @.str29194, i64 0, i64 0), i64 %61) #10, !llfi_index !2494
  %63 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2495
  %64 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 5, !llfi_index !2496
  %65 = load double* %64, align 8, !llfi_index !2497
  %66 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([26 x i8]* @.str30195, i64 0, i64 0), double %65) #10, !llfi_index !2498
  %67 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2499
  %68 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 6, i64 0, !llfi_index !2500
  %69 = load double* %68, align 8, !llfi_index !2501
  %70 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 6, i64 1, !llfi_index !2502
  %71 = load double* %70, align 8, !llfi_index !2503
  %72 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 6, i64 2, !llfi_index !2504
  %73 = load double* %72, align 8, !llfi_index !2505
  %74 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %67, i8* getelementptr inbounds ([47 x i8]* @.str31196, i64 0, i64 0), double %69, double %71, double %73) #10, !llfi_index !2506
  %75 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2507
  %76 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 7, i64 0, !llfi_index !2508
  %77 = load i64* %76, align 8, !llfi_index !2509
  %78 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 7, i64 1, !llfi_index !2510
  %79 = load i64* %78, align 8, !llfi_index !2511
  %80 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 7, i64 2, !llfi_index !2512
  %81 = load i64* %80, align 8, !llfi_index !2513
  %82 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([49 x i8]* @.str32197, i64 0, i64 0), i64 %77, i64 %79, i64 %81) #10, !llfi_index !2514
  %83 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2515
  %84 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 8, !llfi_index !2516
  %85 = load i64* %84, align 8, !llfi_index !2517
  %86 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %83, i8* getelementptr inbounds ([28 x i8]* @.str33198, i64 0, i64 0), i64 %85) #10, !llfi_index !2518
  %87 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2519
  %88 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 9, i64 0, !llfi_index !2520
  %89 = load i64* %88, align 8, !llfi_index !2521
  %90 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 9, i64 1, !llfi_index !2522
  %91 = load i64* %90, align 8, !llfi_index !2523
  %92 = getelementptr inbounds %struct.rayinfo* %36, i64 0, i32 9, i64 2, !llfi_index !2524
  %93 = load i64* %92, align 8, !llfi_index !2525
  %94 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %87, i8* getelementptr inbounds ([52 x i8]* @.str34199, i64 0, i64 0), i64 %89, i64 %91, i64 %93) #10, !llfi_index !2526
  %95 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2527
  %96 = tail call i64 @fwrite(i8* getelementptr inbounds ([14 x i8]* @.str35200, i64 0, i64 0), i64 13, i64 1, %struct._IO_FILE* %95) #9, !llfi_index !2528
  ret void, !llfi_index !2529
}

; Function Attrs: nounwind uwtable
define void @prn_PrimElem(%struct.element* %p) #0 {
  %1 = icmp eq %struct.element* %p, null, !llfi_index !2530
  %2 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2531
  br i1 %1, label %3, label %6, !llfi_index !2532

; <label>:3                                       ; preds = %0
  %4 = load i8** @ProgName, align 8, !llfi_index !2533
  %5 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([33 x i8]* @.str36201, i64 0, i64 0), i8* %4) #10, !llfi_index !2534
  tail call void @exit(i32 -1) #11, !llfi_index !2535
  unreachable, !llfi_index !2536

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.element* %p, i64 0, i32 0, !llfi_index !2537
  %8 = load i64* %7, align 8, !llfi_index !2538
  %9 = getelementptr inbounds %struct.element* %p, i64 0, i32 1, !llfi_index !2539
  %10 = load %struct.object** %9, align 8, !llfi_index !2540
  %11 = getelementptr inbounds %struct.object* %10, i64 0, i32 0, !llfi_index !2541
  %12 = load i64* %11, align 8, !llfi_index !2542
  %13 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([56 x i8]* @.str37202, i64 0, i64 0), i64 %8, %struct.element* %p, i64 %12, %struct.object* %10) #10, !llfi_index !2543
  %14 = getelementptr inbounds %struct.element* %p, i64 0, i32 3, i32 0, i64 0, !llfi_index !2544
  %15 = load double* %14, align 8, !llfi_index !2545
  %16 = getelementptr inbounds %struct.element* %p, i64 0, i32 3, i32 0, i64 1, !llfi_index !2546
  %17 = load double* %16, align 8, !llfi_index !2547
  %18 = getelementptr inbounds %struct.element* %p, i64 0, i32 3, i32 0, i64 2, !llfi_index !2548
  %19 = load double* %18, align 8, !llfi_index !2549
  %20 = getelementptr inbounds %struct.element* %p, i64 0, i32 3, i32 1, i64 0, !llfi_index !2550
  %21 = load double* %20, align 8, !llfi_index !2551
  %22 = getelementptr inbounds %struct.element* %p, i64 0, i32 3, i32 1, i64 1, !llfi_index !2552
  %23 = load double* %22, align 8, !llfi_index !2553
  %24 = getelementptr inbounds %struct.element* %p, i64 0, i32 3, i32 1, i64 2, !llfi_index !2554
  %25 = load double* %24, align 8, !llfi_index !2555
  %26 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2556
  %27 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([60 x i8]* @.str38203, i64 0, i64 0), double %15, double %17, double %19, double %21, double %23, double %25) #10, !llfi_index !2557
  ret void, !llfi_index !2558
}

; Function Attrs: nounwind uwtable
define void @prn_bintree_node(%struct.btnode* nocapture readonly %b) #0 {
  %1 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2559
  %2 = tail call i64 @fwrite(i8* getelementptr inbounds ([16 x i8]* @.str39204, i64 0, i64 0), i64 15, i64 1, %struct._IO_FILE* %1) #9, !llfi_index !2560
  %3 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2561
  %4 = getelementptr inbounds %struct.btnode* %b, i64 0, i32 4, i64 0, !llfi_index !2562
  %5 = load i64* %4, align 8, !llfi_index !2563
  %6 = getelementptr inbounds %struct.btnode* %b, i64 0, i32 4, i64 1, !llfi_index !2564
  %7 = load i64* %6, align 8, !llfi_index !2565
  %8 = getelementptr inbounds %struct.btnode* %b, i64 0, i32 4, i64 2, !llfi_index !2566
  %9 = load i64* %8, align 8, !llfi_index !2567
  %10 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([42 x i8]* @.str40205, i64 0, i64 0), i64 %5, i64 %7, i64 %9) #10, !llfi_index !2568
  %11 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2569
  %12 = getelementptr inbounds %struct.btnode* %b, i64 0, i32 3, i64 0, !llfi_index !2570
  %13 = load i64* %12, align 8, !llfi_index !2571
  %14 = getelementptr inbounds %struct.btnode* %b, i64 0, i32 3, i64 1, !llfi_index !2572
  %15 = load i64* %14, align 8, !llfi_index !2573
  %16 = getelementptr inbounds %struct.btnode* %b, i64 0, i32 3, i64 2, !llfi_index !2574
  %17 = load i64* %16, align 8, !llfi_index !2575
  %18 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([35 x i8]* @.str41206, i64 0, i64 0), i64 %13, i64 %15, i64 %17) #10, !llfi_index !2576
  %19 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2577
  %20 = getelementptr inbounds %struct.btnode* %b, i64 0, i32 1, i64 0, !llfi_index !2578
  %21 = load double* %20, align 8, !llfi_index !2579
  %22 = getelementptr inbounds %struct.btnode* %b, i64 0, i32 1, i64 1, !llfi_index !2580
  %23 = load double* %22, align 8, !llfi_index !2581
  %24 = getelementptr inbounds %struct.btnode* %b, i64 0, i32 1, i64 2, !llfi_index !2582
  %25 = load double* %24, align 8, !llfi_index !2583
  %26 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([38 x i8]* @.str42207, i64 0, i64 0), double %21, double %23, double %25) #10, !llfi_index !2584
  %27 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2585
  %28 = getelementptr inbounds %struct.btnode* %b, i64 0, i32 5, !llfi_index !2586
  %29 = load i64* %28, align 8, !llfi_index !2587
  %30 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([22 x i8]* @.str43208, i64 0, i64 0), i64 %29) #10, !llfi_index !2588
  %31 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2589
  %32 = getelementptr inbounds %struct.btnode* %b, i64 0, i32 2, !llfi_index !2590
  %33 = load i64* %32, align 8, !llfi_index !2591
  %34 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([31 x i8]* @.str44209, i64 0, i64 0), i64 %33) #10, !llfi_index !2592
  %35 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2593
  %36 = tail call i64 @fwrite(i8* getelementptr inbounds ([30 x i8]* @.str45210, i64 0, i64 0), i64 29, i64 1, %struct._IO_FILE* %35) #9, !llfi_index !2594
  %37 = load i64* %32, align 8, !llfi_index !2595
  %38 = icmp sgt i64 %37, 0, !llfi_index !2596
  br i1 %38, label %.lr.ph, label %.loopexit, !llfi_index !2597

.lr.ph:                                           ; preds = %0
  %39 = getelementptr inbounds %struct.btnode* %b, i64 0, i32 0, !llfi_index !2598
  br label %40, !llfi_index !2599

; <label>:40                                      ; preds = %52, %.lr.ph
  %i.01 = phi i64 [ 0, %.lr.ph ], [ %53, %52 ], !llfi_index !2600
  %41 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2601
  %42 = load %struct.element*** %39, align 8, !llfi_index !2602
  %43 = getelementptr inbounds %struct.element** %42, i64 %i.01, !llfi_index !2603
  %44 = load %struct.element** %43, align 8, !llfi_index !2604
  %45 = getelementptr inbounds %struct.element* %44, i64 0, i32 0, !llfi_index !2605
  %46 = load i64* %45, align 8, !llfi_index !2606
  %47 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([6 x i8]* @.str46211, i64 0, i64 0), i64 %46) #10, !llfi_index !2607
  %48 = srem i64 %i.01, 8, !llfi_index !2608
  %49 = icmp eq i64 %48, 7, !llfi_index !2609
  br i1 %49, label %50, label %52, !llfi_index !2610

; <label>:50                                      ; preds = %40
  %51 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2611
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %51) #9, !llfi_index !2612
  br label %52, !llfi_index !2613

; <label>:52                                      ; preds = %50, %40
  %53 = add nsw i64 %i.01, 1, !llfi_index !2614
  %54 = load i64* %32, align 8, !llfi_index !2615
  %55 = icmp slt i64 %53, %54, !llfi_index !2616
  br i1 %55, label %40, label %.loopexit, !llfi_index !2617

.loopexit:                                        ; preds = %52, %0
  %56 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2618
  %57 = tail call i64 @fwrite(i8* getelementptr inbounds ([27 x i8]* @.str48213, i64 0, i64 0), i64 26, i64 1, %struct._IO_FILE* %56) #9, !llfi_index !2619
  ret void, !llfi_index !2620
}

; Function Attrs: nounwind uwtable
define void @prn_bintree_leaves(%struct.btnode* nocapture readonly %root) #0 {
  %1 = getelementptr inbounds %struct.btnode* %root, i64 0, i32 5, !llfi_index !2621
  %2 = load i64* %1, align 8, !llfi_index !2622
  %3 = icmp eq i64 %2, -1, !llfi_index !2623
  br i1 %3, label %tailrecurse._crit_edge, label %tailrecurse, !llfi_index !2624

tailrecurse._crit_edge:                           ; preds = %tailrecurse, %0
  %root.tr.lcssa = phi %struct.btnode* [ %root, %0 ], [ %7, %tailrecurse ], !llfi_index !2625
  tail call void @prn_bintree_node(%struct.btnode* %root.tr.lcssa), !llfi_index !2626
  ret void, !llfi_index !2627

tailrecurse:                                      ; preds = %tailrecurse, %0
  %root.tr1 = phi %struct.btnode* [ %7, %tailrecurse ], [ %root, %0 ], !llfi_index !2628
  %4 = getelementptr inbounds %struct.btnode* %root.tr1, i64 0, i32 7, i64 0, !llfi_index !2629
  %5 = load %struct.btnode** %4, align 8, !llfi_index !2630
  tail call void @prn_bintree_leaves(%struct.btnode* %5), !llfi_index !2631
  %6 = getelementptr inbounds %struct.btnode* %root.tr1, i64 0, i32 7, i64 1, !llfi_index !2632
  %7 = load %struct.btnode** %6, align 8, !llfi_index !2633
  %8 = getelementptr inbounds %struct.btnode* %7, i64 0, i32 5, !llfi_index !2634
  %9 = load i64* %8, align 8, !llfi_index !2635
  %10 = icmp eq i64 %9, -1, !llfi_index !2636
  br i1 %10, label %tailrecurse._crit_edge, label %tailrecurse, !llfi_index !2637
}

; Function Attrs: nounwind uwtable
define void @prn_pepa_prim_list(%struct.element** nocapture readonly %pepa, i64 %nprims) #0 {
  %1 = icmp sgt i64 %nprims, 0, !llfi_index !2638
  br i1 %1, label %.lr.ph, label %.loopexit, !llfi_index !2639

.lr.ph:                                           ; preds = %12, %0
  %i.01 = phi i64 [ %13, %12 ], [ 0, %0 ], !llfi_index !2640
  %2 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2641
  %3 = getelementptr inbounds %struct.element** %pepa, i64 %i.01, !llfi_index !2642
  %4 = load %struct.element** %3, align 8, !llfi_index !2643
  %5 = getelementptr inbounds %struct.element* %4, i64 0, i32 0, !llfi_index !2644
  %6 = load i64* %5, align 8, !llfi_index !2645
  %7 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([6 x i8]* @.str46211, i64 0, i64 0), i64 %6) #10, !llfi_index !2646
  %8 = srem i64 %i.01, 8, !llfi_index !2647
  %9 = icmp eq i64 %8, 7, !llfi_index !2648
  br i1 %9, label %10, label %12, !llfi_index !2649

; <label>:10                                      ; preds = %.lr.ph
  %11 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2650
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %11) #9, !llfi_index !2651
  br label %12, !llfi_index !2652

; <label>:12                                      ; preds = %10, %.lr.ph
  %13 = add nsw i64 %i.01, 1, !llfi_index !2653
  %exitcond = icmp eq i64 %13, %nprims, !llfi_index !2654
  br i1 %exitcond, label %.loopexit, label %.lr.ph, !llfi_index !2655

.loopexit:                                        ; preds = %12, %0
  ret void, !llfi_index !2656
}

; Function Attrs: nounwind uwtable
define void @Huniform_defaults() #0 {
  store i64 2, i64* @hu_max_prims_cell, align 8, !llfi_index !2657
  store i64 5, i64* @hu_gridsize, align 8, !llfi_index !2658
  store i64 23, i64* @hu_numbuckets, align 8, !llfi_index !2659
  store i64 1, i64* @hu_max_subdiv_level, align 8, !llfi_index !2660
  store i64 0, i64* @hu_lazy, align 8, !llfi_index !2661
  ret void, !llfi_index !2662
}

; Function Attrs: nounwind uwtable
define void @BuildHierarchy_Uniform() #0 {
  %num_pe = alloca i64, align 8, !llfi_index !2663
  tail call void @init_masks(), !llfi_index !2664
  %1 = call %struct.element** @MakeElementArray(i64* %num_pe), !llfi_index !2665
  %2 = load i64* %num_pe, align 8, !llfi_index !2666
  %3 = tail call %struct.voxel* @init_world_voxel(%struct.element** %1, i64 %2), !llfi_index !2667
  %4 = load i64* %num_pe, align 8, !llfi_index !2668
  %5 = tail call %struct.grid* @init_world_grid(%struct.voxel* %3, %struct.element** %1, i64 %4), !llfi_index !2669
  %6 = load %struct.gmem** @gm, align 8, !llfi_index !2670
  %7 = getelementptr inbounds %struct.gmem* %6, i64 0, i32 4, !llfi_index !2671
  store %struct.grid* %5, %struct.grid** %7, align 8, !llfi_index !2672
  %8 = load %struct.gmem** @gm, align 8, !llfi_index !2673
  %9 = getelementptr inbounds %struct.gmem* %8, i64 0, i32 4, !llfi_index !2674
  %10 = load %struct.grid** %9, align 8, !llfi_index !2675
  %11 = load i64* %num_pe, align 8, !llfi_index !2676
  %12 = tail call %struct.grid* @create_grid(%struct.voxel* %3, %struct.grid* %10, i64 %11), !llfi_index !2677
  %13 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2678
  %14 = tail call i64 @fwrite(i8* getelementptr inbounds ([26 x i8]* @.str216, i64 0, i64 0), i64 25, i64 1, %struct._IO_FILE* %13) #9, !llfi_index !2679
  ret void, !llfi_index !2680
}

; Function Attrs: nounwind uwtable
define void @IntersectHuniformPrimlist(i64* nocapture %intersectPrim, %struct.irecord* nocapture %hit, %struct.voxel* nocapture readonly %v, %struct.ray* %r, i64 %pid) #0 {
  %newhit = alloca [2 x %struct.irecord], align 16, !llfi_index !2681
  %1 = getelementptr inbounds %struct.ray* %r, i64 0, i32 6, !llfi_index !2682
  %2 = load %struct.rayinfo** %1, align 8, !llfi_index !2683
  %3 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 5, !llfi_index !2684
  %4 = load double* %3, align 8, !llfi_index !2685
  %5 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 0, !llfi_index !2686
  store double 1.000000e+32, double* %5, align 8, !llfi_index !2687
  %6 = getelementptr inbounds %struct.voxel* %v, i64 0, i32 3, !llfi_index !2688
  %7 = load i8** %6, align 8, !llfi_index !2689
  %8 = bitcast i8* %7 to %struct.element**, !llfi_index !2690
  %9 = getelementptr inbounds %struct.voxel* %v, i64 0, i32 1, !llfi_index !2691
  %10 = load i64* %9, align 8, !llfi_index !2692
  %11 = icmp sgt i64 %10, 0, !llfi_index !2693
  br i1 %11, label %.lr.ph, label %._crit_edge, !llfi_index !2694

.lr.ph:                                           ; preds = %0
  %12 = getelementptr inbounds [2 x %struct.irecord]* %newhit, i64 0, i64 0, !llfi_index !2695
  %13 = getelementptr inbounds [2 x %struct.irecord]* %newhit, i64 0, i64 0, i32 0, !llfi_index !2696
  %14 = bitcast %struct.irecord* %hit to i8*, !llfi_index !2697
  %15 = bitcast [2 x %struct.irecord]* %newhit to i8*, !llfi_index !2698
  br label %16, !llfi_index !2699

; <label>:16                                      ; preds = %34, %.lr.ph
  %i.01 = phi i64 [ 0, %.lr.ph ], [ %35, %34 ], !llfi_index !2700
  %17 = getelementptr inbounds %struct.element** %8, i64 %i.01, !llfi_index !2701
  %18 = load %struct.element** %17, align 8, !llfi_index !2702
  %19 = getelementptr inbounds %struct.element* %18, i64 0, i32 1, !llfi_index !2703
  %20 = load %struct.object** %19, align 8, !llfi_index !2704
  %21 = getelementptr inbounds %struct.object* %20, i64 0, i32 5, !llfi_index !2705
  %22 = load %struct.pprocs** %21, align 8, !llfi_index !2706
  %23 = getelementptr inbounds %struct.pprocs* %22, i64 0, i32 6, !llfi_index !2707
  %24 = load i64 (...)** %23, align 8, !llfi_index !2708
  %25 = bitcast i64 (...)* %24 to i64 (%struct.ray*, %struct.element*, %struct.irecord*, ...)*, !llfi_index !2709
  %26 = call i64 (%struct.ray*, %struct.element*, %struct.irecord*, ...)* %25(%struct.ray* %r, %struct.element* %18, %struct.irecord* %12) #2, !llfi_index !2710
  %27 = icmp eq i64 %26, 0, !llfi_index !2711
  br i1 %27, label %34, label %28, !llfi_index !2712

; <label>:28                                      ; preds = %16
  %29 = load double* %13, align 16, !llfi_index !2713
  %30 = load double* %5, align 8, !llfi_index !2714
  %31 = fcmp olt double %29, %30, !llfi_index !2715
  %32 = fcmp olt double %29, %4, !llfi_index !2716
  %or.cond = and i1 %31, %32, !llfi_index !2717
  br i1 %or.cond, label %33, label %34, !llfi_index !2718

; <label>:33                                      ; preds = %28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 40, i32 8, i1 false), !llfi_index !2719
  br label %34, !llfi_index !2720

; <label>:34                                      ; preds = %33, %28, %16
  %35 = add nsw i64 %i.01, 1, !llfi_index !2721
  %36 = load i64* %9, align 8, !llfi_index !2722
  %37 = icmp slt i64 %35, %36, !llfi_index !2723
  br i1 %37, label %16, label %._crit_edge, !llfi_index !2724

._crit_edge:                                      ; preds = %34, %0
  %38 = load double* %5, align 8, !llfi_index !2725
  %39 = fcmp olt double %38, 1.000000e+32, !llfi_index !2726
  %. = zext i1 %39 to i64, !llfi_index !2727
  store i64 %., i64* %intersectPrim, align 8, !llfi_index !2728
  ret void, !llfi_index !2729
}

; Function Attrs: nounwind uwtable
define double @HuniformShadowIntersect(%struct.ray* %r, double %lightlength, %struct.element* readnone %pe, i64 %pid) #0 {
  %status = alloca i64, align 8, !llfi_index !2730
  %newhit = alloca [2 x %struct.irecord], align 16, !llfi_index !2731
  %1 = getelementptr inbounds %struct.ray* %r, i64 0, i32 6, !llfi_index !2732
  store %struct.rayinfo* null, %struct.rayinfo** %1, align 8, !llfi_index !2733
  %2 = load %struct.gmem** @gm, align 8, !llfi_index !2734
  %3 = getelementptr inbounds %struct.gmem* %2, i64 0, i32 4, !llfi_index !2735
  %4 = load %struct.grid** %3, align 8, !llfi_index !2736
  %5 = call %struct.voxel* @init_ray(%struct.ray* %r, %struct.grid* %4), !llfi_index !2737
  %6 = icmp eq %struct.voxel* %5, null, !llfi_index !2738
  br i1 %6, label %7, label %8, !llfi_index !2739

; <label>:7                                       ; preds = %0
  call void @reset_rayinfo(%struct.ray* %r), !llfi_index !2740
  br label %54, !llfi_index !2741

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds [2 x %struct.irecord]* %newhit, i64 0, i64 0, i32 0, !llfi_index !2742
  store double 1.000000e+32, double* %9, align 16, !llfi_index !2743
  store i64 2, i64* %status, align 8, !llfi_index !2744
  %10 = getelementptr inbounds [2 x %struct.irecord]* %newhit, i64 0, i64 0, !llfi_index !2745
  %11 = getelementptr inbounds [2 x %struct.irecord]* %newhit, i64 0, i64 0, i32 1, !llfi_index !2746
  br label %.outer, !llfi_index !2747

.outer:                                           ; preds = %52, %8
  %trans.0.ph = phi double [ 1.000000e+00, %8 ], [ %trans.1.lcssa, %52 ], !llfi_index !2748
  %v.0.ph = phi %struct.voxel* [ %5, %8 ], [ %53, %52 ], !llfi_index !2749
  %12 = load i64* %status, align 8, !llfi_index !2750
  %13 = icmp ne i64 %12, 0, !llfi_index !2751
  %14 = getelementptr inbounds %struct.voxel* %v.0.ph, i64 0, i32 3, !llfi_index !2752
  %15 = getelementptr inbounds %struct.voxel* %v.0.ph, i64 0, i32 1, !llfi_index !2753
  br label %16, !llfi_index !2754

; <label>:16                                      ; preds = %._crit_edge, %.outer
  %trans.0 = phi double [ %trans.1.lcssa, %._crit_edge ], [ %trans.0.ph, %.outer ], !llfi_index !2755
  %17 = fcmp ogt double %trans.0, 0.000000e+00, !llfi_index !2756
  %or.cond3 = and i1 %17, %13, !llfi_index !2757
  br i1 %or.cond3, label %18, label %.critedge, !llfi_index !2758

; <label>:18                                      ; preds = %16
  %19 = load i8** %14, align 8, !llfi_index !2759
  %20 = bitcast i8* %19 to %struct.element**, !llfi_index !2760
  %21 = load i64* %15, align 8, !llfi_index !2761
  %22 = icmp sgt i64 %21, 0, !llfi_index !2762
  %or.cond6 = and i1 %22, %17, !llfi_index !2763
  br i1 %or.cond6, label %.lr.ph, label %._crit_edge, !llfi_index !2764

.lr.ph:                                           ; preds = %47, %18
  %i.08 = phi i64 [ %48, %47 ], [ 0, %18 ], !llfi_index !2765
  %trans.17 = phi double [ %trans.2, %47 ], [ %trans.0, %18 ], !llfi_index !2766
  %23 = getelementptr inbounds %struct.element** %20, i64 %i.08, !llfi_index !2767
  %24 = load %struct.element** %23, align 8, !llfi_index !2768
  %25 = getelementptr inbounds %struct.element* %24, i64 0, i32 1, !llfi_index !2769
  %26 = load %struct.object** %25, align 8, !llfi_index !2770
  %27 = getelementptr inbounds %struct.object* %26, i64 0, i32 5, !llfi_index !2771
  %28 = load %struct.pprocs** %27, align 8, !llfi_index !2772
  %29 = getelementptr inbounds %struct.pprocs* %28, i64 0, i32 6, !llfi_index !2773
  %30 = load i64 (...)** %29, align 8, !llfi_index !2774
  %31 = bitcast i64 (...)* %30 to i64 (%struct.ray*, %struct.element*, %struct.irecord*, ...)*, !llfi_index !2775
  %32 = call i64 (%struct.ray*, %struct.element*, %struct.irecord*, ...)* %31(%struct.ray* %r, %struct.element* %24, %struct.irecord* %10) #2, !llfi_index !2776
  %33 = icmp eq i64 %32, 0, !llfi_index !2777
  br i1 %33, label %47, label %34, !llfi_index !2778

; <label>:34                                      ; preds = %.lr.ph
  %35 = load %struct.element** %11, align 8, !llfi_index !2779
  %36 = icmp ne %struct.element* %35, %pe, !llfi_index !2780
  %37 = load double* %9, align 16, !llfi_index !2781
  %38 = fcmp olt double %37, %lightlength, !llfi_index !2782
  %or.cond5 = and i1 %36, %38, !llfi_index !2783
  br i1 %or.cond5, label %39, label %47, !llfi_index !2784

; <label>:39                                      ; preds = %34
  %40 = getelementptr inbounds %struct.element* %35, i64 0, i32 1, !llfi_index !2785
  %41 = load %struct.object** %40, align 8, !llfi_index !2786
  %42 = getelementptr inbounds %struct.object* %41, i64 0, i32 6, !llfi_index !2787
  %43 = load %struct.surf** %42, align 8, !llfi_index !2788
  %44 = getelementptr inbounds %struct.surf* %43, i64 0, i32 4, !llfi_index !2789
  %45 = load double* %44, align 8, !llfi_index !2790
  %46 = fmul double %trans.17, %45, !llfi_index !2791
  br label %47, !llfi_index !2792

; <label>:47                                      ; preds = %39, %34, %.lr.ph
  %trans.2 = phi double [ %46, %39 ], [ %trans.17, %34 ], [ %trans.17, %.lr.ph ], !llfi_index !2793
  %48 = add nsw i64 %i.08, 1, !llfi_index !2794
  %49 = load i64* %15, align 8, !llfi_index !2795
  %50 = icmp slt i64 %48, %49, !llfi_index !2796
  %51 = fcmp ogt double %trans.2, 0.000000e+00, !llfi_index !2797
  %or.cond = and i1 %50, %51, !llfi_index !2798
  br i1 %or.cond, label %.lr.ph, label %._crit_edge, !llfi_index !2799

._crit_edge:                                      ; preds = %47, %18
  %.lcssa = phi i1 [ %17, %18 ], [ %51, %47 ], !llfi_index !2800
  %trans.1.lcssa = phi double [ %trans.0, %18 ], [ %trans.2, %47 ], !llfi_index !2801
  br i1 %.lcssa, label %52, label %16, !llfi_index !2802

; <label>:52                                      ; preds = %._crit_edge
  %53 = call %struct.voxel* @next_nonempty_leaf(%struct.ray* %r, i64 1, i64* %status), !llfi_index !2803
  br label %.outer, !llfi_index !2804

.critedge:                                        ; preds = %16
  call void @reset_rayinfo(%struct.ray* %r), !llfi_index !2805
  br label %54, !llfi_index !2806

; <label>:54                                      ; preds = %.critedge, %7
  %.0 = phi double [ 1.000000e+00, %7 ], [ %trans.0, %.critedge ], !llfi_index !2807
  ret double %.0, !llfi_index !2808
}

; Function Attrs: nounwind uwtable
define i64 @TraverseHierarchyUniform(%struct.ray* %r, %struct.irecord* nocapture %hit, i64 %pid) #0 {
  %status = alloca i64, align 8, !llfi_index !2809
  %intersectPrim = alloca i64, align 8, !llfi_index !2810
  %1 = getelementptr inbounds %struct.ray* %r, i64 0, i32 6, !llfi_index !2811
  store %struct.rayinfo* null, %struct.rayinfo** %1, align 8, !llfi_index !2812
  %2 = load %struct.gmem** @gm, align 8, !llfi_index !2813
  %3 = getelementptr inbounds %struct.gmem* %2, i64 0, i32 4, !llfi_index !2814
  %4 = load %struct.grid** %3, align 8, !llfi_index !2815
  %5 = tail call %struct.voxel* @init_ray(%struct.ray* %r, %struct.grid* %4), !llfi_index !2816
  %6 = icmp eq %struct.voxel* %5, null, !llfi_index !2817
  br i1 %6, label %7, label %8, !llfi_index !2818

; <label>:7                                       ; preds = %0
  tail call void @reset_rayinfo(%struct.ray* %r), !llfi_index !2819
  br label %21, !llfi_index !2820

; <label>:8                                       ; preds = %0
  store i64 0, i64* %intersectPrim, align 8, !llfi_index !2821
  %9 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 0, !llfi_index !2822
  store double 1.000000e+32, double* %9, align 8, !llfi_index !2823
  store i64 2, i64* %status, align 8, !llfi_index !2824
  br label %.outer, !llfi_index !2825

.outer:                                           ; preds = %18, %8
  %v.0.ph = phi %struct.voxel* [ %5, %8 ], [ %19, %18 ], !llfi_index !2826
  %10 = load i64* %status, align 8, !llfi_index !2827
  %11 = icmp ne i64 %10, 0, !llfi_index !2828
  br label %12, !llfi_index !2829

; <label>:12                                      ; preds = %15, %.outer
  %13 = load i64* %intersectPrim, align 8, !llfi_index !2830
  %14 = icmp eq i64 %13, 0, !llfi_index !2831
  %or.cond = and i1 %14, %11, !llfi_index !2832
  br i1 %or.cond, label %15, label %.critedge, !llfi_index !2833

; <label>:15                                      ; preds = %12
  call void @IntersectHuniformPrimlist(i64* %intersectPrim, %struct.irecord* %hit, %struct.voxel* %v.0.ph, %struct.ray* %r, i64 undef), !llfi_index !2834
  %16 = load i64* %intersectPrim, align 8, !llfi_index !2835
  %17 = icmp eq i64 %16, 0, !llfi_index !2836
  br i1 %17, label %18, label %12, !llfi_index !2837

; <label>:18                                      ; preds = %15
  %19 = call %struct.voxel* @next_nonempty_leaf(%struct.ray* %r, i64 1, i64* %status), !llfi_index !2838
  br label %.outer, !llfi_index !2839

.critedge:                                        ; preds = %12
  tail call void @reset_rayinfo(%struct.ray* %r), !llfi_index !2840
  %20 = load i64* %intersectPrim, align 8, !llfi_index !2841
  br label %21, !llfi_index !2842

; <label>:21                                      ; preds = %.critedge, %7
  %.0 = phi i64 [ 0, %7 ], [ %20, %.critedge ], !llfi_index !2843
  ret i64 %.0, !llfi_index !2844
}

; Function Attrs: nounwind readnone uwtable
define void @prn_tv_stats() #4 {
  ret void, !llfi_index !2845
}

; Function Attrs: nounwind readnone uwtable
define i64 @send_ray(%struct.ray* nocapture readnone %r, %struct.voxel* nocapture readnone %v) #4 {
  ret i64 0, !llfi_index !2846
}

; Function Attrs: nounwind uwtable
define %struct.voxel* @lookup_hashtable(i64 %indx, %struct.grid* nocapture readonly %g) #0 {
  %1 = getelementptr inbounds %struct.grid* %g, i64 0, i32 6, !llfi_index !2847
  %2 = load i64* %1, align 8, !llfi_index !2848
  %3 = srem i64 %indx, %2, !llfi_index !2849
  %4 = getelementptr inbounds %struct.grid* %g, i64 0, i32 1, !llfi_index !2850
  %5 = load %struct.voxel*** %4, align 8, !llfi_index !2851
  %6 = getelementptr inbounds %struct.voxel** %5, i64 %3, !llfi_index !2852
  %7 = load %struct.voxel** %6, align 8, !llfi_index !2853
  br label %8, !llfi_index !2854

; <label>:8                                       ; preds = %12, %0
  %v.0 = phi %struct.voxel* [ %7, %0 ], [ %14, %12 ], !llfi_index !2855
  %9 = getelementptr inbounds %struct.voxel* %v.0, i64 0, i32 0, !llfi_index !2856
  %10 = load i64* %9, align 8, !llfi_index !2857
  %11 = icmp eq i64 %10, %indx, !llfi_index !2858
  br i1 %11, label %19, label %12, !llfi_index !2859

; <label>:12                                      ; preds = %8
  %13 = getelementptr inbounds %struct.voxel* %v.0, i64 0, i32 2, !llfi_index !2860
  %14 = load %struct.voxel** %13, align 8, !llfi_index !2861
  %15 = icmp eq %struct.voxel* %14, null, !llfi_index !2862
  br i1 %15, label %16, label %8, !llfi_index !2863

; <label>:16                                      ; preds = %12
  %17 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !2864
  %18 = tail call i64 @fwrite(i8* getelementptr inbounds ([18 x i8]* @.str217, i64 0, i64 0), i64 17, i64 1, %struct._IO_FILE* %17) #9, !llfi_index !2865
  tail call void @exit(i32 -1) #11, !llfi_index !2866
  unreachable, !llfi_index !2867

; <label>:19                                      ; preds = %8
  ret %struct.voxel* %v.0, !llfi_index !2868
}

; Function Attrs: nounwind readonly uwtable
define i64 @lookup_emptycells(i64 %indx, %struct.grid* nocapture readonly %g) #7 {
  %1 = sdiv i64 %indx, 64, !llfi_index !2869
  %2 = shl nsw i64 %1, 6, !llfi_index !2870
  %3 = sub nsw i64 %indx, %2, !llfi_index !2871
  %4 = getelementptr inbounds %struct.grid* %g, i64 0, i32 2, !llfi_index !2872
  %5 = load i64** %4, align 8, !llfi_index !2873
  %6 = getelementptr inbounds i64* %5, i64 %1, !llfi_index !2874
  %7 = load i64* %6, align 8, !llfi_index !2875
  %8 = lshr i64 -9223372036854775808, %3, !llfi_index !2876
  %9 = and i64 %8, %7, !llfi_index !2877
  %10 = icmp ne i64 %9, 0, !llfi_index !2878
  %11 = zext i1 %10 to i64, !llfi_index !2879
  ret i64 %11, !llfi_index !2880
}

; Function Attrs: nounwind uwtable
define void @pop_up_a_grid(%struct.ray* nocapture %r) #0 {
  %1 = getelementptr inbounds %struct.ray* %r, i64 0, i32 6, !llfi_index !2881
  %2 = load %struct.rayinfo** %1, align 8, !llfi_index !2882
  %3 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 10, !llfi_index !2883
  %4 = load %struct.rayinfo** %3, align 8, !llfi_index !2884
  store %struct.rayinfo* %4, %struct.rayinfo** %1, align 8, !llfi_index !2885
  tail call void @free_rayinfo(%struct.ray* %r), !llfi_index !2886
  ret void, !llfi_index !2887
}

; Function Attrs: nounwind uwtable
define void @push_down_grid(%struct.ray* %r, %struct.voxel* nocapture readonly %v) #0 {
  %1 = getelementptr inbounds %struct.ray* %r, i64 0, i32 6, !llfi_index !2888
  %2 = load %struct.rayinfo** %1, align 8, !llfi_index !2889
  %3 = getelementptr inbounds %struct.voxel* %v, i64 0, i32 3, !llfi_index !2890
  %4 = load i8** %3, align 8, !llfi_index !2891
  %5 = bitcast i8* %4 to %struct.grid*, !llfi_index !2892
  %6 = tail call %struct.rayinfo* @ma_rayinfo(%struct.ray* %r), !llfi_index !2893
  store %struct.rayinfo* %6, %struct.rayinfo** %1, align 8, !llfi_index !2894
  %7 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 10, !llfi_index !2895
  store %struct.rayinfo* %2, %struct.rayinfo** %7, align 8, !llfi_index !2896
  %8 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 0, !llfi_index !2897
  store %struct.grid* %5, %struct.grid** %8, align 8, !llfi_index !2898
  %9 = getelementptr inbounds i8* %4, i64 48, !llfi_index !2899
  %10 = bitcast i8* %9 to i64*, !llfi_index !2900
  %11 = load i64* %10, align 8, !llfi_index !2901
  %12 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 6, i64 0, !llfi_index !2902
  %13 = load double* %12, align 8, !llfi_index !2903
  %14 = sitofp i64 %11 to double, !llfi_index !2904
  %15 = fdiv double %13, %14, !llfi_index !2905
  %16 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 6, i64 0, !llfi_index !2906
  store double %15, double* %16, align 8, !llfi_index !2907
  %17 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 6, i64 1, !llfi_index !2908
  %18 = load double* %17, align 8, !llfi_index !2909
  %19 = fdiv double %18, %14, !llfi_index !2910
  %20 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 6, i64 1, !llfi_index !2911
  store double %19, double* %20, align 8, !llfi_index !2912
  %21 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 6, i64 2, !llfi_index !2913
  %22 = load double* %21, align 8, !llfi_index !2914
  %23 = fdiv double %22, %14, !llfi_index !2915
  %24 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 6, i64 2, !llfi_index !2916
  store double %23, double* %24, align 8, !llfi_index !2917
  %25 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 3, !llfi_index !2918
  %26 = load double* %25, align 8, !llfi_index !2919
  %27 = fcmp ult double %26, 0.000000e+00, !llfi_index !2920
  br i1 %27, label %37, label %28, !llfi_index !2921

; <label>:28                                      ; preds = %0
  %29 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 2, !llfi_index !2922
  %30 = load i64* %29, align 8, !llfi_index !2923
  %31 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 2, !llfi_index !2924
  store i64 %30, i64* %31, align 8, !llfi_index !2925
  %32 = load double* %25, align 8, !llfi_index !2926
  %33 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 3, !llfi_index !2927
  store double %32, double* %33, align 8, !llfi_index !2928
  %34 = load double* %25, align 8, !llfi_index !2929
  %35 = load double* @eps_t, align 8, !llfi_index !2930
  %36 = fadd double %34, %35, !llfi_index !2931
  br label %41, !llfi_index !2932

; <label>:37                                      ; preds = %0
  %38 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 2, !llfi_index !2933
  store i64 -1, i64* %38, align 8, !llfi_index !2934
  %39 = load double* %25, align 8, !llfi_index !2935
  %40 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 3, !llfi_index !2936
  store double %39, double* %40, align 8, !llfi_index !2937
  br label %41, !llfi_index !2938

; <label>:41                                      ; preds = %37, %28
  %ti.0 = phi double [ %36, %28 ], [ 0.000000e+00, %37 ], !llfi_index !2939
  %42 = getelementptr inbounds %struct.ray* %r, i64 0, i32 4, i64 0, !llfi_index !2940
  %43 = load double* %42, align 8, !llfi_index !2941
  %44 = fmul double %ti.0, %43, !llfi_index !2942
  %45 = getelementptr inbounds %struct.ray* %r, i64 0, i32 3, i64 0, !llfi_index !2943
  %46 = load double* %45, align 8, !llfi_index !2944
  %47 = fadd double %44, %46, !llfi_index !2945
  %48 = getelementptr inbounds %struct.ray* %r, i64 0, i32 4, i64 1, !llfi_index !2946
  %49 = load double* %48, align 8, !llfi_index !2947
  %50 = fmul double %ti.0, %49, !llfi_index !2948
  %51 = getelementptr inbounds %struct.ray* %r, i64 0, i32 3, i64 1, !llfi_index !2949
  %52 = load double* %51, align 8, !llfi_index !2950
  %53 = fadd double %50, %52, !llfi_index !2951
  %54 = getelementptr inbounds %struct.ray* %r, i64 0, i32 4, i64 2, !llfi_index !2952
  %55 = load double* %54, align 8, !llfi_index !2953
  %56 = fmul double %ti.0, %55, !llfi_index !2954
  %57 = getelementptr inbounds %struct.ray* %r, i64 0, i32 3, i64 2, !llfi_index !2955
  %58 = load double* %57, align 8, !llfi_index !2956
  %59 = fadd double %56, %58, !llfi_index !2957
  %60 = getelementptr inbounds i8* %4, i64 72, !llfi_index !2958
  %61 = bitcast i8* %60 to double*, !llfi_index !2959
  %62 = load double* %61, align 8, !llfi_index !2960
  %63 = fsub double %47, %62, !llfi_index !2961
  %64 = getelementptr inbounds i8* %4, i64 96, !llfi_index !2962
  %65 = bitcast i8* %64 to double*, !llfi_index !2963
  %66 = load double* %65, align 8, !llfi_index !2964
  %67 = fdiv double %63, %66, !llfi_index !2965
  %68 = fptosi double %67 to i64, !llfi_index !2966
  %69 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 7, i64 0, !llfi_index !2967
  %70 = icmp slt i64 %68, 0, !llfi_index !2968
  %. = select i1 %70, i64 0, i64 %68, !llfi_index !2969
  %71 = icmp slt i64 %., %11, !llfi_index !2970
  %72 = add nsw i64 %11, -1, !llfi_index !2971
  %storemerge6 = select i1 %71, i64 %., i64 %72, !llfi_index !2972
  store i64 %storemerge6, i64* %69, align 8, !llfi_index !2973
  %73 = getelementptr inbounds i8* %4, i64 80, !llfi_index !2974
  %74 = bitcast i8* %73 to double*, !llfi_index !2975
  %75 = load double* %74, align 8, !llfi_index !2976
  %76 = fsub double %53, %75, !llfi_index !2977
  %77 = getelementptr inbounds i8* %4, i64 104, !llfi_index !2978
  %78 = bitcast i8* %77 to double*, !llfi_index !2979
  %79 = load double* %78, align 8, !llfi_index !2980
  %80 = fdiv double %76, %79, !llfi_index !2981
  %81 = fptosi double %80 to i64, !llfi_index !2982
  %82 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 7, i64 1, !llfi_index !2983
  %83 = icmp slt i64 %81, 0, !llfi_index !2984
  %.9 = select i1 %83, i64 0, i64 %81, !llfi_index !2985
  %84 = icmp slt i64 %.9, %11, !llfi_index !2986
  %storemerge7 = select i1 %84, i64 %.9, i64 %72, !llfi_index !2987
  store i64 %storemerge7, i64* %82, align 8, !llfi_index !2988
  %85 = getelementptr inbounds i8* %4, i64 88, !llfi_index !2989
  %86 = bitcast i8* %85 to double*, !llfi_index !2990
  %87 = load double* %86, align 8, !llfi_index !2991
  %88 = fsub double %59, %87, !llfi_index !2992
  %89 = getelementptr inbounds i8* %4, i64 112, !llfi_index !2993
  %90 = bitcast i8* %89 to double*, !llfi_index !2994
  %91 = load double* %90, align 8, !llfi_index !2995
  %92 = fdiv double %88, %91, !llfi_index !2996
  %93 = fptosi double %92 to i64, !llfi_index !2997
  %94 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 7, i64 2, !llfi_index !2998
  %95 = icmp slt i64 %93, 0, !llfi_index !2999
  %.10 = select i1 %95, i64 0, i64 %93, !llfi_index !3000
  %96 = icmp slt i64 %.10, %11, !llfi_index !3001
  %storemerge8 = select i1 %96, i64 %.10, i64 %72, !llfi_index !3002
  store i64 %storemerge8, i64* %94, align 8, !llfi_index !3003
  %97 = load i64* %69, align 8, !llfi_index !3004
  %98 = load i64* %82, align 8, !llfi_index !3005
  %99 = mul nsw i64 %98, %11, !llfi_index !3006
  %100 = add nsw i64 %99, %97, !llfi_index !3007
  %101 = getelementptr inbounds i8* %4, i64 56, !llfi_index !3008
  %102 = bitcast i8* %101 to i64*, !llfi_index !3009
  %103 = load i64* %102, align 8, !llfi_index !3010
  %104 = mul nsw i64 %storemerge8, %103, !llfi_index !3011
  %105 = add nsw i64 %100, %104, !llfi_index !3012
  %106 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 8, !llfi_index !3013
  store i64 %105, i64* %106, align 8, !llfi_index !3014
  %107 = getelementptr inbounds %struct.ray* %r, i64 0, i32 8, i64 0, !llfi_index !3015
  %108 = load i64* %107, align 8, !llfi_index !3016
  %109 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 9, i64 0, !llfi_index !3017
  store i64 %108, i64* %109, align 8, !llfi_index !3018
  %110 = getelementptr inbounds %struct.ray* %r, i64 0, i32 8, i64 1, !llfi_index !3019
  %111 = load i64* %110, align 8, !llfi_index !3020
  %112 = mul nsw i64 %111, %11, !llfi_index !3021
  %113 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 9, i64 1, !llfi_index !3022
  store i64 %112, i64* %113, align 8, !llfi_index !3023
  %114 = getelementptr inbounds %struct.ray* %r, i64 0, i32 8, i64 2, !llfi_index !3024
  %115 = load i64* %114, align 8, !llfi_index !3025
  %116 = load i64* %102, align 8, !llfi_index !3026
  %117 = mul nsw i64 %116, %115, !llfi_index !3027
  %118 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 9, i64 2, !llfi_index !3028
  store i64 %117, i64* %118, align 8, !llfi_index !3029
  %119 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 2, !llfi_index !3030
  %120 = load i64* %119, align 8, !llfi_index !3031
  switch i64 %120, label %404 [
    i64 3, label %121
    i64 0, label %122
    i64 4, label %176
    i64 1, label %177
    i64 5, label %232
    i64 2, label %233
    i64 -1, label %288
  ], !llfi_index !3032

; <label>:121                                     ; preds = %41
  store i64 0, i64* %119, align 8, !llfi_index !3033
  br label %122, !llfi_index !3034

; <label>:122                                     ; preds = %121, %41
  %123 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 3, !llfi_index !3035
  %124 = load double* %123, align 8, !llfi_index !3036
  %125 = load double* %16, align 8, !llfi_index !3037
  %126 = fadd double %124, %125, !llfi_index !3038
  %127 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 0, !llfi_index !3039
  store double %126, double* %127, align 8, !llfi_index !3040
  %128 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 1, i64 1, !llfi_index !3041
  %129 = load double* %128, align 8, !llfi_index !3042
  %130 = load double* %123, align 8, !llfi_index !3043
  %131 = fsub double %129, %130, !llfi_index !3044
  %132 = load double* %20, align 8, !llfi_index !3045
  %133 = tail call double @fmod(double %131, double %132) #2, !llfi_index !3046
  %134 = load double* @eps_t, align 8, !llfi_index !3047
  %135 = fcmp ugt double %133, %134, !llfi_index !3048
  %136 = load double* %123, align 8, !llfi_index !3049
  br i1 %135, label %141, label %137, !llfi_index !3050

; <label>:137                                     ; preds = %122
  %138 = load double* %20, align 8, !llfi_index !3051
  %139 = fadd double %136, %138, !llfi_index !3052
  %140 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 1, !llfi_index !3053
  store double %139, double* %140, align 8, !llfi_index !3054
  br label %144, !llfi_index !3055

; <label>:141                                     ; preds = %122
  %142 = fadd double %133, %136, !llfi_index !3056
  %143 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 1, !llfi_index !3057
  store double %142, double* %143, align 8, !llfi_index !3058
  br label %144, !llfi_index !3059

; <label>:144                                     ; preds = %141, %137
  %145 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 1, i64 2, !llfi_index !3060
  %146 = load double* %145, align 8, !llfi_index !3061
  %147 = load double* %123, align 8, !llfi_index !3062
  %148 = fsub double %146, %147, !llfi_index !3063
  %149 = load double* %24, align 8, !llfi_index !3064
  %150 = tail call double @fmod(double %148, double %149) #2, !llfi_index !3065
  %151 = load double* @eps_t, align 8, !llfi_index !3066
  %152 = fcmp ugt double %150, %151, !llfi_index !3067
  %153 = load double* %123, align 8, !llfi_index !3068
  br i1 %152, label %158, label %154, !llfi_index !3069

; <label>:154                                     ; preds = %144
  %155 = load double* %24, align 8, !llfi_index !3070
  %156 = fadd double %153, %155, !llfi_index !3071
  %157 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 2, !llfi_index !3072
  store double %156, double* %157, align 8, !llfi_index !3073
  br label %161, !llfi_index !3074

; <label>:158                                     ; preds = %144
  %159 = fadd double %150, %153, !llfi_index !3075
  %160 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 2, !llfi_index !3076
  store double %159, double* %160, align 8, !llfi_index !3077
  br label %161, !llfi_index !3078

; <label>:161                                     ; preds = %158, %154
  %162 = load double* %127, align 8, !llfi_index !3079
  %163 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 1, !llfi_index !3080
  %164 = load double* %163, align 8, !llfi_index !3081
  %not.3 = fcmp ugt double %162, %164, !llfi_index !3082
  %165 = zext i1 %not.3 to i64, !llfi_index !3083
  %166 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 %165, !llfi_index !3084
  %167 = load double* %166, align 8, !llfi_index !3085
  %168 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 2, !llfi_index !3086
  %169 = load double* %168, align 8, !llfi_index !3087
  %170 = fcmp ole double %167, %169, !llfi_index !3088
  %171 = select i1 %170, i64 %165, i64 2, !llfi_index !3089
  %172 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 %171, !llfi_index !3090
  %173 = load double* %172, align 8, !llfi_index !3091
  %174 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 5, !llfi_index !3092
  store double %173, double* %174, align 8, !llfi_index !3093
  %175 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 4, !llfi_index !3094
  store i64 %171, i64* %175, align 8, !llfi_index !3095
  br label %404, !llfi_index !3096

; <label>:176                                     ; preds = %41
  store i64 1, i64* %119, align 8, !llfi_index !3097
  br label %177, !llfi_index !3098

; <label>:177                                     ; preds = %176, %41
  %178 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 3, !llfi_index !3099
  %179 = load double* %178, align 8, !llfi_index !3100
  %180 = load double* %20, align 8, !llfi_index !3101
  %181 = fadd double %179, %180, !llfi_index !3102
  %182 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, !llfi_index !3103
  %183 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 1, !llfi_index !3104
  store double %181, double* %183, align 8, !llfi_index !3105
  %184 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 1, i64 0, !llfi_index !3106
  %185 = load double* %184, align 8, !llfi_index !3107
  %186 = load double* %178, align 8, !llfi_index !3108
  %187 = fsub double %185, %186, !llfi_index !3109
  %188 = load double* %16, align 8, !llfi_index !3110
  %189 = tail call double @fmod(double %187, double %188) #2, !llfi_index !3111
  %190 = load double* @eps_t, align 8, !llfi_index !3112
  %191 = fcmp ugt double %189, %190, !llfi_index !3113
  %192 = load double* %178, align 8, !llfi_index !3114
  br i1 %191, label %197, label %193, !llfi_index !3115

; <label>:193                                     ; preds = %177
  %194 = load double* %16, align 8, !llfi_index !3116
  %195 = fadd double %192, %194, !llfi_index !3117
  %196 = getelementptr inbounds [3 x double]* %182, i64 0, i64 0, !llfi_index !3118
  store double %195, double* %196, align 8, !llfi_index !3119
  br label %200, !llfi_index !3120

; <label>:197                                     ; preds = %177
  %198 = fadd double %189, %192, !llfi_index !3121
  %199 = getelementptr inbounds [3 x double]* %182, i64 0, i64 0, !llfi_index !3122
  store double %198, double* %199, align 8, !llfi_index !3123
  br label %200, !llfi_index !3124

; <label>:200                                     ; preds = %197, %193
  %201 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 1, i64 2, !llfi_index !3125
  %202 = load double* %201, align 8, !llfi_index !3126
  %203 = load double* %178, align 8, !llfi_index !3127
  %204 = fsub double %202, %203, !llfi_index !3128
  %205 = load double* %24, align 8, !llfi_index !3129
  %206 = tail call double @fmod(double %204, double %205) #2, !llfi_index !3130
  %207 = load double* @eps_t, align 8, !llfi_index !3131
  %208 = fcmp ugt double %206, %207, !llfi_index !3132
  %209 = load double* %178, align 8, !llfi_index !3133
  br i1 %208, label %214, label %210, !llfi_index !3134

; <label>:210                                     ; preds = %200
  %211 = load double* %24, align 8, !llfi_index !3135
  %212 = fadd double %209, %211, !llfi_index !3136
  %213 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 2, !llfi_index !3137
  store double %212, double* %213, align 8, !llfi_index !3138
  br label %217, !llfi_index !3139

; <label>:214                                     ; preds = %200
  %215 = fadd double %206, %209, !llfi_index !3140
  %216 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 2, !llfi_index !3141
  store double %215, double* %216, align 8, !llfi_index !3142
  br label %217, !llfi_index !3143

; <label>:217                                     ; preds = %214, %210
  %218 = getelementptr inbounds [3 x double]* %182, i64 0, i64 0, !llfi_index !3144
  %219 = load double* %218, align 8, !llfi_index !3145
  %220 = load double* %183, align 8, !llfi_index !3146
  %not.2 = fcmp ugt double %219, %220, !llfi_index !3147
  %221 = zext i1 %not.2 to i64, !llfi_index !3148
  %222 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 %221, !llfi_index !3149
  %223 = load double* %222, align 8, !llfi_index !3150
  %224 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 2, !llfi_index !3151
  %225 = load double* %224, align 8, !llfi_index !3152
  %226 = fcmp ole double %223, %225, !llfi_index !3153
  %227 = select i1 %226, i64 %221, i64 2, !llfi_index !3154
  %228 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 %227, !llfi_index !3155
  %229 = load double* %228, align 8, !llfi_index !3156
  %230 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 5, !llfi_index !3157
  store double %229, double* %230, align 8, !llfi_index !3158
  %231 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 4, !llfi_index !3159
  store i64 %227, i64* %231, align 8, !llfi_index !3160
  br label %404, !llfi_index !3161

; <label>:232                                     ; preds = %41
  store i64 2, i64* %119, align 8, !llfi_index !3162
  br label %233, !llfi_index !3163

; <label>:233                                     ; preds = %232, %41
  %234 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 3, !llfi_index !3164
  %235 = load double* %234, align 8, !llfi_index !3165
  %236 = load double* %24, align 8, !llfi_index !3166
  %237 = fadd double %235, %236, !llfi_index !3167
  %238 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, !llfi_index !3168
  %239 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 2, !llfi_index !3169
  store double %237, double* %239, align 8, !llfi_index !3170
  %240 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 1, i64 0, !llfi_index !3171
  %241 = load double* %240, align 8, !llfi_index !3172
  %242 = load double* %234, align 8, !llfi_index !3173
  %243 = fsub double %241, %242, !llfi_index !3174
  %244 = load double* %16, align 8, !llfi_index !3175
  %245 = tail call double @fmod(double %243, double %244) #2, !llfi_index !3176
  %246 = load double* @eps_t, align 8, !llfi_index !3177
  %247 = fcmp ugt double %245, %246, !llfi_index !3178
  %248 = load double* %234, align 8, !llfi_index !3179
  br i1 %247, label %253, label %249, !llfi_index !3180

; <label>:249                                     ; preds = %233
  %250 = load double* %16, align 8, !llfi_index !3181
  %251 = fadd double %248, %250, !llfi_index !3182
  %252 = getelementptr inbounds [3 x double]* %238, i64 0, i64 0, !llfi_index !3183
  store double %251, double* %252, align 8, !llfi_index !3184
  br label %256, !llfi_index !3185

; <label>:253                                     ; preds = %233
  %254 = fadd double %245, %248, !llfi_index !3186
  %255 = getelementptr inbounds [3 x double]* %238, i64 0, i64 0, !llfi_index !3187
  store double %254, double* %255, align 8, !llfi_index !3188
  br label %256, !llfi_index !3189

; <label>:256                                     ; preds = %253, %249
  %257 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 1, i64 1, !llfi_index !3190
  %258 = load double* %257, align 8, !llfi_index !3191
  %259 = load double* %234, align 8, !llfi_index !3192
  %260 = fsub double %258, %259, !llfi_index !3193
  %261 = load double* %20, align 8, !llfi_index !3194
  %262 = tail call double @fmod(double %260, double %261) #2, !llfi_index !3195
  %263 = load double* @eps_t, align 8, !llfi_index !3196
  %264 = fcmp ugt double %262, %263, !llfi_index !3197
  %265 = load double* %234, align 8, !llfi_index !3198
  br i1 %264, label %270, label %266, !llfi_index !3199

; <label>:266                                     ; preds = %256
  %267 = load double* %20, align 8, !llfi_index !3200
  %268 = fadd double %265, %267, !llfi_index !3201
  %269 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 1, !llfi_index !3202
  store double %268, double* %269, align 8, !llfi_index !3203
  br label %273, !llfi_index !3204

; <label>:270                                     ; preds = %256
  %271 = fadd double %262, %265, !llfi_index !3205
  %272 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 1, !llfi_index !3206
  store double %271, double* %272, align 8, !llfi_index !3207
  br label %273, !llfi_index !3208

; <label>:273                                     ; preds = %270, %266
  %274 = getelementptr inbounds [3 x double]* %238, i64 0, i64 0, !llfi_index !3209
  %275 = load double* %274, align 8, !llfi_index !3210
  %276 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 1, !llfi_index !3211
  %277 = load double* %276, align 8, !llfi_index !3212
  %not. = fcmp ugt double %275, %277, !llfi_index !3213
  %278 = zext i1 %not. to i64, !llfi_index !3214
  %279 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 %278, !llfi_index !3215
  %280 = load double* %279, align 8, !llfi_index !3216
  %281 = load double* %239, align 8, !llfi_index !3217
  %282 = fcmp ole double %280, %281, !llfi_index !3218
  %283 = select i1 %282, i64 %278, i64 2, !llfi_index !3219
  %284 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 %283, !llfi_index !3220
  %285 = load double* %284, align 8, !llfi_index !3221
  %286 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 5, !llfi_index !3222
  store double %285, double* %286, align 8, !llfi_index !3223
  %287 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 4, !llfi_index !3224
  store i64 %283, i64* %287, align 8, !llfi_index !3225
  br label %404, !llfi_index !3226

; <label>:288                                     ; preds = %41
  %289 = load double* %61, align 8, !llfi_index !3227
  %290 = load i64* %69, align 8, !llfi_index !3228
  %291 = sitofp i64 %290 to double, !llfi_index !3229
  %292 = load double* %65, align 8, !llfi_index !3230
  %293 = fmul double %291, %292, !llfi_index !3231
  %294 = fadd double %289, %293, !llfi_index !3232
  %295 = load double* %74, align 8, !llfi_index !3233
  %296 = load i64* %82, align 8, !llfi_index !3234
  %297 = sitofp i64 %296 to double, !llfi_index !3235
  %298 = load double* %78, align 8, !llfi_index !3236
  %299 = fmul double %297, %298, !llfi_index !3237
  %300 = fadd double %295, %299, !llfi_index !3238
  %301 = load double* %86, align 8, !llfi_index !3239
  %302 = load i64* %94, align 8, !llfi_index !3240
  %303 = sitofp i64 %302 to double, !llfi_index !3241
  %304 = load double* %90, align 8, !llfi_index !3242
  %305 = fmul double %303, %304, !llfi_index !3243
  %306 = fadd double %301, %305, !llfi_index !3244
  %307 = load double* %42, align 8, !llfi_index !3245
  %308 = fcmp oeq double %307, 0.000000e+00, !llfi_index !3246
  %309 = load double* %45, align 8, !llfi_index !3247
  br i1 %308, label %310, label %314, !llfi_index !3248

; <label>:310                                     ; preds = %288
  %311 = fcmp ult double %309, %294, !llfi_index !3249
  %312 = fadd double %292, %294, !llfi_index !3250
  %313 = fcmp ugt double %309, %312, !llfi_index !3251
  %or.cond12 = or i1 %311, %313, !llfi_index !3252
  %.1 = select i1 %or.cond12, double 1.000000e+32, double -1.000000e+32, !llfi_index !3253
  br label %317, !llfi_index !3254

; <label>:314                                     ; preds = %288
  %315 = fsub double %294, %309, !llfi_index !3255
  %316 = fdiv double %315, %307, !llfi_index !3256
  br label %317, !llfi_index !3257

; <label>:317                                     ; preds = %314, %310
  %t.sroa.0.0 = phi double [ %316, %314 ], [ %.1, %310 ], !llfi_index !3258
  %318 = load double* %48, align 8, !llfi_index !3259
  %319 = fcmp oeq double %318, 0.000000e+00, !llfi_index !3260
  %320 = load double* %51, align 8, !llfi_index !3261
  br i1 %319, label %321, label %328, !llfi_index !3262

; <label>:321                                     ; preds = %317
  %322 = fcmp ult double %320, %300, !llfi_index !3263
  br i1 %322, label %327, label %323, !llfi_index !3264

; <label>:323                                     ; preds = %321
  %324 = load double* %78, align 8, !llfi_index !3265
  %325 = fadd double %300, %324, !llfi_index !3266
  %326 = fcmp ugt double %320, %325, !llfi_index !3267
  br i1 %326, label %327, label %331, !llfi_index !3268

; <label>:327                                     ; preds = %323, %321
  br label %331, !llfi_index !3269

; <label>:328                                     ; preds = %317
  %329 = fsub double %300, %320, !llfi_index !3270
  %330 = fdiv double %329, %318, !llfi_index !3271
  br label %331, !llfi_index !3272

; <label>:331                                     ; preds = %328, %327, %323
  %t.sroa.4.0 = phi double [ 1.000000e+32, %327 ], [ %330, %328 ], [ -1.000000e+32, %323 ], !llfi_index !3273
  %332 = load double* %54, align 8, !llfi_index !3274
  %333 = fcmp oeq double %332, 0.000000e+00, !llfi_index !3275
  %334 = load double* %57, align 8, !llfi_index !3276
  br i1 %333, label %335, label %342, !llfi_index !3277

; <label>:335                                     ; preds = %331
  %336 = fcmp ult double %334, %306, !llfi_index !3278
  br i1 %336, label %341, label %337, !llfi_index !3279

; <label>:337                                     ; preds = %335
  %338 = load double* %90, align 8, !llfi_index !3280
  %339 = fadd double %306, %338, !llfi_index !3281
  %340 = fcmp ugt double %334, %339, !llfi_index !3282
  br i1 %340, label %341, label %345, !llfi_index !3283

; <label>:341                                     ; preds = %337, %335
  br label %345, !llfi_index !3284

; <label>:342                                     ; preds = %331
  %343 = fsub double %306, %334, !llfi_index !3285
  %344 = fdiv double %343, %332, !llfi_index !3286
  br label %345, !llfi_index !3287

; <label>:345                                     ; preds = %342, %341, %337
  %t.sroa.8.0 = phi double [ 1.000000e+32, %341 ], [ %344, %342 ], [ -1.000000e+32, %337 ], !llfi_index !3288
  %346 = load double* %42, align 8, !llfi_index !3289
  %347 = fcmp oeq double %346, 0.000000e+00, !llfi_index !3290
  br i1 %347, label %354, label %348, !llfi_index !3291

; <label>:348                                     ; preds = %345
  %349 = load double* %65, align 8, !llfi_index !3292
  %350 = fadd double %294, %349, !llfi_index !3293
  %351 = load double* %45, align 8, !llfi_index !3294
  %352 = fsub double %350, %351, !llfi_index !3295
  %353 = fdiv double %352, %346, !llfi_index !3296
  br label %354, !llfi_index !3297

; <label>:354                                     ; preds = %348, %345
  %t.sroa.12.0 = phi double [ %353, %348 ], [ 1.000000e+32, %345 ], !llfi_index !3298
  %355 = load double* %48, align 8, !llfi_index !3299
  %356 = fcmp oeq double %355, 0.000000e+00, !llfi_index !3300
  br i1 %356, label %363, label %357, !llfi_index !3301

; <label>:357                                     ; preds = %354
  %358 = load double* %78, align 8, !llfi_index !3302
  %359 = fadd double %300, %358, !llfi_index !3303
  %360 = load double* %51, align 8, !llfi_index !3304
  %361 = fsub double %359, %360, !llfi_index !3305
  %362 = fdiv double %361, %355, !llfi_index !3306
  br label %363, !llfi_index !3307

; <label>:363                                     ; preds = %357, %354
  %t.sroa.16.0 = phi double [ %362, %357 ], [ 1.000000e+32, %354 ], !llfi_index !3308
  %364 = load double* %54, align 8, !llfi_index !3309
  %365 = fcmp oeq double %364, 0.000000e+00, !llfi_index !3310
  br i1 %365, label %.preheader, label %366, !llfi_index !3311

; <label>:366                                     ; preds = %363
  %367 = load double* %90, align 8, !llfi_index !3312
  %368 = fadd double %306, %367, !llfi_index !3313
  %369 = load double* %57, align 8, !llfi_index !3314
  %370 = fsub double %368, %369, !llfi_index !3315
  %371 = fdiv double %370, %364, !llfi_index !3316
  br label %.preheader, !llfi_index !3317

.preheader:                                       ; preds = %366, %363
  %t.sroa.20.0 = phi double [ %371, %366 ], [ 1.000000e+32, %363 ], !llfi_index !3318
  %372 = fcmp olt double %t.sroa.0.0, %t.sroa.12.0, !llfi_index !3319
  %.13 = select i1 %372, double %t.sroa.0.0, double %t.sroa.12.0, !llfi_index !3320
  %.14 = select i1 %372, double %t.sroa.12.0, double %t.sroa.0.0, !llfi_index !3321
  %.i.0 = select i1 %372, i64 3, i64 0, !llfi_index !3322
  %i.0. = select i1 %372, i64 0, i64 3, !llfi_index !3323
  %373 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 0, !llfi_index !3324
  store double %.14, double* %373, align 8, !llfi_index !3325
  %374 = fsub double -1.000000e+32, %.13, !llfi_index !3326
  %375 = fcmp olt double %374, 0.000000e+00, !llfi_index !3327
  %t_in.1 = select i1 %375, double %.13, double -1.000000e+32, !llfi_index !3328
  %i_in.1 = select i1 %375, i64 %i.0., i64 -1, !llfi_index !3329
  %376 = fsub double 1.000000e+32, %.14, !llfi_index !3330
  %377 = fcmp ogt double %376, 0.000000e+00, !llfi_index !3331
  %t_out.1 = select i1 %377, double %.14, double 1.000000e+32, !llfi_index !3332
  %i_out.1 = select i1 %377, i64 %.i.0, i64 -1, !llfi_index !3333
  %378 = fcmp olt double %t.sroa.4.0, %t.sroa.16.0, !llfi_index !3334
  %.13.1 = select i1 %378, double %t.sroa.4.0, double %t.sroa.16.0, !llfi_index !3335
  %.14.1 = select i1 %378, double %t.sroa.16.0, double %t.sroa.4.0, !llfi_index !3336
  %.i.0.1 = select i1 %378, i64 4, i64 1, !llfi_index !3337
  %i.0..1 = select i1 %378, i64 1, i64 4, !llfi_index !3338
  %379 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 1, !llfi_index !3339
  store double %.14.1, double* %379, align 8, !llfi_index !3340
  %380 = fsub double %t_in.1, %.13.1, !llfi_index !3341
  %381 = fcmp olt double %380, 0.000000e+00, !llfi_index !3342
  %t_in.1.1 = select i1 %381, double %.13.1, double %t_in.1, !llfi_index !3343
  %i_in.1.1 = select i1 %381, i64 %i.0..1, i64 %i_in.1, !llfi_index !3344
  %382 = fsub double %t_out.1, %.14.1, !llfi_index !3345
  %383 = fcmp ogt double %382, 0.000000e+00, !llfi_index !3346
  %t_out.1.1 = select i1 %383, double %.14.1, double %t_out.1, !llfi_index !3347
  %i_out.1.1 = select i1 %383, i64 %.i.0.1, i64 %i_out.1, !llfi_index !3348
  %384 = fcmp olt double %t.sroa.8.0, %t.sroa.20.0, !llfi_index !3349
  %.13.2 = select i1 %384, double %t.sroa.8.0, double %t.sroa.20.0, !llfi_index !3350
  %.14.2 = select i1 %384, double %t.sroa.20.0, double %t.sroa.8.0, !llfi_index !3351
  %.i.0.2 = select i1 %384, i64 5, i64 2, !llfi_index !3352
  %i.0..2 = select i1 %384, i64 2, i64 5, !llfi_index !3353
  %385 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 1, i64 2, !llfi_index !3354
  store double %.14.2, double* %385, align 8, !llfi_index !3355
  %386 = fsub double %t_in.1.1, %.13.2, !llfi_index !3356
  %387 = fcmp olt double %386, 0.000000e+00, !llfi_index !3357
  %t_in.1.2 = select i1 %387, double %.13.2, double %t_in.1.1, !llfi_index !3358
  %i_in.1.2 = select i1 %387, i64 %i.0..2, i64 %i_in.1.1, !llfi_index !3359
  %388 = fsub double %t_out.1.1, %.14.2, !llfi_index !3360
  %389 = fcmp ogt double %388, 0.000000e+00, !llfi_index !3361
  %t_out.1.2 = select i1 %389, double %.14.2, double %t_out.1.1, !llfi_index !3362
  %i_out.1.2 = select i1 %389, i64 %.i.0.2, i64 %i_out.1.1, !llfi_index !3363
  %390 = fsub double %t_in.1.2, %t_out.1.2, !llfi_index !3364
  %391 = fcmp ogt double %390, 0.000000e+00, !llfi_index !3365
  %392 = fcmp olt double %t_out.1.2, 0.000000e+00, !llfi_index !3366
  %or.cond = or i1 %391, %392, !llfi_index !3367
  br i1 %or.cond, label %393, label %396, !llfi_index !3368

; <label>:393                                     ; preds = %.preheader
  %394 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !3369
  %395 = tail call i64 @fwrite(i8* getelementptr inbounds ([42 x i8]* @.str1218, i64 0, i64 0), i64 41, i64 1, %struct._IO_FILE* %394) #9, !llfi_index !3370
  tail call void @exit(i32 -1) #11, !llfi_index !3371
  unreachable, !llfi_index !3372

; <label>:396                                     ; preds = %.preheader
  %397 = icmp sgt i64 %i_in.1.2, 2, !llfi_index !3373
  %398 = add nsw i64 %i_in.1.2, -3, !llfi_index !3374
  %.i_in.0 = select i1 %397, i64 %398, i64 %i_in.1.2, !llfi_index !3375
  %399 = icmp sgt i64 %i_out.1.2, 2, !llfi_index !3376
  %400 = add nsw i64 %i_out.1.2, -3, !llfi_index !3377
  %i_out.2 = select i1 %399, i64 %400, i64 %i_out.1.2, !llfi_index !3378
  store i64 %.i_in.0, i64* %119, align 8, !llfi_index !3379
  %401 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 3, !llfi_index !3380
  store double %t_in.1.2, double* %401, align 8, !llfi_index !3381
  %402 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 5, !llfi_index !3382
  store double %t_out.1.2, double* %402, align 8, !llfi_index !3383
  %403 = getelementptr inbounds %struct.rayinfo* %6, i64 0, i32 4, !llfi_index !3384
  store i64 %i_out.2, i64* %403, align 8, !llfi_index !3385
  br label %404, !llfi_index !3386

; <label>:404                                     ; preds = %396, %273, %217, %161, %41
  ret void, !llfi_index !3387
}

; Function Attrs: nounwind
declare double @fmod(double, double) #1

; Function Attrs: nounwind uwtable
define i64 @step_grid(%struct.ray* nocapture readonly %r) #0 {
  %1 = getelementptr inbounds %struct.ray* %r, i64 0, i32 6, !llfi_index !3388
  %2 = load %struct.rayinfo** %1, align 8, !llfi_index !3389
  %3 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 0, !llfi_index !3390
  %4 = load %struct.grid** %3, align 8, !llfi_index !3391
  %5 = getelementptr inbounds %struct.grid* %4, i64 0, i32 5, i64 1, !llfi_index !3392
  %6 = load i64* %5, align 8, !llfi_index !3393
  %7 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 5, !llfi_index !3394
  %8 = load double* %7, align 8, !llfi_index !3395
  %9 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 3, !llfi_index !3396
  store double %8, double* %9, align 8, !llfi_index !3397
  %10 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 4, !llfi_index !3398
  %11 = load i64* %10, align 8, !llfi_index !3399
  %12 = getelementptr inbounds %struct.ray* %r, i64 0, i32 8, i64 %11, !llfi_index !3400
  %13 = load i64* %12, align 8, !llfi_index !3401
  %14 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 7, i64 %11, !llfi_index !3402
  %15 = load i64* %14, align 8, !llfi_index !3403
  %16 = add nsw i64 %15, %13, !llfi_index !3404
  store i64 %16, i64* %14, align 8, !llfi_index !3405
  %17 = load i64* %10, align 8, !llfi_index !3406
  %18 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 2, !llfi_index !3407
  store i64 %17, i64* %18, align 8, !llfi_index !3408
  %19 = load i64* %10, align 8, !llfi_index !3409
  %20 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 7, i64 %19, !llfi_index !3410
  %21 = load i64* %20, align 8, !llfi_index !3411
  %22 = icmp sgt i64 %21, -1, !llfi_index !3412
  %23 = icmp slt i64 %21, %6, !llfi_index !3413
  %or.cond = and i1 %22, %23, !llfi_index !3414
  br i1 %or.cond, label %24, label %50, !llfi_index !3415

; <label>:24                                      ; preds = %0
  %25 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 6, i64 %19, !llfi_index !3416
  %26 = load double* %25, align 8, !llfi_index !3417
  %27 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 1, i64 %19, !llfi_index !3418
  %28 = load double* %27, align 8, !llfi_index !3419
  %29 = fadd double %26, %28, !llfi_index !3420
  store double %29, double* %27, align 8, !llfi_index !3421
  %30 = load i64* %10, align 8, !llfi_index !3422
  %31 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 9, i64 %30, !llfi_index !3423
  %32 = load i64* %31, align 8, !llfi_index !3424
  %33 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 8, !llfi_index !3425
  %34 = load i64* %33, align 8, !llfi_index !3426
  %35 = add nsw i64 %34, %32, !llfi_index !3427
  store i64 %35, i64* %33, align 8, !llfi_index !3428
  %36 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 1, i64 0, !llfi_index !3429
  %37 = load double* %36, align 8, !llfi_index !3430
  %38 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 1, i64 1, !llfi_index !3431
  %39 = load double* %38, align 8, !llfi_index !3432
  %not. = fcmp ugt double %37, %39, !llfi_index !3433
  %40 = zext i1 %not. to i64, !llfi_index !3434
  %41 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 1, i64 %40, !llfi_index !3435
  %42 = load double* %41, align 8, !llfi_index !3436
  %43 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 1, i64 2, !llfi_index !3437
  %44 = load double* %43, align 8, !llfi_index !3438
  %45 = fcmp ole double %42, %44, !llfi_index !3439
  %46 = select i1 %45, i64 %40, i64 2, !llfi_index !3440
  %47 = getelementptr inbounds %struct.rayinfo* %2, i64 0, i32 1, i64 %46, !llfi_index !3441
  %48 = load double* %47, align 8, !llfi_index !3442
  store double %48, double* %7, align 8, !llfi_index !3443
  store i64 %46, i64* %10, align 8, !llfi_index !3444
  %49 = load i64* %33, align 8, !llfi_index !3445
  br label %50, !llfi_index !3446

; <label>:50                                      ; preds = %24, %0
  %.0 = phi i64 [ %49, %24 ], [ -1, %0 ], !llfi_index !3447
  ret i64 %.0, !llfi_index !3448
}

; Function Attrs: nounwind uwtable
define i64 @next_voxel(%struct.ray* nocapture %r) #0 {
  %1 = getelementptr inbounds %struct.ray* %r, i64 0, i32 6, !llfi_index !3449
  %2 = tail call i64 @step_grid(%struct.ray* %r), !llfi_index !3450
  %3 = icmp eq i64 %2, -1, !llfi_index !3451
  br i1 %3, label %.lr.ph, label %split1, !llfi_index !3452

.lr.ph:                                           ; preds = %10, %0
  %4 = load %struct.rayinfo** %1, align 8, !llfi_index !3453
  %5 = getelementptr inbounds %struct.rayinfo* %4, i64 0, i32 0, !llfi_index !3454
  %6 = load %struct.grid** %5, align 8, !llfi_index !3455
  %7 = getelementptr inbounds %struct.grid* %6, i64 0, i32 9, !llfi_index !3456
  %8 = load i64* %7, align 8, !llfi_index !3457
  %9 = icmp eq i64 %8, 0, !llfi_index !3458
  br i1 %9, label %split1, label %10, !llfi_index !3459

; <label>:10                                      ; preds = %.lr.ph
  tail call void @pop_up_a_grid(%struct.ray* %r), !llfi_index !3460
  %11 = tail call i64 @step_grid(%struct.ray* %r), !llfi_index !3461
  %12 = icmp eq i64 %11, -1, !llfi_index !3462
  br i1 %12, label %.lr.ph, label %split1, !llfi_index !3463

split1:                                           ; preds = %10, %.lr.ph, %0
  %.0 = phi i64 [ %2, %0 ], [ %11, %10 ], [ -1, %.lr.ph ], !llfi_index !3464
  ret i64 %.0, !llfi_index !3465
}

; Function Attrs: nounwind uwtable
define %struct.voxel* @next_nonempty_voxel(%struct.ray* nocapture %r) #0 {
  %1 = tail call i64 @next_voxel(%struct.ray* %r), !llfi_index !3466
  %2 = icmp slt i64 %1, 0, !llfi_index !3467
  br i1 %2, label %.loopexit, label %3, !llfi_index !3468

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.ray* %r, i64 0, i32 6, !llfi_index !3469
  br label %5, !llfi_index !3470

; <label>:5                                       ; preds = %8, %3
  %indx.0 = phi i64 [ %1, %3 ], [ %9, %8 ], !llfi_index !3471
  %.pn = load %struct.rayinfo** %4, align 8, !llfi_index !3472
  %gr.0.in = getelementptr inbounds %struct.rayinfo* %.pn, i64 0, i32 0, !llfi_index !3473
  %gr.0 = load %struct.grid** %gr.0.in, align 8, !llfi_index !3474
  %6 = tail call i64 @lookup_emptycells(i64 %indx.0, %struct.grid* %gr.0), !llfi_index !3475
  %7 = icmp eq i64 %6, 1, !llfi_index !3476
  br i1 %7, label %8, label %11, !llfi_index !3477

; <label>:8                                       ; preds = %5
  %9 = tail call i64 @next_voxel(%struct.ray* %r), !llfi_index !3478
  %10 = icmp slt i64 %9, 0, !llfi_index !3479
  br i1 %10, label %.loopexit, label %5, !llfi_index !3480

; <label>:11                                      ; preds = %5
  %12 = tail call %struct.voxel* @lookup_hashtable(i64 %indx.0, %struct.grid* %gr.0), !llfi_index !3481
  br label %.loopexit, !llfi_index !3482

.loopexit:                                        ; preds = %11, %8, %0
  %.0 = phi %struct.voxel* [ %12, %11 ], [ null, %0 ], [ null, %8 ], !llfi_index !3483
  ret %struct.voxel* %.0, !llfi_index !3484
}

; Function Attrs: nounwind uwtable
define %struct.voxel* @next_nonempty_leaf(%struct.ray* %r, i64 %step, i64* nocapture %status) #0 {
tailrecurse:
  %0 = getelementptr inbounds %struct.ray* %r, i64 0, i32 6, !llfi_index !3485
  %phitmp = icmp eq i64 %step, 1, !llfi_index !3486
  br i1 %phitmp, label %.critedge, label %2, !llfi_index !3487

.critedge:                                        ; preds = %15, %tailrecurse
  %1 = tail call %struct.voxel* @next_nonempty_voxel(%struct.ray* %r), !llfi_index !3488
  br label %9, !llfi_index !3489

; <label>:2                                       ; preds = %tailrecurse
  %3 = load %struct.rayinfo** %0, align 8, !llfi_index !3490
  %4 = getelementptr inbounds %struct.rayinfo* %3, i64 0, i32 8, !llfi_index !3491
  %5 = load i64* %4, align 8, !llfi_index !3492
  %6 = getelementptr inbounds %struct.rayinfo* %3, i64 0, i32 0, !llfi_index !3493
  %7 = load %struct.grid** %6, align 8, !llfi_index !3494
  %8 = tail call %struct.voxel* @lookup_hashtable(i64 %5, %struct.grid* %7), !llfi_index !3495
  br label %9, !llfi_index !3496

; <label>:9                                       ; preds = %2, %.critedge
  %v.0 = phi %struct.voxel* [ %1, %.critedge ], [ %8, %2 ], !llfi_index !3497
  %10 = icmp eq %struct.voxel* %v.0, null, !llfi_index !3498
  br i1 %10, label %11, label %.preheader, !llfi_index !3499

; <label>:11                                      ; preds = %9
  store i64 0, i64* %status, align 8, !llfi_index !3500
  br label %.loopexit, !llfi_index !3501

.preheader:                                       ; preds = %23, %23, %9
  %v.1 = phi %struct.voxel* [ %v.0, %9 ], [ %24, %23 ], [ %24, %23 ], !llfi_index !3502
  %12 = getelementptr inbounds %struct.voxel* %v.1, i64 0, i32 4, !llfi_index !3503
  %13 = load i8* %12, align 1, !llfi_index !3504
  switch i8 %13, label %.loopexit [
    i8 5, label %14
    i8 3, label %15
  ], !llfi_index !3505

; <label>:14                                      ; preds = %.preheader
  store i64 1, i64* %status, align 8, !llfi_index !3506
  br label %.loopexit, !llfi_index !3507

; <label>:15                                      ; preds = %.preheader
  tail call void @push_down_grid(%struct.ray* %r, %struct.voxel* %v.1), !llfi_index !3508
  %16 = load %struct.rayinfo** %0, align 8, !llfi_index !3509
  %17 = getelementptr inbounds %struct.rayinfo* %16, i64 0, i32 8, !llfi_index !3510
  %18 = load i64* %17, align 8, !llfi_index !3511
  %19 = getelementptr inbounds %struct.rayinfo* %16, i64 0, i32 0, !llfi_index !3512
  %20 = load %struct.grid** %19, align 8, !llfi_index !3513
  %21 = tail call i64 @lookup_emptycells(i64 %18, %struct.grid* %20), !llfi_index !3514
  %22 = icmp eq i64 %21, 1, !llfi_index !3515
  br i1 %22, label %.critedge, label %23, !llfi_index !3516

; <label>:23                                      ; preds = %15
  %24 = tail call %struct.voxel* @lookup_hashtable(i64 %18, %struct.grid* %20), !llfi_index !3517
  %25 = getelementptr inbounds %struct.voxel* %24, i64 0, i32 4, !llfi_index !3518
  %26 = load i8* %25, align 1, !llfi_index !3519
  switch i8 %26, label %.loopexit [
    i8 5, label %.preheader
    i8 3, label %.preheader
    i8 4, label %27
  ], !llfi_index !3520

; <label>:27                                      ; preds = %23
  store i64 1, i64* %status, align 8, !llfi_index !3521
  br label %.loopexit, !llfi_index !3522

.loopexit:                                        ; preds = %27, %23, %14, %.preheader, %11
  %.0 = phi %struct.voxel* [ null, %11 ], [ null, %14 ], [ null, %27 ], [ %24, %23 ], [ %v.1, %.preheader ], !llfi_index !3523
  ret %struct.voxel* %.0, !llfi_index !3524
}

; Function Attrs: nounwind uwtable
define %struct.voxel* @init_ray(%struct.ray* %r, %struct.grid* %g) #0 {
  %status = alloca i64, align 8, !llfi_index !3525
  tail call void @reset_rayinfo(%struct.ray* %r), !llfi_index !3526
  %1 = getelementptr inbounds %struct.ray* %r, i64 0, i32 4, i64 0, !llfi_index !3527
  %2 = load double* %1, align 8, !llfi_index !3528
  %3 = fcmp oeq double %2, 0.000000e+00, !llfi_index !3529
  br i1 %3, label %4, label %16, !llfi_index !3530

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.ray* %r, i64 0, i32 3, i64 0, !llfi_index !3531
  %6 = load double* %5, align 8, !llfi_index !3532
  %7 = getelementptr inbounds %struct.grid* %g, i64 0, i32 7, i64 0, !llfi_index !3533
  %8 = load double* %7, align 8, !llfi_index !3534
  %9 = fcmp ult double %6, %8, !llfi_index !3535
  br i1 %9, label %15, label %10, !llfi_index !3536

; <label>:10                                      ; preds = %4
  %11 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 0, !llfi_index !3537
  %12 = load double* %11, align 8, !llfi_index !3538
  %13 = fadd double %8, %12, !llfi_index !3539
  %14 = fcmp ugt double %6, %13, !llfi_index !3540
  br i1 %14, label %15, label %23, !llfi_index !3541

; <label>:15                                      ; preds = %10, %4
  br label %23, !llfi_index !3542

; <label>:16                                      ; preds = %0
  %17 = getelementptr inbounds %struct.grid* %g, i64 0, i32 7, i64 0, !llfi_index !3543
  %18 = load double* %17, align 8, !llfi_index !3544
  %19 = getelementptr inbounds %struct.ray* %r, i64 0, i32 3, i64 0, !llfi_index !3545
  %20 = load double* %19, align 8, !llfi_index !3546
  %21 = fsub double %18, %20, !llfi_index !3547
  %22 = fdiv double %21, %2, !llfi_index !3548
  br label %23, !llfi_index !3549

; <label>:23                                      ; preds = %16, %15, %10
  %t.sroa.0.0 = phi double [ 1.000000e+32, %15 ], [ %22, %16 ], [ -1.000000e+32, %10 ], !llfi_index !3550
  %24 = getelementptr inbounds %struct.ray* %r, i64 0, i32 4, i64 1, !llfi_index !3551
  %25 = load double* %24, align 8, !llfi_index !3552
  %26 = fcmp oeq double %25, 0.000000e+00, !llfi_index !3553
  br i1 %26, label %27, label %39, !llfi_index !3554

; <label>:27                                      ; preds = %23
  %28 = getelementptr inbounds %struct.ray* %r, i64 0, i32 3, i64 1, !llfi_index !3555
  %29 = load double* %28, align 8, !llfi_index !3556
  %30 = getelementptr inbounds %struct.grid* %g, i64 0, i32 7, i64 1, !llfi_index !3557
  %31 = load double* %30, align 8, !llfi_index !3558
  %32 = fcmp ult double %29, %31, !llfi_index !3559
  br i1 %32, label %38, label %33, !llfi_index !3560

; <label>:33                                      ; preds = %27
  %34 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 1, !llfi_index !3561
  %35 = load double* %34, align 8, !llfi_index !3562
  %36 = fadd double %31, %35, !llfi_index !3563
  %37 = fcmp ugt double %29, %36, !llfi_index !3564
  br i1 %37, label %38, label %46, !llfi_index !3565

; <label>:38                                      ; preds = %33, %27
  br label %46, !llfi_index !3566

; <label>:39                                      ; preds = %23
  %40 = getelementptr inbounds %struct.grid* %g, i64 0, i32 7, i64 1, !llfi_index !3567
  %41 = load double* %40, align 8, !llfi_index !3568
  %42 = getelementptr inbounds %struct.ray* %r, i64 0, i32 3, i64 1, !llfi_index !3569
  %43 = load double* %42, align 8, !llfi_index !3570
  %44 = fsub double %41, %43, !llfi_index !3571
  %45 = fdiv double %44, %25, !llfi_index !3572
  br label %46, !llfi_index !3573

; <label>:46                                      ; preds = %39, %38, %33
  %t.sroa.5.0 = phi double [ 1.000000e+32, %38 ], [ %45, %39 ], [ -1.000000e+32, %33 ], !llfi_index !3574
  %47 = getelementptr inbounds %struct.ray* %r, i64 0, i32 4, i64 2, !llfi_index !3575
  %48 = load double* %47, align 8, !llfi_index !3576
  %49 = fcmp oeq double %48, 0.000000e+00, !llfi_index !3577
  br i1 %49, label %50, label %62, !llfi_index !3578

; <label>:50                                      ; preds = %46
  %51 = getelementptr inbounds %struct.ray* %r, i64 0, i32 3, i64 2, !llfi_index !3579
  %52 = load double* %51, align 8, !llfi_index !3580
  %53 = getelementptr inbounds %struct.grid* %g, i64 0, i32 7, i64 2, !llfi_index !3581
  %54 = load double* %53, align 8, !llfi_index !3582
  %55 = fcmp ult double %52, %54, !llfi_index !3583
  br i1 %55, label %61, label %56, !llfi_index !3584

; <label>:56                                      ; preds = %50
  %57 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 2, !llfi_index !3585
  %58 = load double* %57, align 8, !llfi_index !3586
  %59 = fadd double %54, %58, !llfi_index !3587
  %60 = fcmp ugt double %52, %59, !llfi_index !3588
  br i1 %60, label %61, label %69, !llfi_index !3589

; <label>:61                                      ; preds = %56, %50
  br label %69, !llfi_index !3590

; <label>:62                                      ; preds = %46
  %63 = getelementptr inbounds %struct.grid* %g, i64 0, i32 7, i64 2, !llfi_index !3591
  %64 = load double* %63, align 8, !llfi_index !3592
  %65 = getelementptr inbounds %struct.ray* %r, i64 0, i32 3, i64 2, !llfi_index !3593
  %66 = load double* %65, align 8, !llfi_index !3594
  %67 = fsub double %64, %66, !llfi_index !3595
  %68 = fdiv double %67, %48, !llfi_index !3596
  br label %69, !llfi_index !3597

; <label>:69                                      ; preds = %62, %61, %56
  %t.sroa.10.0 = phi double [ 1.000000e+32, %61 ], [ %68, %62 ], [ -1.000000e+32, %56 ], !llfi_index !3598
  %70 = load double* %1, align 8, !llfi_index !3599
  %71 = fcmp oeq double %70, 0.000000e+00, !llfi_index !3600
  br i1 %71, label %82, label %72, !llfi_index !3601

; <label>:72                                      ; preds = %69
  %73 = getelementptr inbounds %struct.grid* %g, i64 0, i32 7, i64 0, !llfi_index !3602
  %74 = load double* %73, align 8, !llfi_index !3603
  %75 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 0, !llfi_index !3604
  %76 = load double* %75, align 8, !llfi_index !3605
  %77 = fadd double %74, %76, !llfi_index !3606
  %78 = getelementptr inbounds %struct.ray* %r, i64 0, i32 3, i64 0, !llfi_index !3607
  %79 = load double* %78, align 8, !llfi_index !3608
  %80 = fsub double %77, %79, !llfi_index !3609
  %81 = fdiv double %80, %70, !llfi_index !3610
  br label %82, !llfi_index !3611

; <label>:82                                      ; preds = %72, %69
  %t.sroa.15.0 = phi double [ %81, %72 ], [ 1.000000e+32, %69 ], !llfi_index !3612
  %83 = load double* %24, align 8, !llfi_index !3613
  %84 = fcmp oeq double %83, 0.000000e+00, !llfi_index !3614
  br i1 %84, label %95, label %85, !llfi_index !3615

; <label>:85                                      ; preds = %82
  %86 = getelementptr inbounds %struct.grid* %g, i64 0, i32 7, i64 1, !llfi_index !3616
  %87 = load double* %86, align 8, !llfi_index !3617
  %88 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 1, !llfi_index !3618
  %89 = load double* %88, align 8, !llfi_index !3619
  %90 = fadd double %87, %89, !llfi_index !3620
  %91 = getelementptr inbounds %struct.ray* %r, i64 0, i32 3, i64 1, !llfi_index !3621
  %92 = load double* %91, align 8, !llfi_index !3622
  %93 = fsub double %90, %92, !llfi_index !3623
  %94 = fdiv double %93, %83, !llfi_index !3624
  br label %95, !llfi_index !3625

; <label>:95                                      ; preds = %85, %82
  %t.sroa.20.0 = phi double [ %94, %85 ], [ 1.000000e+32, %82 ], !llfi_index !3626
  %96 = load double* %47, align 8, !llfi_index !3627
  %97 = fcmp oeq double %96, 0.000000e+00, !llfi_index !3628
  br i1 %97, label %.preheader, label %98, !llfi_index !3629

; <label>:98                                      ; preds = %95
  %99 = getelementptr inbounds %struct.grid* %g, i64 0, i32 7, i64 2, !llfi_index !3630
  %100 = load double* %99, align 8, !llfi_index !3631
  %101 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 2, !llfi_index !3632
  %102 = load double* %101, align 8, !llfi_index !3633
  %103 = fadd double %100, %102, !llfi_index !3634
  %104 = getelementptr inbounds %struct.ray* %r, i64 0, i32 3, i64 2, !llfi_index !3635
  %105 = load double* %104, align 8, !llfi_index !3636
  %106 = fsub double %103, %105, !llfi_index !3637
  %107 = fdiv double %106, %96, !llfi_index !3638
  br label %.preheader, !llfi_index !3639

.preheader:                                       ; preds = %98, %95
  %t.sroa.25.0 = phi double [ %107, %98 ], [ 1.000000e+32, %95 ], !llfi_index !3640
  %108 = fcmp olt double %t.sroa.0.0, %t.sroa.15.0, !llfi_index !3641
  %i.0. = select i1 %108, i64 0, i64 3, !llfi_index !3642
  %.i.0 = select i1 %108, i64 3, i64 0, !llfi_index !3643
  %. = select i1 %108, double %t.sroa.0.0, double %t.sroa.15.0, !llfi_index !3644
  %.2 = select i1 %108, double %t.sroa.15.0, double %t.sroa.0.0, !llfi_index !3645
  %109 = fcmp ogt double %., -1.000000e+32, !llfi_index !3646
  %t_in.1 = select i1 %109, double %., double -1.000000e+32, !llfi_index !3647
  %i_in.1 = select i1 %109, i64 %i.0., i64 -1, !llfi_index !3648
  %110 = fcmp olt double %.2, 1.000000e+32, !llfi_index !3649
  %i_out.1 = select i1 %110, i64 %.i.0, i64 -1, !llfi_index !3650
  %t_out.1 = select i1 %110, double %.2, double 1.000000e+32, !llfi_index !3651
  %111 = fcmp olt double %t.sroa.5.0, %t.sroa.20.0, !llfi_index !3652
  %i.0..1 = select i1 %111, i64 1, i64 4, !llfi_index !3653
  %.i.0.1 = select i1 %111, i64 4, i64 1, !llfi_index !3654
  %..1 = select i1 %111, double %t.sroa.5.0, double %t.sroa.20.0, !llfi_index !3655
  %.2.1 = select i1 %111, double %t.sroa.20.0, double %t.sroa.5.0, !llfi_index !3656
  %112 = fcmp olt double %t_in.1, %..1, !llfi_index !3657
  %t_in.1.1 = select i1 %112, double %..1, double %t_in.1, !llfi_index !3658
  %i_in.1.1 = select i1 %112, i64 %i.0..1, i64 %i_in.1, !llfi_index !3659
  %113 = fcmp ogt double %t_out.1, %.2.1, !llfi_index !3660
  %i_out.1.1 = select i1 %113, i64 %.i.0.1, i64 %i_out.1, !llfi_index !3661
  %t_out.1.1 = select i1 %113, double %.2.1, double %t_out.1, !llfi_index !3662
  %114 = fcmp olt double %t.sroa.10.0, %t.sroa.25.0, !llfi_index !3663
  %i.0..2 = select i1 %114, i64 2, i64 5, !llfi_index !3664
  %.i.0.2 = select i1 %114, i64 5, i64 2, !llfi_index !3665
  %..2 = select i1 %114, double %t.sroa.10.0, double %t.sroa.25.0, !llfi_index !3666
  %.2.2 = select i1 %114, double %t.sroa.25.0, double %t.sroa.10.0, !llfi_index !3667
  %115 = fcmp olt double %t_in.1.1, %..2, !llfi_index !3668
  %t_in.1.2 = select i1 %115, double %..2, double %t_in.1.1, !llfi_index !3669
  %i_in.1.2 = select i1 %115, i64 %i.0..2, i64 %i_in.1.1, !llfi_index !3670
  %116 = fcmp ogt double %t_out.1.1, %.2.2, !llfi_index !3671
  %i_out.1.2 = select i1 %116, i64 %.i.0.2, i64 %i_out.1.1, !llfi_index !3672
  %t_out.1.2 = select i1 %116, double %.2.2, double %t_out.1.1, !llfi_index !3673
  %117 = fcmp oge double %t_in.1.2, %t_out.1.2, !llfi_index !3674
  %118 = fcmp olt double %t_out.1.2, 0.000000e+00, !llfi_index !3675
  %or.cond = or i1 %117, %118, !llfi_index !3676
  br i1 %or.cond, label %208, label %119, !llfi_index !3677

; <label>:119                                     ; preds = %.preheader
  %120 = tail call %struct.rayinfo* @ma_rayinfo(%struct.ray* %r), !llfi_index !3678
  %121 = getelementptr inbounds %struct.ray* %r, i64 0, i32 6, !llfi_index !3679
  store %struct.rayinfo* %120, %struct.rayinfo** %121, align 8, !llfi_index !3680
  %122 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 0, !llfi_index !3681
  store %struct.grid* %g, %struct.grid** %122, align 8, !llfi_index !3682
  %123 = fcmp ult double %t.sroa.0.0, %t.sroa.15.0, !llfi_index !3683
  %124 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 1, i64 0, !llfi_index !3684
  %.6 = select i1 %123, double %t.sroa.15.0, double %t.sroa.0.0, !llfi_index !3685
  store double %.6, double* %124, align 8, !llfi_index !3686
  %125 = fcmp ult double %t.sroa.5.0, %t.sroa.20.0, !llfi_index !3687
  %126 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 1, i64 1, !llfi_index !3688
  %storemerge4 = select i1 %125, double %t.sroa.20.0, double %t.sroa.5.0, !llfi_index !3689
  store double %storemerge4, double* %126, align 8, !llfi_index !3690
  %127 = fcmp ult double %t.sroa.10.0, %t.sroa.25.0, !llfi_index !3691
  %128 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 1, i64 2, !llfi_index !3692
  %.7 = select i1 %127, double %t.sroa.25.0, double %t.sroa.10.0, !llfi_index !3693
  store double %.7, double* %128, align 8, !llfi_index !3694
  %129 = icmp sgt i64 %i_in.1.2, 2, !llfi_index !3695
  %130 = add nsw i64 %i_in.1.2, -3, !llfi_index !3696
  %.i_in.0 = select i1 %129, i64 %130, i64 %i_in.1.2, !llfi_index !3697
  %131 = icmp sgt i64 %i_out.1.2, 2, !llfi_index !3698
  %132 = add nsw i64 %i_out.1.2, -3, !llfi_index !3699
  %i_out.2 = select i1 %131, i64 %132, i64 %i_out.1.2, !llfi_index !3700
  %133 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 2, !llfi_index !3701
  store i64 %.i_in.0, i64* %133, align 8, !llfi_index !3702
  %134 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 3, !llfi_index !3703
  store double %t_in.1.2, double* %134, align 8, !llfi_index !3704
  %135 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 5, !llfi_index !3705
  store double %t_out.1.2, double* %135, align 8, !llfi_index !3706
  %136 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 4, !llfi_index !3707
  store i64 %i_out.2, i64* %136, align 8, !llfi_index !3708
  %137 = load double* %1, align 8, !llfi_index !3709
  %138 = fcmp oeq double %137, 0.000000e+00, !llfi_index !3710
  br i1 %138, label %148, label %139, !llfi_index !3711

; <label>:139                                     ; preds = %119
  %140 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 0, !llfi_index !3712
  %141 = load double* %140, align 8, !llfi_index !3713
  %142 = fcmp ogt double %137, 0.000000e+00, !llfi_index !3714
  br i1 %142, label %145, label %143, !llfi_index !3715

; <label>:143                                     ; preds = %139
  %144 = fsub double -0.000000e+00, %137, !llfi_index !3716
  br label %145, !llfi_index !3717

; <label>:145                                     ; preds = %143, %139
  %146 = phi double [ %144, %143 ], [ %137, %139 ], !llfi_index !3718
  %147 = fdiv double %141, %146, !llfi_index !3719
  br label %148, !llfi_index !3720

; <label>:148                                     ; preds = %145, %119
  %149 = phi double [ %147, %145 ], [ 1.000000e+32, %119 ], !llfi_index !3721
  %150 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 6, i64 0, !llfi_index !3722
  store double %149, double* %150, align 8, !llfi_index !3723
  %151 = load double* %24, align 8, !llfi_index !3724
  %152 = fcmp oeq double %151, 0.000000e+00, !llfi_index !3725
  br i1 %152, label %162, label %153, !llfi_index !3726

; <label>:153                                     ; preds = %148
  %154 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 1, !llfi_index !3727
  %155 = load double* %154, align 8, !llfi_index !3728
  %156 = fcmp ogt double %151, 0.000000e+00, !llfi_index !3729
  br i1 %156, label %159, label %157, !llfi_index !3730

; <label>:157                                     ; preds = %153
  %158 = fsub double -0.000000e+00, %151, !llfi_index !3731
  br label %159, !llfi_index !3732

; <label>:159                                     ; preds = %157, %153
  %160 = phi double [ %158, %157 ], [ %151, %153 ], !llfi_index !3733
  %161 = fdiv double %155, %160, !llfi_index !3734
  br label %162, !llfi_index !3735

; <label>:162                                     ; preds = %159, %148
  %163 = phi double [ %161, %159 ], [ 1.000000e+32, %148 ], !llfi_index !3736
  %164 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 6, i64 1, !llfi_index !3737
  store double %163, double* %164, align 8, !llfi_index !3738
  %165 = load double* %47, align 8, !llfi_index !3739
  %166 = fcmp oeq double %165, 0.000000e+00, !llfi_index !3740
  br i1 %166, label %176, label %167, !llfi_index !3741

; <label>:167                                     ; preds = %162
  %168 = getelementptr inbounds %struct.grid* %g, i64 0, i32 8, i64 2, !llfi_index !3742
  %169 = load double* %168, align 8, !llfi_index !3743
  %170 = fcmp ogt double %165, 0.000000e+00, !llfi_index !3744
  br i1 %170, label %173, label %171, !llfi_index !3745

; <label>:171                                     ; preds = %167
  %172 = fsub double -0.000000e+00, %165, !llfi_index !3746
  br label %173, !llfi_index !3747

; <label>:173                                     ; preds = %171, %167
  %174 = phi double [ %172, %171 ], [ %165, %167 ], !llfi_index !3748
  %175 = fdiv double %169, %174, !llfi_index !3749
  br label %176, !llfi_index !3750

; <label>:176                                     ; preds = %173, %162
  %177 = phi double [ %175, %173 ], [ 1.000000e+32, %162 ], !llfi_index !3751
  %178 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 6, i64 2, !llfi_index !3752
  store double %177, double* %178, align 8, !llfi_index !3753
  %179 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 7, i64 0, !llfi_index !3754
  %180 = bitcast i64* %179 to i8*, !llfi_index !3755
  tail call void @llvm.memset.p0i8.i64(i8* %180, i8 0, i64 24, i32 8, i1 false), !llfi_index !3756
  %181 = load double* %1, align 8, !llfi_index !3757
  %182 = fcmp oge double %181, 0.000000e+00, !llfi_index !3758
  %183 = select i1 %182, i64 1, i64 -1, !llfi_index !3759
  %184 = getelementptr inbounds %struct.ray* %r, i64 0, i32 8, i64 0, !llfi_index !3760
  store i64 %183, i64* %184, align 8, !llfi_index !3761
  %185 = load double* %24, align 8, !llfi_index !3762
  %186 = fcmp oge double %185, 0.000000e+00, !llfi_index !3763
  %187 = select i1 %186, i64 1, i64 -1, !llfi_index !3764
  %188 = getelementptr inbounds %struct.ray* %r, i64 0, i32 8, i64 1, !llfi_index !3765
  store i64 %187, i64* %188, align 8, !llfi_index !3766
  %189 = load double* %47, align 8, !llfi_index !3767
  %190 = fcmp oge double %189, 0.000000e+00, !llfi_index !3768
  %191 = select i1 %190, i64 1, i64 -1, !llfi_index !3769
  %192 = getelementptr inbounds %struct.ray* %r, i64 0, i32 8, i64 2, !llfi_index !3770
  store i64 %191, i64* %192, align 8, !llfi_index !3771
  %193 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 8, !llfi_index !3772
  store i64 0, i64* %193, align 8, !llfi_index !3773
  %194 = load double* %1, align 8, !llfi_index !3774
  %195 = fcmp oge double %194, 0.000000e+00, !llfi_index !3775
  %196 = select i1 %195, i64 1, i64 -1, !llfi_index !3776
  %197 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 9, i64 0, !llfi_index !3777
  store i64 %196, i64* %197, align 8, !llfi_index !3778
  %198 = load double* %24, align 8, !llfi_index !3779
  %199 = fcmp oge double %198, 0.000000e+00, !llfi_index !3780
  %200 = select i1 %199, i64 1, i64 -1, !llfi_index !3781
  %201 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 9, i64 1, !llfi_index !3782
  store i64 %200, i64* %201, align 8, !llfi_index !3783
  %202 = load double* %47, align 8, !llfi_index !3784
  %203 = fcmp oge double %202, 0.000000e+00, !llfi_index !3785
  %204 = select i1 %203, i64 1, i64 -1, !llfi_index !3786
  %205 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 9, i64 2, !llfi_index !3787
  store i64 %204, i64* %205, align 8, !llfi_index !3788
  %206 = getelementptr inbounds %struct.rayinfo* %120, i64 0, i32 10, !llfi_index !3789
  store %struct.rayinfo* null, %struct.rayinfo** %206, align 8, !llfi_index !3790
  %207 = call %struct.voxel* @next_nonempty_leaf(%struct.ray* %r, i64 0, i64* %status), !llfi_index !3791
  br label %208, !llfi_index !3792

; <label>:208                                     ; preds = %176, %.preheader
  %.0 = phi %struct.voxel* [ null, %.preheader ], [ %207, %176 ], !llfi_index !3793
  ret %struct.voxel* %.0, !llfi_index !3794
}

; Function Attrs: nounwind uwtable
define i64 @Intersect(%struct.ray* %pr, %struct.irecord* nocapture %hit) #0 {
  %newhit = alloca %struct.irecord, align 8, !llfi_index !3795
  %1 = load %struct.gmem** @gm, align 8, !llfi_index !3796
  %2 = getelementptr inbounds %struct.gmem* %1, i64 0, i32 3, !llfi_index !3797
  %3 = load %struct.object** %2, align 8, !llfi_index !3798
  %4 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 0, !llfi_index !3799
  store double 1.000000e+32, double* %4, align 8, !llfi_index !3800
  %5 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 1, !llfi_index !3801
  store %struct.element* null, %struct.element** %5, align 8, !llfi_index !3802
  %6 = icmp eq %struct.object* %3, null, !llfi_index !3803
  br i1 %6, label %._crit_edge, label %.lr.ph, !llfi_index !3804

.lr.ph:                                           ; preds = %0
  %7 = getelementptr inbounds %struct.irecord* %newhit, i64 0, i32 0, !llfi_index !3805
  %8 = bitcast %struct.irecord* %hit to i8*, !llfi_index !3806
  %9 = bitcast %struct.irecord* %newhit to i8*, !llfi_index !3807
  br label %10, !llfi_index !3808

; <label>:10                                      ; preds = %23, %.lr.ph
  %po.01 = phi %struct.object* [ %3, %.lr.ph ], [ %25, %23 ], !llfi_index !3809
  %11 = getelementptr inbounds %struct.object* %po.01, i64 0, i32 5, !llfi_index !3810
  %12 = load %struct.pprocs** %11, align 8, !llfi_index !3811
  %13 = getelementptr inbounds %struct.pprocs* %12, i64 0, i32 5, !llfi_index !3812
  %14 = load i64 (...)** %13, align 8, !llfi_index !3813
  %15 = bitcast i64 (...)* %14 to i64 (%struct.ray*, %struct.object*, %struct.irecord*, ...)*, !llfi_index !3814
  %16 = call i64 (%struct.ray*, %struct.object*, %struct.irecord*, ...)* %15(%struct.ray* %pr, %struct.object* %po.01, %struct.irecord* %newhit) #2, !llfi_index !3815
  %17 = icmp eq i64 %16, 0, !llfi_index !3816
  br i1 %17, label %23, label %18, !llfi_index !3817

; <label>:18                                      ; preds = %10
  %19 = load double* %7, align 8, !llfi_index !3818
  %20 = load double* %4, align 8, !llfi_index !3819
  %21 = fcmp olt double %19, %20, !llfi_index !3820
  br i1 %21, label %22, label %23, !llfi_index !3821

; <label>:22                                      ; preds = %18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 40, i32 8, i1 false), !llfi_index !3822
  br label %23, !llfi_index !3823

; <label>:23                                      ; preds = %22, %18, %10
  %24 = getelementptr inbounds %struct.object* %po.01, i64 0, i32 7, !llfi_index !3824
  %25 = load %struct.object** %24, align 8, !llfi_index !3825
  %26 = icmp eq %struct.object* %25, null, !llfi_index !3826
  br i1 %26, label %._crit_edge, label %10, !llfi_index !3827

._crit_edge:                                      ; preds = %23, %0
  %27 = load double* %4, align 8, !llfi_index !3828
  %28 = fcmp olt double %27, 1.000000e+32, !llfi_index !3829
  %. = zext i1 %28 to i64, !llfi_index !3830
  ret i64 %., !llfi_index !3831
}

; Function Attrs: nounwind uwtable
define double @ShadowIntersect(%struct.ray* %pr, double %lightdist, %struct.element* readnone %pe) #0 {
  %newhit = alloca %struct.irecord, align 8, !llfi_index !3832
  %1 = load %struct.gmem** @gm, align 8, !llfi_index !3833
  %2 = getelementptr inbounds %struct.gmem* %1, i64 0, i32 3, !llfi_index !3834
  %po.02 = load %struct.object** %2, align 8, !llfi_index !3835
  %3 = icmp eq %struct.object* %po.02, null, !llfi_index !3836
  br i1 %3, label %.critedge, label %.lr.ph, !llfi_index !3837

.lr.ph:                                           ; preds = %0
  %4 = getelementptr inbounds %struct.irecord* %newhit, i64 0, i32 1, !llfi_index !3838
  %5 = getelementptr inbounds %struct.irecord* %newhit, i64 0, i32 0, !llfi_index !3839
  br label %6, !llfi_index !3840

; <label>:6                                       ; preds = %27, %.lr.ph
  %po.04 = phi %struct.object* [ %po.02, %.lr.ph ], [ %po.0, %27 ], !llfi_index !3841
  %trans.03 = phi double [ 1.000000e+00, %.lr.ph ], [ %trans.1, %27 ], !llfi_index !3842
  %7 = getelementptr inbounds %struct.object* %po.04, i64 0, i32 5, !llfi_index !3843
  %8 = load %struct.pprocs** %7, align 8, !llfi_index !3844
  %9 = getelementptr inbounds %struct.pprocs* %8, i64 0, i32 5, !llfi_index !3845
  %10 = load i64 (...)** %9, align 8, !llfi_index !3846
  %11 = bitcast i64 (...)* %10 to i64 (%struct.ray*, %struct.object*, %struct.irecord*, ...)*, !llfi_index !3847
  %12 = call i64 (%struct.ray*, %struct.object*, %struct.irecord*, ...)* %11(%struct.ray* %pr, %struct.object* %po.04, %struct.irecord* %newhit) #2, !llfi_index !3848
  %13 = icmp eq i64 %12, 0, !llfi_index !3849
  br i1 %13, label %27, label %14, !llfi_index !3850

; <label>:14                                      ; preds = %6
  %15 = load %struct.element** %4, align 8, !llfi_index !3851
  %16 = icmp ne %struct.element* %15, %pe, !llfi_index !3852
  %17 = load double* %5, align 8, !llfi_index !3853
  %18 = fcmp olt double %17, %lightdist, !llfi_index !3854
  %or.cond6 = and i1 %16, %18, !llfi_index !3855
  br i1 %or.cond6, label %19, label %27, !llfi_index !3856

; <label>:19                                      ; preds = %14
  %20 = getelementptr inbounds %struct.element* %15, i64 0, i32 1, !llfi_index !3857
  %21 = load %struct.object** %20, align 8, !llfi_index !3858
  %22 = getelementptr inbounds %struct.object* %21, i64 0, i32 6, !llfi_index !3859
  %23 = load %struct.surf** %22, align 8, !llfi_index !3860
  %24 = getelementptr inbounds %struct.surf* %23, i64 0, i32 4, !llfi_index !3861
  %25 = load double* %24, align 8, !llfi_index !3862
  %26 = fmul double %trans.03, %25, !llfi_index !3863
  br label %27, !llfi_index !3864

; <label>:27                                      ; preds = %19, %14, %6
  %trans.1 = phi double [ %26, %19 ], [ %trans.03, %14 ], [ %trans.03, %6 ], !llfi_index !3865
  %28 = getelementptr inbounds %struct.object* %po.04, i64 0, i32 7, !llfi_index !3866
  %po.0 = load %struct.object** %28, align 8, !llfi_index !3867
  %29 = icmp ne %struct.object* %po.0, null, !llfi_index !3868
  %30 = fcmp ogt double %trans.1, 0.000000e+00, !llfi_index !3869
  %or.cond = and i1 %29, %30, !llfi_index !3870
  br i1 %or.cond, label %6, label %.critedge, !llfi_index !3871

.critedge:                                        ; preds = %27, %0
  %trans.0.lcssa = phi double [ 1.000000e+00, %0 ], [ %trans.1, %27 ], !llfi_index !3872
  ret double %trans.0.lcssa, !llfi_index !3873
}

; Function Attrs: nounwind uwtable
define void @Usage() #0 {
  %1 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !3874
  %2 = load i8** @ProgName, align 8, !llfi_index !3875
  %3 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([26 x i8]* @.str1232, i64 0, i64 0), i8* %2) #2, !llfi_index !3876
  %4 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !3877
  %5 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([13 x i8]* @.str2233, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str3234, i64 0, i64 0)) #2, !llfi_index !3878
  %6 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !3879
  %7 = load i8** @ProgName, align 8, !llfi_index !3880
  %8 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([30 x i8]* @.str4235, i64 0, i64 0), i8* %7) #2, !llfi_index !3881
  %9 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !3882
  %10 = tail call i64 @fwrite(i8* getelementptr inbounds ([31 x i8]* @.str5236, i64 0, i64 0), i64 30, i64 1, %struct._IO_FILE* %9), !llfi_index !3883
  %11 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !3884
  %12 = tail call i64 @fwrite(i8* getelementptr inbounds ([136 x i8]* @.str6237, i64 0, i64 0), i64 135, i64 1, %struct._IO_FILE* %11), !llfi_index !3885
  %13 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !3886
  %14 = tail call i64 @fwrite(i8* getelementptr inbounds ([61 x i8]* @.str7238, i64 0, i64 0), i64 60, i64 1, %struct._IO_FILE* %13), !llfi_index !3887
  %15 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !3888
  %16 = tail call i64 @fwrite(i8* getelementptr inbounds ([43 x i8]* @.str8239, i64 0, i64 0), i64 42, i64 1, %struct._IO_FILE* %15), !llfi_index !3889
  %17 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !3890
  %18 = tail call i64 @fwrite(i8* getelementptr inbounds ([55 x i8]* @.str9240, i64 0, i64 0), i64 54, i64 1, %struct._IO_FILE* %17), !llfi_index !3891
  %19 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !3892
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %19), !llfi_index !3893
  ret void, !llfi_index !3894
}

; Function Attrs: nounwind uwtable
define void @PrintStatistics() #0 {
  %1 = load i64* @TraversalType, align 8, !llfi_index !3895
  %2 = icmp eq i64 %1, 1, !llfi_index !3896
  br i1 %2, label %3, label %4, !llfi_index !3897

; <label>:3                                       ; preds = %0
  tail call void @ma_print(), !llfi_index !3898
  br label %4, !llfi_index !3899

; <label>:4                                       ; preds = %3, %0
  ret void, !llfi_index !3900
}

; Function Attrs: nounwind uwtable
define void @StartRayTrace() #0 {
  %FullTime = alloca %struct.timeval, align 8, !llfi_index !3901
  %Cancel = alloca i64, align 8, !llfi_index !3902
  %Temp = alloca i64, align 8, !llfi_index !3903
  %FullTime1 = alloca %struct.timeval, align 8, !llfi_index !3904
  %1 = load %struct.gmem** @gm, align 8, !llfi_index !3905
  %2 = getelementptr inbounds %struct.gmem* %1, i64 0, i32 9, !llfi_index !3906
  %3 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #2, !llfi_index !3907
  %4 = load %struct.gmem** @gm, align 8, !llfi_index !3908
  %5 = getelementptr inbounds %struct.gmem* %4, i64 0, i32 1, !llfi_index !3909
  %6 = load i64* %5, align 8, !llfi_index !3910
  %7 = add nsw i64 %6, 1, !llfi_index !3911
  store i64 %7, i64* %5, align 8, !llfi_index !3912
  %8 = load %struct.gmem** @gm, align 8, !llfi_index !3913
  %9 = getelementptr inbounds %struct.gmem* %8, i64 0, i32 9, !llfi_index !3914
  %10 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %9) #2, !llfi_index !3915
  %11 = icmp eq i64 %6, 0, !llfi_index !3916
  %12 = load i64* @dostats, align 8, !llfi_index !3917
  %13 = icmp ne i64 %12, 0, !llfi_index !3918
  %or.cond = or i1 %11, %13, !llfi_index !3919
  br i1 %or.cond, label %14, label %22, !llfi_index !3920

; <label>:14                                      ; preds = %0
  %15 = call i32 @gettimeofday(%struct.timeval* %FullTime, %struct.timezone* null) #2, !llfi_index !3921
  %16 = getelementptr inbounds %struct.timeval* %FullTime, i64 0, i32 1, !llfi_index !3922
  %17 = load i64* %16, align 8, !llfi_index !3923
  %18 = getelementptr inbounds %struct.timeval* %FullTime, i64 0, i32 0, !llfi_index !3924
  %19 = load i64* %18, align 8, !llfi_index !3925
  %20 = mul nsw i64 %19, 1000000, !llfi_index !3926
  %21 = add nsw i64 %20, %17, !llfi_index !3927
  br label %22, !llfi_index !3928

; <label>:22                                      ; preds = %14, %0
  %begin.0 = phi i64 [ %21, %14 ], [ undef, %0 ], !llfi_index !3929
  call void @InitWorkPool(i64 %6), !llfi_index !3930
  %23 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 0), align 8, !llfi_index !3931
  call void @InitRayTreeStack(i64 %23, i64 %6), !llfi_index !3932
  %24 = load %struct.gmem** @gm, align 8, !llfi_index !3933
  %25 = getelementptr inbounds %struct.gmem* %24, i64 0, i32 8, i32 0, !llfi_index !3934
  %26 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %25) #2, !llfi_index !3935
  %27 = icmp eq i32 %26, 0, !llfi_index !3936
  br i1 %27, label %29, label %28, !llfi_index !3937

; <label>:28                                      ; preds = %22
  %puts = call i32 @puts(i8* getelementptr inbounds ([43 x i8]* @str41, i64 0, i64 0)), !llfi_index !3938
  call void @exit(i32 -1) #11, !llfi_index !3939
  unreachable, !llfi_index !3940

; <label>:29                                      ; preds = %22
  %30 = load %struct.gmem** @gm, align 8, !llfi_index !3941
  %31 = getelementptr inbounds %struct.gmem* %30, i64 0, i32 8, i32 3, !llfi_index !3942
  %32 = load i64* %31, align 8, !llfi_index !3943
  %33 = getelementptr inbounds %struct.gmem* %30, i64 0, i32 8, i32 2, !llfi_index !3944
  %34 = load i64* %33, align 8, !llfi_index !3945
  %35 = add i64 %34, 1, !llfi_index !3946
  store i64 %35, i64* %33, align 8, !llfi_index !3947
  %36 = load %struct.gmem** @gm, align 8, !llfi_index !3948
  %37 = getelementptr inbounds %struct.gmem* %36, i64 0, i32 0, !llfi_index !3949
  %38 = load i64* %37, align 8, !llfi_index !3950
  %39 = icmp eq i64 %35, %38, !llfi_index !3951
  br i1 %39, label %58, label %40, !llfi_index !3952

; <label>:40                                      ; preds = %29
  %41 = bitcast i64* %Cancel to i32*, !llfi_index !3953
  %42 = call i32 @pthread_setcancelstate(i32 1, i32* %41) #2, !llfi_index !3954
  br label %43, !llfi_index !3955

; <label>:43                                      ; preds = %48, %40
  %44 = load %struct.gmem** @gm, align 8, !llfi_index !3956
  %45 = getelementptr inbounds %struct.gmem* %44, i64 0, i32 8, i32 3, !llfi_index !3957
  %46 = load i64* %45, align 8, !llfi_index !3958
  %47 = icmp eq i64 %32, %46, !llfi_index !3959
  br i1 %47, label %48, label %53, !llfi_index !3960

; <label>:48                                      ; preds = %43
  %49 = getelementptr inbounds %struct.gmem* %44, i64 0, i32 8, i32 1, !llfi_index !3961
  %50 = getelementptr inbounds %struct.gmem* %44, i64 0, i32 8, i32 0, !llfi_index !3962
  %51 = call i32 @pthread_cond_wait(%union.pthread_cond_t* %49, %union.pthread_mutex_t* %50) #2, !llfi_index !3963
  %52 = icmp eq i32 %51, 0, !llfi_index !3964
  br i1 %52, label %43, label %53, !llfi_index !3965

; <label>:53                                      ; preds = %48, %43
  %54 = load i64* %Cancel, align 8, !llfi_index !3966
  %55 = trunc i64 %54 to i32, !llfi_index !3967
  %56 = bitcast i64* %Temp to i32*, !llfi_index !3968
  %57 = call i32 @pthread_setcancelstate(i32 %55, i32* %56) #2, !llfi_index !3969
  br label %68, !llfi_index !3970

; <label>:58                                      ; preds = %29
  %59 = getelementptr inbounds %struct.gmem* %36, i64 0, i32 8, i32 3, !llfi_index !3971
  %60 = load i64* %59, align 8, !llfi_index !3972
  %61 = icmp eq i64 %60, 0, !llfi_index !3973
  %62 = zext i1 %61 to i64, !llfi_index !3974
  store i64 %62, i64* %59, align 8, !llfi_index !3975
  %63 = load %struct.gmem** @gm, align 8, !llfi_index !3976
  %64 = getelementptr inbounds %struct.gmem* %63, i64 0, i32 8, i32 2, !llfi_index !3977
  store i64 0, i64* %64, align 8, !llfi_index !3978
  %65 = load %struct.gmem** @gm, align 8, !llfi_index !3979
  %66 = getelementptr inbounds %struct.gmem* %65, i64 0, i32 8, i32 1, !llfi_index !3980
  %67 = call i32 @pthread_cond_broadcast(%union.pthread_cond_t* %66) #2, !llfi_index !3981
  br label %68, !llfi_index !3982

; <label>:68                                      ; preds = %58, %53
  %69 = load %struct.gmem** @gm, align 8, !llfi_index !3983
  %70 = getelementptr inbounds %struct.gmem* %69, i64 0, i32 8, i32 0, !llfi_index !3984
  %71 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %70) #2, !llfi_index !3985
  call void @RayTrace(i64 %6), !llfi_index !3986
  %72 = load i64* @dostats, align 8, !llfi_index !3987
  %73 = icmp ne i64 %72, 0, !llfi_index !3988
  %or.cond3 = or i1 %11, %73, !llfi_index !3989
  br i1 %or.cond3, label %74, label %89, !llfi_index !3990

; <label>:74                                      ; preds = %68
  %75 = call i32 @gettimeofday(%struct.timeval* %FullTime1, %struct.timezone* null) #2, !llfi_index !3991
  %76 = getelementptr inbounds %struct.timeval* %FullTime1, i64 0, i32 1, !llfi_index !3992
  %77 = load i64* %76, align 8, !llfi_index !3993
  %78 = getelementptr inbounds %struct.timeval* %FullTime1, i64 0, i32 0, !llfi_index !3994
  %79 = load i64* %78, align 8, !llfi_index !3995
  %80 = mul nsw i64 %79, 1000000, !llfi_index !3996
  %81 = sub i64 %77, %begin.0, !llfi_index !3997
  %82 = add i64 %81, %80, !llfi_index !3998
  %83 = and i64 %82, 2147483647, !llfi_index !3999
  %84 = load %struct.gmem** @gm, align 8, !llfi_index !4000
  %85 = getelementptr inbounds %struct.gmem* %84, i64 0, i32 14, i64 %6, !llfi_index !4001
  store i64 %83, i64* %85, align 8, !llfi_index !4002
  br i1 %11, label %86, label %89, !llfi_index !4003

; <label>:86                                      ; preds = %74
  %87 = load %struct.gmem** @gm, align 8, !llfi_index !4004
  %88 = getelementptr inbounds %struct.gmem* %87, i64 0, i32 13, !llfi_index !4005
  store i64 %begin.0, i64* %88, align 8, !llfi_index !4006
  br label %89, !llfi_index !4007

; <label>:89                                      ; preds = %86, %74, %68
  ret void, !llfi_index !4008
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) #1

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, %struct.timezone* nocapture) #1

declare i32 @pthread_setcancelstate(i32, i32*) #6

declare i32 @pthread_cond_wait(%union.pthread_cond_t*, %union.pthread_mutex_t*) #6

; Function Attrs: nounwind
declare i32 @pthread_cond_broadcast(%union.pthread_cond_t*) #1

; Function Attrs: noreturn nounwind uwtable
define i32 @main(i32 %argc, i8** nocapture readonly %argv) #8 {
  %vtrans = alloca [4 x [4 x double]], align 16, !llfi_index !4009
  %Vinv = alloca [4 x [4 x double]], align 16, !llfi_index !4010
  %FullTime = alloca %struct.timeval, align 8, !llfi_index !4011
  %FullTime7 = alloca %struct.timeval, align 8, !llfi_index !4012
  %1 = sext i32 %argc to i64, !llfi_index !4013
  %2 = icmp sgt i32 %argc, 1, !llfi_index !4014
  br i1 %2, label %.lr.ph40, label %.critedge, !llfi_index !4015

.lr.ph40:                                         ; preds = %58, %0
  %i.038 = phi i64 [ %59, %58 ], [ 1, %0 ], !llfi_index !4016
  %3 = getelementptr inbounds i8** %argv, i64 %i.038, !llfi_index !4017
  %4 = load i8** %3, align 8, !llfi_index !4018
  %5 = load i8* %4, align 1, !llfi_index !4019
  %6 = icmp eq i8 %5, 45, !llfi_index !4020
  br i1 %6, label %7, label %.critedge, !llfi_index !4021

; <label>:7                                       ; preds = %.lr.ph40
  %8 = getelementptr inbounds i8* %4, i64 1, !llfi_index !4022
  %9 = load i8* %8, align 1, !llfi_index !4023
  %10 = sext i8 %9 to i32, !llfi_index !4024
  switch i32 %10, label %53 [
    i32 63, label %11
    i32 104, label %11
    i32 72, label %11
    i32 97, label %12
    i32 65, label %12
    i32 109, label %26
    i32 112, label %39
    i32 115, label %52
    i32 83, label %52
  ], !llfi_index !4025

; <label>:11                                      ; preds = %7, %7, %7
  tail call void @Usage(), !llfi_index !4026
  tail call void @exit(i32 1) #11, !llfi_index !4027
  unreachable, !llfi_index !4028

; <label>:12                                      ; preds = %7, %7
  store i64 1, i64* @AntiAlias, align 8, !llfi_index !4029
  %13 = load i8** %3, align 8, !llfi_index !4030
  %14 = getelementptr inbounds i8* %13, i64 2, !llfi_index !4031
  %15 = load i8* %14, align 1, !llfi_index !4032
  %16 = icmp eq i8 %15, 0, !llfi_index !4033
  br i1 %16, label %20, label %17, !llfi_index !4034

; <label>:17                                      ; preds = %12
  %18 = tail call i32 @atoi(i8* %14) #12, !llfi_index !4035
  %19 = sext i32 %18 to i64, !llfi_index !4036
  store i64 %19, i64* @NumSubRays, align 8, !llfi_index !4037
  br label %58, !llfi_index !4038

; <label>:20                                      ; preds = %12
  %21 = add nsw i64 %i.038, 1, !llfi_index !4039
  %22 = getelementptr inbounds i8** %argv, i64 %21, !llfi_index !4040
  %23 = load i8** %22, align 8, !llfi_index !4041
  %24 = tail call i32 @atoi(i8* %23) #12, !llfi_index !4042
  %25 = sext i32 %24 to i64, !llfi_index !4043
  store i64 %25, i64* @NumSubRays, align 8, !llfi_index !4044
  br label %58, !llfi_index !4045

; <label>:26                                      ; preds = %7
  %27 = getelementptr inbounds i8* %4, i64 2, !llfi_index !4046
  %28 = load i8* %27, align 1, !llfi_index !4047
  %29 = icmp eq i8 %28, 0, !llfi_index !4048
  br i1 %29, label %33, label %30, !llfi_index !4049

; <label>:30                                      ; preds = %26
  %31 = tail call i32 @atoi(i8* %27) #12, !llfi_index !4050
  %32 = sext i32 %31 to i64, !llfi_index !4051
  store i64 %32, i64* @MaxGlobMem, align 8, !llfi_index !4052
  br label %58, !llfi_index !4053

; <label>:33                                      ; preds = %26
  %34 = add nsw i64 %i.038, 1, !llfi_index !4054
  %35 = getelementptr inbounds i8** %argv, i64 %34, !llfi_index !4055
  %36 = load i8** %35, align 8, !llfi_index !4056
  %37 = tail call i32 @atoi(i8* %36) #12, !llfi_index !4057
  %38 = sext i32 %37 to i64, !llfi_index !4058
  store i64 %38, i64* @MaxGlobMem, align 8, !llfi_index !4059
  br label %58, !llfi_index !4060

; <label>:39                                      ; preds = %7
  %40 = getelementptr inbounds i8* %4, i64 2, !llfi_index !4061
  %41 = load i8* %40, align 1, !llfi_index !4062
  %42 = icmp eq i8 %41, 0, !llfi_index !4063
  br i1 %42, label %46, label %43, !llfi_index !4064

; <label>:43                                      ; preds = %39
  %44 = tail call i32 @atoi(i8* %40) #12, !llfi_index !4065
  %45 = sext i32 %44 to i64, !llfi_index !4066
  store i64 %45, i64* @nprocs, align 8, !llfi_index !4067
  br label %58, !llfi_index !4068

; <label>:46                                      ; preds = %39
  %47 = add nsw i64 %i.038, 1, !llfi_index !4069
  %48 = getelementptr inbounds i8** %argv, i64 %47, !llfi_index !4070
  %49 = load i8** %48, align 8, !llfi_index !4071
  %50 = tail call i32 @atoi(i8* %49) #12, !llfi_index !4072
  %51 = sext i32 %50 to i64, !llfi_index !4073
  store i64 %51, i64* @nprocs, align 8, !llfi_index !4074
  br label %58, !llfi_index !4075

; <label>:52                                      ; preds = %7, %7
  store i64 1, i64* @dostats, align 8, !llfi_index !4076
  br label %58, !llfi_index !4077

; <label>:53                                      ; preds = %7
  %54 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !4078
  %55 = load i8** @ProgName, align 8, !llfi_index !4079
  %56 = sext i8 %5 to i32, !llfi_index !4080
  %57 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([26 x i8]* @.str12243, i64 0, i64 0), i8* %55, i32 %56) #10, !llfi_index !4081
  tail call void @exit(i32 1) #11, !llfi_index !4082
  unreachable, !llfi_index !4083

; <label>:58                                      ; preds = %52, %46, %43, %33, %30, %20, %17
  %i.1 = phi i64 [ %i.038, %52 ], [ %i.038, %43 ], [ %47, %46 ], [ %i.038, %30 ], [ %34, %33 ], [ %i.038, %17 ], [ %21, %20 ], !llfi_index !4084
  %59 = add nsw i64 %i.1, 1, !llfi_index !4085
  %60 = icmp slt i64 %59, %1, !llfi_index !4086
  br i1 %60, label %.lr.ph40, label %.critedge, !llfi_index !4087

.critedge:                                        ; preds = %58, %.lr.ph40, %0
  %i.0.lcssa = phi i64 [ 1, %0 ], [ %59, %58 ], [ %i.038, %.lr.ph40 ], !llfi_index !4088
  %61 = icmp eq i64 %i.0.lcssa, %1, !llfi_index !4089
  br i1 %61, label %62, label %63, !llfi_index !4090

; <label>:62                                      ; preds = %.critedge
  tail call void @Usage(), !llfi_index !4091
  tail call void @exit(i32 1) #11, !llfi_index !4092
  unreachable, !llfi_index !4093

; <label>:63                                      ; preds = %.critedge
  %64 = load i64* @nprocs, align 8, !llfi_index !4094
  %.off = add i64 %64, -1, !llfi_index !4095
  %65 = icmp ugt i64 %.off, 4095, !llfi_index !4096
  br i1 %65, label %66, label %70, !llfi_index !4097

; <label>:66                                      ; preds = %63
  %67 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !4098
  %68 = load i8** @ProgName, align 8, !llfi_index !4099
  %69 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %67, i8* getelementptr inbounds ([45 x i8]* @.str13244, i64 0, i64 0), i8* %68, i32 4096) #10, !llfi_index !4100
  tail call void @exit(i32 1) #11, !llfi_index !4101
  unreachable, !llfi_index !4102

; <label>:70                                      ; preds = %63
  %putchar = tail call i32 @putchar(i32 10) #2, !llfi_index !4103
  %71 = load i64* @nprocs, align 8, !llfi_index !4104
  %72 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([32 x i8]* @.str14245, i64 0, i64 0), i64 %71) #2, !llfi_index !4105
  %73 = load i64* @MaxGlobMem, align 8, !llfi_index !4106
  %74 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([35 x i8]* @.str15246, i64 0, i64 0), i64 %73) #2, !llfi_index !4107
  %75 = load i64* @NumSubRays, align 8, !llfi_index !4108
  %76 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([32 x i8]* @.str16247, i64 0, i64 0), i64 %75) #2, !llfi_index !4109
  %putchar2 = tail call i32 @putchar(i32 10) #2, !llfi_index !4110
  %77 = load i64* @MaxGlobMem, align 8, !llfi_index !4111
  %78 = shl i64 %77, 20, !llfi_index !4112
  store i64 %78, i64* @MaxGlobMem, align 8, !llfi_index !4113
  %79 = tail call noalias i8* @malloc(i64 16974104) #2, !llfi_index !4114
  %80 = bitcast i8* %79 to %struct.gmem*, !llfi_index !4115
  store %struct.gmem* %80, %struct.gmem** @gm, align 8, !llfi_index !4116
  %81 = load i64* @nprocs, align 8, !llfi_index !4117
  %82 = bitcast i8* %79 to i64*, !llfi_index !4118
  store i64 %81, i64* %82, align 8, !llfi_index !4119
  %83 = load %struct.gmem** @gm, align 8, !llfi_index !4120
  %84 = getelementptr inbounds %struct.gmem* %83, i64 0, i32 1, !llfi_index !4121
  store i64 0, i64* %84, align 8, !llfi_index !4122
  %85 = load %struct.gmem** @gm, align 8, !llfi_index !4123
  %86 = getelementptr inbounds %struct.gmem* %85, i64 0, i32 2, !llfi_index !4124
  store i64 1, i64* %86, align 8, !llfi_index !4125
  %87 = load %struct.gmem** @gm, align 8, !llfi_index !4126
  %88 = getelementptr inbounds %struct.gmem* %87, i64 0, i32 8, i32 0, !llfi_index !4127
  %89 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* %88, %union.pthread_mutexattr_t* null) #2, !llfi_index !4128
  %90 = icmp eq i32 %89, 0, !llfi_index !4129
  br i1 %90, label %92, label %91, !llfi_index !4130

; <label>:91                                      ; preds = %70
  %puts7 = tail call i32 @puts(i8* getelementptr inbounds ([34 x i8]* @str47, i64 0, i64 0)), !llfi_index !4131
  tail call void @exit(i32 -1) #11, !llfi_index !4132
  unreachable, !llfi_index !4133

; <label>:92                                      ; preds = %70
  %93 = load %struct.gmem** @gm, align 8, !llfi_index !4134
  %94 = getelementptr inbounds %struct.gmem* %93, i64 0, i32 8, i32 1, !llfi_index !4135
  %95 = tail call i32 @pthread_cond_init(%union.pthread_cond_t* %94, %union.pthread_condattr_t* null) #2, !llfi_index !4136
  %96 = icmp eq i32 %95, 0, !llfi_index !4137
  br i1 %96, label %101, label %97, !llfi_index !4138

; <label>:97                                      ; preds = %92
  %puts6 = tail call i32 @puts(i8* getelementptr inbounds ([34 x i8]* @str46, i64 0, i64 0)), !llfi_index !4139
  %98 = load %struct.gmem** @gm, align 8, !llfi_index !4140
  %99 = getelementptr inbounds %struct.gmem* %98, i64 0, i32 8, i32 0, !llfi_index !4141
  %100 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %99) #2, !llfi_index !4142
  tail call void @exit(i32 -1) #11, !llfi_index !4143
  unreachable, !llfi_index !4144

; <label>:101                                     ; preds = %92
  %102 = load %struct.gmem** @gm, align 8, !llfi_index !4145
  %103 = getelementptr inbounds %struct.gmem* %102, i64 0, i32 8, i32 2, !llfi_index !4146
  store i64 0, i64* %103, align 8, !llfi_index !4147
  %104 = load %struct.gmem** @gm, align 8, !llfi_index !4148
  %105 = getelementptr inbounds %struct.gmem* %104, i64 0, i32 8, i32 3, !llfi_index !4149
  store i64 0, i64* %105, align 8, !llfi_index !4150
  %106 = load %struct.gmem** @gm, align 8, !llfi_index !4151
  %107 = getelementptr inbounds %struct.gmem* %106, i64 0, i32 9, !llfi_index !4152
  %108 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* %107, %union.pthread_mutexattr_t* null) #2, !llfi_index !4153
  %109 = load %struct.gmem** @gm, align 8, !llfi_index !4154
  %110 = getelementptr inbounds %struct.gmem* %109, i64 0, i32 10, !llfi_index !4155
  %111 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* %110, %union.pthread_mutexattr_t* null) #2, !llfi_index !4156
  %112 = load %struct.gmem** @gm, align 8, !llfi_index !4157
  %113 = getelementptr inbounds %struct.gmem* %112, i64 0, i32 11, !llfi_index !4158
  %114 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* %113, %union.pthread_mutexattr_t* null) #2, !llfi_index !4159
  %115 = load i64* @nprocs, align 8, !llfi_index !4160
  %116 = icmp eq i64 %115, 0, !llfi_index !4161
  br i1 %116, label %._crit_edge30, label %.lr.ph29, !llfi_index !4162

; <label>:117                                     ; preds = %.lr.ph29
  %118 = load i64* @nprocs, align 8, !llfi_index !4163
  %119 = icmp ult i64 %124, %118, !llfi_index !4164
  br i1 %119, label %.lr.ph29, label %._crit_edge30, !llfi_index !4165

.lr.ph29:                                         ; preds = %117, %101
  %i1.027 = phi i64 [ %124, %117 ], [ 0, %101 ], !llfi_index !4166
  %120 = load %struct.gmem** @gm, align 8, !llfi_index !4167
  %121 = getelementptr inbounds %struct.gmem* %120, i64 0, i32 12, i64 %i1.027, !llfi_index !4168
  %122 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* %121, %union.pthread_mutexattr_t* null) #2, !llfi_index !4169
  %123 = icmp eq i32 %122, 0, !llfi_index !4170
  %124 = add i64 %i1.027, 1, !llfi_index !4171
  br i1 %123, label %117, label %125, !llfi_index !4172

; <label>:125                                     ; preds = %.lr.ph29
  %puts5 = tail call i32 @puts(i8* getelementptr inbounds ([41 x i8]* @str45, i64 0, i64 0)), !llfi_index !4173
  tail call void @exit(i32 -1) #11, !llfi_index !4174
  unreachable, !llfi_index !4175

._crit_edge30:                                    ; preds = %117, %101
  %126 = load i64* @MaxGlobMem, align 8, !llfi_index !4176
  %127 = tail call i64 @GlobalHeapInit(i64 %126), !llfi_index !4177
  %128 = icmp eq i64 %127, 0, !llfi_index !4178
  br i1 %128, label %129, label %133, !llfi_index !4179

; <label>:129                                     ; preds = %._crit_edge30
  %130 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !4180
  %131 = load i8** @ProgName, align 8, !llfi_index !4181
  %132 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %130, i8* getelementptr inbounds ([36 x i8]* @.str19250, i64 0, i64 0), i8* %131) #10, !llfi_index !4182
  tail call void @exit(i32 1) #11, !llfi_index !4183
  unreachable, !llfi_index !4184

; <label>:133                                     ; preds = %._crit_edge30
  tail call void @Huniform_defaults(), !llfi_index !4185
  %134 = getelementptr inbounds i8** %argv, i64 %i.0.lcssa, !llfi_index !4186
  %135 = load i8** %134, align 8, !llfi_index !4187
  tail call void @ReadEnvFile(i8* %135), !llfi_index !4188
  tail call void @ReadGeoFile(i8* getelementptr inbounds ([80 x i8]* @GeoFileName, i64 0, i64 0)), !llfi_index !4189
  tail call void @OpenFrameBuffer(), !llfi_index !4190
  tail call void @CreateViewMatrix(), !llfi_index !4191
  %136 = getelementptr inbounds [4 x [4 x double]]* %vtrans, i64 0, i64 0, !llfi_index !4192
  call void @MatrixCopy([4 x double]* %136, [4 x double]* getelementptr inbounds (%struct.view* @View, i64 0, i32 2, i64 0)), !llfi_index !4193
  %137 = getelementptr inbounds [4 x [4 x double]]* %Vinv, i64 0, i64 0, !llfi_index !4194
  call void @MatrixInverse([4 x double]* %137, [4 x double]* %136), !llfi_index !4195
  call void @MatrixCopy([4 x double]* getelementptr inbounds (%struct.view* @View, i64 0, i32 3, i64 0), [4 x double]* %137), !llfi_index !4196
  %138 = load i64* @prim_obj_cnt, align 8, !llfi_index !4197
  %139 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([35 x i8]* @.str20251, i64 0, i64 0), i64 %138) #2, !llfi_index !4198
  %140 = load i64* @prim_elem_cnt, align 8, !llfi_index !4199
  %141 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([35 x i8]* @.str21252, i64 0, i64 0), i64 %140) #2, !llfi_index !4200
  %142 = load i64* @TraversalType, align 8, !llfi_index !4201
  %143 = icmp eq i64 %142, 1, !llfi_index !4202
  br i1 %143, label %144, label %145, !llfi_index !4203

; <label>:144                                     ; preds = %133
  tail call void @BuildHierarchy_Uniform(), !llfi_index !4204
  br label %145, !llfi_index !4205

; <label>:145                                     ; preds = %144, %133
  %146 = call i32 @gettimeofday(%struct.timeval* %FullTime, %struct.timezone* null) #2, !llfi_index !4206
  %147 = load %struct.gmem** @gm, align 8, !llfi_index !4207
  %148 = getelementptr inbounds %struct.gmem* %147, i64 0, i32 0, !llfi_index !4208
  %149 = load i64* %148, align 8, !llfi_index !4209
  %150 = add nsw i64 %149, -1, !llfi_index !4210
  %151 = icmp sgt i64 %150, 0, !llfi_index !4211
  br i1 %151, label %.lr.ph25, label %._crit_edge26, !llfi_index !4212

; <label>:152                                     ; preds = %.lr.ph25
  %153 = load %struct.gmem** @gm, align 8, !llfi_index !4213
  %154 = getelementptr inbounds %struct.gmem* %153, i64 0, i32 0, !llfi_index !4214
  %155 = load i64* %154, align 8, !llfi_index !4215
  %156 = add nsw i64 %155, -1, !llfi_index !4216
  %157 = icmp slt i64 %161, %156, !llfi_index !4217
  br i1 %157, label %.lr.ph25, label %._crit_edge26, !llfi_index !4218

.lr.ph25:                                         ; preds = %152, %145
  %i3.023 = phi i64 [ %161, %152 ], [ 0, %145 ], !llfi_index !4219
  %158 = getelementptr inbounds [32 x i64]* @PThreadTable, i64 0, i64 %i3.023, !llfi_index !4220
  %159 = tail call i32 @pthread_create(i64* %158, %union.pthread_attr_t* null, i8* (i8*)* bitcast (void ()* @StartRayTrace to i8* (i8*)*), i8* null) #2, !llfi_index !4221
  %160 = icmp eq i32 %159, 0, !llfi_index !4222
  %161 = add nsw i64 %i3.023, 1, !llfi_index !4223
  br i1 %160, label %152, label %162, !llfi_index !4224

; <label>:162                                     ; preds = %.lr.ph25
  %puts4 = tail call i32 @puts(i8* getelementptr inbounds ([27 x i8]* @str44, i64 0, i64 0)), !llfi_index !4225
  tail call void @exit(i32 -1) #11, !llfi_index !4226
  unreachable, !llfi_index !4227

._crit_edge26:                                    ; preds = %152, %145
  tail call void @StartRayTrace(), !llfi_index !4228
  %163 = load %struct.gmem** @gm, align 8, !llfi_index !4229
  %164 = getelementptr inbounds %struct.gmem* %163, i64 0, i32 0, !llfi_index !4230
  %165 = load i64* %164, align 8, !llfi_index !4231
  %166 = icmp eq i64 %165, 1, !llfi_index !4232
  br i1 %166, label %._crit_edge22, label %.lr.ph21, !llfi_index !4233

; <label>:167                                     ; preds = %.lr.ph21
  %168 = load %struct.gmem** @gm, align 8, !llfi_index !4234
  %169 = getelementptr inbounds %struct.gmem* %168, i64 0, i32 0, !llfi_index !4235
  %170 = load i64* %169, align 8, !llfi_index !4236
  %171 = add nsw i64 %170, -1, !llfi_index !4237
  %172 = icmp ult i64 %177, %171, !llfi_index !4238
  br i1 %172, label %.lr.ph21, label %._crit_edge22, !llfi_index !4239

.lr.ph21:                                         ; preds = %167, %._crit_edge26
  %i5.019 = phi i64 [ %177, %167 ], [ 0, %._crit_edge26 ], !llfi_index !4240
  %173 = getelementptr inbounds [32 x i64]* @PThreadTable, i64 0, i64 %i5.019, !llfi_index !4241
  %174 = load i64* %173, align 8, !llfi_index !4242
  %175 = tail call i32 @pthread_join(i64 %174, i8** null) #2, !llfi_index !4243
  %176 = icmp eq i32 %175, 0, !llfi_index !4244
  %177 = add i64 %i5.019, 1, !llfi_index !4245
  br i1 %176, label %167, label %178, !llfi_index !4246

; <label>:178                                     ; preds = %.lr.ph21
  %puts3 = tail call i32 @puts(i8* getelementptr inbounds ([25 x i8]* @str43, i64 0, i64 0)), !llfi_index !4247
  tail call void @exit(i32 -1) #11, !llfi_index !4248
  unreachable, !llfi_index !4249

._crit_edge22:                                    ; preds = %167, %._crit_edge26
  %179 = call i32 @gettimeofday(%struct.timeval* %FullTime7, %struct.timezone* null) #2, !llfi_index !4250
  tail call void @CloseFrameBuffer(i8* getelementptr inbounds ([80 x i8]* @PicFileName, i64 0, i64 0)), !llfi_index !4251
  tail call void @PrintStatistics(), !llfi_index !4252
  %180 = load i64* @dostats, align 8, !llfi_index !4253
  %181 = icmp eq i64 %180, 0, !llfi_index !4254
  br i1 %181, label %227, label %182, !llfi_index !4255

; <label>:182                                     ; preds = %._crit_edge22
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([27 x i8]* @str42, i64 0, i64 0)), !llfi_index !4256
  %183 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([10 x i8]* @.str25256, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str26257, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str27258, i64 0, i64 0)) #2, !llfi_index !4257
  %184 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([11 x i8]* @.str28259, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str29260, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8]* @.str30261, i64 0, i64 0)) #2, !llfi_index !4258
  %185 = load %struct.gmem** @gm, align 8, !llfi_index !4259
  %186 = getelementptr inbounds %struct.gmem* %185, i64 0, i32 0, !llfi_index !4260
  %187 = load i64* %186, align 8, !llfi_index !4261
  %188 = icmp sgt i64 %187, 0, !llfi_index !4262
  br i1 %188, label %.lr.ph16, label %._crit_edge17, !llfi_index !4263

.lr.ph16:                                         ; preds = %.lr.ph16, %182
  %189 = phi %struct.gmem* [ %194, %.lr.ph16 ], [ %185, %182 ], !llfi_index !4264
  %i.214 = phi i64 [ %193, %.lr.ph16 ], [ 0, %182 ], !llfi_index !4265
  %190 = getelementptr inbounds %struct.gmem* %189, i64 0, i32 14, i64 %i.214, !llfi_index !4266
  %191 = load i64* %190, align 8, !llfi_index !4267
  %192 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str31262, i64 0, i64 0), i64 %i.214, i64 %191) #2, !llfi_index !4268
  %193 = add nsw i64 %i.214, 1, !llfi_index !4269
  %194 = load %struct.gmem** @gm, align 8, !llfi_index !4270
  %195 = getelementptr inbounds %struct.gmem* %194, i64 0, i32 0, !llfi_index !4271
  %196 = load i64* %195, align 8, !llfi_index !4272
  %197 = icmp slt i64 %193, %196, !llfi_index !4273
  br i1 %197, label %.lr.ph16, label %._crit_edge17, !llfi_index !4274

._crit_edge17:                                    ; preds = %.lr.ph16, %182
  %.lcssa = phi %struct.gmem* [ %185, %182 ], [ %194, %.lr.ph16 ], !llfi_index !4275
  %198 = getelementptr inbounds %struct.gmem* %.lcssa, i64 0, i32 14, i64 0, !llfi_index !4276
  %199 = load i64* %198, align 8, !llfi_index !4277
  %200 = trunc i64 %199 to i32, !llfi_index !4278
  %201 = load %struct.gmem** @gm, align 8, !llfi_index !4279
  %202 = getelementptr inbounds %struct.gmem* %201, i64 0, i32 0, !llfi_index !4280
  %203 = load i64* %202, align 8, !llfi_index !4281
  %204 = icmp sgt i64 %203, 1, !llfi_index !4282
  br i1 %204, label %.lr.ph, label %216, !llfi_index !4283

.lr.ph:                                           ; preds = %.lr.ph, %._crit_edge17
  %minproctime.011 = phi i32 [ %minproctime.1, %.lr.ph ], [ %200, %._crit_edge17 ], !llfi_index !4284
  %maxproctime.010 = phi i32 [ %.maxproctime.0, %.lr.ph ], [ %200, %._crit_edge17 ], !llfi_index !4285
  %totalproctime.09 = phi i64 [ %208, %.lr.ph ], [ %199, %._crit_edge17 ], !llfi_index !4286
  %i.38 = phi i64 [ %214, %.lr.ph ], [ 1, %._crit_edge17 ], !llfi_index !4287
  %205 = getelementptr inbounds %struct.gmem* %201, i64 0, i32 14, i64 %i.38, !llfi_index !4288
  %206 = load i64* %205, align 8, !llfi_index !4289
  %207 = and i64 %totalproctime.09, 4294967295, !llfi_index !4290
  %208 = add i64 %206, %207, !llfi_index !4291
  %209 = zext i32 %maxproctime.010 to i64, !llfi_index !4292
  %210 = icmp ugt i64 %206, %209, !llfi_index !4293
  %211 = trunc i64 %206 to i32, !llfi_index !4294
  %.maxproctime.0 = select i1 %210, i32 %211, i32 %maxproctime.010, !llfi_index !4295
  %212 = zext i32 %minproctime.011 to i64, !llfi_index !4296
  %213 = icmp ult i64 %206, %212, !llfi_index !4297
  %minproctime.1 = select i1 %213, i32 %211, i32 %minproctime.011, !llfi_index !4298
  %214 = add nsw i64 %i.38, 1, !llfi_index !4299
  %exitcond = icmp eq i64 %214, %203, !llfi_index !4300
  br i1 %exitcond, label %._crit_edge, label %.lr.ph, !llfi_index !4301

._crit_edge:                                      ; preds = %.lr.ph
  %215 = trunc i64 %208 to i32, !llfi_index !4302
  br label %216, !llfi_index !4303

; <label>:216                                     ; preds = %._crit_edge, %._crit_edge17
  %minproctime.0.lcssa = phi i32 [ %minproctime.1, %._crit_edge ], [ %200, %._crit_edge17 ], !llfi_index !4304
  %maxproctime.0.lcssa = phi i32 [ %.maxproctime.0, %._crit_edge ], [ %200, %._crit_edge17 ], !llfi_index !4305
  %totalproctime.0.lcssa = phi i32 [ %215, %._crit_edge ], [ %200, %._crit_edge17 ], !llfi_index !4306
  %217 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str32263, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str33264, i64 0, i64 0), i32 %maxproctime.0.lcssa) #2, !llfi_index !4307
  %218 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([10 x i8]* @.str34265, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str35266, i64 0, i64 0), i32 %minproctime.0.lcssa) #2, !llfi_index !4308
  %219 = uitofp i32 %totalproctime.0.lcssa to double, !llfi_index !4309
  %220 = load %struct.gmem** @gm, align 8, !llfi_index !4310
  %221 = getelementptr inbounds %struct.gmem* %220, i64 0, i32 0, !llfi_index !4311
  %222 = load i64* %221, align 8, !llfi_index !4312
  %223 = sitofp i64 %222 to double, !llfi_index !4313
  %224 = fdiv double %219, %223, !llfi_index !4314
  %225 = fptosi double %224 to i32, !llfi_index !4315
  %226 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([10 x i8]* @.str34265, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str36267, i64 0, i64 0), i32 %225) #2, !llfi_index !4316
  br label %227, !llfi_index !4317

; <label>:227                                     ; preds = %216, %._crit_edge22
  tail call void @exit(i32 0) #11, !llfi_index !4318
  unreachable, !llfi_index !4319
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8* nocapture) #5

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) #1

; Function Attrs: nounwind
declare i32 @pthread_cond_init(%union.pthread_cond_t*, %union.pthread_condattr_t*) #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) #1

; Function Attrs: nounwind
declare i32 @pthread_create(i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*) #1

declare i32 @pthread_join(i64, i8**) #6

; Function Attrs: nounwind uwtable
define void @VecNorm(double* nocapture %V) #0 {
  %1 = load double* %V, align 8, !llfi_index !4320
  %2 = fmul double %1, %1, !llfi_index !4321
  %3 = getelementptr inbounds double* %V, i64 1, !llfi_index !4322
  %4 = load double* %3, align 8, !llfi_index !4323
  %5 = fmul double %4, %4, !llfi_index !4324
  %6 = fadd double %2, %5, !llfi_index !4325
  %7 = getelementptr inbounds double* %V, i64 2, !llfi_index !4326
  %8 = load double* %7, align 8, !llfi_index !4327
  %9 = fmul double %8, %8, !llfi_index !4328
  %10 = fadd double %6, %9, !llfi_index !4329
  %11 = tail call double @sqrt(double %10) #2, !llfi_index !4330
  %12 = fcmp ogt double %11, 1.000000e-07, !llfi_index !4331
  br i1 %12, label %13, label %20, !llfi_index !4332

; <label>:13                                      ; preds = %0
  %14 = load double* %V, align 8, !llfi_index !4333
  %15 = fdiv double %14, %11, !llfi_index !4334
  store double %15, double* %V, align 8, !llfi_index !4335
  %16 = load double* %3, align 8, !llfi_index !4336
  %17 = fdiv double %16, %11, !llfi_index !4337
  store double %17, double* %3, align 8, !llfi_index !4338
  %18 = load double* %7, align 8, !llfi_index !4339
  %19 = fdiv double %18, %11, !llfi_index !4340
  store double %19, double* %7, align 8, !llfi_index !4341
  br label %20, !llfi_index !4342

; <label>:20                                      ; preds = %13, %0
  ret void, !llfi_index !4343
}

; Function Attrs: nounwind uwtable
define void @VecMatMult(double* nocapture %Vt, [4 x double]* nocapture readonly %M, double* nocapture readonly %V) #0 {
  %1 = load double* %V, align 8, !llfi_index !4344
  %2 = getelementptr inbounds [4 x double]* %M, i64 0, i64 0, !llfi_index !4345
  %3 = load double* %2, align 8, !llfi_index !4346
  %4 = fmul double %1, %3, !llfi_index !4347
  %5 = fadd double %4, 0.000000e+00, !llfi_index !4348
  %6 = getelementptr inbounds double* %V, i64 1, !llfi_index !4349
  %7 = load double* %6, align 8, !llfi_index !4350
  %8 = getelementptr inbounds [4 x double]* %M, i64 1, i64 0, !llfi_index !4351
  %9 = load double* %8, align 8, !llfi_index !4352
  %10 = fmul double %7, %9, !llfi_index !4353
  %11 = fadd double %5, %10, !llfi_index !4354
  %12 = getelementptr inbounds double* %V, i64 2, !llfi_index !4355
  %13 = load double* %12, align 8, !llfi_index !4356
  %14 = getelementptr inbounds [4 x double]* %M, i64 2, i64 0, !llfi_index !4357
  %15 = load double* %14, align 8, !llfi_index !4358
  %16 = fmul double %13, %15, !llfi_index !4359
  %17 = fadd double %11, %16, !llfi_index !4360
  %18 = getelementptr inbounds double* %V, i64 3, !llfi_index !4361
  %19 = load double* %18, align 8, !llfi_index !4362
  %20 = getelementptr inbounds [4 x double]* %M, i64 3, i64 0, !llfi_index !4363
  %21 = load double* %20, align 8, !llfi_index !4364
  %22 = fmul double %19, %21, !llfi_index !4365
  %23 = fadd double %17, %22, !llfi_index !4366
  %24 = getelementptr inbounds [4 x double]* %M, i64 0, i64 1, !llfi_index !4367
  %25 = load double* %24, align 8, !llfi_index !4368
  %26 = fmul double %1, %25, !llfi_index !4369
  %27 = fadd double %26, 0.000000e+00, !llfi_index !4370
  %28 = getelementptr inbounds [4 x double]* %M, i64 1, i64 1, !llfi_index !4371
  %29 = load double* %28, align 8, !llfi_index !4372
  %30 = fmul double %7, %29, !llfi_index !4373
  %31 = fadd double %27, %30, !llfi_index !4374
  %32 = getelementptr inbounds [4 x double]* %M, i64 2, i64 1, !llfi_index !4375
  %33 = load double* %32, align 8, !llfi_index !4376
  %34 = fmul double %13, %33, !llfi_index !4377
  %35 = fadd double %31, %34, !llfi_index !4378
  %36 = getelementptr inbounds [4 x double]* %M, i64 3, i64 1, !llfi_index !4379
  %37 = load double* %36, align 8, !llfi_index !4380
  %38 = fmul double %19, %37, !llfi_index !4381
  %39 = fadd double %35, %38, !llfi_index !4382
  %40 = getelementptr inbounds [4 x double]* %M, i64 0, i64 2, !llfi_index !4383
  %41 = load double* %40, align 8, !llfi_index !4384
  %42 = fmul double %1, %41, !llfi_index !4385
  %43 = fadd double %42, 0.000000e+00, !llfi_index !4386
  %44 = getelementptr inbounds [4 x double]* %M, i64 1, i64 2, !llfi_index !4387
  %45 = load double* %44, align 8, !llfi_index !4388
  %46 = fmul double %7, %45, !llfi_index !4389
  %47 = fadd double %43, %46, !llfi_index !4390
  %48 = getelementptr inbounds [4 x double]* %M, i64 2, i64 2, !llfi_index !4391
  %49 = load double* %48, align 8, !llfi_index !4392
  %50 = fmul double %13, %49, !llfi_index !4393
  %51 = fadd double %47, %50, !llfi_index !4394
  %52 = getelementptr inbounds [4 x double]* %M, i64 3, i64 2, !llfi_index !4395
  %53 = load double* %52, align 8, !llfi_index !4396
  %54 = fmul double %19, %53, !llfi_index !4397
  %55 = fadd double %51, %54, !llfi_index !4398
  %56 = getelementptr inbounds [4 x double]* %M, i64 0, i64 3, !llfi_index !4399
  %57 = load double* %56, align 8, !llfi_index !4400
  %58 = fmul double %1, %57, !llfi_index !4401
  %59 = fadd double %58, 0.000000e+00, !llfi_index !4402
  %60 = getelementptr inbounds [4 x double]* %M, i64 1, i64 3, !llfi_index !4403
  %61 = load double* %60, align 8, !llfi_index !4404
  %62 = fmul double %7, %61, !llfi_index !4405
  %63 = fadd double %59, %62, !llfi_index !4406
  %64 = getelementptr inbounds [4 x double]* %M, i64 2, i64 3, !llfi_index !4407
  %65 = load double* %64, align 8, !llfi_index !4408
  %66 = fmul double %13, %65, !llfi_index !4409
  %67 = fadd double %63, %66, !llfi_index !4410
  %68 = getelementptr inbounds [4 x double]* %M, i64 3, i64 3, !llfi_index !4411
  %69 = load double* %68, align 8, !llfi_index !4412
  %70 = fmul double %19, %69, !llfi_index !4413
  %71 = fadd double %67, %70, !llfi_index !4414
  store double %23, double* %Vt, align 8, !llfi_index !4415
  %72 = getelementptr inbounds double* %Vt, i64 1, !llfi_index !4416
  store double %39, double* %72, align 8, !llfi_index !4417
  %73 = getelementptr inbounds double* %Vt, i64 2, !llfi_index !4418
  store double %55, double* %73, align 8, !llfi_index !4419
  %74 = getelementptr inbounds double* %Vt, i64 3, !llfi_index !4420
  store double %71, double* %74, align 8, !llfi_index !4421
  ret void, !llfi_index !4422
}

; Function Attrs: nounwind uwtable
define void @PrintMatrix([4 x double]* nocapture readonly %M, i8* %s) #0 {
  %1 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str268, i64 0, i64 0), i8* %s) #2, !llfi_index !4423
  %putchar = tail call i32 @putchar(i32 9) #2, !llfi_index !4424
  %2 = getelementptr inbounds [4 x double]* %M, i64 0, i64 0, !llfi_index !4425
  %3 = load double* %2, align 8, !llfi_index !4426
  %4 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %3) #2, !llfi_index !4427
  %5 = getelementptr inbounds [4 x double]* %M, i64 0, i64 1, !llfi_index !4428
  %6 = load double* %5, align 8, !llfi_index !4429
  %7 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %6) #2, !llfi_index !4430
  %8 = getelementptr inbounds [4 x double]* %M, i64 0, i64 2, !llfi_index !4431
  %9 = load double* %8, align 8, !llfi_index !4432
  %10 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %9) #2, !llfi_index !4433
  %11 = getelementptr inbounds [4 x double]* %M, i64 0, i64 3, !llfi_index !4434
  %12 = load double* %11, align 8, !llfi_index !4435
  %13 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %12) #2, !llfi_index !4436
  %putchar1 = tail call i32 @putchar(i32 10) #2, !llfi_index !4437
  %putchar.1 = tail call i32 @putchar(i32 9) #2, !llfi_index !4438
  %14 = getelementptr inbounds [4 x double]* %M, i64 1, i64 0, !llfi_index !4439
  %15 = load double* %14, align 8, !llfi_index !4440
  %16 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %15) #2, !llfi_index !4441
  %17 = getelementptr inbounds [4 x double]* %M, i64 1, i64 1, !llfi_index !4442
  %18 = load double* %17, align 8, !llfi_index !4443
  %19 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %18) #2, !llfi_index !4444
  %20 = getelementptr inbounds [4 x double]* %M, i64 1, i64 2, !llfi_index !4445
  %21 = load double* %20, align 8, !llfi_index !4446
  %22 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %21) #2, !llfi_index !4447
  %23 = getelementptr inbounds [4 x double]* %M, i64 1, i64 3, !llfi_index !4448
  %24 = load double* %23, align 8, !llfi_index !4449
  %25 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %24) #2, !llfi_index !4450
  %putchar1.1 = tail call i32 @putchar(i32 10) #2, !llfi_index !4451
  %putchar.2 = tail call i32 @putchar(i32 9) #2, !llfi_index !4452
  %26 = getelementptr inbounds [4 x double]* %M, i64 2, i64 0, !llfi_index !4453
  %27 = load double* %26, align 8, !llfi_index !4454
  %28 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %27) #2, !llfi_index !4455
  %29 = getelementptr inbounds [4 x double]* %M, i64 2, i64 1, !llfi_index !4456
  %30 = load double* %29, align 8, !llfi_index !4457
  %31 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %30) #2, !llfi_index !4458
  %32 = getelementptr inbounds [4 x double]* %M, i64 2, i64 2, !llfi_index !4459
  %33 = load double* %32, align 8, !llfi_index !4460
  %34 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %33) #2, !llfi_index !4461
  %35 = getelementptr inbounds [4 x double]* %M, i64 2, i64 3, !llfi_index !4462
  %36 = load double* %35, align 8, !llfi_index !4463
  %37 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %36) #2, !llfi_index !4464
  %putchar1.2 = tail call i32 @putchar(i32 10) #2, !llfi_index !4465
  %putchar.3 = tail call i32 @putchar(i32 9) #2, !llfi_index !4466
  %38 = getelementptr inbounds [4 x double]* %M, i64 3, i64 0, !llfi_index !4467
  %39 = load double* %38, align 8, !llfi_index !4468
  %40 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %39) #2, !llfi_index !4469
  %41 = getelementptr inbounds [4 x double]* %M, i64 3, i64 1, !llfi_index !4470
  %42 = load double* %41, align 8, !llfi_index !4471
  %43 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %42) #2, !llfi_index !4472
  %44 = getelementptr inbounds [4 x double]* %M, i64 3, i64 2, !llfi_index !4473
  %45 = load double* %44, align 8, !llfi_index !4474
  %46 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %45) #2, !llfi_index !4475
  %47 = getelementptr inbounds [4 x double]* %M, i64 3, i64 3, !llfi_index !4476
  %48 = load double* %47, align 8, !llfi_index !4477
  %49 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str2270, i64 0, i64 0), double %48) #2, !llfi_index !4478
  %putchar1.3 = tail call i32 @putchar(i32 10) #2, !llfi_index !4479
  ret void, !llfi_index !4480
}

; Function Attrs: nounwind uwtable
define void @MatrixIdentity([4 x double]* nocapture %M) #0 {
  %M4 = bitcast [4 x double]* %M to i8*, !llfi_index !4481
  tail call void @llvm.memset.p0i8.i64(i8* %M4, i8 0, i64 120, i32 8, i1 false), !llfi_index !4482
  %1 = getelementptr inbounds [4 x double]* %M, i64 0, i64 0, !llfi_index !4483
  store double 1.000000e+00, double* %1, align 8, !llfi_index !4484
  %2 = getelementptr inbounds [4 x double]* %M, i64 1, i64 1, !llfi_index !4485
  store double 1.000000e+00, double* %2, align 8, !llfi_index !4486
  %3 = getelementptr inbounds [4 x double]* %M, i64 2, i64 2, !llfi_index !4487
  store double 1.000000e+00, double* %3, align 8, !llfi_index !4488
  %4 = getelementptr inbounds [4 x double]* %M, i64 3, i64 3, !llfi_index !4489
  store double 1.000000e+00, double* %4, align 8, !llfi_index !4490
  ret void, !llfi_index !4491
}

; Function Attrs: nounwind uwtable
define void @MatrixCopy([4 x double]* nocapture %A, [4 x double]* nocapture readonly %B) #0 {
  %1 = getelementptr inbounds [4 x double]* %B, i64 0, i64 0, !llfi_index !4492
  %2 = load double* %1, align 8, !llfi_index !4493
  %3 = getelementptr inbounds [4 x double]* %A, i64 0, i64 0, !llfi_index !4494
  store double %2, double* %3, align 8, !llfi_index !4495
  %4 = getelementptr inbounds [4 x double]* %B, i64 0, i64 1, !llfi_index !4496
  %5 = load double* %4, align 8, !llfi_index !4497
  %6 = getelementptr inbounds [4 x double]* %A, i64 0, i64 1, !llfi_index !4498
  store double %5, double* %6, align 8, !llfi_index !4499
  %7 = getelementptr inbounds [4 x double]* %B, i64 0, i64 2, !llfi_index !4500
  %8 = load double* %7, align 8, !llfi_index !4501
  %9 = getelementptr inbounds [4 x double]* %A, i64 0, i64 2, !llfi_index !4502
  store double %8, double* %9, align 8, !llfi_index !4503
  %10 = getelementptr inbounds [4 x double]* %B, i64 0, i64 3, !llfi_index !4504
  %11 = load double* %10, align 8, !llfi_index !4505
  %12 = getelementptr inbounds [4 x double]* %A, i64 0, i64 3, !llfi_index !4506
  store double %11, double* %12, align 8, !llfi_index !4507
  %13 = getelementptr inbounds [4 x double]* %B, i64 1, i64 0, !llfi_index !4508
  %14 = load double* %13, align 8, !llfi_index !4509
  %15 = getelementptr inbounds [4 x double]* %A, i64 1, i64 0, !llfi_index !4510
  store double %14, double* %15, align 8, !llfi_index !4511
  %16 = getelementptr inbounds [4 x double]* %B, i64 1, i64 1, !llfi_index !4512
  %17 = load double* %16, align 8, !llfi_index !4513
  %18 = getelementptr inbounds [4 x double]* %A, i64 1, i64 1, !llfi_index !4514
  store double %17, double* %18, align 8, !llfi_index !4515
  %19 = getelementptr inbounds [4 x double]* %B, i64 1, i64 2, !llfi_index !4516
  %20 = load double* %19, align 8, !llfi_index !4517
  %21 = getelementptr inbounds [4 x double]* %A, i64 1, i64 2, !llfi_index !4518
  store double %20, double* %21, align 8, !llfi_index !4519
  %22 = getelementptr inbounds [4 x double]* %B, i64 1, i64 3, !llfi_index !4520
  %23 = load double* %22, align 8, !llfi_index !4521
  %24 = getelementptr inbounds [4 x double]* %A, i64 1, i64 3, !llfi_index !4522
  store double %23, double* %24, align 8, !llfi_index !4523
  %25 = getelementptr inbounds [4 x double]* %B, i64 2, i64 0, !llfi_index !4524
  %26 = load double* %25, align 8, !llfi_index !4525
  %27 = getelementptr inbounds [4 x double]* %A, i64 2, i64 0, !llfi_index !4526
  store double %26, double* %27, align 8, !llfi_index !4527
  %28 = getelementptr inbounds [4 x double]* %B, i64 2, i64 1, !llfi_index !4528
  %29 = load double* %28, align 8, !llfi_index !4529
  %30 = getelementptr inbounds [4 x double]* %A, i64 2, i64 1, !llfi_index !4530
  store double %29, double* %30, align 8, !llfi_index !4531
  %31 = getelementptr inbounds [4 x double]* %B, i64 2, i64 2, !llfi_index !4532
  %32 = load double* %31, align 8, !llfi_index !4533
  %33 = getelementptr inbounds [4 x double]* %A, i64 2, i64 2, !llfi_index !4534
  store double %32, double* %33, align 8, !llfi_index !4535
  %34 = getelementptr inbounds [4 x double]* %B, i64 2, i64 3, !llfi_index !4536
  %35 = load double* %34, align 8, !llfi_index !4537
  %36 = getelementptr inbounds [4 x double]* %A, i64 2, i64 3, !llfi_index !4538
  store double %35, double* %36, align 8, !llfi_index !4539
  %37 = getelementptr inbounds [4 x double]* %B, i64 3, i64 0, !llfi_index !4540
  %38 = load double* %37, align 8, !llfi_index !4541
  %39 = getelementptr inbounds [4 x double]* %A, i64 3, i64 0, !llfi_index !4542
  store double %38, double* %39, align 8, !llfi_index !4543
  %40 = getelementptr inbounds [4 x double]* %B, i64 3, i64 1, !llfi_index !4544
  %41 = load double* %40, align 8, !llfi_index !4545
  %42 = getelementptr inbounds [4 x double]* %A, i64 3, i64 1, !llfi_index !4546
  store double %41, double* %42, align 8, !llfi_index !4547
  %43 = getelementptr inbounds [4 x double]* %B, i64 3, i64 2, !llfi_index !4548
  %44 = load double* %43, align 8, !llfi_index !4549
  %45 = getelementptr inbounds [4 x double]* %A, i64 3, i64 2, !llfi_index !4550
  store double %44, double* %45, align 8, !llfi_index !4551
  %46 = getelementptr inbounds [4 x double]* %B, i64 3, i64 3, !llfi_index !4552
  %47 = load double* %46, align 8, !llfi_index !4553
  %48 = getelementptr inbounds [4 x double]* %A, i64 3, i64 3, !llfi_index !4554
  store double %47, double* %48, align 8, !llfi_index !4555
  ret void, !llfi_index !4556
}

; Function Attrs: nounwind uwtable
define void @MatrixTranspose([4 x double]* nocapture %MT, [4 x double]* nocapture readonly %M) #0 {
  %tmp = alloca [4 x [4 x double]], align 16, !llfi_index !4557
  %1 = getelementptr inbounds [4 x double]* %M, i64 0, i64 0, !llfi_index !4558
  %2 = load double* %1, align 8, !llfi_index !4559
  %3 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 0, i64 0, !llfi_index !4560
  store double %2, double* %3, align 16, !llfi_index !4561
  %4 = getelementptr inbounds [4 x double]* %M, i64 0, i64 1, !llfi_index !4562
  %5 = load double* %4, align 8, !llfi_index !4563
  %6 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 1, i64 0, !llfi_index !4564
  store double %5, double* %6, align 16, !llfi_index !4565
  %7 = getelementptr inbounds [4 x double]* %M, i64 0, i64 2, !llfi_index !4566
  %8 = load double* %7, align 8, !llfi_index !4567
  %9 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 2, i64 0, !llfi_index !4568
  store double %8, double* %9, align 16, !llfi_index !4569
  %10 = getelementptr inbounds [4 x double]* %M, i64 0, i64 3, !llfi_index !4570
  %11 = load double* %10, align 8, !llfi_index !4571
  %12 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 3, i64 0, !llfi_index !4572
  store double %11, double* %12, align 16, !llfi_index !4573
  %13 = getelementptr inbounds [4 x double]* %M, i64 1, i64 0, !llfi_index !4574
  %14 = load double* %13, align 8, !llfi_index !4575
  %15 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 0, i64 1, !llfi_index !4576
  store double %14, double* %15, align 8, !llfi_index !4577
  %16 = getelementptr inbounds [4 x double]* %M, i64 1, i64 1, !llfi_index !4578
  %17 = load double* %16, align 8, !llfi_index !4579
  %18 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 1, i64 1, !llfi_index !4580
  store double %17, double* %18, align 8, !llfi_index !4581
  %19 = getelementptr inbounds [4 x double]* %M, i64 1, i64 2, !llfi_index !4582
  %20 = load double* %19, align 8, !llfi_index !4583
  %21 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 2, i64 1, !llfi_index !4584
  store double %20, double* %21, align 8, !llfi_index !4585
  %22 = getelementptr inbounds [4 x double]* %M, i64 1, i64 3, !llfi_index !4586
  %23 = load double* %22, align 8, !llfi_index !4587
  %24 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 3, i64 1, !llfi_index !4588
  store double %23, double* %24, align 8, !llfi_index !4589
  %25 = getelementptr inbounds [4 x double]* %M, i64 2, i64 0, !llfi_index !4590
  %26 = load double* %25, align 8, !llfi_index !4591
  %27 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 0, i64 2, !llfi_index !4592
  store double %26, double* %27, align 16, !llfi_index !4593
  %28 = getelementptr inbounds [4 x double]* %M, i64 2, i64 1, !llfi_index !4594
  %29 = load double* %28, align 8, !llfi_index !4595
  %30 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 1, i64 2, !llfi_index !4596
  store double %29, double* %30, align 16, !llfi_index !4597
  %31 = getelementptr inbounds [4 x double]* %M, i64 2, i64 2, !llfi_index !4598
  %32 = load double* %31, align 8, !llfi_index !4599
  %33 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 2, i64 2, !llfi_index !4600
  store double %32, double* %33, align 16, !llfi_index !4601
  %34 = getelementptr inbounds [4 x double]* %M, i64 2, i64 3, !llfi_index !4602
  %35 = load double* %34, align 8, !llfi_index !4603
  %36 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 3, i64 2, !llfi_index !4604
  store double %35, double* %36, align 16, !llfi_index !4605
  %37 = getelementptr inbounds [4 x double]* %M, i64 3, i64 0, !llfi_index !4606
  %38 = load double* %37, align 8, !llfi_index !4607
  %39 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 0, i64 3, !llfi_index !4608
  store double %38, double* %39, align 8, !llfi_index !4609
  %40 = getelementptr inbounds [4 x double]* %M, i64 3, i64 1, !llfi_index !4610
  %41 = load double* %40, align 8, !llfi_index !4611
  %42 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 1, i64 3, !llfi_index !4612
  store double %41, double* %42, align 8, !llfi_index !4613
  %43 = getelementptr inbounds [4 x double]* %M, i64 3, i64 2, !llfi_index !4614
  %44 = load double* %43, align 8, !llfi_index !4615
  %45 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 2, i64 3, !llfi_index !4616
  store double %44, double* %45, align 8, !llfi_index !4617
  %46 = getelementptr inbounds [4 x double]* %M, i64 3, i64 3, !llfi_index !4618
  %47 = load double* %46, align 8, !llfi_index !4619
  %48 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 3, i64 3, !llfi_index !4620
  store double %47, double* %48, align 8, !llfi_index !4621
  %49 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 0, !llfi_index !4622
  call void @MatrixCopy([4 x double]* %MT, [4 x double]* %49), !llfi_index !4623
  ret void, !llfi_index !4624
}

; Function Attrs: nounwind uwtable
define void @MatrixMult([4 x double]* nocapture %C, [4 x double]* nocapture readonly %A, [4 x double]* nocapture readonly %B) #0 {
  %T = alloca [4 x [4 x double]], align 16, !llfi_index !4625
  %1 = getelementptr inbounds [4 x double]* %B, i64 0, i64 0, !llfi_index !4626
  %2 = load double* %1, align 8, !llfi_index !4627
  %3 = getelementptr inbounds [4 x double]* %B, i64 1, i64 0, !llfi_index !4628
  %4 = load double* %3, align 8, !llfi_index !4629
  %5 = getelementptr inbounds [4 x double]* %B, i64 2, i64 0, !llfi_index !4630
  %6 = load double* %5, align 8, !llfi_index !4631
  %7 = getelementptr inbounds [4 x double]* %B, i64 3, i64 0, !llfi_index !4632
  %8 = load double* %7, align 8, !llfi_index !4633
  %9 = getelementptr inbounds [4 x double]* %B, i64 0, i64 1, !llfi_index !4634
  %10 = load double* %9, align 8, !llfi_index !4635
  %11 = getelementptr inbounds [4 x double]* %B, i64 1, i64 1, !llfi_index !4636
  %12 = load double* %11, align 8, !llfi_index !4637
  %13 = getelementptr inbounds [4 x double]* %B, i64 2, i64 1, !llfi_index !4638
  %14 = load double* %13, align 8, !llfi_index !4639
  %15 = getelementptr inbounds [4 x double]* %B, i64 3, i64 1, !llfi_index !4640
  %16 = load double* %15, align 8, !llfi_index !4641
  %17 = getelementptr inbounds [4 x double]* %B, i64 0, i64 2, !llfi_index !4642
  %18 = load double* %17, align 8, !llfi_index !4643
  %19 = getelementptr inbounds [4 x double]* %B, i64 1, i64 2, !llfi_index !4644
  %20 = load double* %19, align 8, !llfi_index !4645
  %21 = getelementptr inbounds [4 x double]* %B, i64 2, i64 2, !llfi_index !4646
  %22 = load double* %21, align 8, !llfi_index !4647
  %23 = getelementptr inbounds [4 x double]* %B, i64 3, i64 2, !llfi_index !4648
  %24 = load double* %23, align 8, !llfi_index !4649
  %25 = getelementptr inbounds [4 x double]* %B, i64 0, i64 3, !llfi_index !4650
  %26 = load double* %25, align 8, !llfi_index !4651
  %27 = getelementptr inbounds [4 x double]* %B, i64 1, i64 3, !llfi_index !4652
  %28 = load double* %27, align 8, !llfi_index !4653
  %29 = getelementptr inbounds [4 x double]* %B, i64 2, i64 3, !llfi_index !4654
  %30 = load double* %29, align 8, !llfi_index !4655
  %31 = getelementptr inbounds [4 x double]* %B, i64 3, i64 3, !llfi_index !4656
  %32 = load double* %31, align 8, !llfi_index !4657
  br label %34, !llfi_index !4658

; <label>:33                                      ; preds = %34
  %scevgep8 = bitcast [4 x double]* %C to i8*, !llfi_index !4659
  %scevgep910 = bitcast [4 x [4 x double]]* %T to i8*, !llfi_index !4660
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep8, i8* %scevgep910, i64 32, i32 8, i1 false), !llfi_index !4661
  %scevgep.1 = getelementptr [4 x double]* %C, i64 1, i64 0, !llfi_index !4662
  %scevgep8.1 = bitcast double* %scevgep.1 to i8*, !llfi_index !4663
  %scevgep9.1 = getelementptr [4 x [4 x double]]* %T, i64 0, i64 1, i64 0, !llfi_index !4664
  %scevgep910.1 = bitcast double* %scevgep9.1 to i8*, !llfi_index !4665
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep8.1, i8* %scevgep910.1, i64 32, i32 8, i1 false), !llfi_index !4666
  %scevgep.2 = getelementptr [4 x double]* %C, i64 2, i64 0, !llfi_index !4667
  %scevgep8.2 = bitcast double* %scevgep.2 to i8*, !llfi_index !4668
  %scevgep9.2 = getelementptr [4 x [4 x double]]* %T, i64 0, i64 2, i64 0, !llfi_index !4669
  %scevgep910.2 = bitcast double* %scevgep9.2 to i8*, !llfi_index !4670
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep8.2, i8* %scevgep910.2, i64 32, i32 8, i1 false), !llfi_index !4671
  %scevgep.3 = getelementptr [4 x double]* %C, i64 3, i64 0, !llfi_index !4672
  %scevgep8.3 = bitcast double* %scevgep.3 to i8*, !llfi_index !4673
  %scevgep9.3 = getelementptr [4 x [4 x double]]* %T, i64 0, i64 3, i64 0, !llfi_index !4674
  %scevgep910.3 = bitcast double* %scevgep9.3 to i8*, !llfi_index !4675
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep8.3, i8* %scevgep910.3, i64 32, i32 8, i1 false), !llfi_index !4676
  ret void, !llfi_index !4677

; <label>:34                                      ; preds = %34, %0
  %i.07 = phi i64 [ 0, %0 ], [ %91, %34 ], !llfi_index !4678
  %35 = getelementptr inbounds [4 x double]* %A, i64 %i.07, i64 0, !llfi_index !4679
  %36 = getelementptr inbounds [4 x [4 x double]]* %T, i64 0, i64 %i.07, i64 0, !llfi_index !4680
  %37 = load double* %35, align 8, !llfi_index !4681
  %38 = fmul double %37, %2, !llfi_index !4682
  %39 = fadd double %38, 0.000000e+00, !llfi_index !4683
  %40 = getelementptr inbounds [4 x double]* %A, i64 %i.07, i64 1, !llfi_index !4684
  %41 = load double* %40, align 8, !llfi_index !4685
  %42 = fmul double %41, %4, !llfi_index !4686
  %43 = fadd double %39, %42, !llfi_index !4687
  %44 = getelementptr inbounds [4 x double]* %A, i64 %i.07, i64 2, !llfi_index !4688
  %45 = load double* %44, align 8, !llfi_index !4689
  %46 = fmul double %45, %6, !llfi_index !4690
  %47 = fadd double %43, %46, !llfi_index !4691
  %48 = getelementptr inbounds [4 x double]* %A, i64 %i.07, i64 3, !llfi_index !4692
  %49 = load double* %48, align 8, !llfi_index !4693
  %50 = fmul double %49, %8, !llfi_index !4694
  %51 = fadd double %47, %50, !llfi_index !4695
  store double %51, double* %36, align 16, !llfi_index !4696
  %52 = getelementptr inbounds [4 x [4 x double]]* %T, i64 0, i64 %i.07, i64 1, !llfi_index !4697
  %53 = load double* %35, align 8, !llfi_index !4698
  %54 = fmul double %53, %10, !llfi_index !4699
  %55 = fadd double %54, 0.000000e+00, !llfi_index !4700
  %56 = load double* %40, align 8, !llfi_index !4701
  %57 = fmul double %56, %12, !llfi_index !4702
  %58 = fadd double %55, %57, !llfi_index !4703
  %59 = load double* %44, align 8, !llfi_index !4704
  %60 = fmul double %59, %14, !llfi_index !4705
  %61 = fadd double %58, %60, !llfi_index !4706
  %62 = load double* %48, align 8, !llfi_index !4707
  %63 = fmul double %62, %16, !llfi_index !4708
  %64 = fadd double %61, %63, !llfi_index !4709
  store double %64, double* %52, align 8, !llfi_index !4710
  %65 = getelementptr inbounds [4 x [4 x double]]* %T, i64 0, i64 %i.07, i64 2, !llfi_index !4711
  %66 = load double* %35, align 8, !llfi_index !4712
  %67 = fmul double %66, %18, !llfi_index !4713
  %68 = fadd double %67, 0.000000e+00, !llfi_index !4714
  %69 = load double* %40, align 8, !llfi_index !4715
  %70 = fmul double %69, %20, !llfi_index !4716
  %71 = fadd double %68, %70, !llfi_index !4717
  %72 = load double* %44, align 8, !llfi_index !4718
  %73 = fmul double %72, %22, !llfi_index !4719
  %74 = fadd double %71, %73, !llfi_index !4720
  %75 = load double* %48, align 8, !llfi_index !4721
  %76 = fmul double %75, %24, !llfi_index !4722
  %77 = fadd double %74, %76, !llfi_index !4723
  store double %77, double* %65, align 16, !llfi_index !4724
  %78 = getelementptr inbounds [4 x [4 x double]]* %T, i64 0, i64 %i.07, i64 3, !llfi_index !4725
  %79 = load double* %35, align 8, !llfi_index !4726
  %80 = fmul double %79, %26, !llfi_index !4727
  %81 = fadd double %80, 0.000000e+00, !llfi_index !4728
  %82 = load double* %40, align 8, !llfi_index !4729
  %83 = fmul double %82, %28, !llfi_index !4730
  %84 = fadd double %81, %83, !llfi_index !4731
  %85 = load double* %44, align 8, !llfi_index !4732
  %86 = fmul double %85, %30, !llfi_index !4733
  %87 = fadd double %84, %86, !llfi_index !4734
  %88 = load double* %48, align 8, !llfi_index !4735
  %89 = fmul double %88, %32, !llfi_index !4736
  %90 = fadd double %87, %89, !llfi_index !4737
  store double %90, double* %78, align 8, !llfi_index !4738
  %91 = add nsw i64 %i.07, 1, !llfi_index !4739
  %exitcond = icmp eq i64 %91, 4, !llfi_index !4740
  br i1 %exitcond, label %33, label %34, !llfi_index !4741
}

; Function Attrs: nounwind uwtable
define void @MatrixInverse([4 x double]* nocapture %Minv, [4 x double]* nocapture readonly %Mat) #0 {
.preheader3483:
  %gjmat = alloca [4 x [8 x double]], align 16, !llfi_index !4742
  %tbuf = alloca [8 x double], align 16, !llfi_index !4743
  %tmp = alloca [4 x [4 x double]], align 16, !llfi_index !4744
  %scevgep8586 = bitcast [4 x [8 x double]]* %gjmat to i8*, !llfi_index !4745
  %scevgep8788 = bitcast [4 x double]* %Mat to i8*, !llfi_index !4746
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep8586, i8* %scevgep8788, i64 32, i32 8, i1 false), !llfi_index !4747
  %scevgep85.1 = getelementptr [4 x [8 x double]]* %gjmat, i64 0, i64 1, i64 0, !llfi_index !4748
  %scevgep8586.1 = bitcast double* %scevgep85.1 to i8*, !llfi_index !4749
  %scevgep87.1 = getelementptr [4 x double]* %Mat, i64 1, i64 0, !llfi_index !4750
  %scevgep8788.1 = bitcast double* %scevgep87.1 to i8*, !llfi_index !4751
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep8586.1, i8* %scevgep8788.1, i64 32, i32 8, i1 false), !llfi_index !4752
  %scevgep85.2 = getelementptr [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 0, !llfi_index !4753
  %scevgep8586.2 = bitcast double* %scevgep85.2 to i8*, !llfi_index !4754
  %scevgep87.2 = getelementptr [4 x double]* %Mat, i64 2, i64 0, !llfi_index !4755
  %scevgep8788.2 = bitcast double* %scevgep87.2 to i8*, !llfi_index !4756
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep8586.2, i8* %scevgep8788.2, i64 32, i32 8, i1 false), !llfi_index !4757
  %scevgep85.3 = getelementptr [4 x [8 x double]]* %gjmat, i64 0, i64 3, i64 0, !llfi_index !4758
  %scevgep8586.3 = bitcast double* %scevgep85.3 to i8*, !llfi_index !4759
  %scevgep87.3 = getelementptr [4 x double]* %Mat, i64 3, i64 0, !llfi_index !4760
  %scevgep8788.3 = bitcast double* %scevgep87.3 to i8*, !llfi_index !4761
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep8586.3, i8* %scevgep8788.3, i64 32, i32 8, i1 false), !llfi_index !4762
  %tbuf62 = bitcast [8 x double]* %tbuf to i8*, !llfi_index !4763
  %0 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 0, i64 4, !llfi_index !4764
  store double 1.000000e+00, double* %0, align 16, !llfi_index !4765
  %1 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 0, i64 5, !llfi_index !4766
  %2 = bitcast double* %1 to i8*, !llfi_index !4767
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 24, i32 8, i1 false), !llfi_index !4768
  %3 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 1, i64 4, !llfi_index !4769
  store double 0.000000e+00, double* %3, align 16, !llfi_index !4770
  %4 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 1, i64 5, !llfi_index !4771
  store double 1.000000e+00, double* %4, align 8, !llfi_index !4772
  %5 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 1, i64 6, !llfi_index !4773
  %6 = bitcast double* %5 to i8*, !llfi_index !4774
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 16, i32 16, i1 false), !llfi_index !4775
  %7 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 4, !llfi_index !4776
  %8 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 6, !llfi_index !4777
  %9 = bitcast double* %7 to i8*, !llfi_index !4778
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 16, i32 16, i1 false), !llfi_index !4779
  store double 1.000000e+00, double* %8, align 16, !llfi_index !4780
  %10 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 7, !llfi_index !4781
  store double 0.000000e+00, double* %10, align 8, !llfi_index !4782
  %11 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 3, i64 4, !llfi_index !4783
  %12 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 3, i64 7, !llfi_index !4784
  %13 = bitcast double* %11 to i8*, !llfi_index !4785
  call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 24, i32 16, i1 false), !llfi_index !4786
  store double 1.000000e+00, double* %12, align 8, !llfi_index !4787
  br label %14, !llfi_index !4788

.loopexit30:                                      ; preds = %._crit_edge28
  %exitcond74 = icmp eq i64 %21, 3, !llfi_index !4789
  br i1 %exitcond74, label %.lr.ph, label %14, !llfi_index !4790

; <label>:14                                      ; preds = %.loopexit30, %.preheader3483
  %i.235 = phi i64 [ 0, %.preheader3483 ], [ %21, %.loopexit30 ], !llfi_index !4791
  %scevgep63 = getelementptr [4 x [8 x double]]* %gjmat, i64 0, i64 %i.235, i64 0, !llfi_index !4792
  %scevgep6364 = bitcast double* %scevgep63 to i8*, !llfi_index !4793
  %15 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %i.235, i64 %i.235, !llfi_index !4794
  %16 = load double* %15, align 8, !llfi_index !4795
  %17 = fcmp ogt double %16, 0.000000e+00, !llfi_index !4796
  br i1 %17, label %.lr.ph17, label %18, !llfi_index !4797

; <label>:18                                      ; preds = %14
  %19 = fsub double -0.000000e+00, %16, !llfi_index !4798
  br label %.lr.ph17, !llfi_index !4799

.lr.ph17:                                         ; preds = %18, %14
  %20 = phi double [ %19, %18 ], [ %16, %14 ], !llfi_index !4800
  %21 = add nsw i64 %i.235, 1, !llfi_index !4801
  br label %22, !llfi_index !4802

; <label>:22                                      ; preds = %28, %.lr.ph17
  %prow.016 = phi i64 [ %i.235, %.lr.ph17 ], [ %prow.1, %28 ], !llfi_index !4803
  %pval.015 = phi double [ %20, %.lr.ph17 ], [ %pval.1, %28 ], !llfi_index !4804
  %j.214 = phi i64 [ %21, %.lr.ph17 ], [ %31, %28 ], !llfi_index !4805
  %23 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %j.214, i64 %i.235, !llfi_index !4806
  %24 = load double* %23, align 8, !llfi_index !4807
  %25 = fcmp ogt double %24, 0.000000e+00, !llfi_index !4808
  br i1 %25, label %28, label %26, !llfi_index !4809

; <label>:26                                      ; preds = %22
  %27 = fsub double -0.000000e+00, %24, !llfi_index !4810
  br label %28, !llfi_index !4811

; <label>:28                                      ; preds = %26, %22
  %29 = phi double [ %27, %26 ], [ %24, %22 ], !llfi_index !4812
  %30 = fcmp ogt double %29, %pval.015, !llfi_index !4813
  %pval.1 = select i1 %30, double %29, double %pval.015, !llfi_index !4814
  %prow.1 = select i1 %30, i64 %j.214, i64 %prow.016, !llfi_index !4815
  %31 = add nsw i64 %j.214, 1, !llfi_index !4816
  %exitcond60 = icmp eq i64 %31, 4, !llfi_index !4817
  br i1 %exitcond60, label %._crit_edge, label %22, !llfi_index !4818

._crit_edge:                                      ; preds = %28
  %32 = icmp eq i64 %i.235, %prow.1, !llfi_index !4819
  br i1 %32, label %.lr.ph27, label %.loopexit23, !llfi_index !4820

.loopexit23:                                      ; preds = %._crit_edge
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tbuf62, i8* %scevgep6364, i64 64, i32 16, i1 false), !llfi_index !4821
  %33 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %prow.1, i64 0, !llfi_index !4822
  %34 = load double* %33, align 16, !llfi_index !4823
  %35 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %i.235, i64 0, !llfi_index !4824
  store double %34, double* %35, align 16, !llfi_index !4825
  %36 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %prow.1, i64 1, !llfi_index !4826
  %37 = load double* %36, align 8, !llfi_index !4827
  %38 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %i.235, i64 1, !llfi_index !4828
  store double %37, double* %38, align 8, !llfi_index !4829
  %39 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %prow.1, i64 2, !llfi_index !4830
  %40 = load double* %39, align 16, !llfi_index !4831
  %41 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %i.235, i64 2, !llfi_index !4832
  store double %40, double* %41, align 16, !llfi_index !4833
  %42 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %prow.1, i64 3, !llfi_index !4834
  %43 = load double* %42, align 8, !llfi_index !4835
  %44 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %i.235, i64 3, !llfi_index !4836
  store double %43, double* %44, align 8, !llfi_index !4837
  %45 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %prow.1, i64 4, !llfi_index !4838
  %46 = load double* %45, align 16, !llfi_index !4839
  %47 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %i.235, i64 4, !llfi_index !4840
  store double %46, double* %47, align 16, !llfi_index !4841
  %48 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %prow.1, i64 5, !llfi_index !4842
  %49 = load double* %48, align 8, !llfi_index !4843
  %50 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %i.235, i64 5, !llfi_index !4844
  store double %49, double* %50, align 8, !llfi_index !4845
  %51 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %prow.1, i64 6, !llfi_index !4846
  %52 = load double* %51, align 16, !llfi_index !4847
  %53 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %i.235, i64 6, !llfi_index !4848
  store double %52, double* %53, align 16, !llfi_index !4849
  %54 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %prow.1, i64 7, !llfi_index !4850
  %55 = load double* %54, align 8, !llfi_index !4851
  %56 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %i.235, i64 7, !llfi_index !4852
  store double %55, double* %56, align 8, !llfi_index !4853
  %scevgep70 = getelementptr [4 x [8 x double]]* %gjmat, i64 0, i64 %prow.1, i64 0, !llfi_index !4854
  %scevgep7071 = bitcast double* %scevgep70 to i8*, !llfi_index !4855
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep7071, i8* %tbuf62, i64 64, i32 16, i1 false), !llfi_index !4856
  br label %.lr.ph27, !llfi_index !4857

.lr.ph27:                                         ; preds = %._crit_edge28, %.loopexit23, %._crit_edge
  %j.331 = phi i64 [ %69, %._crit_edge28 ], [ %21, %._crit_edge ], [ %21, %.loopexit23 ], !llfi_index !4858
  %57 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %j.331, i64 %i.235, !llfi_index !4859
  %58 = load double* %57, align 8, !llfi_index !4860
  %59 = load double* %15, align 8, !llfi_index !4861
  %60 = fdiv double %58, %59, !llfi_index !4862
  store double 0.000000e+00, double* %57, align 8, !llfi_index !4863
  br label %61, !llfi_index !4864

; <label>:61                                      ; preds = %61, %.lr.ph27
  %k.425 = phi i64 [ %21, %.lr.ph27 ], [ %68, %61 ], !llfi_index !4865
  %62 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %j.331, i64 %k.425, !llfi_index !4866
  %63 = load double* %62, align 8, !llfi_index !4867
  %64 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 %i.235, i64 %k.425, !llfi_index !4868
  %65 = load double* %64, align 8, !llfi_index !4869
  %66 = fmul double %60, %65, !llfi_index !4870
  %67 = fsub double %63, %66, !llfi_index !4871
  store double %67, double* %62, align 8, !llfi_index !4872
  %68 = add nsw i64 %k.425, 1, !llfi_index !4873
  %exitcond72 = icmp eq i64 %68, 8, !llfi_index !4874
  br i1 %exitcond72, label %._crit_edge28, label %61, !llfi_index !4875

._crit_edge28:                                    ; preds = %61
  %69 = add nsw i64 %j.331, 1, !llfi_index !4876
  %exitcond73 = icmp eq i64 %69, 4, !llfi_index !4877
  br i1 %exitcond73, label %.loopexit30, label %.lr.ph27, !llfi_index !4878

.loopexit:                                        ; preds = %80
  %70 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 0, i64 2, !llfi_index !4879
  %71 = load double* %70, align 16, !llfi_index !4880
  %72 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 2, !llfi_index !4881
  %73 = load double* %72, align 16, !llfi_index !4882
  %74 = fdiv double %71, %73, !llfi_index !4883
  store double 0.000000e+00, double* %70, align 16, !llfi_index !4884
  br label %201, !llfi_index !4885

.lr.ph:                                           ; preds = %.loopexit30
  %75 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 0, i64 1, !llfi_index !4886
  %76 = load double* %75, align 8, !llfi_index !4887
  %77 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 1, i64 1, !llfi_index !4888
  %78 = load double* %77, align 8, !llfi_index !4889
  %79 = fdiv double %76, %78, !llfi_index !4890
  store double 0.000000e+00, double* %75, align 8, !llfi_index !4891
  br label %80, !llfi_index !4892

; <label>:80                                      ; preds = %80, %.lr.ph
  %k.58 = phi i64 [ 2, %.lr.ph ], [ %87, %80 ], !llfi_index !4893
  %81 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 0, i64 %k.58, !llfi_index !4894
  %82 = load double* %81, align 8, !llfi_index !4895
  %83 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 1, i64 %k.58, !llfi_index !4896
  %84 = load double* %83, align 8, !llfi_index !4897
  %85 = fmul double %79, %84, !llfi_index !4898
  %86 = fsub double %82, %85, !llfi_index !4899
  store double %86, double* %81, align 8, !llfi_index !4900
  %87 = add nsw i64 %k.58, 1, !llfi_index !4901
  %exitcond = icmp eq i64 %87, 8, !llfi_index !4902
  br i1 %exitcond, label %.loopexit, label %80, !llfi_index !4903

.lr.ph.1:                                         ; preds = %214
  %88 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 1, i64 2, !llfi_index !4904
  %89 = load double* %88, align 16, !llfi_index !4905
  %90 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 2, !llfi_index !4906
  %91 = load double* %90, align 16, !llfi_index !4907
  %92 = fdiv double %89, %91, !llfi_index !4908
  store double 0.000000e+00, double* %88, align 16, !llfi_index !4909
  br label %93, !llfi_index !4910

; <label>:93                                      ; preds = %93, %.lr.ph.1
  %k.58.1 = phi i64 [ 3, %.lr.ph.1 ], [ %100, %93 ], !llfi_index !4911
  %94 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 1, i64 %k.58.1, !llfi_index !4912
  %95 = load double* %94, align 8, !llfi_index !4913
  %96 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 %k.58.1, !llfi_index !4914
  %97 = load double* %96, align 8, !llfi_index !4915
  %98 = fmul double %92, %97, !llfi_index !4916
  %99 = fsub double %95, %98, !llfi_index !4917
  store double %99, double* %94, align 8, !llfi_index !4918
  %100 = add nsw i64 %k.58.1, 1, !llfi_index !4919
  %exitcond.1 = icmp eq i64 %100, 8, !llfi_index !4920
  br i1 %exitcond.1, label %.loopexit.1, label %93, !llfi_index !4921

.loopexit.1:                                      ; preds = %93
  %101 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 1, i64 3, !llfi_index !4922
  %102 = load double* %101, align 8, !llfi_index !4923
  %103 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 3, i64 3, !llfi_index !4924
  %104 = load double* %103, align 8, !llfi_index !4925
  %105 = fdiv double %102, %104, !llfi_index !4926
  store double 0.000000e+00, double* %101, align 8, !llfi_index !4927
  br label %193, !llfi_index !4928

..loopexit9_crit_edge.21:                         ; preds = %193
  %106 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 3, !llfi_index !4929
  %107 = load double* %106, align 8, !llfi_index !4930
  %108 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 3, i64 3, !llfi_index !4931
  %109 = load double* %108, align 8, !llfi_index !4932
  %110 = fdiv double %107, %109, !llfi_index !4933
  store double 0.000000e+00, double* %106, align 8, !llfi_index !4934
  %111 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 4, !llfi_index !4935
  %112 = load double* %111, align 16, !llfi_index !4936
  %113 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 3, i64 4, !llfi_index !4937
  %114 = load double* %113, align 16, !llfi_index !4938
  %115 = fmul double %110, %114, !llfi_index !4939
  %116 = fsub double %112, %115, !llfi_index !4940
  store double %116, double* %111, align 16, !llfi_index !4941
  %117 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 5, !llfi_index !4942
  %118 = load double* %117, align 8, !llfi_index !4943
  %119 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 3, i64 5, !llfi_index !4944
  %120 = load double* %119, align 8, !llfi_index !4945
  %121 = fmul double %110, %120, !llfi_index !4946
  %122 = fsub double %118, %121, !llfi_index !4947
  store double %122, double* %117, align 8, !llfi_index !4948
  %123 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 6, !llfi_index !4949
  %124 = load double* %123, align 16, !llfi_index !4950
  %125 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 3, i64 6, !llfi_index !4951
  %126 = load double* %125, align 16, !llfi_index !4952
  %127 = fmul double %110, %126, !llfi_index !4953
  %128 = fsub double %124, %127, !llfi_index !4954
  store double %128, double* %123, align 16, !llfi_index !4955
  %129 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 7, !llfi_index !4956
  %130 = load double* %129, align 8, !llfi_index !4957
  %131 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 3, i64 7, !llfi_index !4958
  %132 = load double* %131, align 8, !llfi_index !4959
  %133 = fmul double %110, %132, !llfi_index !4960
  %134 = fsub double %130, %133, !llfi_index !4961
  store double %134, double* %129, align 8, !llfi_index !4962
  %135 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 0, i64 0, !llfi_index !4963
  %136 = load double* %135, align 16, !llfi_index !4964
  %137 = load double* %0, align 16, !llfi_index !4965
  %138 = fdiv double %137, %136, !llfi_index !4966
  store double %138, double* %0, align 16, !llfi_index !4967
  %139 = load double* %135, align 16, !llfi_index !4968
  %140 = load double* %1, align 8, !llfi_index !4969
  %141 = fdiv double %140, %139, !llfi_index !4970
  store double %141, double* %1, align 8, !llfi_index !4971
  %142 = load double* %135, align 16, !llfi_index !4972
  %143 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 0, i64 6, !llfi_index !4973
  %144 = load double* %143, align 16, !llfi_index !4974
  %145 = fdiv double %144, %142, !llfi_index !4975
  store double %145, double* %143, align 16, !llfi_index !4976
  %146 = load double* %135, align 16, !llfi_index !4977
  %147 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 0, i64 7, !llfi_index !4978
  %148 = load double* %147, align 8, !llfi_index !4979
  %149 = fdiv double %148, %146, !llfi_index !4980
  store double %149, double* %147, align 8, !llfi_index !4981
  %150 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 1, i64 1, !llfi_index !4982
  %151 = load double* %150, align 8, !llfi_index !4983
  %152 = load double* %3, align 16, !llfi_index !4984
  %153 = fdiv double %152, %151, !llfi_index !4985
  store double %153, double* %3, align 16, !llfi_index !4986
  %154 = load double* %150, align 8, !llfi_index !4987
  %155 = load double* %4, align 8, !llfi_index !4988
  %156 = fdiv double %155, %154, !llfi_index !4989
  store double %156, double* %4, align 8, !llfi_index !4990
  %157 = load double* %150, align 8, !llfi_index !4991
  %158 = load double* %5, align 16, !llfi_index !4992
  %159 = fdiv double %158, %157, !llfi_index !4993
  store double %159, double* %5, align 16, !llfi_index !4994
  %160 = load double* %150, align 8, !llfi_index !4995
  %161 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 1, i64 7, !llfi_index !4996
  %162 = load double* %161, align 8, !llfi_index !4997
  %163 = fdiv double %162, %160, !llfi_index !4998
  store double %163, double* %161, align 8, !llfi_index !4999
  %164 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 2, !llfi_index !5000
  %165 = load double* %164, align 16, !llfi_index !5001
  %166 = load double* %7, align 16, !llfi_index !5002
  %167 = fdiv double %166, %165, !llfi_index !5003
  store double %167, double* %7, align 16, !llfi_index !5004
  %168 = load double* %164, align 16, !llfi_index !5005
  %169 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 5, !llfi_index !5006
  %170 = load double* %169, align 8, !llfi_index !5007
  %171 = fdiv double %170, %168, !llfi_index !5008
  store double %171, double* %169, align 8, !llfi_index !5009
  %172 = load double* %164, align 16, !llfi_index !5010
  %173 = load double* %8, align 16, !llfi_index !5011
  %174 = fdiv double %173, %172, !llfi_index !5012
  store double %174, double* %8, align 16, !llfi_index !5013
  %175 = load double* %164, align 16, !llfi_index !5014
  %176 = load double* %10, align 8, !llfi_index !5015
  %177 = fdiv double %176, %175, !llfi_index !5016
  store double %177, double* %10, align 8, !llfi_index !5017
  %178 = load double* %108, align 8, !llfi_index !5018
  %179 = load double* %11, align 16, !llfi_index !5019
  %180 = fdiv double %179, %178, !llfi_index !5020
  store double %180, double* %11, align 16, !llfi_index !5021
  %181 = load double* %108, align 8, !llfi_index !5022
  %182 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 3, i64 5, !llfi_index !5023
  %183 = load double* %182, align 8, !llfi_index !5024
  %184 = fdiv double %183, %181, !llfi_index !5025
  store double %184, double* %182, align 8, !llfi_index !5026
  %185 = load double* %108, align 8, !llfi_index !5027
  %186 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 3, i64 6, !llfi_index !5028
  %187 = load double* %186, align 16, !llfi_index !5029
  %188 = fdiv double %187, %185, !llfi_index !5030
  store double %188, double* %186, align 16, !llfi_index !5031
  %189 = load double* %108, align 8, !llfi_index !5032
  %190 = load double* %12, align 8, !llfi_index !5033
  %191 = fdiv double %190, %189, !llfi_index !5034
  store double %191, double* %12, align 8, !llfi_index !5035
  %scevgep46 = bitcast [4 x double]* %Minv to i8*, !llfi_index !5036
  %scevgep47 = getelementptr [4 x [8 x double]]* %gjmat, i64 0, i64 0, i64 4, !llfi_index !5037
  %scevgep4748 = bitcast double* %scevgep47 to i8*, !llfi_index !5038
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep46, i8* %scevgep4748, i64 32, i32 8, i1 false), !llfi_index !5039
  %scevgep.1 = getelementptr [4 x double]* %Minv, i64 1, i64 0, !llfi_index !5040
  %scevgep46.1 = bitcast double* %scevgep.1 to i8*, !llfi_index !5041
  %scevgep47.1 = getelementptr [4 x [8 x double]]* %gjmat, i64 0, i64 1, i64 4, !llfi_index !5042
  %scevgep4748.1 = bitcast double* %scevgep47.1 to i8*, !llfi_index !5043
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep46.1, i8* %scevgep4748.1, i64 32, i32 8, i1 false), !llfi_index !5044
  %scevgep.2 = getelementptr [4 x double]* %Minv, i64 2, i64 0, !llfi_index !5045
  %scevgep46.2 = bitcast double* %scevgep.2 to i8*, !llfi_index !5046
  %scevgep47.2 = getelementptr [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 4, !llfi_index !5047
  %scevgep4748.2 = bitcast double* %scevgep47.2 to i8*, !llfi_index !5048
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep46.2, i8* %scevgep4748.2, i64 32, i32 8, i1 false), !llfi_index !5049
  %scevgep.3 = getelementptr [4 x double]* %Minv, i64 3, i64 0, !llfi_index !5050
  %scevgep46.3 = bitcast double* %scevgep.3 to i8*, !llfi_index !5051
  %scevgep47.3 = getelementptr [4 x [8 x double]]* %gjmat, i64 0, i64 3, i64 4, !llfi_index !5052
  %scevgep4748.3 = bitcast double* %scevgep47.3 to i8*, !llfi_index !5053
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %scevgep46.3, i8* %scevgep4748.3, i64 32, i32 8, i1 false), !llfi_index !5054
  %192 = getelementptr inbounds [4 x [4 x double]]* %tmp, i64 0, i64 0, !llfi_index !5055
  call void @MatrixMult([4 x double]* %192, [4 x double]* %Mat, [4 x double]* %Minv), !llfi_index !5056
  ret void, !llfi_index !5057

; <label>:193                                     ; preds = %193, %.loopexit.1
  %k.58.1.1 = phi i64 [ 4, %.loopexit.1 ], [ %200, %193 ], !llfi_index !5058
  %194 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 1, i64 %k.58.1.1, !llfi_index !5059
  %195 = load double* %194, align 8, !llfi_index !5060
  %196 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 3, i64 %k.58.1.1, !llfi_index !5061
  %197 = load double* %196, align 8, !llfi_index !5062
  %198 = fmul double %105, %197, !llfi_index !5063
  %199 = fsub double %195, %198, !llfi_index !5064
  store double %199, double* %194, align 8, !llfi_index !5065
  %200 = add nsw i64 %k.58.1.1, 1, !llfi_index !5066
  %exitcond.1.1 = icmp eq i64 %200, 8, !llfi_index !5067
  br i1 %exitcond.1.1, label %..loopexit9_crit_edge.21, label %193, !llfi_index !5068

; <label>:201                                     ; preds = %201, %.loopexit
  %k.58.15 = phi i64 [ 3, %.loopexit ], [ %208, %201 ], !llfi_index !5069
  %202 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 0, i64 %k.58.15, !llfi_index !5070
  %203 = load double* %202, align 8, !llfi_index !5071
  %204 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 2, i64 %k.58.15, !llfi_index !5072
  %205 = load double* %204, align 8, !llfi_index !5073
  %206 = fmul double %74, %205, !llfi_index !5074
  %207 = fsub double %203, %206, !llfi_index !5075
  store double %207, double* %202, align 8, !llfi_index !5076
  %208 = add nsw i64 %k.58.15, 1, !llfi_index !5077
  %exitcond.16 = icmp eq i64 %208, 8, !llfi_index !5078
  br i1 %exitcond.16, label %.loopexit.17, label %201, !llfi_index !5079

.loopexit.17:                                     ; preds = %201
  %209 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 0, i64 3, !llfi_index !5080
  %210 = load double* %209, align 8, !llfi_index !5081
  %211 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 3, i64 3, !llfi_index !5082
  %212 = load double* %211, align 8, !llfi_index !5083
  %213 = fdiv double %210, %212, !llfi_index !5084
  store double 0.000000e+00, double* %209, align 8, !llfi_index !5085
  br label %214, !llfi_index !5086

; <label>:214                                     ; preds = %214, %.loopexit.17
  %k.58.2 = phi i64 [ 4, %.loopexit.17 ], [ %221, %214 ], !llfi_index !5087
  %215 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 0, i64 %k.58.2, !llfi_index !5088
  %216 = load double* %215, align 8, !llfi_index !5089
  %217 = getelementptr inbounds [4 x [8 x double]]* %gjmat, i64 0, i64 3, i64 %k.58.2, !llfi_index !5090
  %218 = load double* %217, align 8, !llfi_index !5091
  %219 = fmul double %213, %218, !llfi_index !5092
  %220 = fsub double %216, %219, !llfi_index !5093
  store double %220, double* %215, align 8, !llfi_index !5094
  %221 = add nsw i64 %k.58.2, 1, !llfi_index !5095
  %exitcond.2 = icmp eq i64 %221, 8, !llfi_index !5096
  br i1 %exitcond.2, label %.lr.ph.1, label %214, !llfi_index !5097
}

; Function Attrs: nounwind uwtable
define void @Translate([4 x double]* nocapture %M, double %dx, double %dy, double %dz) #0 {
  tail call void @MatrixIdentity([4 x double]* %M), !llfi_index !5098
  %1 = getelementptr inbounds [4 x double]* %M, i64 3, i64 0, !llfi_index !5099
  store double %dx, double* %1, align 8, !llfi_index !5100
  %2 = getelementptr inbounds [4 x double]* %M, i64 3, i64 1, !llfi_index !5101
  store double %dy, double* %2, align 8, !llfi_index !5102
  %3 = getelementptr inbounds [4 x double]* %M, i64 3, i64 2, !llfi_index !5103
  store double %dz, double* %3, align 8, !llfi_index !5104
  ret void, !llfi_index !5105
}

; Function Attrs: nounwind uwtable
define void @Scale([4 x double]* nocapture %M, double %sx, double %sy, double %sz) #0 {
  tail call void @MatrixIdentity([4 x double]* %M), !llfi_index !5106
  %1 = getelementptr inbounds [4 x double]* %M, i64 0, i64 0, !llfi_index !5107
  store double %sx, double* %1, align 8, !llfi_index !5108
  %2 = getelementptr inbounds [4 x double]* %M, i64 1, i64 1, !llfi_index !5109
  store double %sy, double* %2, align 8, !llfi_index !5110
  %3 = getelementptr inbounds [4 x double]* %M, i64 2, i64 2, !llfi_index !5111
  store double %sz, double* %3, align 8, !llfi_index !5112
  ret void, !llfi_index !5113
}

; Function Attrs: nounwind uwtable
define void @Rotate(i64 %axis, [4 x double]* nocapture %M, double %angle) #0 {
  tail call void @MatrixIdentity([4 x double]* %M), !llfi_index !5114
  %1 = tail call double @cos(double %angle) #2, !llfi_index !5115
  %2 = tail call double @sin(double %angle) #2, !llfi_index !5116
  switch i64 %axis, label %21 [
    i64 1, label %3
    i64 2, label %9
    i64 3, label %15
  ], !llfi_index !5117

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds [4 x double]* %M, i64 1, i64 1, !llfi_index !5118
  store double %1, double* %4, align 8, !llfi_index !5119
  %5 = getelementptr inbounds [4 x double]* %M, i64 1, i64 2, !llfi_index !5120
  store double %2, double* %5, align 8, !llfi_index !5121
  %6 = fsub double -0.000000e+00, %2, !llfi_index !5122
  %7 = getelementptr inbounds [4 x double]* %M, i64 2, i64 1, !llfi_index !5123
  store double %6, double* %7, align 8, !llfi_index !5124
  %8 = getelementptr inbounds [4 x double]* %M, i64 2, i64 2, !llfi_index !5125
  store double %1, double* %8, align 8, !llfi_index !5126
  br label %23, !llfi_index !5127

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds [4 x double]* %M, i64 0, i64 0, !llfi_index !5128
  store double %1, double* %10, align 8, !llfi_index !5129
  %11 = fsub double -0.000000e+00, %2, !llfi_index !5130
  %12 = getelementptr inbounds [4 x double]* %M, i64 0, i64 2, !llfi_index !5131
  store double %11, double* %12, align 8, !llfi_index !5132
  %13 = getelementptr inbounds [4 x double]* %M, i64 2, i64 0, !llfi_index !5133
  store double %2, double* %13, align 8, !llfi_index !5134
  %14 = getelementptr inbounds [4 x double]* %M, i64 2, i64 2, !llfi_index !5135
  store double %1, double* %14, align 8, !llfi_index !5136
  br label %23, !llfi_index !5137

; <label>:15                                      ; preds = %0
  %16 = getelementptr inbounds [4 x double]* %M, i64 0, i64 0, !llfi_index !5138
  store double %1, double* %16, align 8, !llfi_index !5139
  %17 = getelementptr inbounds [4 x double]* %M, i64 0, i64 1, !llfi_index !5140
  store double %2, double* %17, align 8, !llfi_index !5141
  %18 = fsub double -0.000000e+00, %2, !llfi_index !5142
  %19 = getelementptr inbounds [4 x double]* %M, i64 1, i64 0, !llfi_index !5143
  store double %18, double* %19, align 8, !llfi_index !5144
  %20 = getelementptr inbounds [4 x double]* %M, i64 1, i64 1, !llfi_index !5145
  store double %1, double* %20, align 8, !llfi_index !5146
  br label %23, !llfi_index !5147

; <label>:21                                      ; preds = %0
  %22 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str4272, i64 0, i64 0), i64 %axis) #2, !llfi_index !5148
  tail call void @exit(i32 5) #11, !llfi_index !5149
  unreachable, !llfi_index !5150

; <label>:23                                      ; preds = %15, %9, %3
  ret void, !llfi_index !5151
}

; Function Attrs: nounwind
declare double @cos(double) #1

; Function Attrs: nounwind
declare double @sin(double) #1

; Function Attrs: nounwind uwtable
define noalias i8* @LocalMalloc(i64 %n, i8* %msg) #0 {
  %1 = tail call noalias i8* @malloc(i64 %n) #2, !llfi_index !5152
  %2 = icmp eq i8* %1, null, !llfi_index !5153
  br i1 %2, label %3, label %6, !llfi_index !5154

; <label>:3                                       ; preds = %0
  %4 = load i8** @ProgName, align 8, !llfi_index !5155
  %5 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str291, i64 0, i64 0), i8* %4, i8* %msg) #2, !llfi_index !5156
  tail call void @exit(i32 -1) #11, !llfi_index !5157
  unreachable, !llfi_index !5158

; <label>:6                                       ; preds = %0
  ret i8* %1, !llfi_index !5159
}

; Function Attrs: nounwind uwtable
define void @LocalFree(i8* nocapture %p) #0 {
  tail call void @free(i8* %p) #2, !llfi_index !5160
  ret void, !llfi_index !5161
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #1

; Function Attrs: nounwind uwtable
define void @GlobalHeapWalk() #0 {
  %1 = load %struct.gmem** @gm, align 8, !llfi_index !5162
  %2 = getelementptr inbounds %struct.gmem* %1, i64 0, i32 11, !llfi_index !5163
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #2, !llfi_index !5164
  %4 = load %struct.node** @begmem, align 8, !llfi_index !5165
  %5 = load %struct.gmem** @gm, align 8, !llfi_index !5166
  %6 = getelementptr inbounds %struct.gmem* %5, i64 0, i32 5, !llfi_index !5167
  %7 = load %struct.node** %6, align 8, !llfi_index !5168
  %8 = ptrtoint %struct.node* %7 to i64, !llfi_index !5169
  %9 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str1292, i64 0, i64 0), i64 %8) #2, !llfi_index !5170
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([55 x i8]* @str48, i64 0, i64 0)), !llfi_index !5171
  %puts1 = tail call i32 @puts(i8* getelementptr inbounds ([55 x i8]* @str49, i64 0, i64 0)), !llfi_index !5172
  %10 = load %struct.node** @endmem, align 8, !llfi_index !5173
  %11 = icmp ult %struct.node* %4, %10, !llfi_index !5174
  br i1 %11, label %.lr.ph, label %._crit_edge, !llfi_index !5175

.lr.ph:                                           ; preds = %30, %0
  %curr.02 = phi %struct.node* [ %36, %30 ], [ %4, %0 ], !llfi_index !5176
  %12 = ptrtoint %struct.node* %curr.02 to i64, !llfi_index !5177
  %13 = getelementptr inbounds %struct.node* %curr.02, i64 0, i32 0, !llfi_index !5178
  %14 = load %struct.node** %13, align 8, !llfi_index !5179
  %15 = ptrtoint %struct.node* %14 to i64, !llfi_index !5180
  %16 = getelementptr inbounds %struct.node* %curr.02, i64 0, i32 1, !llfi_index !5181
  %17 = load i64* %16, align 8, !llfi_index !5182
  %18 = getelementptr inbounds %struct.node* %curr.02, i64 0, i32 2, !llfi_index !5183
  %19 = load i64* %18, align 8, !llfi_index !5184
  %20 = icmp ne i64 %19, 0, !llfi_index !5185
  %21 = select i1 %20, i8* getelementptr inbounds ([5 x i8]* @.str5296, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str6297, i64 0, i64 0), !llfi_index !5186
  %22 = getelementptr inbounds %struct.node* %curr.02, i64 0, i32 3, !llfi_index !5187
  %23 = load i64* %22, align 8, !llfi_index !5188
  %24 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([35 x i8]* @.str4295, i64 0, i64 0), i64 %12, i64 %15, i64 %17, i8* %21, i64 %23) #2, !llfi_index !5189
  %25 = load i64* %22, align 8, !llfi_index !5190
  %26 = icmp eq i64 %25, 1437226410, !llfi_index !5191
  br i1 %26, label %30, label %27, !llfi_index !5192

; <label>:27                                      ; preds = %.lr.ph
  %28 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !5193
  %29 = tail call i64 @fwrite(i8* getelementptr inbounds ([43 x i8]* @.str7298, i64 0, i64 0), i64 42, i64 1, %struct._IO_FILE* %28) #9, !llfi_index !5194
  tail call void @exit(i32 1) #11, !llfi_index !5195
  unreachable, !llfi_index !5196

; <label>:30                                      ; preds = %.lr.ph
  %31 = bitcast %struct.node* %curr.02 to i8*, !llfi_index !5197
  %32 = load i64* %16, align 8, !llfi_index !5198
  %33 = load i64* @nodesize, align 8, !llfi_index !5199
  %34 = add i64 %33, %32, !llfi_index !5200
  %35 = getelementptr inbounds i8* %31, i64 %34, !llfi_index !5201
  %36 = bitcast i8* %35 to %struct.node*, !llfi_index !5202
  %37 = load %struct.node** @endmem, align 8, !llfi_index !5203
  %38 = icmp ult %struct.node* %36, %37, !llfi_index !5204
  br i1 %38, label %.lr.ph, label %._crit_edge, !llfi_index !5205

._crit_edge:                                      ; preds = %30, %0
  %39 = load %struct.gmem** @gm, align 8, !llfi_index !5206
  %40 = getelementptr inbounds %struct.gmem* %39, i64 0, i32 11, !llfi_index !5207
  %41 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %40) #2, !llfi_index !5208
  ret void, !llfi_index !5209
}

; Function Attrs: nounwind uwtable
define i64 @GlobalHeapInit(i64 %size) #0 {
  %1 = add i64 %size, 7, !llfi_index !5210
  %2 = and i64 %1, -8, !llfi_index !5211
  %3 = tail call noalias i8* @malloc(i64 %2) #2, !llfi_index !5212
  %4 = bitcast i8* %3 to %struct.node*, !llfi_index !5213
  %5 = load %struct.gmem** @gm, align 8, !llfi_index !5214
  %6 = getelementptr inbounds %struct.gmem* %5, i64 0, i32 5, !llfi_index !5215
  store %struct.node* %4, %struct.node** %6, align 8, !llfi_index !5216
  %7 = load %struct.gmem** @gm, align 8, !llfi_index !5217
  %8 = getelementptr inbounds %struct.gmem* %7, i64 0, i32 5, !llfi_index !5218
  %9 = load %struct.node** %8, align 8, !llfi_index !5219
  %10 = icmp eq %struct.node* %9, null, !llfi_index !5220
  br i1 %10, label %37, label %11, !llfi_index !5221

; <label>:11                                      ; preds = %0
  store i64 32, i64* @nodesize, align 8, !llfi_index !5222
  %12 = load %struct.gmem** @gm, align 8, !llfi_index !5223
  %13 = getelementptr inbounds %struct.gmem* %12, i64 0, i32 5, !llfi_index !5224
  %14 = load %struct.node** %13, align 8, !llfi_index !5225
  store %struct.node* %14, %struct.node** @begmem, align 8, !llfi_index !5226
  %15 = load %struct.node** %13, align 8, !llfi_index !5227
  %16 = bitcast %struct.node* %15 to i8*, !llfi_index !5228
  %17 = getelementptr inbounds i8* %16, i64 %2, !llfi_index !5229
  %18 = bitcast i8* %17 to %struct.node*, !llfi_index !5230
  store %struct.node* %18, %struct.node** @endmem, align 8, !llfi_index !5231
  %19 = load i64* @nodesize, align 8, !llfi_index !5232
  %20 = sub i64 %2, %19, !llfi_index !5233
  %21 = load %struct.gmem** @gm, align 8, !llfi_index !5234
  %22 = getelementptr inbounds %struct.gmem* %21, i64 0, i32 5, !llfi_index !5235
  %23 = load %struct.node** %22, align 8, !llfi_index !5236
  %24 = getelementptr inbounds %struct.node* %23, i64 0, i32 1, !llfi_index !5237
  store i64 %20, i64* %24, align 8, !llfi_index !5238
  %25 = load %struct.gmem** @gm, align 8, !llfi_index !5239
  %26 = getelementptr inbounds %struct.gmem* %25, i64 0, i32 5, !llfi_index !5240
  %27 = load %struct.node** %26, align 8, !llfi_index !5241
  %28 = getelementptr inbounds %struct.node* %27, i64 0, i32 0, !llfi_index !5242
  store %struct.node* null, %struct.node** %28, align 8, !llfi_index !5243
  %29 = load %struct.gmem** @gm, align 8, !llfi_index !5244
  %30 = getelementptr inbounds %struct.gmem* %29, i64 0, i32 5, !llfi_index !5245
  %31 = load %struct.node** %30, align 8, !llfi_index !5246
  %32 = getelementptr inbounds %struct.node* %31, i64 0, i32 2, !llfi_index !5247
  store i64 1, i64* %32, align 8, !llfi_index !5248
  %33 = load %struct.gmem** @gm, align 8, !llfi_index !5249
  %34 = getelementptr inbounds %struct.gmem* %33, i64 0, i32 5, !llfi_index !5250
  %35 = load %struct.node** %34, align 8, !llfi_index !5251
  %36 = getelementptr inbounds %struct.node* %35, i64 0, i32 3, !llfi_index !5252
  store i64 1437226410, i64* %36, align 8, !llfi_index !5253
  br label %37, !llfi_index !5254

; <label>:37                                      ; preds = %11, %0
  %.0 = phi i64 [ 1, %11 ], [ 0, %0 ], !llfi_index !5255
  ret i64 %.0, !llfi_index !5256
}

; Function Attrs: nounwind uwtable
define i8* @GlobalMalloc(i64 %size, i8* %msg) #0 {
  %1 = icmp eq i64 %size, 0, !llfi_index !5257
  br i1 %1, label %71, label %2, !llfi_index !5258

; <label>:2                                       ; preds = %0
  %3 = load %struct.gmem** @gm, align 8, !llfi_index !5259
  %4 = getelementptr inbounds %struct.gmem* %3, i64 0, i32 11, !llfi_index !5260
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %4) #2, !llfi_index !5261
  %6 = load %struct.gmem** @gm, align 8, !llfi_index !5262
  %7 = getelementptr inbounds %struct.gmem* %6, i64 0, i32 5, !llfi_index !5263
  %8 = add i64 %size, 7, !llfi_index !5264
  %9 = and i64 %8, -8, !llfi_index !5265
  %curr.016 = load %struct.node** %7, align 8, !llfi_index !5266
  %10 = icmp eq %struct.node* %curr.016, null, !llfi_index !5267
  br i1 %10, label %.critedge3, label %.lr.ph, !llfi_index !5268

; <label>:11                                      ; preds = %24
  %12 = getelementptr inbounds %struct.node* %curr.018, i64 0, i32 0, !llfi_index !5269
  %curr.0 = load %struct.node** %12, align 8, !llfi_index !5270
  %13 = icmp eq %struct.node* %curr.0, null, !llfi_index !5271
  br i1 %13, label %.critedge3, label %.lr.ph, !llfi_index !5272

.lr.ph:                                           ; preds = %11, %2
  %curr.018 = phi %struct.node* [ %curr.0, %11 ], [ %curr.016, %2 ], !llfi_index !5273
  %prev.017 = phi %struct.node* [ %curr.018, %11 ], [ null, %2 ], !llfi_index !5274
  %14 = getelementptr inbounds %struct.node* %curr.018, i64 0, i32 1, !llfi_index !5275
  %15 = load i64* %14, align 8, !llfi_index !5276
  %16 = icmp ult i64 %15, %9, !llfi_index !5277
  br i1 %16, label %17, label %.critedge, !llfi_index !5278

; <label>:17                                      ; preds = %.lr.ph
  %18 = getelementptr inbounds %struct.node* %curr.018, i64 0, i32 3, !llfi_index !5279
  %19 = load i64* %18, align 8, !llfi_index !5280
  %20 = icmp eq i64 %19, 1437226410, !llfi_index !5281
  br i1 %20, label %24, label %21, !llfi_index !5282

; <label>:21                                      ; preds = %17
  %22 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !5283
  %23 = tail call i64 @fwrite(i8* getelementptr inbounds ([41 x i8]* @.str8299, i64 0, i64 0), i64 40, i64 1, %struct._IO_FILE* %22) #9, !llfi_index !5284
  tail call void @exit(i32 1) #11, !llfi_index !5285
  unreachable, !llfi_index !5286

; <label>:24                                      ; preds = %17
  %25 = getelementptr inbounds %struct.node* %curr.018, i64 0, i32 2, !llfi_index !5287
  %26 = load i64* %25, align 8, !llfi_index !5288
  %27 = icmp eq i64 %26, 1, !llfi_index !5289
  br i1 %27, label %11, label %28, !llfi_index !5290

; <label>:28                                      ; preds = %24
  %29 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !5291
  %30 = tail call i64 @fwrite(i8* getelementptr inbounds ([53 x i8]* @.str9300, i64 0, i64 0), i64 52, i64 1, %struct._IO_FILE* %29) #9, !llfi_index !5292
  tail call void @exit(i32 1) #11, !llfi_index !5293
  unreachable, !llfi_index !5294

.critedge3:                                       ; preds = %11, %2
  %31 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !5295
  %32 = load i8** @ProgName, align 8, !llfi_index !5296
  %33 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([39 x i8]* @.str10301, i64 0, i64 0), i8* %32, i8* %msg) #10, !llfi_index !5297
  tail call void @exit(i32 -1) #11, !llfi_index !5298
  unreachable, !llfi_index !5299

.critedge:                                        ; preds = %.lr.ph
  %34 = sub i64 %15, %9, !llfi_index !5300
  %35 = icmp ugt i64 %34, 48, !llfi_index !5301
  br i1 %35, label %36, label %52, !llfi_index !5302

; <label>:36                                      ; preds = %.critedge
  %37 = bitcast %struct.node* %curr.018 to i8*, !llfi_index !5303
  %38 = load i64* @nodesize, align 8, !llfi_index !5304
  %39 = add i64 %38, %9, !llfi_index !5305
  %40 = getelementptr inbounds i8* %37, i64 %39, !llfi_index !5306
  %41 = bitcast i8* %40 to %struct.node*, !llfi_index !5307
  %42 = sub i64 %34, %38, !llfi_index !5308
  %.sum = add i64 %39, 8, !llfi_index !5309
  %43 = getelementptr inbounds i8* %37, i64 %.sum, !llfi_index !5310
  %44 = bitcast i8* %43 to i64*, !llfi_index !5311
  store i64 %42, i64* %44, align 8, !llfi_index !5312
  %45 = getelementptr inbounds %struct.node* %curr.018, i64 0, i32 0, !llfi_index !5313
  %46 = load %struct.node** %45, align 8, !llfi_index !5314
  %47 = bitcast i8* %40 to %struct.node**, !llfi_index !5315
  store %struct.node* %46, %struct.node** %47, align 8, !llfi_index !5316
  %.sum1 = add i64 %39, 16, !llfi_index !5317
  %48 = getelementptr inbounds i8* %37, i64 %.sum1, !llfi_index !5318
  %49 = bitcast i8* %48 to i64*, !llfi_index !5319
  store i64 1, i64* %49, align 8, !llfi_index !5320
  %.sum2 = add i64 %39, 24, !llfi_index !5321
  %50 = getelementptr inbounds i8* %37, i64 %.sum2, !llfi_index !5322
  %51 = bitcast i8* %50 to i64*, !llfi_index !5323
  store i64 1437226410, i64* %51, align 8, !llfi_index !5324
  store i64 %9, i64* %14, align 8, !llfi_index !5325
  br label %55, !llfi_index !5326

; <label>:52                                      ; preds = %.critedge
  %53 = getelementptr inbounds %struct.node* %curr.018, i64 0, i32 0, !llfi_index !5327
  %54 = load %struct.node** %53, align 8, !llfi_index !5328
  br label %55, !llfi_index !5329

; <label>:55                                      ; preds = %52, %36
  %next.0 = phi %struct.node* [ %41, %36 ], [ %54, %52 ], !llfi_index !5330
  %56 = icmp eq %struct.node* %prev.017, null, !llfi_index !5331
  br i1 %56, label %57, label %60, !llfi_index !5332

; <label>:57                                      ; preds = %55
  %58 = load %struct.gmem** @gm, align 8, !llfi_index !5333
  %59 = getelementptr inbounds %struct.gmem* %58, i64 0, i32 5, !llfi_index !5334
  store %struct.node* %next.0, %struct.node** %59, align 8, !llfi_index !5335
  br label %62, !llfi_index !5336

; <label>:60                                      ; preds = %55
  %61 = getelementptr inbounds %struct.node* %prev.017, i64 0, i32 0, !llfi_index !5337
  store %struct.node* %next.0, %struct.node** %61, align 8, !llfi_index !5338
  br label %62, !llfi_index !5339

; <label>:62                                      ; preds = %60, %57
  %63 = load %struct.gmem** @gm, align 8, !llfi_index !5340
  %64 = getelementptr inbounds %struct.gmem* %63, i64 0, i32 11, !llfi_index !5341
  %65 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %64) #2, !llfi_index !5342
  %66 = getelementptr inbounds %struct.node* %curr.018, i64 0, i32 0, !llfi_index !5343
  store %struct.node* null, %struct.node** %66, align 8, !llfi_index !5344
  %67 = getelementptr inbounds %struct.node* %curr.018, i64 0, i32 2, !llfi_index !5345
  store i64 0, i64* %67, align 8, !llfi_index !5346
  %68 = bitcast %struct.node* %curr.018 to i8*, !llfi_index !5347
  %69 = load i64* @nodesize, align 8, !llfi_index !5348
  %70 = getelementptr inbounds i8* %68, i64 %69, !llfi_index !5349
  br label %71, !llfi_index !5350

; <label>:71                                      ; preds = %62, %0
  %.0 = phi i8* [ %70, %62 ], [ null, %0 ], !llfi_index !5351
  ret i8* %.0, !llfi_index !5352
}

; Function Attrs: nounwind uwtable
define i8* @GlobalCalloc(i64 %n, i64 %size) #0 {
  %1 = mul i64 %size, %n, !llfi_index !5353
  %2 = add i64 %1, 7, !llfi_index !5354
  %3 = and i64 %2, -8, !llfi_index !5355
  %4 = tail call i8* @GlobalMalloc(i64 %3, i8* getelementptr inbounds ([13 x i8]* @.str11302, i64 0, i64 0)), !llfi_index !5356
  %5 = icmp eq i64 %3, 0, !llfi_index !5357
  br i1 %5, label %7, label %._crit_edge, !llfi_index !5358

._crit_edge:                                      ; preds = %0
  %6 = shl i64 %3, 1, !llfi_index !5359
  tail call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 %6, i32 8, i1 false), !llfi_index !5360
  br label %7, !llfi_index !5361

; <label>:7                                       ; preds = %._crit_edge, %0
  ret i8* %4, !llfi_index !5362
}

; Function Attrs: nounwind uwtable
define i8* @GlobalRealloc(i8* %p, i64 %size) #0 {
  %1 = icmp eq i64 %size, 0, !llfi_index !5363
  br i1 %1, label %2, label %3, !llfi_index !5364

; <label>:2                                       ; preds = %0
  tail call void @GlobalFree(i8* %p), !llfi_index !5365
  br label %135, !llfi_index !5366

; <label>:3                                       ; preds = %0
  %4 = icmp eq i8* %p, null, !llfi_index !5367
  br i1 %4, label %5, label %7, !llfi_index !5368

; <label>:5                                       ; preds = %3
  %6 = tail call i8* @GlobalMalloc(i64 %size, i8* getelementptr inbounds ([14 x i8]* @.str12303, i64 0, i64 0)), !llfi_index !5369
  br label %135, !llfi_index !5370

; <label>:7                                       ; preds = %3
  %8 = load i64* @nodesize, align 8, !llfi_index !5371
  %.sum = sub i64 24, %8, !llfi_index !5372
  %9 = getelementptr inbounds i8* %p, i64 %.sum, !llfi_index !5373
  %10 = bitcast i8* %9 to i64*, !llfi_index !5374
  %11 = load i64* %10, align 8, !llfi_index !5375
  %12 = icmp eq i64 %11, 1437226410, !llfi_index !5376
  br i1 %12, label %16, label %13, !llfi_index !5377

; <label>:13                                      ; preds = %7
  %14 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !5378
  %15 = tail call i64 @fwrite(i8* getelementptr inbounds ([65 x i8]* @.str13304, i64 0, i64 0), i64 64, i64 1, %struct._IO_FILE* %14) #9, !llfi_index !5379
  tail call void @exit(i32 1) #11, !llfi_index !5380
  unreachable, !llfi_index !5381

; <label>:16                                      ; preds = %7
  %.sum1 = sub i64 16, %8, !llfi_index !5382
  %17 = getelementptr inbounds i8* %p, i64 %.sum1, !llfi_index !5383
  %18 = bitcast i8* %17 to i64*, !llfi_index !5384
  %19 = load i64* %18, align 8, !llfi_index !5385
  %20 = icmp eq i64 %19, 0, !llfi_index !5386
  br i1 %20, label %24, label %21, !llfi_index !5387

; <label>:21                                      ; preds = %16
  %22 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !5388
  %23 = tail call i64 @fwrite(i8* getelementptr inbounds ([58 x i8]* @.str14305, i64 0, i64 0), i64 57, i64 1, %struct._IO_FILE* %22) #9, !llfi_index !5389
  tail call void @exit(i32 1) #11, !llfi_index !5390
  unreachable, !llfi_index !5391

; <label>:24                                      ; preds = %16
  %25 = add i64 %size, 7, !llfi_index !5392
  %26 = and i64 %25, -8, !llfi_index !5393
  %.sum2 = sub i64 8, %8, !llfi_index !5394
  %27 = getelementptr inbounds i8* %p, i64 %.sum2, !llfi_index !5395
  %28 = bitcast i8* %27 to i64*, !llfi_index !5396
  %29 = load i64* %28, align 8, !llfi_index !5397
  %30 = icmp ult i64 %29, %26, !llfi_index !5398
  br i1 %30, label %47, label %31, !llfi_index !5399

; <label>:31                                      ; preds = %24
  %32 = sub i64 %29, %26, !llfi_index !5400
  %33 = icmp ult i64 %32, 48, !llfi_index !5401
  br i1 %33, label %135, label %34, !llfi_index !5402

; <label>:34                                      ; preds = %31
  store i64 %26, i64* %28, align 8, !llfi_index !5403
  %35 = getelementptr inbounds i8* %p, i64 %26, !llfi_index !5404
  %36 = load i64* @nodesize, align 8, !llfi_index !5405
  %37 = sub i64 %32, %36, !llfi_index !5406
  %.sum8 = add i64 %26, 8, !llfi_index !5407
  %38 = getelementptr inbounds i8* %p, i64 %.sum8, !llfi_index !5408
  %39 = bitcast i8* %38 to i64*, !llfi_index !5409
  store i64 %37, i64* %39, align 8, !llfi_index !5410
  %40 = bitcast i8* %35 to %struct.node**, !llfi_index !5411
  store %struct.node* null, %struct.node** %40, align 8, !llfi_index !5412
  %.sum9 = add i64 %26, 16, !llfi_index !5413
  %41 = getelementptr inbounds i8* %p, i64 %.sum9, !llfi_index !5414
  %42 = bitcast i8* %41 to i64*, !llfi_index !5415
  store i64 0, i64* %42, align 8, !llfi_index !5416
  %.sum10 = add i64 %26, 24, !llfi_index !5417
  %43 = getelementptr inbounds i8* %p, i64 %.sum10, !llfi_index !5418
  %44 = bitcast i8* %43 to i64*, !llfi_index !5419
  store i64 1437226410, i64* %44, align 8, !llfi_index !5420
  %45 = load i64* @nodesize, align 8, !llfi_index !5421
  %.sum11 = add i64 %45, %26, !llfi_index !5422
  %46 = getelementptr inbounds i8* %p, i64 %.sum11, !llfi_index !5423
  tail call void @GlobalFree(i8* %46), !llfi_index !5424
  br label %135, !llfi_index !5425

; <label>:47                                      ; preds = %24
  %48 = getelementptr inbounds i8* %p, i64 %29, !llfi_index !5426
  %49 = bitcast i8* %48 to %struct.node*, !llfi_index !5427
  %50 = add i64 %29, %8, !llfi_index !5428
  %.sum3 = add i64 %29, 8, !llfi_index !5429
  %51 = getelementptr inbounds i8* %p, i64 %.sum3, !llfi_index !5430
  %52 = bitcast i8* %51 to i64*, !llfi_index !5431
  %53 = load i64* %52, align 8, !llfi_index !5432
  %54 = add i64 %50, %53, !llfi_index !5433
  %55 = load %struct.gmem** @gm, align 8, !llfi_index !5434
  %56 = getelementptr inbounds %struct.gmem* %55, i64 0, i32 11, !llfi_index !5435
  %57 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %56) #2, !llfi_index !5436
  %58 = load %struct.node** @endmem, align 8, !llfi_index !5437
  %59 = icmp ult %struct.node* %49, %58, !llfi_index !5438
  br i1 %59, label %60, label %118, !llfi_index !5439

; <label>:60                                      ; preds = %47
  %.sum4 = add i64 %29, 16, !llfi_index !5440
  %61 = getelementptr inbounds i8* %p, i64 %.sum4, !llfi_index !5441
  %62 = bitcast i8* %61 to i64*, !llfi_index !5442
  %63 = load i64* %62, align 8, !llfi_index !5443
  %64 = icmp eq i64 %63, 0, !llfi_index !5444
  %65 = icmp ult i64 %54, %26, !llfi_index !5445
  %or.cond = or i1 %64, %65, !llfi_index !5446
  br i1 %or.cond, label %118, label %66, !llfi_index !5447

; <label>:66                                      ; preds = %60
  %67 = load %struct.gmem** @gm, align 8, !llfi_index !5448
  %68 = getelementptr inbounds %struct.gmem* %67, i64 0, i32 5, !llfi_index !5449
  br label %69, !llfi_index !5450

; <label>:69                                      ; preds = %69, %66
  %prev.0 = phi %struct.node* [ null, %66 ], [ %curr.0, %69 ], !llfi_index !5451
  %curr.0.in = phi %struct.node** [ %68, %66 ], [ %73, %69 ], !llfi_index !5452
  %curr.0 = load %struct.node** %curr.0.in, align 8, !llfi_index !5453
  %70 = icmp ne %struct.node* %curr.0, null, !llfi_index !5454
  %71 = icmp ult %struct.node* %curr.0, %49, !llfi_index !5455
  %or.cond12 = and i1 %70, %71, !llfi_index !5456
  %72 = icmp ult %struct.node* %curr.0, %58, !llfi_index !5457
  %or.cond14 = and i1 %or.cond12, %72, !llfi_index !5458
  %73 = getelementptr inbounds %struct.node* %curr.0, i64 0, i32 0, !llfi_index !5459
  br i1 %or.cond14, label %69, label %.critedge, !llfi_index !5460

.critedge:                                        ; preds = %69
  %74 = icmp eq %struct.node* %curr.0, %49, !llfi_index !5461
  br i1 %74, label %78, label %75, !llfi_index !5462

; <label>:75                                      ; preds = %.critedge
  %76 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !5463
  %77 = tail call i64 @fwrite(i8* getelementptr inbounds ([55 x i8]* @.str15306, i64 0, i64 0), i64 54, i64 1, %struct._IO_FILE* %76) #9, !llfi_index !5464
  tail call void @exit(i32 1) #11, !llfi_index !5465
  unreachable, !llfi_index !5466

; <label>:78                                      ; preds = %.critedge
  %79 = sub i64 %54, %26, !llfi_index !5467
  %80 = icmp ult i64 %79, 48, !llfi_index !5468
  br i1 %80, label %81, label %94, !llfi_index !5469

; <label>:81                                      ; preds = %78
  %82 = icmp eq %struct.node* %prev.0, null, !llfi_index !5470
  %83 = bitcast i8* %48 to %struct.node**, !llfi_index !5471
  %84 = load %struct.node** %83, align 8, !llfi_index !5472
  br i1 %82, label %85, label %88, !llfi_index !5473

; <label>:85                                      ; preds = %81
  %86 = load %struct.gmem** @gm, align 8, !llfi_index !5474
  %87 = getelementptr inbounds %struct.gmem* %86, i64 0, i32 5, !llfi_index !5475
  store %struct.node* %84, %struct.node** %87, align 8, !llfi_index !5476
  br label %90, !llfi_index !5477

; <label>:88                                      ; preds = %81
  %89 = getelementptr inbounds %struct.node* %prev.0, i64 0, i32 0, !llfi_index !5478
  store %struct.node* %84, %struct.node** %89, align 8, !llfi_index !5479
  br label %90, !llfi_index !5480

; <label>:90                                      ; preds = %88, %85
  store %struct.node* null, %struct.node** %83, align 8, !llfi_index !5481
  store i64 0, i64* %62, align 8, !llfi_index !5482
  store i64 %54, i64* %28, align 8, !llfi_index !5483
  %91 = load %struct.gmem** @gm, align 8, !llfi_index !5484
  %92 = getelementptr inbounds %struct.gmem* %91, i64 0, i32 11, !llfi_index !5485
  %93 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %92) #2, !llfi_index !5486
  br label %135, !llfi_index !5487

; <label>:94                                      ; preds = %78
  %95 = getelementptr inbounds i8* %p, i64 %26, !llfi_index !5488
  %96 = bitcast i8* %95 to %struct.node*, !llfi_index !5489
  %97 = bitcast i8* %48 to %struct.node**, !llfi_index !5490
  %98 = load %struct.node** %97, align 8, !llfi_index !5491
  %99 = bitcast i8* %95 to %struct.node**, !llfi_index !5492
  store %struct.node* %98, %struct.node** %99, align 8, !llfi_index !5493
  %100 = load i64* @nodesize, align 8, !llfi_index !5494
  %101 = sub i64 %79, %100, !llfi_index !5495
  %.sum5 = add i64 %26, 8, !llfi_index !5496
  %102 = getelementptr inbounds i8* %p, i64 %.sum5, !llfi_index !5497
  %103 = bitcast i8* %102 to i64*, !llfi_index !5498
  store i64 %101, i64* %103, align 8, !llfi_index !5499
  %.sum6 = add i64 %26, 16, !llfi_index !5500
  %104 = getelementptr inbounds i8* %p, i64 %.sum6, !llfi_index !5501
  %105 = bitcast i8* %104 to i64*, !llfi_index !5502
  store i64 1, i64* %105, align 8, !llfi_index !5503
  %.sum7 = add i64 %26, 24, !llfi_index !5504
  %106 = getelementptr inbounds i8* %p, i64 %.sum7, !llfi_index !5505
  %107 = bitcast i8* %106 to i64*, !llfi_index !5506
  store i64 1437226410, i64* %107, align 8, !llfi_index !5507
  %108 = icmp eq %struct.node* %prev.0, null, !llfi_index !5508
  br i1 %108, label %109, label %112, !llfi_index !5509

; <label>:109                                     ; preds = %94
  %110 = load %struct.gmem** @gm, align 8, !llfi_index !5510
  %111 = getelementptr inbounds %struct.gmem* %110, i64 0, i32 5, !llfi_index !5511
  store %struct.node* %96, %struct.node** %111, align 8, !llfi_index !5512
  br label %114, !llfi_index !5513

; <label>:112                                     ; preds = %94
  %113 = getelementptr inbounds %struct.node* %prev.0, i64 0, i32 0, !llfi_index !5514
  store %struct.node* %96, %struct.node** %113, align 8, !llfi_index !5515
  br label %114, !llfi_index !5516

; <label>:114                                     ; preds = %112, %109
  store %struct.node* null, %struct.node** %97, align 8, !llfi_index !5517
  store i64 0, i64* %62, align 8, !llfi_index !5518
  store i64 %26, i64* %28, align 8, !llfi_index !5519
  %115 = load %struct.gmem** @gm, align 8, !llfi_index !5520
  %116 = getelementptr inbounds %struct.gmem* %115, i64 0, i32 11, !llfi_index !5521
  %117 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %116) #2, !llfi_index !5522
  br label %135, !llfi_index !5523

; <label>:118                                     ; preds = %60, %47
  %119 = load %struct.gmem** @gm, align 8, !llfi_index !5524
  %120 = getelementptr inbounds %struct.gmem* %119, i64 0, i32 11, !llfi_index !5525
  %121 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %120) #2, !llfi_index !5526
  %122 = tail call i8* @GlobalMalloc(i64 %26, i8* getelementptr inbounds ([14 x i8]* @.str12303, i64 0, i64 0)), !llfi_index !5527
  %123 = icmp eq i8* %122, null, !llfi_index !5528
  br i1 %123, label %135, label %124, !llfi_index !5529

; <label>:124                                     ; preds = %118
  %125 = lshr i64 %29, 2, !llfi_index !5530
  %126 = icmp eq i64 %125, 0, !llfi_index !5531
  br i1 %126, label %._crit_edge, label %.lr.ph, !llfi_index !5532

.lr.ph:                                           ; preds = %124
  %127 = bitcast i8* %p to i64*, !llfi_index !5533
  %128 = bitcast i8* %122 to i64*, !llfi_index !5534
  br label %129, !llfi_index !5535

; <label>:129                                     ; preds = %129, %.lr.ph
  %oldsize.019 = phi i64 [ %125, %.lr.ph ], [ %130, %129 ], !llfi_index !5536
  %s.018 = phi i64* [ %128, %.lr.ph ], [ %133, %129 ], !llfi_index !5537
  %r.017 = phi i64* [ %127, %.lr.ph ], [ %131, %129 ], !llfi_index !5538
  %130 = add i64 %oldsize.019, -1, !llfi_index !5539
  %131 = getelementptr inbounds i64* %r.017, i64 1, !llfi_index !5540
  %132 = load i64* %r.017, align 8, !llfi_index !5541
  %133 = getelementptr inbounds i64* %s.018, i64 1, !llfi_index !5542
  store i64 %132, i64* %s.018, align 8, !llfi_index !5543
  %134 = icmp eq i64 %130, 0, !llfi_index !5544
  br i1 %134, label %._crit_edge, label %129, !llfi_index !5545

._crit_edge:                                      ; preds = %129, %124
  tail call void @GlobalFree(i8* %p), !llfi_index !5546
  br label %135, !llfi_index !5547

; <label>:135                                     ; preds = %._crit_edge, %118, %114, %90, %34, %31, %5, %2
  %.0 = phi i8* [ %p, %34 ], [ %p, %90 ], [ %p, %114 ], [ %122, %._crit_edge ], [ %6, %5 ], [ null, %2 ], [ %p, %31 ], [ null, %118 ], !llfi_index !5548
  ret i8* %.0, !llfi_index !5549
}

; Function Attrs: nounwind uwtable
define void @GlobalFree(i8* %p) #0 {
  %1 = load %struct.node** @begmem, align 8, !llfi_index !5550
  %2 = icmp eq %struct.node* %1, null, !llfi_index !5551
  br i1 %2, label %177, label %3, !llfi_index !5552

; <label>:3                                       ; preds = %0
  %4 = load i64* @nodesize, align 8, !llfi_index !5553
  %5 = sub i64 0, %4, !llfi_index !5554
  %6 = getelementptr inbounds i8* %p, i64 %5, !llfi_index !5555
  %7 = bitcast i8* %6 to %struct.node*, !llfi_index !5556
  %.sum = sub i64 24, %4, !llfi_index !5557
  %8 = getelementptr inbounds i8* %p, i64 %.sum, !llfi_index !5558
  %9 = bitcast i8* %8 to i64*, !llfi_index !5559
  %10 = load i64* %9, align 8, !llfi_index !5560
  %11 = icmp eq i64 %10, 1437226410, !llfi_index !5561
  br i1 %11, label %15, label %12, !llfi_index !5562

; <label>:12                                      ; preds = %3
  %13 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !5563
  %14 = tail call i64 @fwrite(i8* getelementptr inbounds ([59 x i8]* @.str16307, i64 0, i64 0), i64 58, i64 1, %struct._IO_FILE* %13) #9, !llfi_index !5564
  tail call void @exit(i32 1) #11, !llfi_index !5565
  unreachable, !llfi_index !5566

; <label>:15                                      ; preds = %3
  %.sum30 = sub i64 16, %4, !llfi_index !5567
  %16 = getelementptr inbounds i8* %p, i64 %.sum30, !llfi_index !5568
  %17 = bitcast i8* %16 to i64*, !llfi_index !5569
  %18 = load i64* %17, align 8, !llfi_index !5570
  %19 = icmp eq i64 %18, 0, !llfi_index !5571
  br i1 %19, label %23, label %20, !llfi_index !5572

; <label>:20                                      ; preds = %15
  %21 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !5573
  %22 = tail call i64 @fwrite(i8* getelementptr inbounds ([49 x i8]* @.str17308, i64 0, i64 0), i64 48, i64 1, %struct._IO_FILE* %21) #9, !llfi_index !5574
  tail call void @exit(i32 1) #11, !llfi_index !5575
  unreachable, !llfi_index !5576

; <label>:23                                      ; preds = %15
  %24 = load %struct.gmem** @gm, align 8, !llfi_index !5577
  %25 = getelementptr inbounds %struct.gmem* %24, i64 0, i32 11, !llfi_index !5578
  %26 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %25) #2, !llfi_index !5579
  %27 = load %struct.gmem** @gm, align 8, !llfi_index !5580
  %28 = getelementptr inbounds %struct.gmem* %27, i64 0, i32 5, !llfi_index !5581
  %29 = load %struct.node** %28, align 8, !llfi_index !5582
  %30 = icmp eq %struct.node* %29, null, !llfi_index !5583
  br i1 %30, label %65, label %.preheader, !llfi_index !5584

.preheader:                                       ; preds = %23
  %31 = icmp ult %struct.node* %29, %7, !llfi_index !5585
  %32 = load %struct.node** @endmem, align 8, !llfi_index !5586
  %33 = icmp ult %struct.node* %29, %32, !llfi_index !5587
  %or.cond3856 = and i1 %31, %33, !llfi_index !5588
  br i1 %or.cond3856, label %.lr.ph59, label %.critedge33, !llfi_index !5589

.lr.ph59:                                         ; preds = %.preheader
  %34 = load i64* @nodesize, align 8, !llfi_index !5590
  br label %35, !llfi_index !5591

; <label>:35                                      ; preds = %42, %.lr.ph59
  %curr.058 = phi %struct.node* [ %29, %.lr.ph59 ], [ %51, %42 ], !llfi_index !5592
  %prev.057 = phi %struct.node* [ null, %.lr.ph59 ], [ %prev.0.curr.0, %42 ], !llfi_index !5593
  %36 = getelementptr inbounds %struct.node* %curr.058, i64 0, i32 3, !llfi_index !5594
  %37 = load i64* %36, align 8, !llfi_index !5595
  %38 = icmp eq i64 %37, 1437226410, !llfi_index !5596
  br i1 %38, label %42, label %39, !llfi_index !5597

; <label>:39                                      ; preds = %35
  %40 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !5598
  %41 = tail call i64 @fwrite(i8* getelementptr inbounds ([48 x i8]* @.str18309, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %40) #9, !llfi_index !5599
  tail call void @exit(i32 1) #11, !llfi_index !5600
  unreachable, !llfi_index !5601

; <label>:42                                      ; preds = %35
  %43 = getelementptr inbounds %struct.node* %curr.058, i64 0, i32 2, !llfi_index !5602
  %44 = load i64* %43, align 8, !llfi_index !5603
  %45 = icmp eq i64 %44, 0, !llfi_index !5604
  %prev.0.curr.0 = select i1 %45, %struct.node* %prev.057, %struct.node* %curr.058, !llfi_index !5605
  %46 = bitcast %struct.node* %curr.058 to i8*, !llfi_index !5606
  %47 = getelementptr inbounds %struct.node* %curr.058, i64 0, i32 1, !llfi_index !5607
  %48 = load i64* %47, align 8, !llfi_index !5608
  %49 = add i64 %48, %34, !llfi_index !5609
  %50 = getelementptr inbounds i8* %46, i64 %49, !llfi_index !5610
  %51 = bitcast i8* %50 to %struct.node*, !llfi_index !5611
  %52 = icmp ult i8* %50, %6, !llfi_index !5612
  %53 = icmp ult %struct.node* %51, %32, !llfi_index !5613
  %or.cond38 = and i1 %52, %53, !llfi_index !5614
  br i1 %or.cond38, label %35, label %..critedge33_crit_edge, !llfi_index !5615

..critedge33_crit_edge:                           ; preds = %42
  %54 = zext i1 %45 to i64, !llfi_index !5616
  %. = xor i64 %54, 1, !llfi_index !5617
  br i1 %53, label %65, label %55, !llfi_index !5618

.critedge33:                                      ; preds = %.preheader
  br i1 %33, label %65, label %55, !llfi_index !5619

; <label>:55                                      ; preds = %.critedge33, %..critedge33_crit_edge
  %curr.0.lcssa70 = phi %struct.node* [ %51, %..critedge33_crit_edge ], [ %29, %.critedge33 ], !llfi_index !5620
  %56 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !5621
  %57 = load %struct.gmem** @gm, align 8, !llfi_index !5622
  %58 = getelementptr inbounds %struct.gmem* %57, i64 0, i32 5, !llfi_index !5623
  %59 = load %struct.node** %58, align 8, !llfi_index !5624
  %60 = getelementptr inbounds %struct.node* %curr.0.lcssa70, i64 0, i32 1, !llfi_index !5625
  %61 = load i64* %60, align 8, !llfi_index !5626
  %62 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([60 x i8]* @.str19310, i64 0, i64 0), %struct.node* %59, %struct.node* %curr.0.lcssa70, i64 %61, i8* %6, %struct.node* %32) #2, !llfi_index !5627
  %63 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !5628
  %64 = tail call i64 @fwrite(i8* getelementptr inbounds ([63 x i8]* @.str20311, i64 0, i64 0), i64 62, i64 1, %struct._IO_FILE* %63) #9, !llfi_index !5629
  tail call void @exit(i32 1) #11, !llfi_index !5630
  unreachable, !llfi_index !5631

; <label>:65                                      ; preds = %.critedge33, %..critedge33_crit_edge, %23
  %pcom.2 = phi i64 [ 0, %.critedge33 ], [ 0, %23 ], [ %., %..critedge33_crit_edge ], !llfi_index !5632
  %prev.2 = phi %struct.node* [ null, %.critedge33 ], [ null, %23 ], [ %prev.0.curr.0, %..critedge33_crit_edge ], !llfi_index !5633
  %.sum31 = sub i64 8, %4, !llfi_index !5634
  %66 = getelementptr inbounds i8* %p, i64 %.sum31, !llfi_index !5635
  %67 = bitcast i8* %66 to i64*, !llfi_index !5636
  %68 = load i64* %67, align 8, !llfi_index !5637
  %69 = load i64* @nodesize, align 8, !llfi_index !5638
  %70 = sub i64 %68, %4, !llfi_index !5639
  %.sum32 = add i64 %70, %69, !llfi_index !5640
  %71 = getelementptr inbounds i8* %p, i64 %.sum32, !llfi_index !5641
  %curr.142 = bitcast i8* %71 to %struct.node*, !llfi_index !5642
  %72 = load %struct.node** @endmem, align 8, !llfi_index !5643
  %73 = icmp ult %struct.node* %curr.142, %72, !llfi_index !5644
  br i1 %73, label %.lr.ph, label %.critedge, !llfi_index !5645

.lr.ph:                                           ; preds = %81, %65
  %curr.146 = phi %struct.node* [ %curr.1, %81 ], [ %curr.142, %65 ], !llfi_index !5646
  %next.045 = phi %struct.node* [ %next.0.curr.1, %81 ], [ null, %65 ], !llfi_index !5647
  %curr.1.in44 = phi i8* [ %90, %81 ], [ %71, %65 ], !llfi_index !5648
  %ncom.043 = phi i64 [ %.ncom.0, %81 ], [ 1, %65 ], !llfi_index !5649
  %74 = getelementptr inbounds i8* %curr.1.in44, i64 24, !llfi_index !5650
  %75 = bitcast i8* %74 to i64*, !llfi_index !5651
  %76 = load i64* %75, align 8, !llfi_index !5652
  %77 = icmp eq i64 %76, 1437226410, !llfi_index !5653
  br i1 %77, label %81, label %78, !llfi_index !5654

; <label>:78                                      ; preds = %.lr.ph
  %79 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !5655
  %80 = tail call i64 @fwrite(i8* getelementptr inbounds ([44 x i8]* @.str21312, i64 0, i64 0), i64 43, i64 1, %struct._IO_FILE* %79) #9, !llfi_index !5656
  tail call void @exit(i32 1) #11, !llfi_index !5657
  unreachable, !llfi_index !5658

; <label>:81                                      ; preds = %.lr.ph
  %82 = getelementptr inbounds i8* %curr.1.in44, i64 16, !llfi_index !5659
  %83 = bitcast i8* %82 to i64*, !llfi_index !5660
  %84 = load i64* %83, align 8, !llfi_index !5661
  %85 = icmp eq i64 %84, 0, !llfi_index !5662
  %.ncom.0 = select i1 %85, i64 0, i64 %ncom.043, !llfi_index !5663
  %next.0.curr.1 = select i1 %85, %struct.node* %next.045, %struct.node* %curr.146, !llfi_index !5664
  %86 = getelementptr inbounds i8* %curr.1.in44, i64 8, !llfi_index !5665
  %87 = bitcast i8* %86 to i64*, !llfi_index !5666
  %88 = load i64* %87, align 8, !llfi_index !5667
  %89 = add i64 %88, %69, !llfi_index !5668
  %90 = getelementptr inbounds i8* %curr.1.in44, i64 %89, !llfi_index !5669
  %curr.1 = bitcast i8* %90 to %struct.node*, !llfi_index !5670
  %91 = icmp ne %struct.node* %next.0.curr.1, null, !llfi_index !5671
  %.not34 = xor i1 %91, true, !llfi_index !5672
  %92 = icmp ult %struct.node* %curr.1, %72, !llfi_index !5673
  %or.cond36 = and i1 %92, %.not34, !llfi_index !5674
  br i1 %or.cond36, label %.lr.ph, label %.critedge, !llfi_index !5675

.critedge:                                        ; preds = %81, %65
  %.lcssa = phi i1 [ false, %65 ], [ %91, %81 ], !llfi_index !5676
  %next.0.lcssa = phi %struct.node* [ null, %65 ], [ %next.0.curr.1, %81 ], !llfi_index !5677
  %ncom.0.lcssa = phi i64 [ 1, %65 ], [ %.ncom.0, %81 ], !llfi_index !5678
  %ncom.0. = select i1 %.lcssa, i64 %ncom.0.lcssa, i64 0, !llfi_index !5679
  store i64 1, i64* %17, align 8, !llfi_index !5680
  %93 = icmp eq %struct.node* %next.0.lcssa, null, !llfi_index !5681
  %94 = icmp ne i64 %ncom.0., 0, !llfi_index !5682
  %or.cond = or i1 %93, %94, !llfi_index !5683
  %or.cond.not = xor i1 %or.cond, true, !llfi_index !5684
  %95 = icmp ne i64 %pcom.2, 0, !llfi_index !5685
  %or.cond3 = and i1 %95, %or.cond.not, !llfi_index !5686
  br i1 %or.cond3, label %96, label %104, !llfi_index !5687

; <label>:96                                      ; preds = %.critedge
  %97 = getelementptr inbounds %struct.node* %prev.2, i64 0, i32 0, !llfi_index !5688
  store %struct.node* %next.0.lcssa, %struct.node** %97, align 8, !llfi_index !5689
  %98 = load i64* %67, align 8, !llfi_index !5690
  %99 = load i64* @nodesize, align 8, !llfi_index !5691
  %100 = add i64 %99, %98, !llfi_index !5692
  %101 = getelementptr inbounds %struct.node* %prev.2, i64 0, i32 1, !llfi_index !5693
  %102 = load i64* %101, align 8, !llfi_index !5694
  %103 = add i64 %100, %102, !llfi_index !5695
  store i64 %103, i64* %101, align 8, !llfi_index !5696
  br label %173, !llfi_index !5697

; <label>:104                                     ; preds = %.critedge
  %105 = icmp ne %struct.node* %prev.2, null, !llfi_index !5698
  %.not = xor i1 %105, true, !llfi_index !5699
  %or.cond7.not = or i1 %or.cond, %.not, !llfi_index !5700
  %or.cond9 = or i1 %or.cond7.not, %95, !llfi_index !5701
  br i1 %or.cond9, label %109, label %106, !llfi_index !5702

; <label>:106                                     ; preds = %104
  %107 = getelementptr inbounds %struct.node* %prev.2, i64 0, i32 0, !llfi_index !5703
  store %struct.node* %7, %struct.node** %107, align 8, !llfi_index !5704
  %108 = bitcast i8* %6 to %struct.node**, !llfi_index !5705
  store %struct.node* %next.0.lcssa, %struct.node** %108, align 8, !llfi_index !5706
  br label %173, !llfi_index !5707

; <label>:109                                     ; preds = %104
  %or.cond13 = or i1 %or.cond, %105, !llfi_index !5708
  br i1 %or.cond13, label %114, label %110, !llfi_index !5709

; <label>:110                                     ; preds = %109
  %111 = load %struct.gmem** @gm, align 8, !llfi_index !5710
  %112 = getelementptr inbounds %struct.gmem* %111, i64 0, i32 5, !llfi_index !5711
  store %struct.node* %7, %struct.node** %112, align 8, !llfi_index !5712
  %113 = bitcast i8* %6 to %struct.node**, !llfi_index !5713
  store %struct.node* %next.0.lcssa, %struct.node** %113, align 8, !llfi_index !5714
  br label %173, !llfi_index !5715

; <label>:114                                     ; preds = %109
  %or.cond15 = and i1 %94, %95, !llfi_index !5716
  br i1 %or.cond15, label %115, label %129, !llfi_index !5717

; <label>:115                                     ; preds = %114
  %116 = getelementptr inbounds %struct.node* %next.0.lcssa, i64 0, i32 0, !llfi_index !5718
  %117 = load %struct.node** %116, align 8, !llfi_index !5719
  %118 = getelementptr inbounds %struct.node* %prev.2, i64 0, i32 0, !llfi_index !5720
  store %struct.node* %117, %struct.node** %118, align 8, !llfi_index !5721
  %119 = load i64* %67, align 8, !llfi_index !5722
  %120 = getelementptr inbounds %struct.node* %next.0.lcssa, i64 0, i32 1, !llfi_index !5723
  %121 = load i64* %120, align 8, !llfi_index !5724
  %122 = add i64 %121, %119, !llfi_index !5725
  %123 = load i64* @nodesize, align 8, !llfi_index !5726
  %124 = shl i64 %123, 1, !llfi_index !5727
  %125 = add i64 %122, %124, !llfi_index !5728
  %126 = getelementptr inbounds %struct.node* %prev.2, i64 0, i32 1, !llfi_index !5729
  %127 = load i64* %126, align 8, !llfi_index !5730
  %128 = add i64 %125, %127, !llfi_index !5731
  store i64 %128, i64* %126, align 8, !llfi_index !5732
  br label %173, !llfi_index !5733

; <label>:129                                     ; preds = %114
  %or.cond17 = and i1 %94, %105, !llfi_index !5734
  %or.cond17.not = xor i1 %or.cond17, true, !llfi_index !5735
  %or.cond19 = or i1 %95, %or.cond17.not, !llfi_index !5736
  br i1 %or.cond19, label %141, label %130, !llfi_index !5737

; <label>:130                                     ; preds = %129
  %131 = getelementptr inbounds %struct.node* %prev.2, i64 0, i32 0, !llfi_index !5738
  store %struct.node* %7, %struct.node** %131, align 8, !llfi_index !5739
  %132 = getelementptr inbounds %struct.node* %next.0.lcssa, i64 0, i32 0, !llfi_index !5740
  %133 = load %struct.node** %132, align 8, !llfi_index !5741
  %134 = bitcast i8* %6 to %struct.node**, !llfi_index !5742
  store %struct.node* %133, %struct.node** %134, align 8, !llfi_index !5743
  %135 = getelementptr inbounds %struct.node* %next.0.lcssa, i64 0, i32 1, !llfi_index !5744
  %136 = load i64* %135, align 8, !llfi_index !5745
  %137 = load i64* @nodesize, align 8, !llfi_index !5746
  %138 = add i64 %137, %136, !llfi_index !5747
  %139 = load i64* %67, align 8, !llfi_index !5748
  %140 = add i64 %138, %139, !llfi_index !5749
  store i64 %140, i64* %67, align 8, !llfi_index !5750
  br label %173, !llfi_index !5751

; <label>:141                                     ; preds = %129
  %142 = icmp eq i64 %ncom.0., 0, !llfi_index !5752
  %or.cond21 = or i1 %142, %105, !llfi_index !5753
  br i1 %or.cond21, label %155, label %143, !llfi_index !5754

; <label>:143                                     ; preds = %141
  %144 = load %struct.gmem** @gm, align 8, !llfi_index !5755
  %145 = getelementptr inbounds %struct.gmem* %144, i64 0, i32 5, !llfi_index !5756
  store %struct.node* %7, %struct.node** %145, align 8, !llfi_index !5757
  %146 = getelementptr inbounds %struct.node* %next.0.lcssa, i64 0, i32 0, !llfi_index !5758
  %147 = load %struct.node** %146, align 8, !llfi_index !5759
  %148 = bitcast i8* %6 to %struct.node**, !llfi_index !5760
  store %struct.node* %147, %struct.node** %148, align 8, !llfi_index !5761
  %149 = getelementptr inbounds %struct.node* %next.0.lcssa, i64 0, i32 1, !llfi_index !5762
  %150 = load i64* %149, align 8, !llfi_index !5763
  %151 = load i64* @nodesize, align 8, !llfi_index !5764
  %152 = add i64 %151, %150, !llfi_index !5765
  %153 = load i64* %67, align 8, !llfi_index !5766
  %154 = add i64 %152, %153, !llfi_index !5767
  store i64 %154, i64* %67, align 8, !llfi_index !5768
  br label %173, !llfi_index !5769

; <label>:155                                     ; preds = %141
  %or.cond23 = and i1 %93, %95, !llfi_index !5770
  br i1 %or.cond23, label %156, label %164, !llfi_index !5771

; <label>:156                                     ; preds = %155
  %157 = getelementptr inbounds %struct.node* %prev.2, i64 0, i32 0, !llfi_index !5772
  store %struct.node* null, %struct.node** %157, align 8, !llfi_index !5773
  %158 = load i64* %67, align 8, !llfi_index !5774
  %159 = load i64* @nodesize, align 8, !llfi_index !5775
  %160 = add i64 %159, %158, !llfi_index !5776
  %161 = getelementptr inbounds %struct.node* %prev.2, i64 0, i32 1, !llfi_index !5777
  %162 = load i64* %161, align 8, !llfi_index !5778
  %163 = add i64 %160, %162, !llfi_index !5779
  store i64 %163, i64* %161, align 8, !llfi_index !5780
  br label %173, !llfi_index !5781

; <label>:164                                     ; preds = %155
  %or.cond25 = and i1 %93, %105, !llfi_index !5782
  %or.cond25.not = xor i1 %or.cond25, true, !llfi_index !5783
  %or.cond27 = or i1 %95, %or.cond25.not, !llfi_index !5784
  br i1 %or.cond27, label %168, label %165, !llfi_index !5785

; <label>:165                                     ; preds = %164
  %166 = getelementptr inbounds %struct.node* %prev.2, i64 0, i32 0, !llfi_index !5786
  store %struct.node* %7, %struct.node** %166, align 8, !llfi_index !5787
  %167 = bitcast i8* %6 to %struct.node**, !llfi_index !5788
  store %struct.node* null, %struct.node** %167, align 8, !llfi_index !5789
  br label %173, !llfi_index !5790

; <label>:168                                     ; preds = %164
  %or.cond29 = or i1 %.lcssa, %105, !llfi_index !5791
  br i1 %or.cond29, label %173, label %169, !llfi_index !5792

; <label>:169                                     ; preds = %168
  %170 = load %struct.gmem** @gm, align 8, !llfi_index !5793
  %171 = getelementptr inbounds %struct.gmem* %170, i64 0, i32 5, !llfi_index !5794
  store %struct.node* %7, %struct.node** %171, align 8, !llfi_index !5795
  %172 = bitcast i8* %6 to %struct.node**, !llfi_index !5796
  store %struct.node* null, %struct.node** %172, align 8, !llfi_index !5797
  br label %173, !llfi_index !5798

; <label>:173                                     ; preds = %169, %168, %165, %156, %143, %130, %115, %110, %106, %96
  %174 = load %struct.gmem** @gm, align 8, !llfi_index !5799
  %175 = getelementptr inbounds %struct.gmem* %174, i64 0, i32 11, !llfi_index !5800
  %176 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %175) #2, !llfi_index !5801
  br label %177, !llfi_index !5802

; <label>:177                                     ; preds = %173, %0
  ret void, !llfi_index !5803
}

; Function Attrs: nounwind uwtable
define i64 @GlobalMemAvl() #0 {
  %1 = load %struct.gmem** @gm, align 8, !llfi_index !5804
  %2 = getelementptr inbounds %struct.gmem* %1, i64 0, i32 11, !llfi_index !5805
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #2, !llfi_index !5806
  %4 = load %struct.gmem** @gm, align 8, !llfi_index !5807
  %5 = getelementptr inbounds %struct.gmem* %4, i64 0, i32 5, !llfi_index !5808
  %curr.01 = load %struct.node** %5, align 8, !llfi_index !5809
  %6 = icmp eq %struct.node* %curr.01, null, !llfi_index !5810
  br i1 %6, label %12, label %.lr.ph, !llfi_index !5811

.lr.ph:                                           ; preds = %.lr.ph, %0
  %curr.03 = phi %struct.node* [ %curr.0, %.lr.ph ], [ %curr.01, %0 ], !llfi_index !5812
  %total.02 = phi i64 [ %9, %.lr.ph ], [ 0, %0 ], !llfi_index !5813
  %7 = getelementptr inbounds %struct.node* %curr.03, i64 0, i32 1, !llfi_index !5814
  %8 = load i64* %7, align 8, !llfi_index !5815
  %9 = add i64 %8, %total.02, !llfi_index !5816
  %10 = getelementptr inbounds %struct.node* %curr.03, i64 0, i32 0, !llfi_index !5817
  %curr.0 = load %struct.node** %10, align 8, !llfi_index !5818
  %11 = icmp eq %struct.node* %curr.0, null, !llfi_index !5819
  br i1 %11, label %._crit_edge, label %.lr.ph, !llfi_index !5820

._crit_edge:                                      ; preds = %.lr.ph
  %phitmp = and i64 %9, 4294967288, !llfi_index !5821
  br label %12, !llfi_index !5822

; <label>:12                                      ; preds = %._crit_edge, %0
  %total.0.lcssa = phi i64 [ %phitmp, %._crit_edge ], [ 0, %0 ], !llfi_index !5823
  %13 = load %struct.gmem** @gm, align 8, !llfi_index !5824
  %14 = getelementptr inbounds %struct.gmem* %13, i64 0, i32 11, !llfi_index !5825
  %15 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %14) #2, !llfi_index !5826
  ret i64 %total.0.lcssa, !llfi_index !5827
}

; Function Attrs: nounwind uwtable
define i64 @GlobalMemMax() #0 {
  %1 = load %struct.gmem** @gm, align 8, !llfi_index !5828
  %2 = getelementptr inbounds %struct.gmem* %1, i64 0, i32 11, !llfi_index !5829
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #2, !llfi_index !5830
  %4 = load %struct.gmem** @gm, align 8, !llfi_index !5831
  %5 = getelementptr inbounds %struct.gmem* %4, i64 0, i32 5, !llfi_index !5832
  %curr.01 = load %struct.node** %5, align 8, !llfi_index !5833
  %6 = icmp eq %struct.node* %curr.01, null, !llfi_index !5834
  br i1 %6, label %12, label %.lr.ph, !llfi_index !5835

.lr.ph:                                           ; preds = %.lr.ph, %0
  %curr.03 = phi %struct.node* [ %curr.0, %.lr.ph ], [ %curr.01, %0 ], !llfi_index !5836
  %max.02 = phi i64 [ %.max.0, %.lr.ph ], [ 0, %0 ], !llfi_index !5837
  %7 = getelementptr inbounds %struct.node* %curr.03, i64 0, i32 1, !llfi_index !5838
  %8 = load i64* %7, align 8, !llfi_index !5839
  %9 = icmp ugt i64 %8, %max.02, !llfi_index !5840
  %.max.0 = select i1 %9, i64 %8, i64 %max.02, !llfi_index !5841
  %10 = getelementptr inbounds %struct.node* %curr.03, i64 0, i32 0, !llfi_index !5842
  %curr.0 = load %struct.node** %10, align 8, !llfi_index !5843
  %11 = icmp eq %struct.node* %curr.0, null, !llfi_index !5844
  br i1 %11, label %._crit_edge, label %.lr.ph, !llfi_index !5845

._crit_edge:                                      ; preds = %.lr.ph
  %phitmp = and i64 %.max.0, 4294967288, !llfi_index !5846
  br label %12, !llfi_index !5847

; <label>:12                                      ; preds = %._crit_edge, %0
  %max.0.lcssa = phi i64 [ %phitmp, %._crit_edge ], [ 0, %0 ], !llfi_index !5848
  %13 = load %struct.gmem** @gm, align 8, !llfi_index !5849
  %14 = getelementptr inbounds %struct.gmem* %13, i64 0, i32 11, !llfi_index !5850
  %15 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %14) #2, !llfi_index !5851
  ret i64 %max.0.lcssa, !llfi_index !5852
}

; Function Attrs: nounwind uwtable
define i8* @ObjectMalloc(i64 %ObjectType, i64 %count) #0 {
  switch i64 %ObjectType, label %65 [
    i64 0, label %1
    i64 1, label %11
    i64 2, label %21
    i64 3, label %33
    i64 6, label %45
    i64 7, label %55
  ], !llfi_index !5853

; <label>:1                                       ; preds = %0
  %2 = mul i64 %count, 144, !llfi_index !5854
  %3 = tail call i8* @GlobalMalloc(i64 %2, i8* getelementptr inbounds ([5 x i8]* @.str22313, i64 0, i64 0)), !llfi_index !5855
  %4 = load i64* @mem_grid, align 8, !llfi_index !5856
  %5 = add nsw i64 %4, %2, !llfi_index !5857
  store i64 %5, i64* @mem_grid, align 8, !llfi_index !5858
  %6 = load i64* @maxmem_grid, align 8, !llfi_index !5859
  %7 = sub nsw i64 %5, %6, !llfi_index !5860
  %8 = sitofp i64 %7 to double, !llfi_index !5861
  %9 = fcmp ogt double %8, 0.000000e+00, !llfi_index !5862
  %10 = select i1 %9, i64 %5, i64 %6, !llfi_index !5863
  store i64 %10, i64* @maxmem_grid, align 8, !llfi_index !5864
  br label %67, !llfi_index !5865

; <label>:11                                      ; preds = %0
  %12 = mul i64 %count, 40, !llfi_index !5866
  %13 = tail call i8* @GlobalMalloc(i64 %12, i8* getelementptr inbounds ([6 x i8]* @.str23314, i64 0, i64 0)), !llfi_index !5867
  %14 = load i64* @mem_voxel, align 8, !llfi_index !5868
  %15 = add nsw i64 %14, %12, !llfi_index !5869
  store i64 %15, i64* @mem_voxel, align 8, !llfi_index !5870
  %16 = load i64* @maxmem_voxel, align 8, !llfi_index !5871
  %17 = sub nsw i64 %15, %16, !llfi_index !5872
  %18 = sitofp i64 %17 to double, !llfi_index !5873
  %19 = fcmp ogt double %18, 0.000000e+00, !llfi_index !5874
  %20 = select i1 %19, i64 %15, i64 %16, !llfi_index !5875
  store i64 %20, i64* @maxmem_voxel, align 8, !llfi_index !5876
  br label %67, !llfi_index !5877

; <label>:21                                      ; preds = %0
  %22 = shl i64 %count, 3, !llfi_index !5878
  %23 = tail call i8* @GlobalMalloc(i64 %22, i8* getelementptr inbounds ([10 x i8]* @.str24315, i64 0, i64 0)), !llfi_index !5879
  %24 = icmp sgt i64 %count, 0, !llfi_index !5880
  br i1 %24, label %._crit_edge, label %25, !llfi_index !5881

._crit_edge:                                      ; preds = %21
  tail call void @llvm.memset.p0i8.i64(i8* %23, i8 0, i64 %22, i32 8, i1 false), !llfi_index !5882
  br label %25, !llfi_index !5883

; <label>:25                                      ; preds = %._crit_edge, %21
  %26 = load i64* @mem_hashtable, align 8, !llfi_index !5884
  %27 = add nsw i64 %26, %22, !llfi_index !5885
  store i64 %27, i64* @mem_hashtable, align 8, !llfi_index !5886
  %28 = load i64* @maxmem_hashtable, align 8, !llfi_index !5887
  %29 = sub nsw i64 %27, %28, !llfi_index !5888
  %30 = sitofp i64 %29 to double, !llfi_index !5889
  %31 = fcmp ogt double %30, 0.000000e+00, !llfi_index !5890
  %32 = select i1 %31, i64 %27, i64 %28, !llfi_index !5891
  store i64 %32, i64* @maxmem_hashtable, align 8, !llfi_index !5892
  br label %67, !llfi_index !5893

; <label>:33                                      ; preds = %0
  %34 = lshr i64 %count, 6, !llfi_index !5894
  %35 = shl nuw nsw i64 %34, 3, !llfi_index !5895
  %36 = add i64 %35, 8, !llfi_index !5896
  %37 = tail call i8* @GlobalMalloc(i64 %36, i8* getelementptr inbounds ([11 x i8]* @.str25316, i64 0, i64 0)), !llfi_index !5897
  tail call void @llvm.memset.p0i8.i64(i8* %37, i8 -1, i64 %36, i32 8, i1 false), !llfi_index !5898
  %38 = load i64* @mem_emptycells, align 8, !llfi_index !5899
  %39 = add nsw i64 %38, %36, !llfi_index !5900
  store i64 %39, i64* @mem_emptycells, align 8, !llfi_index !5901
  %40 = load i64* @maxmem_emptycells, align 8, !llfi_index !5902
  %41 = sub nsw i64 %39, %40, !llfi_index !5903
  %42 = sitofp i64 %41 to double, !llfi_index !5904
  %43 = fcmp ogt double %42, 0.000000e+00, !llfi_index !5905
  %44 = select i1 %43, i64 %39, i64 %40, !llfi_index !5906
  store i64 %44, i64* @maxmem_emptycells, align 8, !llfi_index !5907
  br label %67, !llfi_index !5908

; <label>:45                                      ; preds = %0
  %46 = mul i64 %count, 120, !llfi_index !5909
  %47 = tail call i8* @GlobalMalloc(i64 %46, i8* getelementptr inbounds ([8 x i8]* @.str26317, i64 0, i64 0)), !llfi_index !5910
  %48 = load i64* @mem_bintree, align 8, !llfi_index !5911
  %49 = add nsw i64 %48, %46, !llfi_index !5912
  store i64 %49, i64* @mem_bintree, align 8, !llfi_index !5913
  %50 = load i64* @maxmem_bintree, align 8, !llfi_index !5914
  %51 = sub nsw i64 %49, %50, !llfi_index !5915
  %52 = sitofp i64 %51 to double, !llfi_index !5916
  %53 = fcmp ogt double %52, 0.000000e+00, !llfi_index !5917
  %54 = select i1 %53, i64 %49, i64 %50, !llfi_index !5918
  store i64 %54, i64* @maxmem_bintree, align 8, !llfi_index !5919
  br label %67, !llfi_index !5920

; <label>:55                                      ; preds = %0
  %56 = shl i64 %count, 3, !llfi_index !5921
  %57 = tail call i8* @GlobalMalloc(i64 %56, i8* getelementptr inbounds ([9 x i8]* @.str27318, i64 0, i64 0)), !llfi_index !5922
  %58 = load i64* @mem_pepArray, align 8, !llfi_index !5923
  %59 = add nsw i64 %58, %56, !llfi_index !5924
  store i64 %59, i64* @mem_pepArray, align 8, !llfi_index !5925
  %60 = load i64* @maxmem_pepArray, align 8, !llfi_index !5926
  %61 = sub nsw i64 %59, %60, !llfi_index !5927
  %62 = sitofp i64 %61 to double, !llfi_index !5928
  %63 = fcmp ogt double %62, 0.000000e+00, !llfi_index !5929
  %64 = select i1 %63, i64 %59, i64 %60, !llfi_index !5930
  store i64 %64, i64* @maxmem_pepArray, align 8, !llfi_index !5931
  br label %67, !llfi_index !5932

; <label>:65                                      ; preds = %0
  %66 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([40 x i8]* @.str28319, i64 0, i64 0), i64 %ObjectType) #2, !llfi_index !5933
  tail call void @exit(i32 -1) #11, !llfi_index !5934
  unreachable, !llfi_index !5935

; <label>:67                                      ; preds = %55, %45, %33, %25, %11, %1
  %p.0 = phi i8* [ %57, %55 ], [ %47, %45 ], [ %37, %33 ], [ %23, %25 ], [ %13, %11 ], [ %3, %1 ], !llfi_index !5936
  ret i8* %p.0, !llfi_index !5937
}

; Function Attrs: nounwind uwtable
define void @ObjectFree(i64 %ObjectType, i64 %count, i8* %p) #0 {
  tail call void @GlobalFree(i8* %p), !llfi_index !5938
  switch i64 %ObjectType, label %26 [
    i64 0, label %1
    i64 1, label %5
    i64 2, label %9
    i64 3, label %13
    i64 6, label %18
    i64 7, label %22
  ], !llfi_index !5939

; <label>:1                                       ; preds = %0
  %2 = load i64* @mem_grid, align 8, !llfi_index !5940
  %3 = mul i64 %count, -144, !llfi_index !5941
  %4 = add i64 %2, %3, !llfi_index !5942
  store i64 %4, i64* @mem_grid, align 8, !llfi_index !5943
  br label %28, !llfi_index !5944

; <label>:5                                       ; preds = %0
  %6 = load i64* @mem_voxel, align 8, !llfi_index !5945
  %7 = mul i64 %count, -40, !llfi_index !5946
  %8 = add i64 %6, %7, !llfi_index !5947
  store i64 %8, i64* @mem_voxel, align 8, !llfi_index !5948
  br label %28, !llfi_index !5949

; <label>:9                                       ; preds = %0
  %10 = shl i64 %count, 3, !llfi_index !5950
  %11 = load i64* @mem_hashtable, align 8, !llfi_index !5951
  %12 = sub nsw i64 %11, %10, !llfi_index !5952
  store i64 %12, i64* @mem_hashtable, align 8, !llfi_index !5953
  br label %28, !llfi_index !5954

; <label>:13                                      ; preds = %0
  %14 = lshr i64 %count, 6, !llfi_index !5955
  %15 = shl nuw nsw i64 %14, 3, !llfi_index !5956
  %16 = load i64* @mem_emptycells, align 8, !llfi_index !5957
  %.neg1 = sub i64 -8, %15, !llfi_index !5958
  %17 = add i64 %.neg1, %16, !llfi_index !5959
  store i64 %17, i64* @mem_emptycells, align 8, !llfi_index !5960
  br label %28, !llfi_index !5961

; <label>:18                                      ; preds = %0
  %19 = load i64* @mem_bintree, align 8, !llfi_index !5962
  %20 = mul i64 %count, -120, !llfi_index !5963
  %21 = add i64 %19, %20, !llfi_index !5964
  store i64 %21, i64* @mem_bintree, align 8, !llfi_index !5965
  br label %28, !llfi_index !5966

; <label>:22                                      ; preds = %0
  %23 = shl i64 %count, 3, !llfi_index !5967
  %24 = load i64* @mem_pepArray, align 8, !llfi_index !5968
  %25 = sub nsw i64 %24, %23, !llfi_index !5969
  store i64 %25, i64* @mem_pepArray, align 8, !llfi_index !5970
  br label %28, !llfi_index !5971

; <label>:26                                      ; preds = %0
  %27 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str29320, i64 0, i64 0), i64 %ObjectType) #2, !llfi_index !5972
  tail call void @exit(i32 -1) #11, !llfi_index !5973
  unreachable, !llfi_index !5974

; <label>:28                                      ; preds = %22, %18, %13, %9, %5, %1
  ret void, !llfi_index !5975
}

; Function Attrs: nounwind uwtable
define %struct.rayinfo* @ma_rayinfo(%struct.ray* %r) #0 {
  %1 = getelementptr inbounds %struct.ray* %r, i64 0, i32 7, !llfi_index !5976
  %2 = load i64* %1, align 8, !llfi_index !5977
  %3 = icmp sgt i64 %2, 4, !llfi_index !5978
  br i1 %3, label %4, label %7, !llfi_index !5979

; <label>:4                                       ; preds = %0
  %5 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !5980
  %6 = tail call i64 @fwrite(i8* getelementptr inbounds ([19 x i8]* @.str30321, i64 0, i64 0), i64 18, i64 1, %struct._IO_FILE* %5) #9, !llfi_index !5981
  tail call void @exit(i32 -1) #11, !llfi_index !5982
  unreachable, !llfi_index !5983

; <label>:7                                       ; preds = %0
  %8 = add nsw i64 %2, 1, !llfi_index !5984
  %9 = getelementptr inbounds %struct.ray* %r, i64 0, i32 9, i64 %2, !llfi_index !5985
  store i64 %8, i64* %1, align 8, !llfi_index !5986
  ret %struct.rayinfo* %9, !llfi_index !5987
}

; Function Attrs: nounwind uwtable
define void @free_rayinfo(%struct.ray* nocapture %r) #0 {
  %1 = getelementptr inbounds %struct.ray* %r, i64 0, i32 7, !llfi_index !5988
  %2 = load i64* %1, align 8, !llfi_index !5989
  %3 = add nsw i64 %2, -1, !llfi_index !5990
  store i64 %3, i64* %1, align 8, !llfi_index !5991
  ret void, !llfi_index !5992
}

; Function Attrs: nounwind uwtable
define void @reset_rayinfo(%struct.ray* nocapture %r) #0 {
  %1 = getelementptr inbounds %struct.ray* %r, i64 0, i32 7, !llfi_index !5993
  store i64 0, i64* %1, align 8, !llfi_index !5994
  ret void, !llfi_index !5995
}

; Function Attrs: nounwind uwtable
define void @ma_print() #0 {
  %1 = load i64* @mem_grid, align 8, !llfi_index !5996
  %2 = load i64* @mem_hashtable, align 8, !llfi_index !5997
  %3 = load i64* @mem_emptycells, align 8, !llfi_index !5998
  %4 = load i64* @mem_voxel, align 8, !llfi_index !5999
  %5 = load i64* @mem_bintree, align 8, !llfi_index !6000
  %6 = add i64 %2, %1, !llfi_index !6001
  %7 = add i64 %6, %3, !llfi_index !6002
  %8 = add i64 %7, %4, !llfi_index !6003
  %9 = add i64 %8, %5, !llfi_index !6004
  %10 = load i64* @maxmem_grid, align 8, !llfi_index !6005
  %11 = load i64* @maxmem_hashtable, align 8, !llfi_index !6006
  %12 = load i64* @maxmem_emptycells, align 8, !llfi_index !6007
  %13 = load i64* @maxmem_voxel, align 8, !llfi_index !6008
  %14 = load i64* @maxmem_bintree, align 8, !llfi_index !6009
  %15 = add i64 %11, %10, !llfi_index !6010
  %16 = add i64 %15, %12, !llfi_index !6011
  %17 = add i64 %16, %13, !llfi_index !6012
  %18 = add i64 %17, %14, !llfi_index !6013
  %19 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !6014
  %20 = tail call i64 @fwrite(i8* getelementptr inbounds ([70 x i8]* @.str31322, i64 0, i64 0), i64 69, i64 1, %struct._IO_FILE* %19), !llfi_index !6015
  %21 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !6016
  %22 = tail call i64 @fwrite(i8* getelementptr inbounds ([70 x i8]* @.str32323, i64 0, i64 0), i64 69, i64 1, %struct._IO_FILE* %21), !llfi_index !6017
  %23 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !6018
  %24 = tail call i64 @fwrite(i8* getelementptr inbounds ([71 x i8]* @.str33324, i64 0, i64 0), i64 70, i64 1, %struct._IO_FILE* %23), !llfi_index !6019
  %25 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !6020
  %26 = load i64* @mem_grid, align 8, !llfi_index !6021
  %27 = load i64* @maxmem_grid, align 8, !llfi_index !6022
  %28 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([50 x i8]* @.str34325, i64 0, i64 0), i64 %26, i64 %27, i64 144) #2, !llfi_index !6023
  %29 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !6024
  %30 = load i64* @mem_hashtable, align 8, !llfi_index !6025
  %31 = load i64* @maxmem_hashtable, align 8, !llfi_index !6026
  %32 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([50 x i8]* @.str35326, i64 0, i64 0), i64 %30, i64 %31, i64 8) #2, !llfi_index !6027
  %33 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !6028
  %34 = load i64* @mem_emptycells, align 8, !llfi_index !6029
  %35 = load i64* @maxmem_emptycells, align 8, !llfi_index !6030
  %36 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([50 x i8]* @.str36327, i64 0, i64 0), i64 %34, i64 %35, i64 8) #2, !llfi_index !6031
  %37 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !6032
  %38 = load i64* @mem_voxel, align 8, !llfi_index !6033
  %39 = load i64* @maxmem_voxel, align 8, !llfi_index !6034
  %40 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([50 x i8]* @.str37328, i64 0, i64 0), i64 %38, i64 %39, i64 40) #2, !llfi_index !6035
  %41 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !6036
  %42 = load i64* @mem_bintree, align 8, !llfi_index !6037
  %43 = load i64* @maxmem_bintree, align 8, !llfi_index !6038
  %44 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([50 x i8]* @.str38329, i64 0, i64 0), i64 %42, i64 %43, i64 120) #2, !llfi_index !6039
  %45 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !6040
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %45), !llfi_index !6041
  %46 = load %struct._IO_FILE** @stdout, align 8, !llfi_index !6042
  %47 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([48 x i8]* @.str40331, i64 0, i64 0), i64 %9, i64 %18) #2, !llfi_index !6043
  ret void, !llfi_index !6044
}

; Function Attrs: nounwind readnone uwtable
define i8* @PolyName() #4 {
  ret i8* getelementptr inbounds ([5 x i8]* @.str348, i64 0, i64 0), !llfi_index !6045
}

; Function Attrs: nounwind uwtable
define void @PolyPrint(%struct.object* nocapture readonly %po) #0 {
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !6046
  %2 = load %struct.element** %1, align 8, !llfi_index !6047
  %3 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !6048
  %4 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !6049
  %5 = load i64* %4, align 8, !llfi_index !6050
  %6 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([25 x i8]* @.str1349, i64 0, i64 0), i64 %5) #10, !llfi_index !6051
  %7 = load i64* %4, align 8, !llfi_index !6052
  %8 = icmp sgt i64 %7, 0, !llfi_index !6053
  br i1 %8, label %.lr.ph6, label %._crit_edge7, !llfi_index !6054

.lr.ph6:                                          ; preds = %._crit_edge, %0
  %pe.04 = phi %struct.element* [ %49, %._crit_edge ], [ %2, %0 ], !llfi_index !6055
  %i.03 = phi i64 [ %50, %._crit_edge ], [ 0, %0 ], !llfi_index !6056
  %9 = getelementptr inbounds %struct.element* %pe.04, i64 0, i32 2, !llfi_index !6057
  %10 = load i8** %9, align 8, !llfi_index !6058
  %11 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !6059
  %12 = bitcast i8* %10 to i64*, !llfi_index !6060
  %13 = load i64* %12, align 8, !llfi_index !6061
  %14 = getelementptr inbounds i8* %10, i64 8, !llfi_index !6062
  %15 = bitcast i8* %14 to double*, !llfi_index !6063
  %16 = load double* %15, align 8, !llfi_index !6064
  %17 = getelementptr inbounds i8* %10, i64 16, !llfi_index !6065
  %18 = bitcast i8* %17 to double*, !llfi_index !6066
  %19 = load double* %18, align 8, !llfi_index !6067
  %20 = getelementptr inbounds i8* %10, i64 24, !llfi_index !6068
  %21 = bitcast i8* %20 to double*, !llfi_index !6069
  %22 = load double* %21, align 8, !llfi_index !6070
  %23 = getelementptr inbounds i8* %10, i64 32, !llfi_index !6071
  %24 = bitcast i8* %23 to double*, !llfi_index !6072
  %25 = load double* %24, align 8, !llfi_index !6073
  %26 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([40 x i8]* @.str2350, i64 0, i64 0), i64 %13, double %16, double %19, double %22, double %25) #10, !llfi_index !6074
  %27 = getelementptr inbounds i8* %10, i64 40, !llfi_index !6075
  %28 = bitcast i8* %27 to [3 x double]**, !llfi_index !6076
  %29 = load [3 x double]** %28, align 8, !llfi_index !6077
  %30 = load i64* %12, align 8, !llfi_index !6078
  %31 = icmp sgt i64 %30, 0, !llfi_index !6079
  br i1 %31, label %.lr.ph, label %._crit_edge, !llfi_index !6080

.lr.ph:                                           ; preds = %.lr.ph6
  %32 = getelementptr inbounds i8* %10, i64 48, !llfi_index !6081
  %33 = bitcast i8* %32 to i64**, !llfi_index !6082
  %34 = load i64** %33, align 8, !llfi_index !6083
  br label %35, !llfi_index !6084

; <label>:35                                      ; preds = %35, %.lr.ph
  %j.02 = phi i64 [ 0, %.lr.ph ], [ %46, %35 ], !llfi_index !6085
  %vindex.01 = phi i64* [ %34, %.lr.ph ], [ %45, %35 ], !llfi_index !6086
  %36 = load i64* %vindex.01, align 8, !llfi_index !6087
  %37 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !6088
  %38 = getelementptr inbounds [3 x double]* %29, i64 %36, i64 0, !llfi_index !6089
  %39 = load double* %38, align 8, !llfi_index !6090
  %40 = getelementptr inbounds [3 x double]* %29, i64 %36, i64 1, !llfi_index !6091
  %41 = load double* %40, align 8, !llfi_index !6092
  %42 = getelementptr inbounds [3 x double]* %29, i64 %36, i64 2, !llfi_index !6093
  %43 = load double* %42, align 8, !llfi_index !6094
  %44 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([13 x i8]* @.str3351, i64 0, i64 0), double %39, double %41, double %43) #10, !llfi_index !6095
  %45 = getelementptr inbounds i64* %vindex.01, i64 1, !llfi_index !6096
  %46 = add nsw i64 %j.02, 1, !llfi_index !6097
  %47 = load i64* %12, align 8, !llfi_index !6098
  %48 = icmp slt i64 %46, %47, !llfi_index !6099
  br i1 %48, label %35, label %._crit_edge, !llfi_index !6100

._crit_edge:                                      ; preds = %35, %.lr.ph6
  %49 = getelementptr inbounds %struct.element* %pe.04, i64 1, !llfi_index !6101
  %50 = add nsw i64 %i.03, 1, !llfi_index !6102
  %51 = load i64* %4, align 8, !llfi_index !6103
  %52 = icmp slt i64 %50, %51, !llfi_index !6104
  br i1 %52, label %.lr.ph6, label %._crit_edge7, !llfi_index !6105

._crit_edge7:                                     ; preds = %._crit_edge, %0
  ret void, !llfi_index !6106
}

; Function Attrs: nounwind uwtable
define void @PolyElementBoundBox(%struct.element* nocapture %pe, %struct.poly* nocapture readonly %pp) #0 {
  %1 = getelementptr inbounds %struct.poly* %pp, i64 0, i32 3, !llfi_index !6107
  %2 = load [3 x double]** %1, align 8, !llfi_index !6108
  %3 = getelementptr inbounds %struct.poly* %pp, i64 0, i32 0, !llfi_index !6109
  %4 = load i64* %3, align 8, !llfi_index !6110
  %5 = icmp sgt i64 %4, 0, !llfi_index !6111
  br i1 %5, label %.lr.ph, label %._crit_edge, !llfi_index !6112

.lr.ph:                                           ; preds = %0
  %6 = getelementptr inbounds %struct.poly* %pp, i64 0, i32 4, !llfi_index !6113
  %7 = load i64** %6, align 8, !llfi_index !6114
  br label %8, !llfi_index !6115

; <label>:8                                       ; preds = %8, %.lr.ph
  %maxz.08 = phi double [ -1.000000e+32, %.lr.ph ], [ %30, %8 ], !llfi_index !6116
  %minz.07 = phi double [ 1.000000e+32, %.lr.ph ], [ %minz.0., %8 ], !llfi_index !6117
  %maxy.06 = phi double [ -1.000000e+32, %.lr.ph ], [ %maxy.0., %8 ], !llfi_index !6118
  %miny.05 = phi double [ 1.000000e+32, %.lr.ph ], [ %18, %8 ], !llfi_index !6119
  %maxx.04 = phi double [ -1.000000e+32, %.lr.ph ], [ %25, %8 ], !llfi_index !6120
  %minx.03 = phi double [ 1.000000e+32, %.lr.ph ], [ %minx.0., %8 ], !llfi_index !6121
  %i.02 = phi i64 [ 0, %.lr.ph ], [ %32, %8 ], !llfi_index !6122
  %vindex.01 = phi i64* [ %7, %.lr.ph ], [ %31, %8 ], !llfi_index !6123
  %9 = load i64* %vindex.01, align 8, !llfi_index !6124
  %10 = getelementptr inbounds [3 x double]* %2, i64 %9, i64 0, !llfi_index !6125
  %11 = load double* %10, align 8, !llfi_index !6126
  %12 = fsub double %minx.03, %11, !llfi_index !6127
  %13 = fcmp olt double %12, 0.000000e+00, !llfi_index !6128
  %minx.0. = select i1 %13, double %minx.03, double %11, !llfi_index !6129
  %14 = getelementptr inbounds [3 x double]* %2, i64 %9, i64 1, !llfi_index !6130
  %15 = load double* %14, align 8, !llfi_index !6131
  %16 = fsub double %miny.05, %15, !llfi_index !6132
  %17 = fcmp olt double %16, 0.000000e+00, !llfi_index !6133
  %18 = select i1 %17, double %miny.05, double %15, !llfi_index !6134
  %19 = getelementptr inbounds [3 x double]* %2, i64 %9, i64 2, !llfi_index !6135
  %20 = load double* %19, align 8, !llfi_index !6136
  %21 = fsub double %minz.07, %20, !llfi_index !6137
  %22 = fcmp olt double %21, 0.000000e+00, !llfi_index !6138
  %minz.0. = select i1 %22, double %minz.07, double %20, !llfi_index !6139
  %23 = fsub double %maxx.04, %11, !llfi_index !6140
  %24 = fcmp ogt double %23, 0.000000e+00, !llfi_index !6141
  %25 = select i1 %24, double %maxx.04, double %11, !llfi_index !6142
  %26 = fsub double %maxy.06, %15, !llfi_index !6143
  %27 = fcmp ogt double %26, 0.000000e+00, !llfi_index !6144
  %maxy.0. = select i1 %27, double %maxy.06, double %15, !llfi_index !6145
  %28 = fsub double %maxz.08, %20, !llfi_index !6146
  %29 = fcmp ogt double %28, 0.000000e+00, !llfi_index !6147
  %30 = select i1 %29, double %maxz.08, double %20, !llfi_index !6148
  %31 = getelementptr inbounds i64* %vindex.01, i64 1, !llfi_index !6149
  %32 = add nsw i64 %i.02, 1, !llfi_index !6150
  %exitcond = icmp eq i64 %32, %4, !llfi_index !6151
  br i1 %exitcond, label %._crit_edge, label %8, !llfi_index !6152

._crit_edge:                                      ; preds = %8, %0
  %maxz.0.lcssa = phi double [ -1.000000e+32, %0 ], [ %30, %8 ], !llfi_index !6153
  %minz.0.lcssa = phi double [ 1.000000e+32, %0 ], [ %minz.0., %8 ], !llfi_index !6154
  %maxy.0.lcssa = phi double [ -1.000000e+32, %0 ], [ %maxy.0., %8 ], !llfi_index !6155
  %miny.0.lcssa = phi double [ 1.000000e+32, %0 ], [ %18, %8 ], !llfi_index !6156
  %maxx.0.lcssa = phi double [ -1.000000e+32, %0 ], [ %25, %8 ], !llfi_index !6157
  %minx.0.lcssa = phi double [ 1.000000e+32, %0 ], [ %minx.0., %8 ], !llfi_index !6158
  %33 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 0, i64 0, !llfi_index !6159
  store double %minx.0.lcssa, double* %33, align 8, !llfi_index !6160
  %34 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 0, i64 1, !llfi_index !6161
  store double %miny.0.lcssa, double* %34, align 8, !llfi_index !6162
  %35 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 0, i64 2, !llfi_index !6163
  store double %minz.0.lcssa, double* %35, align 8, !llfi_index !6164
  %36 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 1, i64 0, !llfi_index !6165
  store double %maxx.0.lcssa, double* %36, align 8, !llfi_index !6166
  %37 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 1, i64 1, !llfi_index !6167
  store double %maxy.0.lcssa, double* %37, align 8, !llfi_index !6168
  %38 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 1, i64 2, !llfi_index !6169
  store double %maxz.0.lcssa, double* %38, align 8, !llfi_index !6170
  ret void, !llfi_index !6171
}

; Function Attrs: nounwind uwtable
define void @PolyBoundBox(%struct.object* nocapture %po) #0 {
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !6172
  %2 = load i64* %1, align 8, !llfi_index !6173
  %3 = icmp sgt i64 %2, 0, !llfi_index !6174
  br i1 %3, label %.lr.ph, label %._crit_edge, !llfi_index !6175

.lr.ph:                                           ; preds = %0
  %4 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !6176
  %5 = load %struct.element** %4, align 8, !llfi_index !6177
  br label %6, !llfi_index !6178

; <label>:6                                       ; preds = %6, %.lr.ph
  %maxz.08 = phi double [ -1.000000e+32, %.lr.ph ], [ %36, %6 ], !llfi_index !6179
  %minz.07 = phi double [ 1.000000e+32, %.lr.ph ], [ %minz.0., %6 ], !llfi_index !6180
  %maxy.06 = phi double [ -1.000000e+32, %.lr.ph ], [ %maxy.0., %6 ], !llfi_index !6181
  %miny.05 = phi double [ 1.000000e+32, %.lr.ph ], [ %18, %6 ], !llfi_index !6182
  %maxx.04 = phi double [ -1.000000e+32, %.lr.ph ], [ %27, %6 ], !llfi_index !6183
  %minx.03 = phi double [ 1.000000e+32, %.lr.ph ], [ %minx.0., %6 ], !llfi_index !6184
  %i.02 = phi i64 [ 0, %.lr.ph ], [ %38, %6 ], !llfi_index !6185
  %pe.01 = phi %struct.element* [ %5, %.lr.ph ], [ %37, %6 ], !llfi_index !6186
  %7 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 2, !llfi_index !6187
  %8 = load i8** %7, align 8, !llfi_index !6188
  %9 = bitcast i8* %8 to %struct.poly*, !llfi_index !6189
  tail call void @PolyElementBoundBox(%struct.element* %pe.01, %struct.poly* %9), !llfi_index !6190
  %10 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 0, i64 0, !llfi_index !6191
  %11 = load double* %10, align 8, !llfi_index !6192
  %12 = fsub double %minx.03, %11, !llfi_index !6193
  %13 = fcmp olt double %12, 0.000000e+00, !llfi_index !6194
  %minx.0. = select i1 %13, double %minx.03, double %11, !llfi_index !6195
  %14 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 0, i64 1, !llfi_index !6196
  %15 = load double* %14, align 8, !llfi_index !6197
  %16 = fsub double %miny.05, %15, !llfi_index !6198
  %17 = fcmp olt double %16, 0.000000e+00, !llfi_index !6199
  %18 = select i1 %17, double %miny.05, double %15, !llfi_index !6200
  %19 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 0, i64 2, !llfi_index !6201
  %20 = load double* %19, align 8, !llfi_index !6202
  %21 = fsub double %minz.07, %20, !llfi_index !6203
  %22 = fcmp olt double %21, 0.000000e+00, !llfi_index !6204
  %minz.0. = select i1 %22, double %minz.07, double %20, !llfi_index !6205
  %23 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 1, i64 0, !llfi_index !6206
  %24 = load double* %23, align 8, !llfi_index !6207
  %25 = fsub double %maxx.04, %24, !llfi_index !6208
  %26 = fcmp ogt double %25, 0.000000e+00, !llfi_index !6209
  %27 = select i1 %26, double %maxx.04, double %24, !llfi_index !6210
  %28 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 1, i64 1, !llfi_index !6211
  %29 = load double* %28, align 8, !llfi_index !6212
  %30 = fsub double %maxy.06, %29, !llfi_index !6213
  %31 = fcmp ogt double %30, 0.000000e+00, !llfi_index !6214
  %maxy.0. = select i1 %31, double %maxy.06, double %29, !llfi_index !6215
  %32 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 1, i64 2, !llfi_index !6216
  %33 = load double* %32, align 8, !llfi_index !6217
  %34 = fsub double %maxz.08, %33, !llfi_index !6218
  %35 = fcmp ogt double %34, 0.000000e+00, !llfi_index !6219
  %36 = select i1 %35, double %maxz.08, double %33, !llfi_index !6220
  %37 = getelementptr inbounds %struct.element* %pe.01, i64 1, !llfi_index !6221
  %38 = add nsw i64 %i.02, 1, !llfi_index !6222
  %39 = load i64* %1, align 8, !llfi_index !6223
  %40 = icmp slt i64 %38, %39, !llfi_index !6224
  br i1 %40, label %6, label %._crit_edge, !llfi_index !6225

._crit_edge:                                      ; preds = %6, %0
  %maxz.0.lcssa = phi double [ -1.000000e+32, %0 ], [ %36, %6 ], !llfi_index !6226
  %minz.0.lcssa = phi double [ 1.000000e+32, %0 ], [ %minz.0., %6 ], !llfi_index !6227
  %maxy.0.lcssa = phi double [ -1.000000e+32, %0 ], [ %maxy.0., %6 ], !llfi_index !6228
  %miny.0.lcssa = phi double [ 1.000000e+32, %0 ], [ %18, %6 ], !llfi_index !6229
  %maxx.0.lcssa = phi double [ -1.000000e+32, %0 ], [ %27, %6 ], !llfi_index !6230
  %minx.0.lcssa = phi double [ 1.000000e+32, %0 ], [ %minx.0., %6 ], !llfi_index !6231
  %41 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 0, i64 0, !llfi_index !6232
  store double %minx.0.lcssa, double* %41, align 8, !llfi_index !6233
  %42 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 0, i64 1, !llfi_index !6234
  store double %miny.0.lcssa, double* %42, align 8, !llfi_index !6235
  %43 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 0, i64 2, !llfi_index !6236
  store double %minz.0.lcssa, double* %43, align 8, !llfi_index !6237
  %44 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 1, i64 0, !llfi_index !6238
  store double %maxx.0.lcssa, double* %44, align 8, !llfi_index !6239
  %45 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 1, i64 1, !llfi_index !6240
  store double %maxy.0.lcssa, double* %45, align 8, !llfi_index !6241
  %46 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 1, i64 2, !llfi_index !6242
  store double %maxz.0.lcssa, double* %46, align 8, !llfi_index !6243
  ret void, !llfi_index !6244
}

; Function Attrs: nounwind uwtable
define void @PolyNormal(%struct.irecord* nocapture readonly %hit, double* nocapture readnone %Pi, double* nocapture %Ni) #0 {
  %1 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 1, !llfi_index !6245
  %2 = load %struct.element** %1, align 8, !llfi_index !6246
  %3 = getelementptr inbounds %struct.element* %2, i64 0, i32 2, !llfi_index !6247
  %4 = load i8** %3, align 8, !llfi_index !6248
  %5 = getelementptr inbounds i8* %4, i64 8, !llfi_index !6249
  %6 = bitcast i8* %5 to double*, !llfi_index !6250
  %7 = load double* %6, align 8, !llfi_index !6251
  store double %7, double* %Ni, align 8, !llfi_index !6252
  %8 = getelementptr inbounds i8* %4, i64 16, !llfi_index !6253
  %9 = bitcast i8* %8 to double*, !llfi_index !6254
  %10 = load double* %9, align 8, !llfi_index !6255
  %11 = getelementptr inbounds double* %Ni, i64 1, !llfi_index !6256
  store double %10, double* %11, align 8, !llfi_index !6257
  %12 = getelementptr inbounds i8* %4, i64 24, !llfi_index !6258
  %13 = bitcast i8* %12 to double*, !llfi_index !6259
  %14 = load double* %13, align 8, !llfi_index !6260
  %15 = getelementptr inbounds double* %Ni, i64 2, !llfi_index !6261
  store double %14, double* %15, align 8, !llfi_index !6262
  ret void, !llfi_index !6263
}

; Function Attrs: nounwind uwtable
define void @PolyDataNormalize(%struct.object* nocapture %po, [4 x double]* nocapture readonly %normMat) #0 {
  %coord = alloca [4 x double], align 16, !llfi_index !6264
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !6265
  %2 = load %struct.element** %1, align 8, !llfi_index !6266
  %3 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, !llfi_index !6267
  tail call void @NormalizeBoundBox(%struct.bbox* %3, [4 x double]* %normMat), !llfi_index !6268
  %4 = getelementptr inbounds %struct.element* %2, i64 0, i32 2, !llfi_index !6269
  %5 = load i8** %4, align 8, !llfi_index !6270
  %6 = getelementptr inbounds i8* %5, i64 40, !llfi_index !6271
  %7 = bitcast i8* %6 to [3 x double]**, !llfi_index !6272
  %8 = load [3 x double]** %7, align 8, !llfi_index !6273
  %9 = getelementptr inbounds [3 x double]* %8, i64 0, i64 0, !llfi_index !6274
  %10 = load double* %9, align 8, !llfi_index !6275
  %11 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 0, !llfi_index !6276
  store double %10, double* %11, align 16, !llfi_index !6277
  %12 = getelementptr inbounds [3 x double]* %8, i64 0, i64 1, !llfi_index !6278
  %13 = load double* %12, align 8, !llfi_index !6279
  %14 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 1, !llfi_index !6280
  store double %13, double* %14, align 8, !llfi_index !6281
  %15 = getelementptr inbounds [3 x double]* %8, i64 0, i64 2, !llfi_index !6282
  %16 = load double* %15, align 8, !llfi_index !6283
  %17 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 2, !llfi_index !6284
  store double %16, double* %17, align 16, !llfi_index !6285
  %18 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 3, !llfi_index !6286
  store double 1.000000e+00, double* %18, align 8, !llfi_index !6287
  %19 = load double* %11, align 16, !llfi_index !6288
  %20 = fcmp une double %19, 1.000000e+32, !llfi_index !6289
  %21 = load double* %14, align 8, !llfi_index !6290
  %22 = fcmp une double %21, 1.000000e+32, !llfi_index !6291
  %or.cond7 = and i1 %20, %22, !llfi_index !6292
  %23 = load double* %17, align 16, !llfi_index !6293
  %24 = fcmp une double %23, 1.000000e+32, !llfi_index !6294
  %or.cond48 = and i1 %or.cond7, %24, !llfi_index !6295
  br i1 %or.cond48, label %.lr.ph10, label %.critedge.preheader, !llfi_index !6296

.critedge.preheader:                              ; preds = %.lr.ph10, %0
  %25 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !6297
  %26 = load i64* %25, align 8, !llfi_index !6298
  %27 = icmp sgt i64 %26, 0, !llfi_index !6299
  br i1 %27, label %.critedge, label %.critedge._crit_edge, !llfi_index !6300

.lr.ph10:                                         ; preds = %.lr.ph10, %0
  %pv.09 = phi [3 x double]* [ %34, %.lr.ph10 ], [ %8, %0 ], !llfi_index !6301
  call void @VecMatMult(double* %11, [4 x double]* %normMat, double* %11), !llfi_index !6302
  %28 = load double* %11, align 16, !llfi_index !6303
  %29 = getelementptr inbounds [3 x double]* %pv.09, i64 0, i64 0, !llfi_index !6304
  store double %28, double* %29, align 8, !llfi_index !6305
  %30 = load double* %14, align 8, !llfi_index !6306
  %31 = getelementptr inbounds [3 x double]* %pv.09, i64 0, i64 1, !llfi_index !6307
  store double %30, double* %31, align 8, !llfi_index !6308
  %32 = load double* %17, align 16, !llfi_index !6309
  %33 = getelementptr inbounds [3 x double]* %pv.09, i64 0, i64 2, !llfi_index !6310
  store double %32, double* %33, align 8, !llfi_index !6311
  %34 = getelementptr inbounds [3 x double]* %pv.09, i64 1, !llfi_index !6312
  %35 = getelementptr inbounds [3 x double]* %34, i64 0, i64 0, !llfi_index !6313
  %36 = load double* %35, align 8, !llfi_index !6314
  store double %36, double* %11, align 16, !llfi_index !6315
  %37 = getelementptr inbounds [3 x double]* %pv.09, i64 1, i64 1, !llfi_index !6316
  %38 = load double* %37, align 8, !llfi_index !6317
  store double %38, double* %14, align 8, !llfi_index !6318
  %39 = getelementptr inbounds [3 x double]* %pv.09, i64 1, i64 2, !llfi_index !6319
  %40 = load double* %39, align 8, !llfi_index !6320
  store double %40, double* %17, align 16, !llfi_index !6321
  store double 1.000000e+00, double* %18, align 8, !llfi_index !6322
  %41 = load double* %11, align 16, !llfi_index !6323
  %42 = fcmp une double %41, 1.000000e+32, !llfi_index !6324
  %43 = load double* %14, align 8, !llfi_index !6325
  %44 = fcmp une double %43, 1.000000e+32, !llfi_index !6326
  %or.cond = and i1 %42, %44, !llfi_index !6327
  %45 = load double* %17, align 16, !llfi_index !6328
  %46 = fcmp une double %45, 1.000000e+32, !llfi_index !6329
  %or.cond4 = and i1 %or.cond, %46, !llfi_index !6330
  br i1 %or.cond4, label %.lr.ph10, label %.critedge.preheader, !llfi_index !6331

.critedge:                                        ; preds = %.critedge, %.critedge.preheader
  %pe.06 = phi %struct.element* [ %80, %.critedge ], [ %2, %.critedge.preheader ], !llfi_index !6332
  %i.05 = phi i64 [ %81, %.critedge ], [ 0, %.critedge.preheader ], !llfi_index !6333
  %47 = getelementptr inbounds %struct.element* %pe.06, i64 0, i32 2, !llfi_index !6334
  %48 = load i8** %47, align 8, !llfi_index !6335
  %49 = getelementptr inbounds %struct.element* %pe.06, i64 0, i32 3, !llfi_index !6336
  tail call void @NormalizeBoundBox(%struct.bbox* %49, [4 x double]* %normMat), !llfi_index !6337
  %50 = getelementptr inbounds i8* %48, i64 40, !llfi_index !6338
  %51 = bitcast i8* %50 to [3 x double]**, !llfi_index !6339
  %52 = load [3 x double]** %51, align 8, !llfi_index !6340
  %53 = getelementptr inbounds i8* %48, i64 48, !llfi_index !6341
  %54 = bitcast i8* %53 to i64**, !llfi_index !6342
  %55 = load i64** %54, align 8, !llfi_index !6343
  %56 = load i64* %55, align 8, !llfi_index !6344
  %57 = getelementptr inbounds i8* %48, i64 8, !llfi_index !6345
  %58 = bitcast i8* %57 to double*, !llfi_index !6346
  %59 = load double* %58, align 8, !llfi_index !6347
  %60 = getelementptr inbounds [3 x double]* %52, i64 %56, i64 0, !llfi_index !6348
  %61 = load double* %60, align 8, !llfi_index !6349
  %62 = fmul double %59, %61, !llfi_index !6350
  %63 = getelementptr inbounds i8* %48, i64 16, !llfi_index !6351
  %64 = bitcast i8* %63 to double*, !llfi_index !6352
  %65 = load double* %64, align 8, !llfi_index !6353
  %66 = getelementptr inbounds [3 x double]* %52, i64 %56, i64 1, !llfi_index !6354
  %67 = load double* %66, align 8, !llfi_index !6355
  %68 = fmul double %65, %67, !llfi_index !6356
  %69 = fadd double %62, %68, !llfi_index !6357
  %70 = getelementptr inbounds i8* %48, i64 24, !llfi_index !6358
  %71 = bitcast i8* %70 to double*, !llfi_index !6359
  %72 = load double* %71, align 8, !llfi_index !6360
  %73 = getelementptr inbounds [3 x double]* %52, i64 %56, i64 2, !llfi_index !6361
  %74 = load double* %73, align 8, !llfi_index !6362
  %75 = fmul double %72, %74, !llfi_index !6363
  %76 = fadd double %69, %75, !llfi_index !6364
  %77 = fsub double -0.000000e+00, %76, !llfi_index !6365
  %78 = getelementptr inbounds i8* %48, i64 32, !llfi_index !6366
  %79 = bitcast i8* %78 to double*, !llfi_index !6367
  store double %77, double* %79, align 8, !llfi_index !6368
  %80 = getelementptr inbounds %struct.element* %pe.06, i64 1, !llfi_index !6369
  %81 = add nsw i64 %i.05, 1, !llfi_index !6370
  %82 = load i64* %25, align 8, !llfi_index !6371
  %83 = icmp slt i64 %81, %82, !llfi_index !6372
  br i1 %83, label %.critedge, label %.critedge._crit_edge, !llfi_index !6373

.critedge._crit_edge:                             ; preds = %.critedge, %.critedge.preheader
  ret void, !llfi_index !6374
}

; Function Attrs: nounwind uwtable
define i64 @PolyPeIntersect(%struct.ray* nocapture readonly %pr, %struct.element* %pe, %struct.irecord* nocapture %hit) #0 {
  %x = alloca [101 x double], align 16, !llfi_index !6375
  %y = alloca [101 x double], align 16, !llfi_index !6376
  %1 = getelementptr inbounds %struct.element* %pe, i64 0, i32 2, !llfi_index !6377
  %2 = load i8** %1, align 8, !llfi_index !6378
  %3 = getelementptr inbounds i8* %2, i64 8, !llfi_index !6379
  %4 = bitcast i8* %3 to double*, !llfi_index !6380
  %5 = load double* %4, align 8, !llfi_index !6381
  %6 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 4, i64 0, !llfi_index !6382
  %7 = load double* %6, align 8, !llfi_index !6383
  %8 = fmul double %5, %7, !llfi_index !6384
  %9 = getelementptr inbounds i8* %2, i64 16, !llfi_index !6385
  %10 = bitcast i8* %9 to double*, !llfi_index !6386
  %11 = load double* %10, align 8, !llfi_index !6387
  %12 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 4, i64 1, !llfi_index !6388
  %13 = load double* %12, align 8, !llfi_index !6389
  %14 = fmul double %11, %13, !llfi_index !6390
  %15 = fadd double %8, %14, !llfi_index !6391
  %16 = getelementptr inbounds i8* %2, i64 24, !llfi_index !6392
  %17 = bitcast i8* %16 to double*, !llfi_index !6393
  %18 = load double* %17, align 8, !llfi_index !6394
  %19 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 4, i64 2, !llfi_index !6395
  %20 = load double* %19, align 8, !llfi_index !6396
  %21 = fmul double %18, %20, !llfi_index !6397
  %22 = fadd double %15, %21, !llfi_index !6398
  %23 = fcmp ogt double %22, 0.000000e+00, !llfi_index !6399
  br i1 %23, label %26, label %24, !llfi_index !6400

; <label>:24                                      ; preds = %0
  %25 = fsub double -0.000000e+00, %22, !llfi_index !6401
  br label %26, !llfi_index !6402

; <label>:26                                      ; preds = %24, %0
  %27 = phi double [ %25, %24 ], [ %22, %0 ], !llfi_index !6403
  %28 = fcmp olt double %27, 1.000000e-07, !llfi_index !6404
  br i1 %28, label %._crit_edge.thread, label %29, !llfi_index !6405

; <label>:29                                      ; preds = %26
  %30 = load double* %4, align 8, !llfi_index !6406
  %31 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 3, i64 0, !llfi_index !6407
  %32 = load double* %31, align 8, !llfi_index !6408
  %33 = fmul double %30, %32, !llfi_index !6409
  %34 = load double* %10, align 8, !llfi_index !6410
  %35 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 3, i64 1, !llfi_index !6411
  %36 = load double* %35, align 8, !llfi_index !6412
  %37 = fmul double %34, %36, !llfi_index !6413
  %38 = fadd double %33, %37, !llfi_index !6414
  %39 = load double* %17, align 8, !llfi_index !6415
  %40 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 3, i64 2, !llfi_index !6416
  %41 = load double* %40, align 8, !llfi_index !6417
  %42 = fmul double %39, %41, !llfi_index !6418
  %43 = fadd double %38, %42, !llfi_index !6419
  %44 = getelementptr inbounds i8* %2, i64 32, !llfi_index !6420
  %45 = bitcast i8* %44 to double*, !llfi_index !6421
  %46 = load double* %45, align 8, !llfi_index !6422
  %47 = fadd double %46, %43, !llfi_index !6423
  %48 = fsub double -0.000000e+00, %47, !llfi_index !6424
  %49 = fdiv double %48, %22, !llfi_index !6425
  %50 = fcmp olt double %49, 1.000000e-07, !llfi_index !6426
  br i1 %50, label %._crit_edge.thread, label %51, !llfi_index !6427

; <label>:51                                      ; preds = %29
  %52 = load double* %6, align 8, !llfi_index !6428
  %53 = fmul double %49, %52, !llfi_index !6429
  %54 = fadd double %32, %53, !llfi_index !6430
  %55 = load double* %12, align 8, !llfi_index !6431
  %56 = fmul double %49, %55, !llfi_index !6432
  %57 = fadd double %36, %56, !llfi_index !6433
  %58 = load double* %19, align 8, !llfi_index !6434
  %59 = fmul double %49, %58, !llfi_index !6435
  %60 = fadd double %41, %59, !llfi_index !6436
  %61 = getelementptr inbounds i8* %2, i64 40, !llfi_index !6437
  %62 = bitcast i8* %61 to [3 x double]**, !llfi_index !6438
  %63 = load [3 x double]** %62, align 8, !llfi_index !6439
  %64 = getelementptr inbounds i8* %2, i64 48, !llfi_index !6440
  %65 = bitcast i8* %64 to i64**, !llfi_index !6441
  %66 = load i64** %65, align 8, !llfi_index !6442
  %67 = getelementptr inbounds i8* %2, i64 56, !llfi_index !6443
  %68 = bitcast i8* %67 to i64*, !llfi_index !6444
  %69 = load i64* %68, align 8, !llfi_index !6445
  switch i64 %69, label %.loopexit [
    i64 1, label %.preheader
    i64 2, label %.preheader15
    i64 3, label %.preheader20
  ], !llfi_index !6446

.preheader20:                                     ; preds = %51
  %70 = bitcast i8* %2 to i64*, !llfi_index !6447
  %71 = load i64* %70, align 8, !llfi_index !6448
  %72 = icmp sgt i64 %71, 0, !llfi_index !6449
  br i1 %72, label %.lr.ph24, label %.loopexit, !llfi_index !6450

.preheader15:                                     ; preds = %51
  %73 = bitcast i8* %2 to i64*, !llfi_index !6451
  %74 = load i64* %73, align 8, !llfi_index !6452
  %75 = icmp sgt i64 %74, 0, !llfi_index !6453
  br i1 %75, label %.lr.ph19, label %.loopexit, !llfi_index !6454

.preheader:                                       ; preds = %51
  %76 = bitcast i8* %2 to i64*, !llfi_index !6455
  %77 = load i64* %76, align 8, !llfi_index !6456
  %78 = icmp sgt i64 %77, 0, !llfi_index !6457
  br i1 %78, label %.lr.ph14, label %.loopexit, !llfi_index !6458

.lr.ph14:                                         ; preds = %.lr.ph14, %.preheader
  %i.013 = phi i64 [ %87, %.lr.ph14 ], [ 0, %.preheader ], !llfi_index !6459
  %vindex.012 = phi i64* [ %86, %.lr.ph14 ], [ %66, %.preheader ], !llfi_index !6460
  %79 = load i64* %vindex.012, align 8, !llfi_index !6461
  %80 = getelementptr inbounds [3 x double]* %63, i64 %79, i64 1, !llfi_index !6462
  %81 = load double* %80, align 8, !llfi_index !6463
  %82 = getelementptr inbounds [101 x double]* %x, i64 0, i64 %i.013, !llfi_index !6464
  store double %81, double* %82, align 8, !llfi_index !6465
  %83 = getelementptr inbounds [3 x double]* %63, i64 %79, i64 2, !llfi_index !6466
  %84 = load double* %83, align 8, !llfi_index !6467
  %85 = getelementptr inbounds [101 x double]* %y, i64 0, i64 %i.013, !llfi_index !6468
  store double %84, double* %85, align 8, !llfi_index !6469
  %86 = getelementptr inbounds i64* %vindex.012, i64 1, !llfi_index !6470
  %87 = add nsw i64 %i.013, 1, !llfi_index !6471
  %88 = load i64* %76, align 8, !llfi_index !6472
  %89 = icmp slt i64 %87, %88, !llfi_index !6473
  br i1 %89, label %.lr.ph14, label %.loopexit, !llfi_index !6474

.lr.ph19:                                         ; preds = %.lr.ph19, %.preheader15
  %i.118 = phi i64 [ %98, %.lr.ph19 ], [ 0, %.preheader15 ], !llfi_index !6475
  %vindex.117 = phi i64* [ %97, %.lr.ph19 ], [ %66, %.preheader15 ], !llfi_index !6476
  %90 = load i64* %vindex.117, align 8, !llfi_index !6477
  %91 = getelementptr inbounds [3 x double]* %63, i64 %90, i64 0, !llfi_index !6478
  %92 = load double* %91, align 8, !llfi_index !6479
  %93 = getelementptr inbounds [101 x double]* %x, i64 0, i64 %i.118, !llfi_index !6480
  store double %92, double* %93, align 8, !llfi_index !6481
  %94 = getelementptr inbounds [3 x double]* %63, i64 %90, i64 2, !llfi_index !6482
  %95 = load double* %94, align 8, !llfi_index !6483
  %96 = getelementptr inbounds [101 x double]* %y, i64 0, i64 %i.118, !llfi_index !6484
  store double %95, double* %96, align 8, !llfi_index !6485
  %97 = getelementptr inbounds i64* %vindex.117, i64 1, !llfi_index !6486
  %98 = add nsw i64 %i.118, 1, !llfi_index !6487
  %99 = load i64* %73, align 8, !llfi_index !6488
  %100 = icmp slt i64 %98, %99, !llfi_index !6489
  br i1 %100, label %.lr.ph19, label %.loopexit, !llfi_index !6490

.lr.ph24:                                         ; preds = %.lr.ph24, %.preheader20
  %i.223 = phi i64 [ %109, %.lr.ph24 ], [ 0, %.preheader20 ], !llfi_index !6491
  %vindex.222 = phi i64* [ %108, %.lr.ph24 ], [ %66, %.preheader20 ], !llfi_index !6492
  %101 = load i64* %vindex.222, align 8, !llfi_index !6493
  %102 = getelementptr inbounds [3 x double]* %63, i64 %101, i64 0, !llfi_index !6494
  %103 = load double* %102, align 8, !llfi_index !6495
  %104 = getelementptr inbounds [101 x double]* %x, i64 0, i64 %i.223, !llfi_index !6496
  store double %103, double* %104, align 8, !llfi_index !6497
  %105 = getelementptr inbounds [3 x double]* %63, i64 %101, i64 1, !llfi_index !6498
  %106 = load double* %105, align 8, !llfi_index !6499
  %107 = getelementptr inbounds [101 x double]* %y, i64 0, i64 %i.223, !llfi_index !6500
  store double %106, double* %107, align 8, !llfi_index !6501
  %108 = getelementptr inbounds i64* %vindex.222, i64 1, !llfi_index !6502
  %109 = add nsw i64 %i.223, 1, !llfi_index !6503
  %110 = load i64* %70, align 8, !llfi_index !6504
  %111 = icmp slt i64 %109, %110, !llfi_index !6505
  br i1 %111, label %.lr.ph24, label %.loopexit, !llfi_index !6506

.loopexit:                                        ; preds = %.lr.ph24, %.lr.ph19, %.lr.ph14, %.preheader, %.preheader15, %.preheader20, %51
  %iy.0 = phi double [ undef, %51 ], [ %60, %.preheader ], [ %60, %.preheader15 ], [ %57, %.preheader20 ], [ %60, %.lr.ph14 ], [ %60, %.lr.ph19 ], [ %57, %.lr.ph24 ], !llfi_index !6507
  %ix.0 = phi double [ undef, %51 ], [ %57, %.preheader ], [ %54, %.preheader15 ], [ %54, %.preheader20 ], [ %57, %.lr.ph14 ], [ %54, %.lr.ph19 ], [ %54, %.lr.ph24 ], !llfi_index !6508
  %112 = bitcast i8* %2 to i64*, !llfi_index !6509
  %113 = load i64* %112, align 8, !llfi_index !6510
  %114 = icmp sgt i64 %113, 0, !llfi_index !6511
  br i1 %114, label %.lr.ph9, label %._crit_edge10, !llfi_index !6512

.lr.ph9:                                          ; preds = %128, %.loopexit
  %i.37 = phi i64 [ %129, %128 ], [ 0, %.loopexit ], !llfi_index !6513
  %115 = getelementptr inbounds [101 x double]* %x, i64 0, i64 %i.37, !llfi_index !6514
  %116 = load double* %115, align 8, !llfi_index !6515
  %117 = fsub double %116, %ix.0, !llfi_index !6516
  store double %117, double* %115, align 8, !llfi_index !6517
  %118 = getelementptr inbounds [101 x double]* %y, i64 0, i64 %i.37, !llfi_index !6518
  %119 = load double* %118, align 8, !llfi_index !6519
  %120 = fsub double %119, %iy.0, !llfi_index !6520
  store double %120, double* %118, align 8, !llfi_index !6521
  %121 = fcmp ogt double %120, 0.000000e+00, !llfi_index !6522
  br i1 %121, label %124, label %122, !llfi_index !6523

; <label>:122                                     ; preds = %.lr.ph9
  %123 = fsub double -0.000000e+00, %120, !llfi_index !6524
  br label %124, !llfi_index !6525

; <label>:124                                     ; preds = %122, %.lr.ph9
  %125 = phi double [ %123, %122 ], [ %120, %.lr.ph9 ], !llfi_index !6526
  %126 = fcmp olt double %125, 1.000000e-07, !llfi_index !6527
  br i1 %126, label %127, label %128, !llfi_index !6528

; <label>:127                                     ; preds = %124
  store double 0.000000e+00, double* %118, align 8, !llfi_index !6529
  br label %128, !llfi_index !6530

; <label>:128                                     ; preds = %127, %124
  %129 = add nsw i64 %i.37, 1, !llfi_index !6531
  %exitcond = icmp eq i64 %129, %113, !llfi_index !6532
  br i1 %exitcond, label %._crit_edge10, label %.lr.ph9, !llfi_index !6533

._crit_edge10:                                    ; preds = %128, %.loopexit
  %130 = getelementptr inbounds [101 x double]* %x, i64 0, i64 0, !llfi_index !6534
  %131 = load double* %130, align 16, !llfi_index !6535
  %132 = getelementptr inbounds [101 x double]* %x, i64 0, i64 %113, !llfi_index !6536
  store double %131, double* %132, align 8, !llfi_index !6537
  %133 = getelementptr inbounds [101 x double]* %y, i64 0, i64 0, !llfi_index !6538
  %134 = load double* %133, align 16, !llfi_index !6539
  %135 = load i64* %112, align 8, !llfi_index !6540
  %136 = getelementptr inbounds [101 x double]* %y, i64 0, i64 %135, !llfi_index !6541
  store double %134, double* %136, align 8, !llfi_index !6542
  %137 = load i64* %112, align 8, !llfi_index !6543
  %138 = icmp sgt i64 %137, 0, !llfi_index !6544
  br i1 %138, label %.lr.ph.lr.ph, label %._crit_edge.thread, !llfi_index !6545

.lr.ph.lr.ph:                                     ; preds = %._crit_edge10
  %139 = load double* %133, align 16, !llfi_index !6546
  %not. = fcmp uge double %139, 0.000000e+00, !llfi_index !6547
  %. = zext i1 %not. to i64, !llfi_index !6548
  br label %.lr.ph, !llfi_index !6549

.lr.ph:                                           ; preds = %.outer, %.lr.ph.lr.ph
  %i.4.ph30 = phi i64 [ 0, %.lr.ph.lr.ph ], [ %141, %.outer ], !llfi_index !6550
  %toright.0.ph29 = phi i64 [ 0, %.lr.ph.lr.ph ], [ %168, %.outer ], !llfi_index !6551
  %sh.1.ph28 = phi i64 [ %., %.lr.ph.lr.ph ], [ %.1, %.outer ], !llfi_index !6552
  br label %140, !llfi_index !6553

; <label>:140                                     ; preds = %.backedge, %.lr.ph
  %i.44 = phi i64 [ %i.4.ph30, %.lr.ph ], [ %141, %.backedge ], !llfi_index !6554
  %sh.13 = phi i64 [ %sh.1.ph28, %.lr.ph ], [ %.1, %.backedge ], !llfi_index !6555
  %141 = add nsw i64 %i.44, 1, !llfi_index !6556
  %142 = getelementptr inbounds [101 x double]* %y, i64 0, i64 %141, !llfi_index !6557
  %143 = load double* %142, align 8, !llfi_index !6558
  %not.2 = fcmp uge double %143, 0.000000e+00, !llfi_index !6559
  %.1 = zext i1 %not.2 to i64, !llfi_index !6560
  %144 = icmp eq i64 %.1, %sh.13, !llfi_index !6561
  br i1 %144, label %.backedge, label %145, !llfi_index !6562

; <label>:145                                     ; preds = %140
  %146 = getelementptr inbounds [101 x double]* %y, i64 0, i64 %i.44, !llfi_index !6563
  %147 = load double* %146, align 8, !llfi_index !6564
  %148 = fsub double %143, %147, !llfi_index !6565
  %149 = fcmp ogt double %148, 0.000000e+00, !llfi_index !6566
  br i1 %149, label %152, label %150, !llfi_index !6567

; <label>:150                                     ; preds = %145
  %151 = fsub double -0.000000e+00, %148, !llfi_index !6568
  br label %152, !llfi_index !6569

; <label>:152                                     ; preds = %150, %145
  %153 = phi double [ %151, %150 ], [ %148, %145 ], !llfi_index !6570
  %154 = fcmp ult double %153, 1.000000e-07, !llfi_index !6571
  br i1 %154, label %.backedge, label %157, !llfi_index !6572

.backedge:                                        ; preds = %157, %152, %140
  %155 = load i64* %112, align 8, !llfi_index !6573
  %156 = icmp slt i64 %141, %155, !llfi_index !6574
  br i1 %156, label %140, label %._crit_edge, !llfi_index !6575

; <label>:157                                     ; preds = %152
  %158 = getelementptr inbounds [101 x double]* %x, i64 0, i64 %141, !llfi_index !6576
  %159 = load double* %158, align 8, !llfi_index !6577
  %160 = getelementptr inbounds [101 x double]* %x, i64 0, i64 %i.44, !llfi_index !6578
  %161 = load double* %160, align 8, !llfi_index !6579
  %162 = fsub double %159, %161, !llfi_index !6580
  %163 = load double* %146, align 8, !llfi_index !6581
  %164 = fmul double %163, %162, !llfi_index !6582
  %165 = fdiv double %164, %148, !llfi_index !6583
  %166 = fsub double %161, %165, !llfi_index !6584
  %167 = fcmp ogt double %166, 0.000000e+00, !llfi_index !6585
  br i1 %167, label %.outer, label %.backedge, !llfi_index !6586

.outer:                                           ; preds = %157
  %168 = add nsw i64 %toright.0.ph29, 1, !llfi_index !6587
  %169 = load i64* %112, align 8, !llfi_index !6588
  %170 = icmp slt i64 %141, %169, !llfi_index !6589
  br i1 %170, label %.lr.ph, label %._crit_edge, !llfi_index !6590

._crit_edge:                                      ; preds = %.outer, %.backedge
  %toright.0.ph27 = phi i64 [ %toright.0.ph29, %.backedge ], [ %168, %.outer ], !llfi_index !6591
  %171 = srem i64 %toright.0.ph27, 2, !llfi_index !6592
  %172 = icmp eq i64 %171, 1, !llfi_index !6593
  br i1 %172, label %173, label %._crit_edge.thread, !llfi_index !6594

; <label>:173                                     ; preds = %._crit_edge
  %174 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 0, !llfi_index !6595
  store double %49, double* %174, align 8, !llfi_index !6596
  %175 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 1, !llfi_index !6597
  store %struct.element* %pe, %struct.element** %175, align 8, !llfi_index !6598
  br label %._crit_edge.thread, !llfi_index !6599

._crit_edge.thread:                               ; preds = %173, %._crit_edge, %._crit_edge10, %29, %26
  %.0 = phi i64 [ 1, %173 ], [ 0, %26 ], [ 0, %29 ], [ 0, %._crit_edge ], [ 0, %._crit_edge10 ], !llfi_index !6600
  ret i64 %.0, !llfi_index !6601
}

; Function Attrs: nounwind uwtable
define i64 @PolyIntersect(%struct.ray* nocapture readonly %pr, %struct.object* nocapture readonly %po, %struct.irecord* nocapture %hit) #0 {
  %newhit = alloca %struct.irecord, align 8, !llfi_index !6602
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !6603
  %2 = load %struct.element** %1, align 8, !llfi_index !6604
  %3 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 0, !llfi_index !6605
  store double 1.000000e+32, double* %3, align 8, !llfi_index !6606
  %4 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !6607
  %5 = load i64* %4, align 8, !llfi_index !6608
  %6 = icmp sgt i64 %5, 0, !llfi_index !6609
  br i1 %6, label %.lr.ph, label %._crit_edge, !llfi_index !6610

.lr.ph:                                           ; preds = %0
  %7 = getelementptr inbounds %struct.irecord* %newhit, i64 0, i32 0, !llfi_index !6611
  %8 = getelementptr inbounds %struct.irecord* %newhit, i64 0, i32 1, !llfi_index !6612
  %9 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 1, !llfi_index !6613
  br label %10, !llfi_index !6614

; <label>:10                                      ; preds = %20, %.lr.ph
  %pe.03 = phi %struct.element* [ %2, %.lr.ph ], [ %21, %20 ], !llfi_index !6615
  %nhits.02 = phi i64 [ 0, %.lr.ph ], [ %nhits.1, %20 ], !llfi_index !6616
  %i.01 = phi i64 [ 0, %.lr.ph ], [ %22, %20 ], !llfi_index !6617
  %11 = call i64 @PolyPeIntersect(%struct.ray* %pr, %struct.element* %pe.03, %struct.irecord* %newhit), !llfi_index !6618
  %12 = icmp eq i64 %11, 0, !llfi_index !6619
  br i1 %12, label %20, label %13, !llfi_index !6620

; <label>:13                                      ; preds = %10
  %14 = add nsw i64 %nhits.02, 1, !llfi_index !6621
  %15 = load double* %7, align 8, !llfi_index !6622
  %16 = load double* %3, align 8, !llfi_index !6623
  %17 = fcmp olt double %15, %16, !llfi_index !6624
  br i1 %17, label %18, label %20, !llfi_index !6625

; <label>:18                                      ; preds = %13
  store double %15, double* %3, align 8, !llfi_index !6626
  %19 = load %struct.element** %8, align 8, !llfi_index !6627
  store %struct.element* %19, %struct.element** %9, align 8, !llfi_index !6628
  br label %20, !llfi_index !6629

; <label>:20                                      ; preds = %18, %13, %10
  %nhits.1 = phi i64 [ %14, %18 ], [ %14, %13 ], [ %nhits.02, %10 ], !llfi_index !6630
  %21 = getelementptr inbounds %struct.element* %pe.03, i64 1, !llfi_index !6631
  %22 = add nsw i64 %i.01, 1, !llfi_index !6632
  %23 = load i64* %4, align 8, !llfi_index !6633
  %24 = icmp slt i64 %22, %23, !llfi_index !6634
  br i1 %24, label %10, label %._crit_edge, !llfi_index !6635

._crit_edge:                                      ; preds = %20, %0
  %nhits.0.lcssa = phi i64 [ 0, %0 ], [ %nhits.1, %20 ], !llfi_index !6636
  ret i64 %nhits.0.lcssa, !llfi_index !6637
}

; Function Attrs: nounwind uwtable
define void @PolyTransform(%struct.object* nocapture readonly %po, [4 x double]* nocapture readonly %xtrans, [4 x double]* nocapture readonly %xinvT) #0 {
  %norm = alloca [4 x double], align 16, !llfi_index !6638
  %coord = alloca [4 x double], align 16, !llfi_index !6639
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !6640
  %2 = load %struct.element** %1, align 8, !llfi_index !6641
  %3 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !6642
  %4 = load i64* %3, align 8, !llfi_index !6643
  %5 = getelementptr inbounds %struct.element* %2, i64 0, i32 2, !llfi_index !6644
  %6 = load i8** %5, align 8, !llfi_index !6645
  %7 = getelementptr inbounds i8* %6, i64 40, !llfi_index !6646
  %8 = bitcast i8* %7 to [3 x double]**, !llfi_index !6647
  %9 = load [3 x double]** %8, align 8, !llfi_index !6648
  %10 = getelementptr inbounds [3 x double]* %9, i64 0, i64 0, !llfi_index !6649
  %11 = load double* %10, align 8, !llfi_index !6650
  %12 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 0, !llfi_index !6651
  store double %11, double* %12, align 16, !llfi_index !6652
  %13 = getelementptr inbounds [3 x double]* %9, i64 0, i64 1, !llfi_index !6653
  %14 = load double* %13, align 8, !llfi_index !6654
  %15 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 1, !llfi_index !6655
  store double %14, double* %15, align 8, !llfi_index !6656
  %16 = getelementptr inbounds [3 x double]* %9, i64 0, i64 2, !llfi_index !6657
  %17 = load double* %16, align 8, !llfi_index !6658
  %18 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 2, !llfi_index !6659
  store double %17, double* %18, align 16, !llfi_index !6660
  %19 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 3, !llfi_index !6661
  store double 1.000000e+00, double* %19, align 8, !llfi_index !6662
  %20 = load double* %12, align 16, !llfi_index !6663
  %21 = fcmp une double %20, 1.000000e+32, !llfi_index !6664
  %22 = load double* %15, align 8, !llfi_index !6665
  %23 = fcmp une double %22, 1.000000e+32, !llfi_index !6666
  %or.cond10 = and i1 %21, %23, !llfi_index !6667
  %24 = load double* %18, align 16, !llfi_index !6668
  %25 = fcmp une double %24, 1.000000e+32, !llfi_index !6669
  %or.cond411 = and i1 %or.cond10, %25, !llfi_index !6670
  br i1 %or.cond411, label %.lr.ph13, label %.critedge.preheader, !llfi_index !6671

.critedge.preheader:                              ; preds = %.lr.ph13, %0
  %26 = icmp sgt i64 %4, 0, !llfi_index !6672
  br i1 %26, label %.lr.ph, label %.critedge._crit_edge, !llfi_index !6673

.lr.ph:                                           ; preds = %.critedge.preheader
  %27 = getelementptr inbounds [4 x double]* %norm, i64 0, i64 0, !llfi_index !6674
  %28 = getelementptr inbounds [4 x double]* %norm, i64 0, i64 1, !llfi_index !6675
  %29 = getelementptr inbounds [4 x double]* %norm, i64 0, i64 2, !llfi_index !6676
  %30 = getelementptr inbounds [4 x double]* %norm, i64 0, i64 3, !llfi_index !6677
  br label %50, !llfi_index !6678

.lr.ph13:                                         ; preds = %.lr.ph13, %0
  %vptr.012 = phi [3 x double]* [ %37, %.lr.ph13 ], [ %9, %0 ], !llfi_index !6679
  call void @VecMatMult(double* %12, [4 x double]* %xtrans, double* %12), !llfi_index !6680
  %31 = load double* %12, align 16, !llfi_index !6681
  %32 = getelementptr inbounds [3 x double]* %vptr.012, i64 0, i64 0, !llfi_index !6682
  store double %31, double* %32, align 8, !llfi_index !6683
  %33 = load double* %15, align 8, !llfi_index !6684
  %34 = getelementptr inbounds [3 x double]* %vptr.012, i64 0, i64 1, !llfi_index !6685
  store double %33, double* %34, align 8, !llfi_index !6686
  %35 = load double* %18, align 16, !llfi_index !6687
  %36 = getelementptr inbounds [3 x double]* %vptr.012, i64 0, i64 2, !llfi_index !6688
  store double %35, double* %36, align 8, !llfi_index !6689
  %37 = getelementptr inbounds [3 x double]* %vptr.012, i64 1, !llfi_index !6690
  %38 = getelementptr inbounds [3 x double]* %37, i64 0, i64 0, !llfi_index !6691
  %39 = load double* %38, align 8, !llfi_index !6692
  store double %39, double* %12, align 16, !llfi_index !6693
  %40 = getelementptr inbounds [3 x double]* %vptr.012, i64 1, i64 1, !llfi_index !6694
  %41 = load double* %40, align 8, !llfi_index !6695
  store double %41, double* %15, align 8, !llfi_index !6696
  %42 = getelementptr inbounds [3 x double]* %vptr.012, i64 1, i64 2, !llfi_index !6697
  %43 = load double* %42, align 8, !llfi_index !6698
  store double %43, double* %18, align 16, !llfi_index !6699
  store double 1.000000e+00, double* %19, align 8, !llfi_index !6700
  %44 = load double* %12, align 16, !llfi_index !6701
  %45 = fcmp une double %44, 1.000000e+32, !llfi_index !6702
  %46 = load double* %15, align 8, !llfi_index !6703
  %47 = fcmp une double %46, 1.000000e+32, !llfi_index !6704
  %or.cond = and i1 %45, %47, !llfi_index !6705
  %48 = load double* %18, align 16, !llfi_index !6706
  %49 = fcmp une double %48, 1.000000e+32, !llfi_index !6707
  %or.cond4 = and i1 %or.cond, %49, !llfi_index !6708
  br i1 %or.cond4, label %.lr.ph13, label %.critedge.preheader, !llfi_index !6709

; <label>:50                                      ; preds = %.critedge, %.lr.ph
  %pe.09 = phi %struct.element* [ %2, %.lr.ph ], [ %120, %.critedge ], !llfi_index !6710
  %i.08 = phi i64 [ 0, %.lr.ph ], [ %121, %.critedge ], !llfi_index !6711
  %51 = getelementptr inbounds %struct.element* %pe.09, i64 0, i32 2, !llfi_index !6712
  %52 = load i8** %51, align 8, !llfi_index !6713
  %53 = getelementptr inbounds i8* %52, i64 8, !llfi_index !6714
  %54 = bitcast i8* %53 to double*, !llfi_index !6715
  %55 = load double* %54, align 8, !llfi_index !6716
  store double %55, double* %27, align 16, !llfi_index !6717
  %56 = getelementptr inbounds i8* %52, i64 16, !llfi_index !6718
  %57 = bitcast i8* %56 to double*, !llfi_index !6719
  %58 = load double* %57, align 8, !llfi_index !6720
  store double %58, double* %28, align 8, !llfi_index !6721
  %59 = getelementptr inbounds i8* %52, i64 24, !llfi_index !6722
  %60 = bitcast i8* %59 to double*, !llfi_index !6723
  %61 = load double* %60, align 8, !llfi_index !6724
  store double %61, double* %29, align 16, !llfi_index !6725
  store double 0.000000e+00, double* %30, align 8, !llfi_index !6726
  call void @VecMatMult(double* %27, [4 x double]* %xinvT, double* %27), !llfi_index !6727
  call void @VecNorm(double* %27), !llfi_index !6728
  %62 = load double* %27, align 16, !llfi_index !6729
  store double %62, double* %54, align 8, !llfi_index !6730
  %63 = load double* %28, align 8, !llfi_index !6731
  store double %63, double* %57, align 8, !llfi_index !6732
  %64 = load double* %29, align 16, !llfi_index !6733
  store double %64, double* %60, align 8, !llfi_index !6734
  %65 = getelementptr inbounds i8* %52, i64 40, !llfi_index !6735
  %66 = bitcast i8* %65 to [3 x double]**, !llfi_index !6736
  %67 = load [3 x double]** %66, align 8, !llfi_index !6737
  %68 = getelementptr inbounds i8* %52, i64 48, !llfi_index !6738
  %69 = bitcast i8* %68 to i64**, !llfi_index !6739
  %70 = load i64** %69, align 8, !llfi_index !6740
  %71 = load i64* %70, align 8, !llfi_index !6741
  %72 = load double* %54, align 8, !llfi_index !6742
  %73 = getelementptr inbounds [3 x double]* %67, i64 %71, i64 0, !llfi_index !6743
  %74 = load double* %73, align 8, !llfi_index !6744
  %75 = fmul double %72, %74, !llfi_index !6745
  %76 = load double* %57, align 8, !llfi_index !6746
  %77 = getelementptr inbounds [3 x double]* %67, i64 %71, i64 1, !llfi_index !6747
  %78 = load double* %77, align 8, !llfi_index !6748
  %79 = fmul double %76, %78, !llfi_index !6749
  %80 = fadd double %75, %79, !llfi_index !6750
  %81 = getelementptr inbounds [3 x double]* %67, i64 %71, i64 2, !llfi_index !6751
  %82 = load double* %81, align 8, !llfi_index !6752
  %83 = fmul double %64, %82, !llfi_index !6753
  %84 = fadd double %80, %83, !llfi_index !6754
  %85 = fsub double -0.000000e+00, %84, !llfi_index !6755
  %86 = getelementptr inbounds i8* %52, i64 32, !llfi_index !6756
  %87 = bitcast i8* %86 to double*, !llfi_index !6757
  store double %85, double* %87, align 8, !llfi_index !6758
  %88 = load double* %54, align 8, !llfi_index !6759
  %89 = fcmp ogt double %88, 0.000000e+00, !llfi_index !6760
  br i1 %89, label %92, label %90, !llfi_index !6761

; <label>:90                                      ; preds = %50
  %91 = fsub double -0.000000e+00, %88, !llfi_index !6762
  br label %92, !llfi_index !6763

; <label>:92                                      ; preds = %90, %50
  %93 = phi double [ %91, %90 ], [ %88, %50 ], !llfi_index !6764
  store double %93, double* %27, align 16, !llfi_index !6765
  %94 = load double* %57, align 8, !llfi_index !6766
  %95 = fcmp ogt double %94, 0.000000e+00, !llfi_index !6767
  br i1 %95, label %98, label %96, !llfi_index !6768

; <label>:96                                      ; preds = %92
  %97 = fsub double -0.000000e+00, %94, !llfi_index !6769
  br label %98, !llfi_index !6770

; <label>:98                                      ; preds = %96, %92
  %99 = phi double [ %97, %96 ], [ %94, %92 ], !llfi_index !6771
  store double %99, double* %28, align 8, !llfi_index !6772
  %100 = load double* %60, align 8, !llfi_index !6773
  %101 = fcmp ogt double %100, 0.000000e+00, !llfi_index !6774
  br i1 %101, label %104, label %102, !llfi_index !6775

; <label>:102                                     ; preds = %98
  %103 = fsub double -0.000000e+00, %100, !llfi_index !6776
  br label %104, !llfi_index !6777

; <label>:104                                     ; preds = %102, %98
  %105 = phi double [ %103, %102 ], [ %100, %98 ], !llfi_index !6778
  store double %105, double* %29, align 16, !llfi_index !6779
  %106 = load double* %27, align 16, !llfi_index !6780
  %107 = load double* %28, align 8, !llfi_index !6781
  %108 = fcmp ult double %106, %107, !llfi_index !6782
  %109 = fcmp ult double %106, %105, !llfi_index !6783
  %or.cond5 = or i1 %108, %109, !llfi_index !6784
  br i1 %or.cond5, label %113, label %110, !llfi_index !6785

; <label>:110                                     ; preds = %104
  %111 = getelementptr inbounds i8* %52, i64 56, !llfi_index !6786
  %112 = bitcast i8* %111 to i64*, !llfi_index !6787
  store i64 1, i64* %112, align 8, !llfi_index !6788
  br label %.critedge, !llfi_index !6789

; <label>:113                                     ; preds = %104
  %114 = fcmp ult double %107, %106, !llfi_index !6790
  %115 = fcmp ult double %107, %105, !llfi_index !6791
  %or.cond7 = or i1 %114, %115, !llfi_index !6792
  %116 = getelementptr inbounds i8* %52, i64 56, !llfi_index !6793
  %117 = bitcast i8* %116 to i64*, !llfi_index !6794
  br i1 %or.cond7, label %119, label %118, !llfi_index !6795

; <label>:118                                     ; preds = %113
  store i64 2, i64* %117, align 8, !llfi_index !6796
  br label %.critedge, !llfi_index !6797

; <label>:119                                     ; preds = %113
  store i64 3, i64* %117, align 8, !llfi_index !6798
  br label %.critedge, !llfi_index !6799

.critedge:                                        ; preds = %119, %118, %110
  %120 = getelementptr inbounds %struct.element* %pe.09, i64 1, !llfi_index !6800
  %121 = add nsw i64 %i.08, 1, !llfi_index !6801
  %exitcond = icmp eq i64 %121, %4, !llfi_index !6802
  br i1 %exitcond, label %.critedge._crit_edge, label %50, !llfi_index !6803

.critedge._crit_edge:                             ; preds = %.critedge, %.critedge.preheader
  ret void, !llfi_index !6804
}

; Function Attrs: nounwind uwtable
define void @PolyRead(%struct.object* %po, %struct._IO_FILE* %pf) #0 {
  %totalverts = alloca i64, align 8, !llfi_index !6805
  %normstr = alloca [5 x i8], align 1, !llfi_index !6806
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !6807
  %2 = load %struct.element** %1, align 8, !llfi_index !6808
  %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %pf, i8* getelementptr inbounds ([4 x i8]* @.str4352, i64 0, i64 0), i64* %totalverts) #2, !llfi_index !6809
  %4 = icmp eq i32 %3, 1, !llfi_index !6810
  br i1 %4, label %6, label %5, !llfi_index !6811

; <label>:5                                       ; preds = %0
  %puts2 = call i32 @puts(i8* getelementptr inbounds ([31 x i8]* @str52, i64 0, i64 0)), !llfi_index !6812
  call void @exit(i32 -1) #11, !llfi_index !6813
  unreachable, !llfi_index !6814

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !6815
  %8 = load i64* %7, align 8, !llfi_index !6816
  %9 = shl i64 %8, 6, !llfi_index !6817
  %10 = call i8* @GlobalMalloc(i64 %9, i8* getelementptr inbounds ([7 x i8]* @.str6354, i64 0, i64 0)), !llfi_index !6818
  %11 = bitcast i8* %10 to %struct.poly*, !llfi_index !6819
  %12 = load i64* %totalverts, align 8, !llfi_index !6820
  %13 = mul i64 %12, 24, !llfi_index !6821
  %14 = add i64 %13, 24, !llfi_index !6822
  %15 = call i8* @GlobalMalloc(i64 %14, i8* getelementptr inbounds ([7 x i8]* @.str6354, i64 0, i64 0)), !llfi_index !6823
  %16 = bitcast i8* %15 to [3 x double]*, !llfi_index !6824
  %17 = getelementptr inbounds [5 x i8]* %normstr, i64 0, i64 0, !llfi_index !6825
  %18 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %pf, i8* getelementptr inbounds ([4 x i8]* @.str7355, i64 0, i64 0), i8* %17) #2, !llfi_index !6826
  %19 = icmp eq i32 %18, 1, !llfi_index !6827
  br i1 %19, label %21, label %20, !llfi_index !6828

; <label>:20                                      ; preds = %6
  %puts1 = call i32 @puts(i8* getelementptr inbounds ([42 x i8]* @str51, i64 0, i64 0)), !llfi_index !6829
  call void @exit(i32 -1) #11, !llfi_index !6830
  unreachable, !llfi_index !6831

; <label>:21                                      ; preds = %6
  %22 = getelementptr inbounds [5 x i8]* %normstr, i64 0, i64 2, !llfi_index !6832
  %23 = load i8* %22, align 1, !llfi_index !6833
  %24 = icmp eq i8 %23, 121, !llfi_index !6834
  %25 = load i64* %totalverts, align 8, !llfi_index !6835
  %26 = icmp sgt i64 %25, 0, !llfi_index !6836
  %27 = bitcast i8* %15 to double*, !llfi_index !6837
  br i1 %26, label %.lr.ph39, label %41, !llfi_index !6838

.lr.ph39:                                         ; preds = %35, %21
  %28 = phi double* [ %36, %35 ], [ %27, %21 ], !llfi_index !6839
  %i.036 = phi i64 [ %37, %35 ], [ 0, %21 ], !llfi_index !6840
  %29 = getelementptr inbounds double* %28, i64 1, !llfi_index !6841
  %30 = getelementptr inbounds double* %28, i64 2, !llfi_index !6842
  %31 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %pf, i8* getelementptr inbounds ([12 x i8]* @.str9357, i64 0, i64 0), double* %28, double* %29, double* %30) #2, !llfi_index !6843
  %32 = icmp eq i32 %31, 3, !llfi_index !6844
  br i1 %32, label %35, label %33, !llfi_index !6845

; <label>:33                                      ; preds = %.lr.ph39
  %34 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([32 x i8]* @.str10358, i64 0, i64 0), i64 %i.036) #2, !llfi_index !6846
  call void @exit(i32 -1) #11, !llfi_index !6847
  unreachable, !llfi_index !6848

; <label>:35                                      ; preds = %.lr.ph39
  %36 = getelementptr inbounds double* %28, i64 3, !llfi_index !6849
  %37 = add nsw i64 %i.036, 1, !llfi_index !6850
  %38 = load i64* %totalverts, align 8, !llfi_index !6851
  %39 = icmp slt i64 %37, %38, !llfi_index !6852
  br i1 %39, label %.lr.ph39, label %._crit_edge40, !llfi_index !6853

._crit_edge40:                                    ; preds = %35
  %40 = bitcast double* %36 to [3 x double]*, !llfi_index !6854
  br label %41, !llfi_index !6855

; <label>:41                                      ; preds = %._crit_edge40, %21
  %.lcssa34 = phi double* [ %36, %._crit_edge40 ], [ %27, %21 ], !llfi_index !6856
  %vptr.0.lcssa = phi [3 x double]* [ %40, %._crit_edge40 ], [ %16, %21 ], !llfi_index !6857
  store double 1.000000e+32, double* %.lcssa34, align 8, !llfi_index !6858
  %42 = getelementptr inbounds [3 x double]* %vptr.0.lcssa, i64 0, i64 1, !llfi_index !6859
  store double 1.000000e+32, double* %42, align 8, !llfi_index !6860
  %43 = getelementptr inbounds [3 x double]* %vptr.0.lcssa, i64 0, i64 2, !llfi_index !6861
  store double 1.000000e+32, double* %43, align 8, !llfi_index !6862
  %44 = load i64* %7, align 8, !llfi_index !6863
  %45 = icmp sgt i64 %44, 0, !llfi_index !6864
  br i1 %45, label %.lr.ph30, label %._crit_edge31, !llfi_index !6865

.lr.ph30:                                         ; preds = %211, %41
  %pe.028 = phi %struct.element* [ %238, %211 ], [ %2, %41 ], !llfi_index !6866
  %pp.027 = phi %struct.poly* [ %237, %211 ], [ %11, %41 ], !llfi_index !6867
  %vptmp2.026 = phi [3 x double]* [ %vptmp2.2, %211 ], [ undef, %41 ], !llfi_index !6868
  %i.124 = phi i64 [ %239, %211 ], [ 0, %41 ], !llfi_index !6869
  %46 = getelementptr inbounds %struct.poly* %pp.027, i64 0, i32 0, !llfi_index !6870
  %47 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %pf, i8* getelementptr inbounds ([4 x i8]* @.str4352, i64 0, i64 0), i64* %46) #2, !llfi_index !6871
  %48 = icmp eq i32 %47, 1, !llfi_index !6872
  br i1 %48, label %50, label %49, !llfi_index !6873

; <label>:49                                      ; preds = %.lr.ph30
  %puts = call i32 @puts(i8* getelementptr inbounds ([33 x i8]* @str50, i64 0, i64 0)), !llfi_index !6874
  call void @exit(i32 -1) #11, !llfi_index !6875
  unreachable, !llfi_index !6876

; <label>:50                                      ; preds = %.lr.ph30
  %51 = load i64* %46, align 8, !llfi_index !6877
  %52 = icmp sgt i64 %51, 100, !llfi_index !6878
  br i1 %52, label %53, label %55, !llfi_index !6879

; <label>:53                                      ; preds = %50
  %54 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([45 x i8]* @.str12360, i64 0, i64 0), i64 %51) #2, !llfi_index !6880
  call void @exit(i32 -1) #11, !llfi_index !6881
  unreachable, !llfi_index !6882

; <label>:55                                      ; preds = %50
  br i1 %24, label %56, label %64, !llfi_index !6883

; <label>:56                                      ; preds = %55
  %57 = getelementptr inbounds %struct.poly* %pp.027, i64 0, i32 1, i64 0, !llfi_index !6884
  %58 = getelementptr inbounds %struct.poly* %pp.027, i64 0, i32 1, i64 1, !llfi_index !6885
  %59 = getelementptr inbounds %struct.poly* %pp.027, i64 0, i32 1, i64 2, !llfi_index !6886
  %60 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %pf, i8* getelementptr inbounds ([13 x i8]* @.str13361, i64 0, i64 0), double* %57, double* %58, double* %59) #2, !llfi_index !6887
  %61 = icmp eq i32 %60, 3, !llfi_index !6888
  br i1 %61, label %64, label %62, !llfi_index !6889

; <label>:62                                      ; preds = %56
  %63 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str14362, i64 0, i64 0), i64 %i.124) #2, !llfi_index !6890
  call void @exit(i32 -1) #11, !llfi_index !6891
  unreachable, !llfi_index !6892

; <label>:64                                      ; preds = %56, %55
  %65 = getelementptr inbounds %struct.poly* %pp.027, i64 0, i32 3, !llfi_index !6893
  store [3 x double]* %16, [3 x double]** %65, align 8, !llfi_index !6894
  %66 = load i64* %46, align 8, !llfi_index !6895
  %67 = shl i64 %66, 3, !llfi_index !6896
  %68 = call i8* @GlobalMalloc(i64 %67, i8* getelementptr inbounds ([7 x i8]* @.str6354, i64 0, i64 0)), !llfi_index !6897
  %69 = bitcast i8* %68 to i64*, !llfi_index !6898
  %70 = getelementptr inbounds %struct.poly* %pp.027, i64 0, i32 4, !llfi_index !6899
  store i64* %69, i64** %70, align 8, !llfi_index !6900
  %71 = load i64* %46, align 8, !llfi_index !6901
  %72 = icmp sgt i64 %71, 0, !llfi_index !6902
  br i1 %72, label %.lr.ph, label %._crit_edge, !llfi_index !6903

.lr.ph:                                           ; preds = %77, %64
  %j.04 = phi i64 [ %79, %77 ], [ 0, %64 ], !llfi_index !6904
  %vindex.03 = phi i64* [ %78, %77 ], [ %69, %64 ], !llfi_index !6905
  %73 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %pf, i8* getelementptr inbounds ([4 x i8]* @.str4352, i64 0, i64 0), i64* %vindex.03) #2, !llfi_index !6906
  %74 = icmp eq i32 %73, 1, !llfi_index !6907
  br i1 %74, label %77, label %75, !llfi_index !6908

; <label>:75                                      ; preds = %.lr.ph
  %76 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str15363, i64 0, i64 0), i64 %i.124) #2, !llfi_index !6909
  call void @exit(i32 -1) #11, !llfi_index !6910
  unreachable, !llfi_index !6911

; <label>:77                                      ; preds = %.lr.ph
  %78 = getelementptr inbounds i64* %vindex.03, i64 1, !llfi_index !6912
  %79 = add nsw i64 %j.04, 1, !llfi_index !6913
  %80 = load i64* %46, align 8, !llfi_index !6914
  %81 = icmp slt i64 %79, %80, !llfi_index !6915
  br i1 %81, label %.lr.ph, label %._crit_edge, !llfi_index !6916

._crit_edge:                                      ; preds = %77, %64
  %82 = load i64** %70, align 8, !llfi_index !6917
  br i1 %24, label %211, label %83, !llfi_index !6918

; <label>:83                                      ; preds = %._crit_edge
  %84 = load i64* %82, align 8, !llfi_index !6919
  %85 = getelementptr inbounds [3 x double]* %16, i64 %84, !llfi_index !6920
  %86 = load i64* %46, align 8, !llfi_index !6921
  %87 = add nsw i64 %86, -2, !llfi_index !6922
  %88 = icmp sgt i64 %87, 0, !llfi_index !6923
  br i1 %88, label %.lr.ph12.preheader, label %._crit_edge13, !llfi_index !6924

.lr.ph12.preheader:                               ; preds = %83
  %89 = add i64 %86, -2, !llfi_index !6925
  br label %.lr.ph12, !llfi_index !6926

.lr.ph12:                                         ; preds = %.lr.ph12, %.lr.ph12.preheader
  %vp.010 = phi [3 x double]* [ %92, %.lr.ph12 ], [ %85, %.lr.ph12.preheader ], !llfi_index !6927
  %pnorm.sroa.0.09 = phi double [ %129, %.lr.ph12 ], [ 0.000000e+00, %.lr.ph12.preheader ], !llfi_index !6928
  %pnorm.sroa.14.08 = phi double [ %130, %.lr.ph12 ], [ 0.000000e+00, %.lr.ph12.preheader ], !llfi_index !6929
  %pnorm.sroa.28.07 = phi double [ %131, %.lr.ph12 ], [ 0.000000e+00, %.lr.ph12.preheader ], !llfi_index !6930
  %j.16 = phi i64 [ %132, %.lr.ph12 ], [ 0, %.lr.ph12.preheader ], !llfi_index !6931
  %vindex.15 = phi i64* [ %90, %.lr.ph12 ], [ %82, %.lr.ph12.preheader ], !llfi_index !6932
  %90 = getelementptr inbounds i64* %vindex.15, i64 1, !llfi_index !6933
  %91 = load i64* %90, align 8, !llfi_index !6934
  %92 = getelementptr inbounds [3 x double]* %16, i64 %91, !llfi_index !6935
  %93 = getelementptr inbounds i64* %vindex.15, i64 2, !llfi_index !6936
  %94 = load i64* %93, align 8, !llfi_index !6937
  %95 = getelementptr inbounds [3 x double]* %16, i64 %94, !llfi_index !6938
  %96 = getelementptr inbounds [3 x double]* %92, i64 0, i64 0, !llfi_index !6939
  %97 = load double* %96, align 8, !llfi_index !6940
  %98 = getelementptr inbounds [3 x double]* %vp.010, i64 0, i64 0, !llfi_index !6941
  %99 = load double* %98, align 8, !llfi_index !6942
  %100 = fsub double %97, %99, !llfi_index !6943
  %101 = getelementptr inbounds [3 x double]* %16, i64 %91, i64 1, !llfi_index !6944
  %102 = load double* %101, align 8, !llfi_index !6945
  %103 = getelementptr inbounds [3 x double]* %vp.010, i64 0, i64 1, !llfi_index !6946
  %104 = load double* %103, align 8, !llfi_index !6947
  %105 = fsub double %102, %104, !llfi_index !6948
  %106 = getelementptr inbounds [3 x double]* %16, i64 %91, i64 2, !llfi_index !6949
  %107 = load double* %106, align 8, !llfi_index !6950
  %108 = getelementptr inbounds [3 x double]* %vp.010, i64 0, i64 2, !llfi_index !6951
  %109 = load double* %108, align 8, !llfi_index !6952
  %110 = fsub double %107, %109, !llfi_index !6953
  %111 = getelementptr inbounds [3 x double]* %95, i64 0, i64 0, !llfi_index !6954
  %112 = load double* %111, align 8, !llfi_index !6955
  %113 = fsub double %112, %97, !llfi_index !6956
  %114 = getelementptr inbounds [3 x double]* %16, i64 %94, i64 1, !llfi_index !6957
  %115 = load double* %114, align 8, !llfi_index !6958
  %116 = fsub double %115, %102, !llfi_index !6959
  %117 = getelementptr inbounds [3 x double]* %16, i64 %94, i64 2, !llfi_index !6960
  %118 = load double* %117, align 8, !llfi_index !6961
  %119 = fsub double %118, %107, !llfi_index !6962
  %120 = fmul double %105, %119, !llfi_index !6963
  %121 = fmul double %110, %116, !llfi_index !6964
  %122 = fsub double %120, %121, !llfi_index !6965
  %123 = fmul double %110, %113, !llfi_index !6966
  %124 = fmul double %100, %119, !llfi_index !6967
  %125 = fsub double %123, %124, !llfi_index !6968
  %126 = fmul double %100, %116, !llfi_index !6969
  %127 = fmul double %105, %113, !llfi_index !6970
  %128 = fsub double %126, %127, !llfi_index !6971
  %129 = fadd double %pnorm.sroa.0.09, %122, !llfi_index !6972
  %130 = fadd double %pnorm.sroa.14.08, %125, !llfi_index !6973
  %131 = fadd double %pnorm.sroa.28.07, %128, !llfi_index !6974
  %132 = add nsw i64 %j.16, 1, !llfi_index !6975
  %exitcond = icmp eq i64 %132, %89, !llfi_index !6976
  br i1 %exitcond, label %._crit_edge13, label %.lr.ph12, !llfi_index !6977

._crit_edge13:                                    ; preds = %.lr.ph12, %83
  %vptmp2.1.lcssa = phi [3 x double]* [ %vptmp2.026, %83 ], [ %95, %.lr.ph12 ], !llfi_index !6978
  %vp.0.lcssa = phi [3 x double]* [ %85, %83 ], [ %92, %.lr.ph12 ], !llfi_index !6979
  %pnorm.sroa.0.0.lcssa = phi double [ 0.000000e+00, %83 ], [ %129, %.lr.ph12 ], !llfi_index !6980
  %pnorm.sroa.14.0.lcssa = phi double [ 0.000000e+00, %83 ], [ %130, %.lr.ph12 ], !llfi_index !6981
  %pnorm.sroa.28.0.lcssa = phi double [ 0.000000e+00, %83 ], [ %131, %.lr.ph12 ], !llfi_index !6982
  %133 = getelementptr inbounds [3 x double]* %vptmp2.1.lcssa, i64 0, i64 0, !llfi_index !6983
  %134 = load double* %133, align 8, !llfi_index !6984
  %135 = getelementptr inbounds [3 x double]* %vp.0.lcssa, i64 0, i64 0, !llfi_index !6985
  %136 = load double* %135, align 8, !llfi_index !6986
  %137 = fsub double %134, %136, !llfi_index !6987
  %138 = getelementptr inbounds [3 x double]* %vptmp2.1.lcssa, i64 0, i64 1, !llfi_index !6988
  %139 = load double* %138, align 8, !llfi_index !6989
  %140 = getelementptr inbounds [3 x double]* %vp.0.lcssa, i64 0, i64 1, !llfi_index !6990
  %141 = load double* %140, align 8, !llfi_index !6991
  %142 = fsub double %139, %141, !llfi_index !6992
  %143 = getelementptr inbounds [3 x double]* %vptmp2.1.lcssa, i64 0, i64 2, !llfi_index !6993
  %144 = load double* %143, align 8, !llfi_index !6994
  %145 = getelementptr inbounds [3 x double]* %vp.0.lcssa, i64 0, i64 2, !llfi_index !6995
  %146 = load double* %145, align 8, !llfi_index !6996
  %147 = fsub double %144, %146, !llfi_index !6997
  %148 = load i64** %70, align 8, !llfi_index !6998
  %149 = load i64* %148, align 8, !llfi_index !6999
  %150 = getelementptr inbounds [3 x double]* %16, i64 %149, i64 0, !llfi_index !7000
  %151 = load double* %150, align 8, !llfi_index !7001
  %152 = fsub double %151, %134, !llfi_index !7002
  %153 = getelementptr inbounds [3 x double]* %16, i64 %149, i64 1, !llfi_index !7003
  %154 = load double* %153, align 8, !llfi_index !7004
  %155 = fsub double %154, %139, !llfi_index !7005
  %156 = getelementptr inbounds [3 x double]* %16, i64 %149, i64 2, !llfi_index !7006
  %157 = load double* %156, align 8, !llfi_index !7007
  %158 = fsub double %157, %144, !llfi_index !7008
  %159 = fmul double %142, %158, !llfi_index !7009
  %160 = fmul double %147, %155, !llfi_index !7010
  %161 = fsub double %159, %160, !llfi_index !7011
  %162 = fmul double %147, %152, !llfi_index !7012
  %163 = fmul double %137, %158, !llfi_index !7013
  %164 = fsub double %162, %163, !llfi_index !7014
  %165 = fmul double %137, %155, !llfi_index !7015
  %166 = fmul double %142, %152, !llfi_index !7016
  %167 = fsub double %165, %166, !llfi_index !7017
  %168 = fadd double %pnorm.sroa.0.0.lcssa, %161, !llfi_index !7018
  %169 = fadd double %pnorm.sroa.14.0.lcssa, %164, !llfi_index !7019
  %170 = fadd double %pnorm.sroa.28.0.lcssa, %167, !llfi_index !7020
  %171 = getelementptr inbounds i64* %148, i64 1, !llfi_index !7021
  %172 = load i64* %171, align 8, !llfi_index !7022
  %173 = getelementptr inbounds [3 x double]* %16, i64 %172, i64 0, !llfi_index !7023
  %174 = load double* %173, align 8, !llfi_index !7024
  %175 = fsub double %174, %151, !llfi_index !7025
  %176 = getelementptr inbounds [3 x double]* %16, i64 %172, i64 1, !llfi_index !7026
  %177 = load double* %176, align 8, !llfi_index !7027
  %178 = fsub double %177, %154, !llfi_index !7028
  %179 = getelementptr inbounds [3 x double]* %16, i64 %172, i64 2, !llfi_index !7029
  %180 = load double* %179, align 8, !llfi_index !7030
  %181 = fsub double %180, %157, !llfi_index !7031
  %182 = fmul double %155, %181, !llfi_index !7032
  %183 = fmul double %158, %178, !llfi_index !7033
  %184 = fsub double %182, %183, !llfi_index !7034
  %185 = fmul double %158, %175, !llfi_index !7035
  %186 = fmul double %152, %181, !llfi_index !7036
  %187 = fsub double %185, %186, !llfi_index !7037
  %188 = fmul double %152, %178, !llfi_index !7038
  %189 = fmul double %155, %175, !llfi_index !7039
  %190 = fsub double %188, %189, !llfi_index !7040
  %191 = fadd double %168, %184, !llfi_index !7041
  %192 = fadd double %169, %187, !llfi_index !7042
  %193 = fadd double %170, %190, !llfi_index !7043
  %194 = fmul double %191, %191, !llfi_index !7044
  %195 = fmul double %192, %192, !llfi_index !7045
  %196 = fadd double %194, %195, !llfi_index !7046
  %197 = fmul double %193, %193, !llfi_index !7047
  %198 = fadd double %197, %196, !llfi_index !7048
  %199 = call double @sqrt(double %198) #2, !llfi_index !7049
  %200 = fdiv double 1.000000e+00, %199, !llfi_index !7050
  %201 = fmul double %200, %191, !llfi_index !7051
  %202 = getelementptr inbounds %struct.poly* %pp.027, i64 0, i32 1, i64 0, !llfi_index !7052
  store double %201, double* %202, align 8, !llfi_index !7053
  %203 = call double @sqrt(double %198) #2, !llfi_index !7054
  %204 = fdiv double 1.000000e+00, %203, !llfi_index !7055
  %205 = fmul double %204, %192, !llfi_index !7056
  %206 = getelementptr inbounds %struct.poly* %pp.027, i64 0, i32 1, i64 1, !llfi_index !7057
  store double %205, double* %206, align 8, !llfi_index !7058
  %207 = call double @sqrt(double %198) #2, !llfi_index !7059
  %208 = fdiv double 1.000000e+00, %207, !llfi_index !7060
  %209 = fmul double %193, %208, !llfi_index !7061
  %210 = getelementptr inbounds %struct.poly* %pp.027, i64 0, i32 1, i64 2, !llfi_index !7062
  store double %209, double* %210, align 8, !llfi_index !7063
  br label %211, !llfi_index !7064

; <label>:211                                     ; preds = %._crit_edge13, %._crit_edge
  %vptmp2.2 = phi [3 x double]* [ %vptmp2.026, %._crit_edge ], [ %vptmp2.1.lcssa, %._crit_edge13 ], !llfi_index !7065
  %212 = load [3 x double]** %65, align 8, !llfi_index !7066
  %213 = load i64** %70, align 8, !llfi_index !7067
  %214 = load i64* %213, align 8, !llfi_index !7068
  %215 = getelementptr inbounds %struct.poly* %pp.027, i64 0, i32 1, i64 0, !llfi_index !7069
  %216 = load double* %215, align 8, !llfi_index !7070
  %217 = getelementptr inbounds [3 x double]* %212, i64 %214, i64 0, !llfi_index !7071
  %218 = load double* %217, align 8, !llfi_index !7072
  %219 = fmul double %216, %218, !llfi_index !7073
  %220 = getelementptr inbounds %struct.poly* %pp.027, i64 0, i32 1, i64 1, !llfi_index !7074
  %221 = load double* %220, align 8, !llfi_index !7075
  %222 = getelementptr inbounds [3 x double]* %212, i64 %214, i64 1, !llfi_index !7076
  %223 = load double* %222, align 8, !llfi_index !7077
  %224 = fmul double %221, %223, !llfi_index !7078
  %225 = fadd double %219, %224, !llfi_index !7079
  %226 = getelementptr inbounds %struct.poly* %pp.027, i64 0, i32 1, i64 2, !llfi_index !7080
  %227 = load double* %226, align 8, !llfi_index !7081
  %228 = getelementptr inbounds [3 x double]* %212, i64 %214, i64 2, !llfi_index !7082
  %229 = load double* %228, align 8, !llfi_index !7083
  %230 = fmul double %227, %229, !llfi_index !7084
  %231 = fadd double %225, %230, !llfi_index !7085
  %232 = fsub double -0.000000e+00, %231, !llfi_index !7086
  %233 = getelementptr inbounds %struct.poly* %pp.027, i64 0, i32 2, !llfi_index !7087
  store double %232, double* %233, align 8, !llfi_index !7088
  %234 = bitcast %struct.poly* %pp.027 to i8*, !llfi_index !7089
  %235 = getelementptr inbounds %struct.element* %pe.028, i64 0, i32 2, !llfi_index !7090
  store i8* %234, i8** %235, align 8, !llfi_index !7091
  %236 = getelementptr inbounds %struct.element* %pe.028, i64 0, i32 1, !llfi_index !7092
  store %struct.object* %po, %struct.object** %236, align 8, !llfi_index !7093
  call void @PolyElementBoundBox(%struct.element* %pe.028, %struct.poly* %pp.027), !llfi_index !7094
  %237 = getelementptr inbounds %struct.poly* %pp.027, i64 1, !llfi_index !7095
  %238 = getelementptr inbounds %struct.element* %pe.028, i64 1, !llfi_index !7096
  %239 = add nsw i64 %i.124, 1, !llfi_index !7097
  %240 = load i64* %7, align 8, !llfi_index !7098
  %241 = icmp slt i64 %239, %240, !llfi_index !7099
  br i1 %241, label %.lr.ph30, label %._crit_edge31, !llfi_index !7100

._crit_edge31:                                    ; preds = %211, %41
  ret void, !llfi_index !7101
}

; Function Attrs: nounwind uwtable
define void @CopyRayMsg(%struct.ray* nocapture %rdst, %struct.ray* nocapture readonly %rsrc) #0 {
  %1 = getelementptr inbounds %struct.ray* %rsrc, i64 0, i32 0, !llfi_index !7102
  %2 = load i64* %1, align 8, !llfi_index !7103
  %3 = getelementptr inbounds %struct.ray* %rdst, i64 0, i32 0, !llfi_index !7104
  store i64 %2, i64* %3, align 8, !llfi_index !7105
  %4 = getelementptr inbounds %struct.ray* %rsrc, i64 0, i32 1, !llfi_index !7106
  %5 = load i64* %4, align 8, !llfi_index !7107
  %6 = getelementptr inbounds %struct.ray* %rdst, i64 0, i32 1, !llfi_index !7108
  store i64 %5, i64* %6, align 8, !llfi_index !7109
  %7 = getelementptr inbounds %struct.ray* %rsrc, i64 0, i32 2, !llfi_index !7110
  %8 = load i64* %7, align 8, !llfi_index !7111
  %9 = getelementptr inbounds %struct.ray* %rdst, i64 0, i32 2, !llfi_index !7112
  store i64 %8, i64* %9, align 8, !llfi_index !7113
  %10 = getelementptr inbounds %struct.ray* %rsrc, i64 0, i32 3, i64 0, !llfi_index !7114
  %11 = load double* %10, align 8, !llfi_index !7115
  %12 = getelementptr inbounds %struct.ray* %rdst, i64 0, i32 3, i64 0, !llfi_index !7116
  store double %11, double* %12, align 8, !llfi_index !7117
  %13 = getelementptr inbounds %struct.ray* %rsrc, i64 0, i32 3, i64 1, !llfi_index !7118
  %14 = load double* %13, align 8, !llfi_index !7119
  %15 = getelementptr inbounds %struct.ray* %rdst, i64 0, i32 3, i64 1, !llfi_index !7120
  store double %14, double* %15, align 8, !llfi_index !7121
  %16 = getelementptr inbounds %struct.ray* %rsrc, i64 0, i32 3, i64 2, !llfi_index !7122
  %17 = load double* %16, align 8, !llfi_index !7123
  %18 = getelementptr inbounds %struct.ray* %rdst, i64 0, i32 3, i64 2, !llfi_index !7124
  store double %17, double* %18, align 8, !llfi_index !7125
  %19 = getelementptr inbounds %struct.ray* %rsrc, i64 0, i32 4, i64 0, !llfi_index !7126
  %20 = load double* %19, align 8, !llfi_index !7127
  %21 = getelementptr inbounds %struct.ray* %rdst, i64 0, i32 4, i64 0, !llfi_index !7128
  store double %20, double* %21, align 8, !llfi_index !7129
  %22 = getelementptr inbounds %struct.ray* %rsrc, i64 0, i32 4, i64 1, !llfi_index !7130
  %23 = load double* %22, align 8, !llfi_index !7131
  %24 = getelementptr inbounds %struct.ray* %rdst, i64 0, i32 4, i64 1, !llfi_index !7132
  store double %23, double* %24, align 8, !llfi_index !7133
  %25 = getelementptr inbounds %struct.ray* %rsrc, i64 0, i32 4, i64 2, !llfi_index !7134
  %26 = load double* %25, align 8, !llfi_index !7135
  %27 = getelementptr inbounds %struct.ray* %rdst, i64 0, i32 4, i64 2, !llfi_index !7136
  store double %26, double* %27, align 8, !llfi_index !7137
  %28 = getelementptr inbounds %struct.ray* %rsrc, i64 0, i32 5, !llfi_index !7138
  %29 = load i64* %28, align 8, !llfi_index !7139
  %30 = getelementptr inbounds %struct.ray* %rdst, i64 0, i32 5, !llfi_index !7140
  store i64 %29, i64* %30, align 8, !llfi_index !7141
  %31 = getelementptr inbounds %struct.ray* %rsrc, i64 0, i32 10, !llfi_index !7142
  %32 = load float* %31, align 4, !llfi_index !7143
  %33 = getelementptr inbounds %struct.ray* %rdst, i64 0, i32 10, !llfi_index !7144
  store float %32, float* %33, align 4, !llfi_index !7145
  ret void, !llfi_index !7146
}

; Function Attrs: nounwind uwtable
define void @InitRayTreeStack(i64 %TreeDepth, i64 %pid) #0 {
  %1 = tail call i64 @powint(i64 2, i64 %TreeDepth), !llfi_index !7147
  %2 = add i64 %1, -1, !llfi_index !7148
  %3 = getelementptr inbounds [4096 x %struct.r_struct]* @raystruct, i64 0, i64 %pid, i32 3, !llfi_index !7149
  %4 = load i64* @NumSubRays, align 8, !llfi_index !7150
  %5 = add nsw i64 %2, %4, !llfi_index !7151
  store i64 %5, i64* %3, align 8, !llfi_index !7152
  %6 = mul i64 %5, 888, !llfi_index !7153
  %7 = tail call i8* @LocalMalloc(i64 %6, i8* getelementptr inbounds ([11 x i8]* @.str382, i64 0, i64 0)), !llfi_index !7154
  %8 = bitcast i8* %7 to %struct.ray*, !llfi_index !7155
  %9 = getelementptr inbounds [4096 x %struct.r_struct]* @raystruct, i64 0, i64 %pid, i32 1, !llfi_index !7156
  store %struct.ray* %8, %struct.ray** %9, align 8, !llfi_index !7157
  %10 = getelementptr inbounds [4096 x %struct.r_struct]* @raystruct, i64 0, i64 %pid, i32 2, !llfi_index !7158
  store i64 -1, i64* %10, align 8, !llfi_index !7159
  ret void, !llfi_index !7160
}

; Function Attrs: nounwind readnone uwtable
define i64 @powint(i64 %i, i64 %j) #4 {
  %1 = icmp sgt i64 %j, 0, !llfi_index !7161
  br i1 %1, label %.lr.ph, label %._crit_edge, !llfi_index !7162

.lr.ph:                                           ; preds = %.lr.ph, %0
  %temp.02 = phi i64 [ %2, %.lr.ph ], [ 1, %0 ], !llfi_index !7163
  %k.01 = phi i64 [ %3, %.lr.ph ], [ 0, %0 ], !llfi_index !7164
  %2 = mul nsw i64 %temp.02, %i, !llfi_index !7165
  %3 = add nsw i64 %k.01, 1, !llfi_index !7166
  %exitcond = icmp eq i64 %3, %j, !llfi_index !7167
  br i1 %exitcond, label %._crit_edge, label %.lr.ph, !llfi_index !7168

._crit_edge:                                      ; preds = %.lr.ph, %0
  %temp.0.lcssa = phi i64 [ 1, %0 ], [ %2, %.lr.ph ], !llfi_index !7169
  ret i64 %temp.0.lcssa, !llfi_index !7170
}

; Function Attrs: nounwind uwtable
define void @PushRayTreeStack(%struct.ray* nocapture readonly %rmsg, i64 %pid) #0 {
  %1 = getelementptr inbounds [4096 x %struct.r_struct]* @raystruct, i64 0, i64 %pid, i32 2, !llfi_index !7171
  %2 = load i64* %1, align 8, !llfi_index !7172
  %3 = add nsw i64 %2, 1, !llfi_index !7173
  store i64 %3, i64* %1, align 8, !llfi_index !7174
  %4 = getelementptr inbounds [4096 x %struct.r_struct]* @raystruct, i64 0, i64 %pid, i32 3, !llfi_index !7175
  %5 = load i64* %4, align 8, !llfi_index !7176
  %6 = icmp eq i64 %3, %5, !llfi_index !7177
  br i1 %6, label %7, label %11, !llfi_index !7178

; <label>:7                                       ; preds = %0
  %8 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !7179
  %9 = load i8** @ProgName, align 8, !llfi_index !7180
  %10 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([30 x i8]* @.str1383, i64 0, i64 0), i8* %9) #10, !llfi_index !7181
  tail call void @exit(i32 -1) #11, !llfi_index !7182
  unreachable, !llfi_index !7183

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds [4096 x %struct.r_struct]* @raystruct, i64 0, i64 %pid, i32 1, !llfi_index !7184
  %13 = load %struct.ray** %12, align 8, !llfi_index !7185
  %14 = getelementptr inbounds %struct.ray* %13, i64 %3, !llfi_index !7186
  tail call void @CopyRayMsg(%struct.ray* %14, %struct.ray* %rmsg), !llfi_index !7187
  ret void, !llfi_index !7188
}

; Function Attrs: nounwind uwtable
define i64 @PopRayTreeStack(%struct.ray* nocapture %rmsg, i64 %pid) #0 {
  %1 = getelementptr inbounds [4096 x %struct.r_struct]* @raystruct, i64 0, i64 %pid, i32 2, !llfi_index !7189
  %2 = load i64* %1, align 8, !llfi_index !7190
  %3 = icmp slt i64 %2, 0, !llfi_index !7191
  br i1 %3, label %10, label %4, !llfi_index !7192

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds [4096 x %struct.r_struct]* @raystruct, i64 0, i64 %pid, i32 1, !llfi_index !7193
  %6 = load %struct.ray** %5, align 8, !llfi_index !7194
  %7 = getelementptr inbounds %struct.ray* %6, i64 %2, !llfi_index !7195
  tail call void @CopyRayMsg(%struct.ray* %rmsg, %struct.ray* %7), !llfi_index !7196
  %8 = load i64* %1, align 8, !llfi_index !7197
  %9 = add nsw i64 %8, -1, !llfi_index !7198
  store i64 %9, i64* %1, align 8, !llfi_index !7199
  br label %10, !llfi_index !7200

; <label>:10                                      ; preds = %4, %0
  %.0 = phi i64 [ 1, %4 ], [ 0, %0 ], !llfi_index !7201
  ret i64 %.0, !llfi_index !7202
}

; Function Attrs: nounwind uwtable
define void @SpecularDirection(double* nocapture %R, double* nocapture readonly %N, double* nocapture readonly %I) #0 {
  %1 = load double* %I, align 8, !llfi_index !7203
  %2 = load double* %N, align 8, !llfi_index !7204
  %3 = fmul double %1, %2, !llfi_index !7205
  %4 = getelementptr inbounds double* %I, i64 1, !llfi_index !7206
  %5 = load double* %4, align 8, !llfi_index !7207
  %6 = getelementptr inbounds double* %N, i64 1, !llfi_index !7208
  %7 = load double* %6, align 8, !llfi_index !7209
  %8 = fmul double %5, %7, !llfi_index !7210
  %9 = fadd double %3, %8, !llfi_index !7211
  %10 = getelementptr inbounds double* %I, i64 2, !llfi_index !7212
  %11 = load double* %10, align 8, !llfi_index !7213
  %12 = getelementptr inbounds double* %N, i64 2, !llfi_index !7214
  %13 = load double* %12, align 8, !llfi_index !7215
  %14 = fmul double %11, %13, !llfi_index !7216
  %15 = fadd double %9, %14, !llfi_index !7217
  %16 = fcmp ogt double %15, 0.000000e+00, !llfi_index !7218
  br i1 %16, label %19, label %17, !llfi_index !7219

; <label>:17                                      ; preds = %0
  %18 = fsub double -0.000000e+00, %15, !llfi_index !7220
  br label %19, !llfi_index !7221

; <label>:19                                      ; preds = %17, %0
  %20 = phi double [ %18, %17 ], [ %15, %0 ], !llfi_index !7222
  %21 = fdiv double 1.000000e+00, %20, !llfi_index !7223
  %22 = load double* %I, align 8, !llfi_index !7224
  %23 = fmul double %21, %22, !llfi_index !7225
  %24 = load double* %4, align 8, !llfi_index !7226
  %25 = fmul double %21, %24, !llfi_index !7227
  %26 = load double* %10, align 8, !llfi_index !7228
  %27 = fmul double %21, %26, !llfi_index !7229
  %28 = load double* %N, align 8, !llfi_index !7230
  %29 = fmul double %28, 2.000000e+00, !llfi_index !7231
  %30 = load double* %6, align 8, !llfi_index !7232
  %31 = fmul double %30, 2.000000e+00, !llfi_index !7233
  %32 = load double* %12, align 8, !llfi_index !7234
  %33 = fmul double %32, 2.000000e+00, !llfi_index !7235
  %34 = fadd double %23, %29, !llfi_index !7236
  store double %34, double* %R, align 8, !llfi_index !7237
  %35 = fadd double %25, %31, !llfi_index !7238
  %36 = getelementptr inbounds double* %R, i64 1, !llfi_index !7239
  store double %35, double* %36, align 8, !llfi_index !7240
  %37 = fadd double %27, %33, !llfi_index !7241
  %38 = getelementptr inbounds double* %R, i64 2, !llfi_index !7242
  store double %37, double* %38, align 8, !llfi_index !7243
  tail call void @VecNorm(double* %R), !llfi_index !7244
  ret void, !llfi_index !7245
}

; Function Attrs: nounwind uwtable
define i64 @TransmissionDirection(double* nocapture %T, double* nocapture readonly %N, double* nocapture readonly %I, double %kn) #0 {
  %1 = load double* %I, align 8, !llfi_index !7246
  %2 = load double* %N, align 8, !llfi_index !7247
  %3 = fmul double %1, %2, !llfi_index !7248
  %4 = getelementptr inbounds double* %I, i64 1, !llfi_index !7249
  %5 = load double* %4, align 8, !llfi_index !7250
  %6 = getelementptr inbounds double* %N, i64 1, !llfi_index !7251
  %7 = load double* %6, align 8, !llfi_index !7252
  %8 = fmul double %5, %7, !llfi_index !7253
  %9 = fadd double %3, %8, !llfi_index !7254
  %10 = getelementptr inbounds double* %I, i64 2, !llfi_index !7255
  %11 = load double* %10, align 8, !llfi_index !7256
  %12 = getelementptr inbounds double* %N, i64 2, !llfi_index !7257
  %13 = load double* %12, align 8, !llfi_index !7258
  %14 = fmul double %11, %13, !llfi_index !7259
  %15 = fadd double %9, %14, !llfi_index !7260
  %16 = fcmp ogt double %15, 0.000000e+00, !llfi_index !7261
  br i1 %16, label %19, label %17, !llfi_index !7262

; <label>:17                                      ; preds = %0
  %18 = fsub double -0.000000e+00, %15, !llfi_index !7263
  br label %19, !llfi_index !7264

; <label>:19                                      ; preds = %17, %0
  %20 = phi double [ %18, %17 ], [ %15, %0 ], !llfi_index !7265
  %21 = fdiv double 1.000000e+00, %20, !llfi_index !7266
  %22 = load double* %I, align 8, !llfi_index !7267
  %23 = fmul double %21, %22, !llfi_index !7268
  %24 = load double* %4, align 8, !llfi_index !7269
  %25 = fmul double %21, %24, !llfi_index !7270
  %26 = load double* %10, align 8, !llfi_index !7271
  %27 = fmul double %21, %26, !llfi_index !7272
  %28 = load double* %N, align 8, !llfi_index !7273
  %29 = fadd double %23, %28, !llfi_index !7274
  %30 = load double* %6, align 8, !llfi_index !7275
  %31 = fadd double %25, %30, !llfi_index !7276
  %32 = load double* %12, align 8, !llfi_index !7277
  %33 = fadd double %27, %32, !llfi_index !7278
  %34 = fmul double %23, %23, !llfi_index !7279
  %35 = fmul double %25, %25, !llfi_index !7280
  %36 = fadd double %34, %35, !llfi_index !7281
  %37 = fmul double %27, %27, !llfi_index !7282
  %38 = fadd double %36, %37, !llfi_index !7283
  %39 = fmul double %29, %29, !llfi_index !7284
  %40 = fmul double %31, %31, !llfi_index !7285
  %41 = fadd double %39, %40, !llfi_index !7286
  %42 = fmul double %33, %33, !llfi_index !7287
  %43 = fadd double %41, %42, !llfi_index !7288
  %44 = fmul double %kn, %kn, !llfi_index !7289
  %45 = fmul double %44, %38, !llfi_index !7290
  %46 = fsub double %45, %43, !llfi_index !7291
  %47 = fcmp ogt double %46, 1.000000e-07, !llfi_index !7292
  br i1 %47, label %48, label %62, !llfi_index !7293

; <label>:48                                      ; preds = %19
  %49 = tail call double @sqrt(double %46) #2, !llfi_index !7294
  %50 = fdiv double 1.000000e+00, %49, !llfi_index !7295
  %51 = fmul double %29, %50, !llfi_index !7296
  %52 = fmul double %31, %50, !llfi_index !7297
  %53 = fmul double %33, %50, !llfi_index !7298
  %54 = load double* %N, align 8, !llfi_index !7299
  %55 = fsub double %51, %54, !llfi_index !7300
  store double %55, double* %T, align 8, !llfi_index !7301
  %56 = load double* %6, align 8, !llfi_index !7302
  %57 = fsub double %52, %56, !llfi_index !7303
  %58 = getelementptr inbounds double* %T, i64 1, !llfi_index !7304
  store double %57, double* %58, align 8, !llfi_index !7305
  %59 = load double* %12, align 8, !llfi_index !7306
  %60 = fsub double %53, %59, !llfi_index !7307
  %61 = getelementptr inbounds double* %T, i64 2, !llfi_index !7308
  store double %60, double* %61, align 8, !llfi_index !7309
  tail call void @VecNorm(double* %T), !llfi_index !7310
  br label %62, !llfi_index !7311

; <label>:62                                      ; preds = %48, %19
  %.0 = phi i64 [ 1, %48 ], [ 0, %19 ], !llfi_index !7312
  ret i64 %.0, !llfi_index !7313
}

; Function Attrs: nounwind uwtable
define void @Shade(double* nocapture readonly %iP, double* nocapture readonly %N, %struct.ray* nocapture readonly %ray, %struct.irecord* nocapture readonly %hit, i64 %pid) #0 {
  %Lvec = alloca [3 x double], align 16, !llfi_index !7314
  %Hvec = alloca [3 x double], align 16, !llfi_index !7315
  %shad_ray = alloca %struct.ray, align 8, !llfi_index !7316
  %secondary_ray = alloca %struct.ray, align 8, !llfi_index !7317
  %col = alloca [3 x double], align 16, !llfi_index !7318
  %1 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 1, !llfi_index !7319
  %2 = load %struct.element** %1, align 8, !llfi_index !7320
  %3 = getelementptr inbounds %struct.element* %2, i64 0, i32 1, !llfi_index !7321
  %4 = load %struct.object** %3, align 8, !llfi_index !7322
  %5 = getelementptr inbounds %struct.object* %4, i64 0, i32 6, !llfi_index !7323
  %6 = load %struct.surf** %5, align 8, !llfi_index !7324
  %7 = getelementptr inbounds %struct.surf* %6, i64 0, i32 0, i64 0, !llfi_index !7325
  %8 = load double* %7, align 8, !llfi_index !7326
  %9 = getelementptr inbounds %struct.surf* %6, i64 0, i32 0, i64 1, !llfi_index !7327
  %10 = load double* %9, align 8, !llfi_index !7328
  %11 = getelementptr inbounds %struct.surf* %6, i64 0, i32 0, i64 2, !llfi_index !7329
  %12 = load double* %11, align 8, !llfi_index !7330
  %13 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 8, i64 0), align 8, !llfi_index !7331
  %14 = fmul double %8, %13, !llfi_index !7332
  %15 = getelementptr inbounds [3 x double]* %col, i64 0, i64 0, !llfi_index !7333
  store double %14, double* %15, align 16, !llfi_index !7334
  %16 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 8, i64 1), align 8, !llfi_index !7335
  %17 = fmul double %10, %16, !llfi_index !7336
  %18 = getelementptr inbounds [3 x double]* %col, i64 0, i64 1, !llfi_index !7337
  store double %17, double* %18, align 8, !llfi_index !7338
  %19 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 8, i64 2), align 8, !llfi_index !7339
  %20 = fmul double %12, %19, !llfi_index !7340
  %21 = getelementptr inbounds [3 x double]* %col, i64 0, i64 2, !llfi_index !7341
  store double %20, double* %21, align 16, !llfi_index !7342
  %22 = load double* %iP, align 8, !llfi_index !7343
  %23 = getelementptr inbounds %struct.ray* %shad_ray, i64 0, i32 3, i64 0, !llfi_index !7344
  store double %22, double* %23, align 8, !llfi_index !7345
  %24 = getelementptr inbounds double* %iP, i64 1, !llfi_index !7346
  %25 = load double* %24, align 8, !llfi_index !7347
  %26 = getelementptr inbounds %struct.ray* %shad_ray, i64 0, i32 3, i64 1, !llfi_index !7348
  store double %25, double* %26, align 8, !llfi_index !7349
  %27 = getelementptr inbounds double* %iP, i64 2, !llfi_index !7350
  %28 = load double* %27, align 8, !llfi_index !7351
  %29 = getelementptr inbounds %struct.ray* %shad_ray, i64 0, i32 3, i64 2, !llfi_index !7352
  store double %28, double* %29, align 8, !llfi_index !7353
  %30 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 4, i64 0, !llfi_index !7354
  %31 = load double* %30, align 8, !llfi_index !7355
  %32 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 4, i64 1, !llfi_index !7356
  %33 = load double* %32, align 8, !llfi_index !7357
  %34 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 4, i64 2, !llfi_index !7358
  %35 = load double* %34, align 8, !llfi_index !7359
  %36 = load i64* @nlights, align 8, !llfi_index !7360
  %37 = icmp sgt i64 %36, 0, !llfi_index !7361
  br i1 %37, label %.lr.ph, label %._crit_edge, !llfi_index !7362

.lr.ph:                                           ; preds = %0
  %38 = getelementptr inbounds [3 x double]* %Lvec, i64 0, i64 0, !llfi_index !7363
  %39 = getelementptr inbounds [3 x double]* %Lvec, i64 0, i64 1, !llfi_index !7364
  %40 = getelementptr inbounds [3 x double]* %Lvec, i64 0, i64 2, !llfi_index !7365
  %41 = getelementptr inbounds %struct.ray* %shad_ray, i64 0, i32 4, i64 0, !llfi_index !7366
  %42 = getelementptr inbounds %struct.ray* %shad_ray, i64 0, i32 4, i64 1, !llfi_index !7367
  %43 = getelementptr inbounds %struct.ray* %shad_ray, i64 0, i32 4, i64 2, !llfi_index !7368
  %44 = getelementptr inbounds %struct.ray* %shad_ray, i64 0, i32 0, !llfi_index !7369
  %45 = getelementptr inbounds double* %N, i64 1, !llfi_index !7370
  %46 = getelementptr inbounds double* %N, i64 2, !llfi_index !7371
  %47 = getelementptr inbounds %struct.surf* %6, i64 0, i32 3, !llfi_index !7372
  %48 = getelementptr inbounds [3 x double]* %Hvec, i64 0, i64 0, !llfi_index !7373
  %49 = getelementptr inbounds [3 x double]* %Hvec, i64 0, i64 1, !llfi_index !7374
  %50 = getelementptr inbounds [3 x double]* %Hvec, i64 0, i64 2, !llfi_index !7375
  %51 = getelementptr inbounds %struct.surf* %6, i64 0, i32 6, !llfi_index !7376
  br label %52, !llfi_index !7377

; <label>:52                                      ; preds = %176, %.lr.ph
  %lptr.05.in = phi %struct.light** [ @lights, %.lr.ph ], [ %177, %176 ], !llfi_index !7378
  %shadtrans.04 = phi double [ undef, %.lr.ph ], [ %shadtrans.2, %176 ], !llfi_index !7379
  %i.03 = phi i64 [ 0, %.lr.ph ], [ %178, %176 ], !llfi_index !7380
  %lptr.05 = load %struct.light** %lptr.05.in, align 8, !llfi_index !7381
  %53 = getelementptr inbounds %struct.light* %lptr.05, i64 0, i32 0, i64 0, !llfi_index !7382
  %54 = load double* %53, align 8, !llfi_index !7383
  %55 = load double* %iP, align 8, !llfi_index !7384
  %56 = fsub double %54, %55, !llfi_index !7385
  store double %56, double* %38, align 16, !llfi_index !7386
  %57 = getelementptr inbounds %struct.light* %lptr.05, i64 0, i32 0, i64 1, !llfi_index !7387
  %58 = load double* %57, align 8, !llfi_index !7388
  %59 = load double* %24, align 8, !llfi_index !7389
  %60 = fsub double %58, %59, !llfi_index !7390
  store double %60, double* %39, align 8, !llfi_index !7391
  %61 = getelementptr inbounds %struct.light* %lptr.05, i64 0, i32 0, i64 2, !llfi_index !7392
  %62 = load double* %61, align 8, !llfi_index !7393
  %63 = load double* %27, align 8, !llfi_index !7394
  %64 = fsub double %62, %63, !llfi_index !7395
  store double %64, double* %40, align 16, !llfi_index !7396
  %65 = load double* %38, align 16, !llfi_index !7397
  %66 = fmul double %65, %65, !llfi_index !7398
  %67 = load double* %39, align 8, !llfi_index !7399
  %68 = fmul double %67, %67, !llfi_index !7400
  %69 = fadd double %66, %68, !llfi_index !7401
  %70 = fmul double %64, %64, !llfi_index !7402
  %71 = fadd double %70, %69, !llfi_index !7403
  %72 = call double @sqrt(double %71) #2, !llfi_index !7404
  call void @VecNorm(double* %38), !llfi_index !7405
  %73 = load double* %38, align 16, !llfi_index !7406
  store double %73, double* %41, align 8, !llfi_index !7407
  %74 = load double* %39, align 8, !llfi_index !7408
  store double %74, double* %42, align 8, !llfi_index !7409
  %75 = load double* %40, align 16, !llfi_index !7410
  store double %75, double* %43, align 8, !llfi_index !7411
  %76 = load %struct.gmem** @gm, align 8, !llfi_index !7412
  %77 = getelementptr inbounds %struct.gmem* %76, i64 0, i32 10, !llfi_index !7413
  %78 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %77) #2, !llfi_index !7414
  %79 = load %struct.gmem** @gm, align 8, !llfi_index !7415
  %80 = getelementptr inbounds %struct.gmem* %79, i64 0, i32 2, !llfi_index !7416
  %81 = load i64* %80, align 8, !llfi_index !7417
  %82 = add nsw i64 %81, 1, !llfi_index !7418
  store i64 %82, i64* %80, align 8, !llfi_index !7419
  store i64 %81, i64* %44, align 8, !llfi_index !7420
  %83 = load %struct.gmem** @gm, align 8, !llfi_index !7421
  %84 = getelementptr inbounds %struct.gmem* %83, i64 0, i32 10, !llfi_index !7422
  %85 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %84) #2, !llfi_index !7423
  %86 = load double* %N, align 8, !llfi_index !7424
  %87 = load double* %38, align 16, !llfi_index !7425
  %88 = fmul double %86, %87, !llfi_index !7426
  %89 = load double* %45, align 8, !llfi_index !7427
  %90 = load double* %39, align 8, !llfi_index !7428
  %91 = fmul double %89, %90, !llfi_index !7429
  %92 = fadd double %88, %91, !llfi_index !7430
  %93 = load double* %46, align 8, !llfi_index !7431
  %94 = load double* %40, align 16, !llfi_index !7432
  %95 = fmul double %93, %94, !llfi_index !7433
  %96 = fadd double %92, %95, !llfi_index !7434
  %97 = fcmp ogt double %96, 0.000000e+00, !llfi_index !7435
  br i1 %97, label %98, label %176, !llfi_index !7436

; <label>:98                                      ; preds = %52
  %99 = load i64* getelementptr inbounds (%struct.view* @View, i64 0, i32 9), align 8, !llfi_index !7437
  %100 = icmp eq i64 %99, 0, !llfi_index !7438
  br i1 %100, label %.thread, label %101, !llfi_index !7439

; <label>:101                                     ; preds = %98
  %102 = getelementptr inbounds %struct.light* %lptr.05, i64 0, i32 2, !llfi_index !7440
  %103 = load i64* %102, align 8, !llfi_index !7441
  %104 = icmp eq i64 %103, 0, !llfi_index !7442
  br i1 %104, label %105, label %.thread, !llfi_index !7443

; <label>:105                                     ; preds = %101
  %106 = load i64* @TraversalType, align 8, !llfi_index !7444
  switch i64 %106, label %113 [
    i64 0, label %107
    i64 1, label %110
  ], !llfi_index !7445

; <label>:107                                     ; preds = %105
  %108 = load %struct.element** %1, align 8, !llfi_index !7446
  %109 = call double @ShadowIntersect(%struct.ray* %shad_ray, double %72, %struct.element* %108), !llfi_index !7447
  br label %113, !llfi_index !7448

; <label>:110                                     ; preds = %105
  %111 = load %struct.element** %1, align 8, !llfi_index !7449
  %112 = call double @HuniformShadowIntersect(%struct.ray* %shad_ray, double %72, %struct.element* %111, i64 undef), !llfi_index !7450
  br label %113, !llfi_index !7451

; <label>:113                                     ; preds = %110, %107, %105
  %shadtrans.1 = phi double [ %shadtrans.04, %105 ], [ %112, %110 ], [ %109, %107 ], !llfi_index !7452
  %114 = fcmp ogt double %shadtrans.1, 0.000000e+00, !llfi_index !7453
  br i1 %114, label %.thread, label %176, !llfi_index !7454

.thread:                                          ; preds = %113, %101, %98
  %shadtrans.11 = phi double [ %shadtrans.1, %113 ], [ 1.000000e+00, %101 ], [ 1.000000e+00, %98 ], !llfi_index !7455
  %115 = load %struct.surf** %5, align 8, !llfi_index !7456
  %116 = getelementptr inbounds %struct.surf* %115, i64 0, i32 2, !llfi_index !7457
  %117 = load double* %116, align 8, !llfi_index !7458
  %118 = fmul double %96, %117, !llfi_index !7459
  %119 = fmul double %shadtrans.11, %118, !llfi_index !7460
  %120 = getelementptr inbounds %struct.light* %lptr.05, i64 0, i32 1, i64 0, !llfi_index !7461
  %121 = load double* %120, align 8, !llfi_index !7462
  %122 = fmul double %8, %121, !llfi_index !7463
  %123 = fmul double %122, %119, !llfi_index !7464
  %124 = load double* %15, align 16, !llfi_index !7465
  %125 = fadd double %124, %123, !llfi_index !7466
  store double %125, double* %15, align 16, !llfi_index !7467
  %126 = getelementptr inbounds %struct.light* %lptr.05, i64 0, i32 1, i64 1, !llfi_index !7468
  %127 = load double* %126, align 8, !llfi_index !7469
  %128 = fmul double %10, %127, !llfi_index !7470
  %129 = fmul double %119, %128, !llfi_index !7471
  %130 = load double* %18, align 8, !llfi_index !7472
  %131 = fadd double %130, %129, !llfi_index !7473
  store double %131, double* %18, align 8, !llfi_index !7474
  %132 = getelementptr inbounds %struct.light* %lptr.05, i64 0, i32 1, i64 2, !llfi_index !7475
  %133 = load double* %132, align 8, !llfi_index !7476
  %134 = fmul double %12, %133, !llfi_index !7477
  %135 = fmul double %119, %134, !llfi_index !7478
  %136 = load double* %21, align 16, !llfi_index !7479
  %137 = fadd double %136, %135, !llfi_index !7480
  store double %137, double* %21, align 16, !llfi_index !7481
  %138 = load double* %47, align 8, !llfi_index !7482
  %139 = fcmp ogt double %138, 0.000000e+00, !llfi_index !7483
  br i1 %139, label %140, label %176, !llfi_index !7484

; <label>:140                                     ; preds = %.thread
  %141 = load double* %38, align 16, !llfi_index !7485
  %142 = fsub double %141, %31, !llfi_index !7486
  store double %142, double* %48, align 16, !llfi_index !7487
  %143 = load double* %39, align 8, !llfi_index !7488
  %144 = fsub double %143, %33, !llfi_index !7489
  store double %144, double* %49, align 8, !llfi_index !7490
  %145 = load double* %40, align 16, !llfi_index !7491
  %146 = fsub double %145, %35, !llfi_index !7492
  store double %146, double* %50, align 16, !llfi_index !7493
  call void @VecNorm(double* %48), !llfi_index !7494
  %147 = load double* %N, align 8, !llfi_index !7495
  %148 = load double* %48, align 16, !llfi_index !7496
  %149 = fmul double %147, %148, !llfi_index !7497
  %150 = load double* %45, align 8, !llfi_index !7498
  %151 = load double* %49, align 8, !llfi_index !7499
  %152 = fmul double %150, %151, !llfi_index !7500
  %153 = fadd double %149, %152, !llfi_index !7501
  %154 = load double* %46, align 8, !llfi_index !7502
  %155 = load double* %50, align 16, !llfi_index !7503
  %156 = fmul double %154, %155, !llfi_index !7504
  %157 = fadd double %153, %156, !llfi_index !7505
  %158 = fcmp ogt double %157, 0.000000e+00, !llfi_index !7506
  br i1 %158, label %159, label %176, !llfi_index !7507

; <label>:159                                     ; preds = %140
  %160 = load double* %51, align 8, !llfi_index !7508
  %161 = call double @pow(double %157, double %160) #2, !llfi_index !7509
  %162 = load double* %47, align 8, !llfi_index !7510
  %163 = fmul double %161, %162, !llfi_index !7511
  %164 = load double* %120, align 8, !llfi_index !7512
  %165 = fmul double %164, %163, !llfi_index !7513
  %166 = load double* %15, align 16, !llfi_index !7514
  %167 = fadd double %166, %165, !llfi_index !7515
  store double %167, double* %15, align 16, !llfi_index !7516
  %168 = load double* %126, align 8, !llfi_index !7517
  %169 = fmul double %163, %168, !llfi_index !7518
  %170 = load double* %18, align 8, !llfi_index !7519
  %171 = fadd double %170, %169, !llfi_index !7520
  store double %171, double* %18, align 8, !llfi_index !7521
  %172 = load double* %132, align 8, !llfi_index !7522
  %173 = fmul double %163, %172, !llfi_index !7523
  %174 = load double* %21, align 16, !llfi_index !7524
  %175 = fadd double %174, %173, !llfi_index !7525
  store double %175, double* %21, align 16, !llfi_index !7526
  br label %176, !llfi_index !7527

; <label>:176                                     ; preds = %159, %140, %.thread, %113, %52
  %shadtrans.2 = phi double [ %shadtrans.11, %159 ], [ %shadtrans.11, %140 ], [ %shadtrans.11, %.thread ], [ %shadtrans.1, %113 ], [ %shadtrans.04, %52 ], !llfi_index !7528
  %177 = getelementptr inbounds %struct.light* %lptr.05, i64 0, i32 3, !llfi_index !7529
  %178 = add nsw i64 %i.03, 1, !llfi_index !7530
  %179 = load i64* @nlights, align 8, !llfi_index !7531
  %180 = icmp slt i64 %178, %179, !llfi_index !7532
  br i1 %180, label %52, label %._crit_edge, !llfi_index !7533

._crit_edge:                                      ; preds = %176, %0
  %181 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 10, !llfi_index !7534
  %182 = load float* %181, align 4, !llfi_index !7535
  %183 = fpext float %182 to double, !llfi_index !7536
  %184 = load double* %15, align 16, !llfi_index !7537
  %185 = fmul double %183, %184, !llfi_index !7538
  store double %185, double* %15, align 16, !llfi_index !7539
  %186 = load float* %181, align 4, !llfi_index !7540
  %187 = fpext float %186 to double, !llfi_index !7541
  %188 = load double* %18, align 8, !llfi_index !7542
  %189 = fmul double %187, %188, !llfi_index !7543
  store double %189, double* %18, align 8, !llfi_index !7544
  %190 = load float* %181, align 4, !llfi_index !7545
  %191 = fpext float %190 to double, !llfi_index !7546
  %192 = load double* %21, align 16, !llfi_index !7547
  %193 = fmul double %191, %192, !llfi_index !7548
  store double %193, double* %21, align 16, !llfi_index !7549
  %194 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 1, !llfi_index !7550
  %195 = load i64* %194, align 8, !llfi_index !7551
  %196 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 2, !llfi_index !7552
  %197 = load i64* %196, align 8, !llfi_index !7553
  call void @AddPixelColor(double* %15, i64 %195, i64 %197), !llfi_index !7554
  %198 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 5, !llfi_index !7555
  %199 = load i64* %198, align 8, !llfi_index !7556
  %200 = add nsw i64 %199, 1, !llfi_index !7557
  %201 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 0), align 8, !llfi_index !7558
  %202 = icmp slt i64 %200, %201, !llfi_index !7559
  br i1 %202, label %203, label %278, !llfi_index !7560

; <label>:203                                     ; preds = %._crit_edge
  %204 = load double* %iP, align 8, !llfi_index !7561
  %205 = getelementptr inbounds %struct.ray* %secondary_ray, i64 0, i32 3, i64 0, !llfi_index !7562
  store double %204, double* %205, align 8, !llfi_index !7563
  %206 = load double* %24, align 8, !llfi_index !7564
  %207 = getelementptr inbounds %struct.ray* %secondary_ray, i64 0, i32 3, i64 1, !llfi_index !7565
  store double %206, double* %207, align 8, !llfi_index !7566
  %208 = load double* %27, align 8, !llfi_index !7567
  %209 = getelementptr inbounds %struct.ray* %secondary_ray, i64 0, i32 3, i64 2, !llfi_index !7568
  store double %208, double* %209, align 8, !llfi_index !7569
  %210 = load %struct.surf** %5, align 8, !llfi_index !7570
  %211 = getelementptr inbounds %struct.surf* %210, i64 0, i32 3, !llfi_index !7571
  %212 = load double* %211, align 8, !llfi_index !7572
  %213 = load float* %181, align 4, !llfi_index !7573
  %214 = fpext float %213 to double, !llfi_index !7574
  %215 = fmul double %212, %214, !llfi_index !7575
  %216 = fptrunc double %215 to float, !llfi_index !7576
  %217 = getelementptr inbounds %struct.ray* %secondary_ray, i64 0, i32 10, !llfi_index !7577
  store float %216, float* %217, align 8, !llfi_index !7578
  %218 = fpext float %216 to double, !llfi_index !7579
  %219 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 8), align 8, !llfi_index !7580
  %220 = fcmp ogt double %218, %219, !llfi_index !7581
  br i1 %220, label %221, label %241, !llfi_index !7582

; <label>:221                                     ; preds = %203
  %222 = getelementptr inbounds %struct.ray* %secondary_ray, i64 0, i32 4, i64 0, !llfi_index !7583
  call void @SpecularDirection(double* %222, double* %N, double* %30), !llfi_index !7584
  %223 = load i64* %198, align 8, !llfi_index !7585
  %224 = add nsw i64 %223, 1, !llfi_index !7586
  %225 = getelementptr inbounds %struct.ray* %secondary_ray, i64 0, i32 5, !llfi_index !7587
  store i64 %224, i64* %225, align 8, !llfi_index !7588
  %226 = load %struct.gmem** @gm, align 8, !llfi_index !7589
  %227 = getelementptr inbounds %struct.gmem* %226, i64 0, i32 10, !llfi_index !7590
  %228 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %227) #2, !llfi_index !7591
  %229 = load %struct.gmem** @gm, align 8, !llfi_index !7592
  %230 = getelementptr inbounds %struct.gmem* %229, i64 0, i32 2, !llfi_index !7593
  %231 = load i64* %230, align 8, !llfi_index !7594
  %232 = add nsw i64 %231, 1, !llfi_index !7595
  store i64 %232, i64* %230, align 8, !llfi_index !7596
  %233 = getelementptr inbounds %struct.ray* %secondary_ray, i64 0, i32 0, !llfi_index !7597
  store i64 %231, i64* %233, align 8, !llfi_index !7598
  %234 = load %struct.gmem** @gm, align 8, !llfi_index !7599
  %235 = getelementptr inbounds %struct.gmem* %234, i64 0, i32 10, !llfi_index !7600
  %236 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %235) #2, !llfi_index !7601
  %237 = load i64* %194, align 8, !llfi_index !7602
  %238 = getelementptr inbounds %struct.ray* %secondary_ray, i64 0, i32 1, !llfi_index !7603
  store i64 %237, i64* %238, align 8, !llfi_index !7604
  %239 = load i64* %196, align 8, !llfi_index !7605
  %240 = getelementptr inbounds %struct.ray* %secondary_ray, i64 0, i32 2, !llfi_index !7606
  store i64 %239, i64* %240, align 8, !llfi_index !7607
  call void @PushRayTreeStack(%struct.ray* %secondary_ray, i64 %pid), !llfi_index !7608
  br label %241, !llfi_index !7609

; <label>:241                                     ; preds = %221, %203
  %242 = load %struct.surf** %5, align 8, !llfi_index !7610
  %243 = getelementptr inbounds %struct.surf* %242, i64 0, i32 4, !llfi_index !7611
  %244 = load double* %243, align 8, !llfi_index !7612
  %245 = load float* %181, align 4, !llfi_index !7613
  %246 = fpext float %245 to double, !llfi_index !7614
  %247 = fmul double %244, %246, !llfi_index !7615
  %248 = fptrunc double %247 to float, !llfi_index !7616
  store float %248, float* %217, align 8, !llfi_index !7617
  %249 = fpext float %248 to double, !llfi_index !7618
  %250 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 8), align 8, !llfi_index !7619
  %251 = fcmp ogt double %249, %250, !llfi_index !7620
  br i1 %251, label %252, label %278, !llfi_index !7621

; <label>:252                                     ; preds = %241
  %253 = getelementptr inbounds %struct.ray* %secondary_ray, i64 0, i32 4, i64 0, !llfi_index !7622
  %254 = load %struct.surf** %5, align 8, !llfi_index !7623
  %255 = getelementptr inbounds %struct.surf* %254, i64 0, i32 5, !llfi_index !7624
  %256 = load double* %255, align 8, !llfi_index !7625
  %257 = call i64 @TransmissionDirection(double* %253, double* %N, double* %30, double %256), !llfi_index !7626
  %258 = icmp eq i64 %257, 0, !llfi_index !7627
  br i1 %258, label %278, label %259, !llfi_index !7628

; <label>:259                                     ; preds = %252
  %260 = load i64* %198, align 8, !llfi_index !7629
  %261 = add nsw i64 %260, 1, !llfi_index !7630
  %262 = getelementptr inbounds %struct.ray* %secondary_ray, i64 0, i32 5, !llfi_index !7631
  store i64 %261, i64* %262, align 8, !llfi_index !7632
  %263 = load %struct.gmem** @gm, align 8, !llfi_index !7633
  %264 = getelementptr inbounds %struct.gmem* %263, i64 0, i32 10, !llfi_index !7634
  %265 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %264) #2, !llfi_index !7635
  %266 = load %struct.gmem** @gm, align 8, !llfi_index !7636
  %267 = getelementptr inbounds %struct.gmem* %266, i64 0, i32 2, !llfi_index !7637
  %268 = load i64* %267, align 8, !llfi_index !7638
  %269 = add nsw i64 %268, 1, !llfi_index !7639
  store i64 %269, i64* %267, align 8, !llfi_index !7640
  %270 = getelementptr inbounds %struct.ray* %secondary_ray, i64 0, i32 0, !llfi_index !7641
  store i64 %268, i64* %270, align 8, !llfi_index !7642
  %271 = load %struct.gmem** @gm, align 8, !llfi_index !7643
  %272 = getelementptr inbounds %struct.gmem* %271, i64 0, i32 10, !llfi_index !7644
  %273 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %272) #2, !llfi_index !7645
  %274 = load i64* %194, align 8, !llfi_index !7646
  %275 = getelementptr inbounds %struct.ray* %secondary_ray, i64 0, i32 1, !llfi_index !7647
  store i64 %274, i64* %275, align 8, !llfi_index !7648
  %276 = load i64* %196, align 8, !llfi_index !7649
  %277 = getelementptr inbounds %struct.ray* %secondary_ray, i64 0, i32 2, !llfi_index !7650
  store i64 %276, i64* %277, align 8, !llfi_index !7651
  call void @PushRayTreeStack(%struct.ray* %secondary_ray, i64 %pid), !llfi_index !7652
  br label %278, !llfi_index !7653

; <label>:278                                     ; preds = %259, %252, %241, %._crit_edge
  ret void, !llfi_index !7654
}

; Function Attrs: nounwind
declare double @pow(double, double) #1

; Function Attrs: nounwind readnone uwtable
define i8* @SphName() #4 {
  ret i8* getelementptr inbounds ([7 x i8]* @.str386, i64 0, i64 0), !llfi_index !7655
}

; Function Attrs: nounwind uwtable
define void @SphPrint(%struct.object* nocapture readonly %po) #0 {
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !7656
  %2 = load %struct.element** %1, align 8, !llfi_index !7657
  %3 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !7658
  %4 = tail call i64 @fwrite(i8* getelementptr inbounds ([16 x i8]* @.str1387, i64 0, i64 0), i64 15, i64 1, %struct._IO_FILE* %3) #9, !llfi_index !7659
  %5 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !7660
  %6 = load i64* %5, align 8, !llfi_index !7661
  %7 = icmp sgt i64 %6, 0, !llfi_index !7662
  br i1 %7, label %.lr.ph, label %._crit_edge, !llfi_index !7663

.lr.ph:                                           ; preds = %.lr.ph, %0
  %pe.02 = phi %struct.element* [ %28, %.lr.ph ], [ %2, %0 ], !llfi_index !7664
  %i.01 = phi i64 [ %29, %.lr.ph ], [ 0, %0 ], !llfi_index !7665
  %8 = getelementptr inbounds %struct.element* %pe.02, i64 0, i32 2, !llfi_index !7666
  %9 = load i8** %8, align 8, !llfi_index !7667
  %10 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !7668
  %11 = bitcast i8* %9 to double*, !llfi_index !7669
  %12 = load double* %11, align 8, !llfi_index !7670
  %13 = getelementptr inbounds i8* %9, i64 8, !llfi_index !7671
  %14 = bitcast i8* %13 to double*, !llfi_index !7672
  %15 = load double* %14, align 8, !llfi_index !7673
  %16 = getelementptr inbounds i8* %9, i64 16, !llfi_index !7674
  %17 = bitcast i8* %16 to double*, !llfi_index !7675
  %18 = load double* %17, align 8, !llfi_index !7676
  %19 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([20 x i8]* @.str2388, i64 0, i64 0), double %12, double %15, double %18) #10, !llfi_index !7677
  %20 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !7678
  %21 = getelementptr inbounds i8* %9, i64 32, !llfi_index !7679
  %22 = bitcast i8* %21 to double*, !llfi_index !7680
  %23 = load double* %22, align 8, !llfi_index !7681
  %24 = getelementptr inbounds i8* %9, i64 40, !llfi_index !7682
  %25 = bitcast i8* %24 to double*, !llfi_index !7683
  %26 = load double* %25, align 8, !llfi_index !7684
  %27 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([25 x i8]* @.str3389, i64 0, i64 0), double %23, double %26) #10, !llfi_index !7685
  %28 = getelementptr inbounds %struct.element* %pe.02, i64 1, !llfi_index !7686
  %29 = add nsw i64 %i.01, 1, !llfi_index !7687
  %30 = load i64* %5, align 8, !llfi_index !7688
  %31 = icmp slt i64 %29, %30, !llfi_index !7689
  br i1 %31, label %.lr.ph, label %._crit_edge, !llfi_index !7690

._crit_edge:                                      ; preds = %.lr.ph, %0
  ret void, !llfi_index !7691
}

; Function Attrs: nounwind uwtable
define void @SphElementBoundBox(%struct.element* nocapture %pe, %struct.sphere* nocapture readonly %ps) #0 {
  %1 = getelementptr inbounds %struct.sphere* %ps, i64 0, i32 0, i64 0, !llfi_index !7692
  %2 = load double* %1, align 8, !llfi_index !7693
  %3 = getelementptr inbounds %struct.sphere* %ps, i64 0, i32 1, !llfi_index !7694
  %4 = load double* %3, align 8, !llfi_index !7695
  %5 = fsub double %2, %4, !llfi_index !7696
  %6 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 0, i64 0, !llfi_index !7697
  store double %5, double* %6, align 8, !llfi_index !7698
  %7 = getelementptr inbounds %struct.sphere* %ps, i64 0, i32 0, i64 1, !llfi_index !7699
  %8 = load double* %7, align 8, !llfi_index !7700
  %9 = load double* %3, align 8, !llfi_index !7701
  %10 = fsub double %8, %9, !llfi_index !7702
  %11 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 0, i64 1, !llfi_index !7703
  store double %10, double* %11, align 8, !llfi_index !7704
  %12 = getelementptr inbounds %struct.sphere* %ps, i64 0, i32 0, i64 2, !llfi_index !7705
  %13 = load double* %12, align 8, !llfi_index !7706
  %14 = load double* %3, align 8, !llfi_index !7707
  %15 = fsub double %13, %14, !llfi_index !7708
  %16 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 0, i64 2, !llfi_index !7709
  store double %15, double* %16, align 8, !llfi_index !7710
  %17 = load double* %1, align 8, !llfi_index !7711
  %18 = load double* %3, align 8, !llfi_index !7712
  %19 = fadd double %17, %18, !llfi_index !7713
  %20 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 1, i64 0, !llfi_index !7714
  store double %19, double* %20, align 8, !llfi_index !7715
  %21 = load double* %7, align 8, !llfi_index !7716
  %22 = load double* %3, align 8, !llfi_index !7717
  %23 = fadd double %21, %22, !llfi_index !7718
  %24 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 1, i64 1, !llfi_index !7719
  store double %23, double* %24, align 8, !llfi_index !7720
  %25 = load double* %12, align 8, !llfi_index !7721
  %26 = load double* %3, align 8, !llfi_index !7722
  %27 = fadd double %25, %26, !llfi_index !7723
  %28 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 1, i64 2, !llfi_index !7724
  store double %27, double* %28, align 8, !llfi_index !7725
  ret void, !llfi_index !7726
}

; Function Attrs: nounwind uwtable
define void @SphBoundBox(%struct.object* nocapture %po) #0 {
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !7727
  %2 = load i64* %1, align 8, !llfi_index !7728
  %3 = icmp sgt i64 %2, 0, !llfi_index !7729
  br i1 %3, label %.lr.ph, label %._crit_edge, !llfi_index !7730

.lr.ph:                                           ; preds = %0
  %4 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !7731
  %5 = load %struct.element** %4, align 8, !llfi_index !7732
  br label %6, !llfi_index !7733

; <label>:6                                       ; preds = %6, %.lr.ph
  %maxz.08 = phi double [ -1.000000e+32, %.lr.ph ], [ %36, %6 ], !llfi_index !7734
  %minz.07 = phi double [ 1.000000e+32, %.lr.ph ], [ %minz.0., %6 ], !llfi_index !7735
  %maxy.06 = phi double [ -1.000000e+32, %.lr.ph ], [ %maxy.0., %6 ], !llfi_index !7736
  %miny.05 = phi double [ 1.000000e+32, %.lr.ph ], [ %18, %6 ], !llfi_index !7737
  %maxx.04 = phi double [ -1.000000e+32, %.lr.ph ], [ %27, %6 ], !llfi_index !7738
  %minx.03 = phi double [ 1.000000e+32, %.lr.ph ], [ %minx.0., %6 ], !llfi_index !7739
  %i.02 = phi i64 [ 0, %.lr.ph ], [ %38, %6 ], !llfi_index !7740
  %pe.01 = phi %struct.element* [ %5, %.lr.ph ], [ %37, %6 ], !llfi_index !7741
  %7 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 2, !llfi_index !7742
  %8 = load i8** %7, align 8, !llfi_index !7743
  %9 = bitcast i8* %8 to %struct.sphere*, !llfi_index !7744
  tail call void @SphElementBoundBox(%struct.element* %pe.01, %struct.sphere* %9), !llfi_index !7745
  %10 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 0, i64 0, !llfi_index !7746
  %11 = load double* %10, align 8, !llfi_index !7747
  %12 = fsub double %minx.03, %11, !llfi_index !7748
  %13 = fcmp olt double %12, 0.000000e+00, !llfi_index !7749
  %minx.0. = select i1 %13, double %minx.03, double %11, !llfi_index !7750
  %14 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 0, i64 1, !llfi_index !7751
  %15 = load double* %14, align 8, !llfi_index !7752
  %16 = fsub double %miny.05, %15, !llfi_index !7753
  %17 = fcmp olt double %16, 0.000000e+00, !llfi_index !7754
  %18 = select i1 %17, double %miny.05, double %15, !llfi_index !7755
  %19 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 0, i64 2, !llfi_index !7756
  %20 = load double* %19, align 8, !llfi_index !7757
  %21 = fsub double %minz.07, %20, !llfi_index !7758
  %22 = fcmp olt double %21, 0.000000e+00, !llfi_index !7759
  %minz.0. = select i1 %22, double %minz.07, double %20, !llfi_index !7760
  %23 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 1, i64 0, !llfi_index !7761
  %24 = load double* %23, align 8, !llfi_index !7762
  %25 = fsub double %maxx.04, %24, !llfi_index !7763
  %26 = fcmp ogt double %25, 0.000000e+00, !llfi_index !7764
  %27 = select i1 %26, double %maxx.04, double %24, !llfi_index !7765
  %28 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 1, i64 1, !llfi_index !7766
  %29 = load double* %28, align 8, !llfi_index !7767
  %30 = fsub double %maxy.06, %29, !llfi_index !7768
  %31 = fcmp ogt double %30, 0.000000e+00, !llfi_index !7769
  %maxy.0. = select i1 %31, double %maxy.06, double %29, !llfi_index !7770
  %32 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 1, i64 2, !llfi_index !7771
  %33 = load double* %32, align 8, !llfi_index !7772
  %34 = fsub double %maxz.08, %33, !llfi_index !7773
  %35 = fcmp ogt double %34, 0.000000e+00, !llfi_index !7774
  %36 = select i1 %35, double %maxz.08, double %33, !llfi_index !7775
  %37 = getelementptr inbounds %struct.element* %pe.01, i64 1, !llfi_index !7776
  %38 = add nsw i64 %i.02, 1, !llfi_index !7777
  %39 = load i64* %1, align 8, !llfi_index !7778
  %40 = icmp slt i64 %38, %39, !llfi_index !7779
  br i1 %40, label %6, label %._crit_edge, !llfi_index !7780

._crit_edge:                                      ; preds = %6, %0
  %maxz.0.lcssa = phi double [ -1.000000e+32, %0 ], [ %36, %6 ], !llfi_index !7781
  %minz.0.lcssa = phi double [ 1.000000e+32, %0 ], [ %minz.0., %6 ], !llfi_index !7782
  %maxy.0.lcssa = phi double [ -1.000000e+32, %0 ], [ %maxy.0., %6 ], !llfi_index !7783
  %miny.0.lcssa = phi double [ 1.000000e+32, %0 ], [ %18, %6 ], !llfi_index !7784
  %maxx.0.lcssa = phi double [ -1.000000e+32, %0 ], [ %27, %6 ], !llfi_index !7785
  %minx.0.lcssa = phi double [ 1.000000e+32, %0 ], [ %minx.0., %6 ], !llfi_index !7786
  %41 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 0, i64 0, !llfi_index !7787
  store double %minx.0.lcssa, double* %41, align 8, !llfi_index !7788
  %42 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 0, i64 1, !llfi_index !7789
  store double %miny.0.lcssa, double* %42, align 8, !llfi_index !7790
  %43 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 0, i64 2, !llfi_index !7791
  store double %minz.0.lcssa, double* %43, align 8, !llfi_index !7792
  %44 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 1, i64 0, !llfi_index !7793
  store double %maxx.0.lcssa, double* %44, align 8, !llfi_index !7794
  %45 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 1, i64 1, !llfi_index !7795
  store double %maxy.0.lcssa, double* %45, align 8, !llfi_index !7796
  %46 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 1, i64 2, !llfi_index !7797
  store double %maxz.0.lcssa, double* %46, align 8, !llfi_index !7798
  ret void, !llfi_index !7799
}

; Function Attrs: nounwind uwtable
define void @SphNormal(%struct.irecord* nocapture readonly %hit, double* nocapture readonly %Pi, double* nocapture %Ni) #0 {
  %1 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 1, !llfi_index !7800
  %2 = load %struct.element** %1, align 8, !llfi_index !7801
  %3 = getelementptr inbounds %struct.element* %2, i64 0, i32 2, !llfi_index !7802
  %4 = load i8** %3, align 8, !llfi_index !7803
  %5 = load double* %Pi, align 8, !llfi_index !7804
  %6 = bitcast i8* %4 to double*, !llfi_index !7805
  %7 = load double* %6, align 8, !llfi_index !7806
  %8 = fsub double %5, %7, !llfi_index !7807
  store double %8, double* %Ni, align 8, !llfi_index !7808
  %9 = getelementptr inbounds double* %Pi, i64 1, !llfi_index !7809
  %10 = load double* %9, align 8, !llfi_index !7810
  %11 = getelementptr inbounds i8* %4, i64 8, !llfi_index !7811
  %12 = bitcast i8* %11 to double*, !llfi_index !7812
  %13 = load double* %12, align 8, !llfi_index !7813
  %14 = fsub double %10, %13, !llfi_index !7814
  %15 = getelementptr inbounds double* %Ni, i64 1, !llfi_index !7815
  store double %14, double* %15, align 8, !llfi_index !7816
  %16 = getelementptr inbounds double* %Pi, i64 2, !llfi_index !7817
  %17 = load double* %16, align 8, !llfi_index !7818
  %18 = getelementptr inbounds i8* %4, i64 16, !llfi_index !7819
  %19 = bitcast i8* %18 to double*, !llfi_index !7820
  %20 = load double* %19, align 8, !llfi_index !7821
  %21 = fsub double %17, %20, !llfi_index !7822
  %22 = getelementptr inbounds double* %Ni, i64 2, !llfi_index !7823
  store double %21, double* %22, align 8, !llfi_index !7824
  %23 = getelementptr inbounds i8* %4, i64 32, !llfi_index !7825
  %24 = bitcast i8* %23 to double*, !llfi_index !7826
  %25 = load double* %24, align 8, !llfi_index !7827
  %26 = load double* %Ni, align 8, !llfi_index !7828
  %27 = fdiv double %26, %25, !llfi_index !7829
  store double %27, double* %Ni, align 8, !llfi_index !7830
  %28 = load double* %24, align 8, !llfi_index !7831
  %29 = load double* %15, align 8, !llfi_index !7832
  %30 = fdiv double %29, %28, !llfi_index !7833
  store double %30, double* %15, align 8, !llfi_index !7834
  %31 = load double* %24, align 8, !llfi_index !7835
  %32 = load double* %22, align 8, !llfi_index !7836
  %33 = fdiv double %32, %31, !llfi_index !7837
  store double %33, double* %22, align 8, !llfi_index !7838
  ret void, !llfi_index !7839
}

; Function Attrs: nounwind uwtable
define void @SphDataNormalize(%struct.object* nocapture %po, [4 x double]* nocapture readonly %normMat) #0 {
  %surf_point = alloca [4 x double], align 16, !llfi_index !7840
  %center_point = alloca [4 x double], align 16, !llfi_index !7841
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, !llfi_index !7842
  tail call void @NormalizeBoundBox(%struct.bbox* %1, [4 x double]* %normMat), !llfi_index !7843
  %2 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !7844
  %3 = load i64* %2, align 8, !llfi_index !7845
  %4 = icmp sgt i64 %3, 0, !llfi_index !7846
  br i1 %4, label %.lr.ph, label %._crit_edge, !llfi_index !7847

.lr.ph:                                           ; preds = %0
  %5 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !7848
  %6 = load %struct.element** %5, align 8, !llfi_index !7849
  %7 = getelementptr inbounds [4 x double]* %surf_point, i64 0, i64 0, !llfi_index !7850
  %8 = getelementptr inbounds [4 x double]* %surf_point, i64 0, i64 1, !llfi_index !7851
  %9 = getelementptr inbounds [4 x double]* %surf_point, i64 0, i64 2, !llfi_index !7852
  %10 = getelementptr inbounds [4 x double]* %surf_point, i64 0, i64 3, !llfi_index !7853
  %11 = getelementptr inbounds [4 x double]* %center_point, i64 0, i64 0, !llfi_index !7854
  %12 = getelementptr inbounds [4 x double]* %center_point, i64 0, i64 1, !llfi_index !7855
  %13 = getelementptr inbounds [4 x double]* %center_point, i64 0, i64 2, !llfi_index !7856
  %14 = getelementptr inbounds [4 x double]* %center_point, i64 0, i64 3, !llfi_index !7857
  br label %15, !llfi_index !7858

; <label>:15                                      ; preds = %15, %.lr.ph
  %i.02 = phi i64 [ 0, %.lr.ph ], [ %55, %15 ], !llfi_index !7859
  %pe.01 = phi %struct.element* [ %6, %.lr.ph ], [ %54, %15 ], !llfi_index !7860
  %16 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 2, !llfi_index !7861
  %17 = load i8** %16, align 8, !llfi_index !7862
  %18 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, !llfi_index !7863
  tail call void @NormalizeBoundBox(%struct.bbox* %18, [4 x double]* %normMat), !llfi_index !7864
  %19 = bitcast i8* %17 to double*, !llfi_index !7865
  %20 = load double* %19, align 8, !llfi_index !7866
  %21 = getelementptr inbounds i8* %17, i64 32, !llfi_index !7867
  %22 = bitcast i8* %21 to double*, !llfi_index !7868
  %23 = load double* %22, align 8, !llfi_index !7869
  %24 = fadd double %20, %23, !llfi_index !7870
  store double %24, double* %7, align 16, !llfi_index !7871
  %25 = getelementptr inbounds i8* %17, i64 8, !llfi_index !7872
  %26 = bitcast i8* %25 to double*, !llfi_index !7873
  %27 = load double* %26, align 8, !llfi_index !7874
  store double %27, double* %8, align 8, !llfi_index !7875
  %28 = getelementptr inbounds i8* %17, i64 16, !llfi_index !7876
  %29 = bitcast i8* %28 to double*, !llfi_index !7877
  %30 = load double* %29, align 8, !llfi_index !7878
  store double %30, double* %9, align 16, !llfi_index !7879
  store double 1.000000e+00, double* %10, align 8, !llfi_index !7880
  %31 = load double* %19, align 8, !llfi_index !7881
  store double %31, double* %11, align 16, !llfi_index !7882
  %32 = load double* %26, align 8, !llfi_index !7883
  store double %32, double* %12, align 8, !llfi_index !7884
  %33 = load double* %29, align 8, !llfi_index !7885
  store double %33, double* %13, align 16, !llfi_index !7886
  store double 1.000000e+00, double* %14, align 8, !llfi_index !7887
  call void @VecMatMult(double* %11, [4 x double]* %normMat, double* %11), !llfi_index !7888
  call void @VecMatMult(double* %7, [4 x double]* %normMat, double* %7), !llfi_index !7889
  %34 = load double* %7, align 16, !llfi_index !7890
  %35 = load double* %11, align 16, !llfi_index !7891
  %36 = fsub double %34, %35, !llfi_index !7892
  %37 = load double* %8, align 8, !llfi_index !7893
  %38 = load double* %12, align 8, !llfi_index !7894
  %39 = fsub double %37, %38, !llfi_index !7895
  %40 = load double* %9, align 16, !llfi_index !7896
  %41 = load double* %13, align 16, !llfi_index !7897
  %42 = fsub double %40, %41, !llfi_index !7898
  store double %35, double* %19, align 8, !llfi_index !7899
  %43 = load double* %12, align 8, !llfi_index !7900
  store double %43, double* %26, align 8, !llfi_index !7901
  %44 = load double* %13, align 16, !llfi_index !7902
  store double %44, double* %29, align 8, !llfi_index !7903
  %45 = fmul double %36, %36, !llfi_index !7904
  %46 = fmul double %39, %39, !llfi_index !7905
  %47 = fadd double %45, %46, !llfi_index !7906
  %48 = fmul double %42, %42, !llfi_index !7907
  %49 = fadd double %47, %48, !llfi_index !7908
  %50 = tail call double @sqrt(double %49) #2, !llfi_index !7909
  store double %50, double* %22, align 8, !llfi_index !7910
  %51 = fmul double %50, %50, !llfi_index !7911
  %52 = getelementptr inbounds i8* %17, i64 40, !llfi_index !7912
  %53 = bitcast i8* %52 to double*, !llfi_index !7913
  store double %51, double* %53, align 8, !llfi_index !7914
  %54 = getelementptr inbounds %struct.element* %pe.01, i64 1, !llfi_index !7915
  %55 = add nsw i64 %i.02, 1, !llfi_index !7916
  %56 = load i64* %2, align 8, !llfi_index !7917
  %57 = icmp slt i64 %55, %56, !llfi_index !7918
  br i1 %57, label %15, label %._crit_edge, !llfi_index !7919

._crit_edge:                                      ; preds = %15, %0
  ret void, !llfi_index !7920
}

; Function Attrs: nounwind uwtable
define i64 @SphPeIntersect(%struct.ray* nocapture readonly %pr, %struct.element* %pe, %struct.irecord* nocapture %hit) #0 {
  %1 = getelementptr inbounds %struct.element* %pe, i64 0, i32 2, !llfi_index !7921
  %2 = load i8** %1, align 8, !llfi_index !7922
  %3 = bitcast i8* %2 to double*, !llfi_index !7923
  %4 = load double* %3, align 8, !llfi_index !7924
  %5 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 3, i64 0, !llfi_index !7925
  %6 = load double* %5, align 8, !llfi_index !7926
  %7 = fsub double %4, %6, !llfi_index !7927
  %8 = getelementptr inbounds i8* %2, i64 8, !llfi_index !7928
  %9 = bitcast i8* %8 to double*, !llfi_index !7929
  %10 = load double* %9, align 8, !llfi_index !7930
  %11 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 3, i64 1, !llfi_index !7931
  %12 = load double* %11, align 8, !llfi_index !7932
  %13 = fsub double %10, %12, !llfi_index !7933
  %14 = getelementptr inbounds i8* %2, i64 16, !llfi_index !7934
  %15 = bitcast i8* %14 to double*, !llfi_index !7935
  %16 = load double* %15, align 8, !llfi_index !7936
  %17 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 3, i64 2, !llfi_index !7937
  %18 = load double* %17, align 8, !llfi_index !7938
  %19 = fsub double %16, %18, !llfi_index !7939
  %20 = fmul double %7, %7, !llfi_index !7940
  %21 = fmul double %13, %13, !llfi_index !7941
  %22 = fadd double %20, %21, !llfi_index !7942
  %23 = fmul double %19, %19, !llfi_index !7943
  %24 = fadd double %22, %23, !llfi_index !7944
  %25 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 4, i64 0, !llfi_index !7945
  %26 = load double* %25, align 8, !llfi_index !7946
  %27 = fmul double %7, %26, !llfi_index !7947
  %28 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 4, i64 1, !llfi_index !7948
  %29 = load double* %28, align 8, !llfi_index !7949
  %30 = fmul double %13, %29, !llfi_index !7950
  %31 = fadd double %27, %30, !llfi_index !7951
  %32 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 4, i64 2, !llfi_index !7952
  %33 = load double* %32, align 8, !llfi_index !7953
  %34 = fmul double %19, %33, !llfi_index !7954
  %35 = fadd double %31, %34, !llfi_index !7955
  %36 = getelementptr inbounds i8* %2, i64 40, !llfi_index !7956
  %37 = bitcast i8* %36 to double*, !llfi_index !7957
  %38 = load double* %37, align 8, !llfi_index !7958
  %39 = fcmp ogt double %24, %38, !llfi_index !7959
  %40 = fcmp olt double %35, 1.000000e-07, !llfi_index !7960
  %or.cond = and i1 %39, %40, !llfi_index !7961
  br i1 %or.cond, label %60, label %41, !llfi_index !7962

; <label>:41                                      ; preds = %0
  %42 = fmul double %35, %35, !llfi_index !7963
  %43 = fsub double %42, %24, !llfi_index !7964
  %44 = fadd double %38, %43, !llfi_index !7965
  %45 = fcmp olt double %44, 0.000000e+00, !llfi_index !7966
  br i1 %45, label %60, label %46, !llfi_index !7967

; <label>:46                                      ; preds = %41
  %47 = tail call double @sqrt(double %44) #2, !llfi_index !7968
  %48 = fadd double %35, %47, !llfi_index !7969
  %49 = fsub double %35, %47, !llfi_index !7970
  %50 = fcmp ugt double %48, 1.000000e-07, !llfi_index !7971
  br i1 %50, label %51, label %60, !llfi_index !7972

; <label>:51                                      ; preds = %46
  %52 = fcmp ogt double %49, 1.000000e-07, !llfi_index !7973
  br i1 %52, label %53, label %57, !llfi_index !7974

; <label>:53                                      ; preds = %51
  %54 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 0, !llfi_index !7975
  store double %49, double* %54, align 8, !llfi_index !7976
  %55 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 1, !llfi_index !7977
  store %struct.element* %pe, %struct.element** %55, align 8, !llfi_index !7978
  %56 = getelementptr inbounds %struct.irecord* %hit, i64 1, !llfi_index !7979
  br label %57, !llfi_index !7980

; <label>:57                                      ; preds = %53, %51
  %nhits.0 = phi i64 [ 2, %53 ], [ 1, %51 ], !llfi_index !7981
  %sphhit.0 = phi %struct.irecord* [ %56, %53 ], [ %hit, %51 ], !llfi_index !7982
  %58 = getelementptr inbounds %struct.irecord* %sphhit.0, i64 0, i32 0, !llfi_index !7983
  store double %48, double* %58, align 8, !llfi_index !7984
  %59 = getelementptr inbounds %struct.irecord* %sphhit.0, i64 0, i32 1, !llfi_index !7985
  store %struct.element* %pe, %struct.element** %59, align 8, !llfi_index !7986
  br label %60, !llfi_index !7987

; <label>:60                                      ; preds = %57, %46, %41, %0
  %.0 = phi i64 [ %nhits.0, %57 ], [ 0, %0 ], [ 0, %41 ], [ 0, %46 ], !llfi_index !7988
  ret i64 %.0, !llfi_index !7989
}

; Function Attrs: nounwind uwtable
define i64 @SphIntersect(%struct.ray* nocapture readonly %pr, %struct.object* nocapture readonly %po, %struct.irecord* nocapture %hit) #0 {
  %newhit = alloca [2 x %struct.irecord], align 16, !llfi_index !7990
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !7991
  %2 = load %struct.element** %1, align 8, !llfi_index !7992
  %3 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 0, !llfi_index !7993
  store double 1.000000e+32, double* %3, align 8, !llfi_index !7994
  %4 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !7995
  %5 = load i64* %4, align 8, !llfi_index !7996
  %6 = icmp sgt i64 %5, 0, !llfi_index !7997
  br i1 %6, label %.lr.ph, label %._crit_edge, !llfi_index !7998

.lr.ph:                                           ; preds = %0
  %7 = getelementptr inbounds [2 x %struct.irecord]* %newhit, i64 0, i64 0, !llfi_index !7999
  %8 = getelementptr inbounds [2 x %struct.irecord]* %newhit, i64 0, i64 0, i32 0, !llfi_index !8000
  %9 = getelementptr inbounds [2 x %struct.irecord]* %newhit, i64 0, i64 0, i32 1, !llfi_index !8001
  %10 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 1, !llfi_index !8002
  br label %11, !llfi_index !8003

; <label>:11                                      ; preds = %21, %.lr.ph
  %pe.03 = phi %struct.element* [ %2, %.lr.ph ], [ %22, %21 ], !llfi_index !8004
  %nhits.02 = phi i64 [ 0, %.lr.ph ], [ %nhits.1, %21 ], !llfi_index !8005
  %i.01 = phi i64 [ 0, %.lr.ph ], [ %23, %21 ], !llfi_index !8006
  %12 = call i64 @SphPeIntersect(%struct.ray* %pr, %struct.element* %pe.03, %struct.irecord* %7), !llfi_index !8007
  %13 = icmp eq i64 %12, 0, !llfi_index !8008
  br i1 %13, label %21, label %14, !llfi_index !8009

; <label>:14                                      ; preds = %11
  %15 = load double* %8, align 16, !llfi_index !8010
  %16 = load double* %3, align 8, !llfi_index !8011
  %17 = fcmp olt double %15, %16, !llfi_index !8012
  br i1 %17, label %18, label %21, !llfi_index !8013

; <label>:18                                      ; preds = %14
  %19 = add nsw i64 %nhits.02, 1, !llfi_index !8014
  store double %15, double* %3, align 8, !llfi_index !8015
  %20 = load %struct.element** %9, align 8, !llfi_index !8016
  store %struct.element* %20, %struct.element** %10, align 8, !llfi_index !8017
  br label %21, !llfi_index !8018

; <label>:21                                      ; preds = %18, %14, %11
  %nhits.1 = phi i64 [ %19, %18 ], [ %nhits.02, %14 ], [ %nhits.02, %11 ], !llfi_index !8019
  %22 = getelementptr inbounds %struct.element* %pe.03, i64 1, !llfi_index !8020
  %23 = add nsw i64 %i.01, 1, !llfi_index !8021
  %24 = load i64* %4, align 8, !llfi_index !8022
  %25 = icmp slt i64 %23, %24, !llfi_index !8023
  br i1 %25, label %11, label %._crit_edge, !llfi_index !8024

._crit_edge:                                      ; preds = %21, %0
  %nhits.0.lcssa = phi i64 [ 0, %0 ], [ %nhits.1, %21 ], !llfi_index !8025
  ret i64 %nhits.0.lcssa, !llfi_index !8026
}

; Function Attrs: nounwind uwtable
define void @SphTransform(%struct.object* nocapture readonly %po, [4 x double]* nocapture readonly %xtrans, [4 x double]* nocapture readnone %xinvT) #0 {
  %surf_point = alloca [4 x double], align 16, !llfi_index !8027
  %center_point = alloca [4 x double], align 16, !llfi_index !8028
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !8029
  %2 = load i64* %1, align 8, !llfi_index !8030
  %3 = icmp sgt i64 %2, 0, !llfi_index !8031
  br i1 %3, label %.lr.ph, label %._crit_edge, !llfi_index !8032

.lr.ph:                                           ; preds = %0
  %4 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !8033
  %5 = load %struct.element** %4, align 8, !llfi_index !8034
  %6 = getelementptr inbounds [4 x double]* %surf_point, i64 0, i64 0, !llfi_index !8035
  %7 = getelementptr inbounds [4 x double]* %surf_point, i64 0, i64 1, !llfi_index !8036
  %8 = getelementptr inbounds [4 x double]* %surf_point, i64 0, i64 2, !llfi_index !8037
  %9 = getelementptr inbounds [4 x double]* %surf_point, i64 0, i64 3, !llfi_index !8038
  %10 = getelementptr inbounds [4 x double]* %center_point, i64 0, i64 0, !llfi_index !8039
  %11 = getelementptr inbounds [4 x double]* %center_point, i64 0, i64 1, !llfi_index !8040
  %12 = getelementptr inbounds [4 x double]* %center_point, i64 0, i64 2, !llfi_index !8041
  %13 = getelementptr inbounds [4 x double]* %center_point, i64 0, i64 3, !llfi_index !8042
  br label %14, !llfi_index !8043

; <label>:14                                      ; preds = %55, %.lr.ph
  %i.02 = phi i64 [ 0, %.lr.ph ], [ %57, %55 ], !llfi_index !8044
  %pe.01 = phi %struct.element* [ %5, %.lr.ph ], [ %56, %55 ], !llfi_index !8045
  %15 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 2, !llfi_index !8046
  %16 = load i8** %15, align 8, !llfi_index !8047
  %17 = bitcast i8* %16 to double*, !llfi_index !8048
  %18 = load double* %17, align 8, !llfi_index !8049
  %19 = getelementptr inbounds i8* %16, i64 32, !llfi_index !8050
  %20 = bitcast i8* %19 to double*, !llfi_index !8051
  %21 = load double* %20, align 8, !llfi_index !8052
  %22 = fadd double %18, %21, !llfi_index !8053
  store double %22, double* %6, align 16, !llfi_index !8054
  %23 = getelementptr inbounds i8* %16, i64 8, !llfi_index !8055
  %24 = bitcast i8* %23 to double*, !llfi_index !8056
  %25 = load double* %24, align 8, !llfi_index !8057
  store double %25, double* %7, align 8, !llfi_index !8058
  %26 = getelementptr inbounds i8* %16, i64 16, !llfi_index !8059
  %27 = bitcast i8* %26 to double*, !llfi_index !8060
  %28 = load double* %27, align 8, !llfi_index !8061
  store double %28, double* %8, align 16, !llfi_index !8062
  store double 1.000000e+00, double* %9, align 8, !llfi_index !8063
  %29 = load double* %17, align 8, !llfi_index !8064
  store double %29, double* %10, align 16, !llfi_index !8065
  %30 = load double* %24, align 8, !llfi_index !8066
  store double %30, double* %11, align 8, !llfi_index !8067
  %31 = load double* %27, align 8, !llfi_index !8068
  store double %31, double* %12, align 16, !llfi_index !8069
  store double 1.000000e+00, double* %13, align 8, !llfi_index !8070
  call void @VecMatMult(double* %10, [4 x double]* %xtrans, double* %10), !llfi_index !8071
  call void @VecMatMult(double* %6, [4 x double]* %xtrans, double* %6), !llfi_index !8072
  %32 = load double* %6, align 16, !llfi_index !8073
  %33 = load double* %10, align 16, !llfi_index !8074
  %34 = fsub double %32, %33, !llfi_index !8075
  %35 = load double* %7, align 8, !llfi_index !8076
  %36 = load double* %11, align 8, !llfi_index !8077
  %37 = fsub double %35, %36, !llfi_index !8078
  %38 = load double* %8, align 16, !llfi_index !8079
  %39 = load double* %12, align 16, !llfi_index !8080
  %40 = fsub double %38, %39, !llfi_index !8081
  store double %33, double* %17, align 8, !llfi_index !8082
  %41 = load double* %11, align 8, !llfi_index !8083
  store double %41, double* %24, align 8, !llfi_index !8084
  %42 = load double* %12, align 16, !llfi_index !8085
  store double %42, double* %27, align 8, !llfi_index !8086
  %43 = fmul double %34, %34, !llfi_index !8087
  %44 = fmul double %37, %37, !llfi_index !8088
  %45 = fadd double %43, %44, !llfi_index !8089
  %46 = fmul double %40, %40, !llfi_index !8090
  %47 = fadd double %45, %46, !llfi_index !8091
  %48 = tail call double @sqrt(double %47) #2, !llfi_index !8092
  %49 = load double* %20, align 8, !llfi_index !8093
  %50 = fcmp une double %48, %49, !llfi_index !8094
  br i1 %50, label %51, label %55, !llfi_index !8095

; <label>:51                                      ; preds = %14
  store double %48, double* %20, align 8, !llfi_index !8096
  %52 = fmul double %48, %48, !llfi_index !8097
  %53 = getelementptr inbounds i8* %16, i64 40, !llfi_index !8098
  %54 = bitcast i8* %53 to double*, !llfi_index !8099
  store double %52, double* %54, align 8, !llfi_index !8100
  br label %55, !llfi_index !8101

; <label>:55                                      ; preds = %51, %14
  %56 = getelementptr inbounds %struct.element* %pe.01, i64 1, !llfi_index !8102
  %57 = add nsw i64 %i.02, 1, !llfi_index !8103
  %exitcond = icmp eq i64 %57, %2, !llfi_index !8104
  br i1 %exitcond, label %._crit_edge, label %14, !llfi_index !8105

._crit_edge:                                      ; preds = %55, %0
  ret void, !llfi_index !8106
}

; Function Attrs: nounwind uwtable
define void @SphRead(%struct.object* %po, %struct._IO_FILE* %pf) #0 {
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !8107
  %2 = load %struct.element** %1, align 8, !llfi_index !8108
  %3 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !8109
  %4 = load i64* %3, align 8, !llfi_index !8110
  %5 = mul i64 %4, 48, !llfi_index !8111
  %6 = tail call i8* @GlobalMalloc(i64 %5, i8* getelementptr inbounds ([6 x i8]* @.str4390, i64 0, i64 0)), !llfi_index !8112
  %7 = load i64* %3, align 8, !llfi_index !8113
  %8 = icmp sgt i64 %7, 0, !llfi_index !8114
  br i1 %8, label %.lr.ph, label %._crit_edge, !llfi_index !8115

.lr.ph:                                           ; preds = %0
  %9 = bitcast i8* %6 to %struct.sphere*, !llfi_index !8116
  br label %10, !llfi_index !8117

; <label>:10                                      ; preds = %19, %.lr.ph
  %pe.04 = phi %struct.element* [ %2, %.lr.ph ], [ %28, %19 ], !llfi_index !8118
  %ps.03 = phi %struct.sphere* [ %9, %.lr.ph ], [ %27, %19 ], !llfi_index !8119
  %i.02 = phi i64 [ 0, %.lr.ph ], [ %29, %19 ], !llfi_index !8120
  %11 = getelementptr inbounds %struct.sphere* %ps.03, i64 0, i32 0, i64 0, !llfi_index !8121
  %12 = getelementptr inbounds %struct.sphere* %ps.03, i64 0, i32 0, i64 1, !llfi_index !8122
  %13 = getelementptr inbounds %struct.sphere* %ps.03, i64 0, i32 0, i64 2, !llfi_index !8123
  %14 = getelementptr inbounds %struct.sphere* %ps.03, i64 0, i32 1, !llfi_index !8124
  %15 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %pf, i8* getelementptr inbounds ([16 x i8]* @.str5391, i64 0, i64 0), double* %11, double* %12, double* %13, double* %14) #2, !llfi_index !8125
  %16 = icmp eq i32 %15, 4, !llfi_index !8126
  br i1 %16, label %19, label %17, !llfi_index !8127

; <label>:17                                      ; preds = %10
  %18 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str6392, i64 0, i64 0), i64 %i.02) #2, !llfi_index !8128
  tail call void @exit(i32 1) #11, !llfi_index !8129
  unreachable, !llfi_index !8130

; <label>:19                                      ; preds = %10
  %20 = getelementptr inbounds %struct.sphere* %ps.03, i64 0, i32 0, i64 3, !llfi_index !8131
  store double 1.000000e+00, double* %20, align 8, !llfi_index !8132
  %21 = load double* %14, align 8, !llfi_index !8133
  %22 = fmul double %21, %21, !llfi_index !8134
  %23 = getelementptr inbounds %struct.sphere* %ps.03, i64 0, i32 2, !llfi_index !8135
  store double %22, double* %23, align 8, !llfi_index !8136
  %24 = bitcast %struct.sphere* %ps.03 to i8*, !llfi_index !8137
  %25 = getelementptr inbounds %struct.element* %pe.04, i64 0, i32 2, !llfi_index !8138
  store i8* %24, i8** %25, align 8, !llfi_index !8139
  %26 = getelementptr inbounds %struct.element* %pe.04, i64 0, i32 1, !llfi_index !8140
  store %struct.object* %po, %struct.object** %26, align 8, !llfi_index !8141
  tail call void @SphElementBoundBox(%struct.element* %pe.04, %struct.sphere* %ps.03), !llfi_index !8142
  %27 = getelementptr inbounds %struct.sphere* %ps.03, i64 1, !llfi_index !8143
  %28 = getelementptr inbounds %struct.element* %pe.04, i64 1, !llfi_index !8144
  %29 = add nsw i64 %i.02, 1, !llfi_index !8145
  %30 = load i64* %3, align 8, !llfi_index !8146
  %31 = icmp slt i64 %29, %30, !llfi_index !8147
  br i1 %31, label %10, label %._crit_edge, !llfi_index !8148

._crit_edge:                                      ; preds = %19, %0
  ret void, !llfi_index !8149
}

; Function Attrs: nounwind uwtable
define double @frand() #0 {
  %1 = load i64* @frand.lLastRand, align 8, !llfi_index !8150
  %2 = mul nsw i64 %1, 214013, !llfi_index !8151
  %3 = add nsw i64 %2, 2531011, !llfi_index !8152
  store i64 %3, i64* @frand.lLastRand, align 8, !llfi_index !8153
  %4 = lshr i64 %3, 16, !llfi_index !8154
  %5 = and i64 %4, 32767, !llfi_index !8155
  %6 = sitofp i64 %5 to double, !llfi_index !8156
  %7 = fmul double %6, 0x3F00000000000000, !llfi_index !8157
  ret double %7, !llfi_index !8158
}

; Function Attrs: nounwind uwtable
define i64 @GetRayJobFromBundle(%struct.rayjob* nocapture %job, i64* nocapture %x, i64* nocapture %y) #0 {
  %1 = getelementptr inbounds %struct.rayjob* %job, i64 0, i32 4, !llfi_index !8159
  %2 = load i64* %1, align 8, !llfi_index !8160
  store i64 %2, i64* %x, align 8, !llfi_index !8161
  %3 = getelementptr inbounds %struct.rayjob* %job, i64 0, i32 5, !llfi_index !8162
  %4 = load i64* %3, align 8, !llfi_index !8163
  store i64 %4, i64* %y, align 8, !llfi_index !8164
  %5 = getelementptr inbounds %struct.rayjob* %job, i64 0, i32 1, !llfi_index !8165
  %6 = load i64* %5, align 8, !llfi_index !8166
  %7 = getelementptr inbounds %struct.rayjob* %job, i64 0, i32 3, !llfi_index !8167
  %8 = load i64* %7, align 8, !llfi_index !8168
  %9 = add nsw i64 %8, %6, !llfi_index !8169
  %10 = load i64* %3, align 8, !llfi_index !8170
  %11 = icmp eq i64 %9, %10, !llfi_index !8171
  br i1 %11, label %24, label %12, !llfi_index !8172

; <label>:12                                      ; preds = %0
  %13 = load i64* %1, align 8, !llfi_index !8173
  %14 = add nsw i64 %13, 1, !llfi_index !8174
  store i64 %14, i64* %1, align 8, !llfi_index !8175
  %15 = getelementptr inbounds %struct.rayjob* %job, i64 0, i32 0, !llfi_index !8176
  %16 = load i64* %15, align 8, !llfi_index !8177
  %17 = getelementptr inbounds %struct.rayjob* %job, i64 0, i32 2, !llfi_index !8178
  %18 = load i64* %17, align 8, !llfi_index !8179
  %19 = add nsw i64 %18, %16, !llfi_index !8180
  %20 = icmp eq i64 %19, %14, !llfi_index !8181
  br i1 %20, label %21, label %24, !llfi_index !8182

; <label>:21                                      ; preds = %12
  store i64 %16, i64* %1, align 8, !llfi_index !8183
  %22 = load i64* %3, align 8, !llfi_index !8184
  %23 = add nsw i64 %22, 1, !llfi_index !8185
  store i64 %23, i64* %3, align 8, !llfi_index !8186
  br label %24, !llfi_index !8187

; <label>:24                                      ; preds = %21, %12, %0
  %.0 = phi i64 [ 0, %0 ], [ 1, %21 ], [ 1, %12 ], !llfi_index !8188
  ret i64 %.0, !llfi_index !8189
}

; Function Attrs: nounwind uwtable
define void @ConvertPrimRayJobToRayMsg(%struct.ray* nocapture %ray, double %x, double %y) #0 {
  %dir = alloca [4 x double], align 16, !llfi_index !8190
  %origin = alloca [4 x double], align 16, !llfi_index !8191
  %1 = load i64* getelementptr inbounds (%struct.view* @View, i64 0, i32 6), align 8, !llfi_index !8192
  %2 = icmp eq i64 %1, 0, !llfi_index !8193
  br i1 %2, label %3, label %29, !llfi_index !8194

; <label>:3                                       ; preds = %0
  %4 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 12), align 8, !llfi_index !8195
  %5 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 14), align 8, !llfi_index !8196
  %6 = fmul double %5, %x, !llfi_index !8197
  %7 = fsub double %6, %4, !llfi_index !8198
  %8 = getelementptr inbounds [4 x double]* %dir, i64 0, i64 0, !llfi_index !8199
  store double %7, double* %8, align 16, !llfi_index !8200
  %9 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 13), align 8, !llfi_index !8201
  %10 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 15), align 8, !llfi_index !8202
  %11 = fmul double %10, %y, !llfi_index !8203
  %12 = fsub double %9, %11, !llfi_index !8204
  %13 = getelementptr inbounds [4 x double]* %dir, i64 0, i64 1, !llfi_index !8205
  store double %12, double* %13, align 8, !llfi_index !8206
  %14 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 9), align 8, !llfi_index !8207
  %15 = getelementptr inbounds [4 x double]* %dir, i64 0, i64 2, !llfi_index !8208
  store double %14, double* %15, align 16, !llfi_index !8209
  %16 = getelementptr inbounds [4 x double]* %dir, i64 0, i64 3, !llfi_index !8210
  store double 0.000000e+00, double* %16, align 8, !llfi_index !8211
  call void @TransformViewRay(double* %8), !llfi_index !8212
  call void @VecNorm(double* %8), !llfi_index !8213
  %17 = load double* %8, align 16, !llfi_index !8214
  %18 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 4, i64 0, !llfi_index !8215
  store double %17, double* %18, align 8, !llfi_index !8216
  %19 = load double* %13, align 8, !llfi_index !8217
  %20 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 4, i64 1, !llfi_index !8218
  store double %19, double* %20, align 8, !llfi_index !8219
  %21 = load double* %15, align 16, !llfi_index !8220
  %22 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 4, i64 2, !llfi_index !8221
  store double %21, double* %22, align 8, !llfi_index !8222
  %23 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 0), align 8, !llfi_index !8223
  %24 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 3, i64 0, !llfi_index !8224
  store double %23, double* %24, align 8, !llfi_index !8225
  %25 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 1), align 8, !llfi_index !8226
  %26 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 3, i64 1, !llfi_index !8227
  store double %25, double* %26, align 8, !llfi_index !8228
  %27 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 0, i64 2), align 8, !llfi_index !8229
  %28 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 3, i64 2, !llfi_index !8230
  store double %27, double* %28, align 8, !llfi_index !8231
  br label %59, !llfi_index !8232

; <label>:29                                      ; preds = %0
  %30 = getelementptr inbounds [4 x double]* %dir, i64 0, i64 0, !llfi_index !8233
  %31 = getelementptr inbounds [4 x double]* %dir, i64 0, i64 1, !llfi_index !8234
  %32 = getelementptr inbounds [4 x double]* %dir, i64 0, i64 2, !llfi_index !8235
  %33 = bitcast [4 x double]* %dir to i8*, !llfi_index !8236
  call void @llvm.memset.p0i8.i64(i8* %33, i8 0, i64 16, i32 16, i1 false), !llfi_index !8237
  store double 1.000000e+00, double* %32, align 16, !llfi_index !8238
  %34 = getelementptr inbounds [4 x double]* %dir, i64 0, i64 3, !llfi_index !8239
  store double 0.000000e+00, double* %34, align 8, !llfi_index !8240
  call void @TransformViewRay(double* %30), !llfi_index !8241
  call void @VecNorm(double* %30), !llfi_index !8242
  %35 = load double* %30, align 16, !llfi_index !8243
  %36 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 4, i64 0, !llfi_index !8244
  store double %35, double* %36, align 8, !llfi_index !8245
  %37 = load double* %31, align 8, !llfi_index !8246
  %38 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 4, i64 1, !llfi_index !8247
  store double %37, double* %38, align 8, !llfi_index !8248
  %39 = load double* %32, align 16, !llfi_index !8249
  %40 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 4, i64 2, !llfi_index !8250
  store double %39, double* %40, align 8, !llfi_index !8251
  %41 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 12), align 8, !llfi_index !8252
  %42 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 14), align 8, !llfi_index !8253
  %43 = fmul double %42, %x, !llfi_index !8254
  %44 = fsub double %43, %41, !llfi_index !8255
  %45 = getelementptr inbounds [4 x double]* %origin, i64 0, i64 0, !llfi_index !8256
  store double %44, double* %45, align 16, !llfi_index !8257
  %46 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 13), align 8, !llfi_index !8258
  %47 = load double* getelementptr inbounds (%struct.display* @Display, i64 0, i32 15), align 8, !llfi_index !8259
  %48 = fmul double %47, %y, !llfi_index !8260
  %49 = fsub double %46, %48, !llfi_index !8261
  %50 = getelementptr inbounds [4 x double]* %origin, i64 0, i64 1, !llfi_index !8262
  store double %49, double* %50, align 8, !llfi_index !8263
  %51 = getelementptr inbounds [4 x double]* %origin, i64 0, i64 2, !llfi_index !8264
  store double 0.000000e+00, double* %51, align 16, !llfi_index !8265
  %52 = getelementptr inbounds [4 x double]* %origin, i64 0, i64 3, !llfi_index !8266
  store double 1.000000e+00, double* %52, align 8, !llfi_index !8267
  call void @TransformViewRay(double* %45), !llfi_index !8268
  %53 = load double* %45, align 16, !llfi_index !8269
  %54 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 3, i64 0, !llfi_index !8270
  store double %53, double* %54, align 8, !llfi_index !8271
  %55 = load double* %50, align 8, !llfi_index !8272
  %56 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 3, i64 1, !llfi_index !8273
  store double %55, double* %56, align 8, !llfi_index !8274
  %57 = load double* %51, align 16, !llfi_index !8275
  %58 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 3, i64 2, !llfi_index !8276
  store double %57, double* %58, align 8, !llfi_index !8277
  br label %59, !llfi_index !8278

; <label>:59                                      ; preds = %29, %3
  %60 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 5, !llfi_index !8279
  store i64 0, i64* %60, align 8, !llfi_index !8280
  %61 = load i64* @NumSubRays, align 8, !llfi_index !8281
  %62 = sitofp i64 %61 to double, !llfi_index !8282
  %63 = fdiv double 1.000000e+00, %62, !llfi_index !8283
  %64 = fptrunc double %63 to float, !llfi_index !8284
  %65 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 10, !llfi_index !8285
  store float %64, float* %65, align 4, !llfi_index !8286
  %66 = load %struct.gmem** @gm, align 8, !llfi_index !8287
  %67 = getelementptr inbounds %struct.gmem* %66, i64 0, i32 10, !llfi_index !8288
  %68 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %67) #2, !llfi_index !8289
  %69 = load %struct.gmem** @gm, align 8, !llfi_index !8290
  %70 = getelementptr inbounds %struct.gmem* %69, i64 0, i32 2, !llfi_index !8291
  %71 = load i64* %70, align 8, !llfi_index !8292
  %72 = add nsw i64 %71, 1, !llfi_index !8293
  store i64 %72, i64* %70, align 8, !llfi_index !8294
  %73 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 0, !llfi_index !8295
  store i64 %71, i64* %73, align 8, !llfi_index !8296
  %74 = load %struct.gmem** @gm, align 8, !llfi_index !8297
  %75 = getelementptr inbounds %struct.gmem* %74, i64 0, i32 10, !llfi_index !8298
  %76 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %75) #2, !llfi_index !8299
  %77 = fptosi double %x to i64, !llfi_index !8300
  %78 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 1, !llfi_index !8301
  store i64 %77, i64* %78, align 8, !llfi_index !8302
  %79 = fptosi double %y to i64, !llfi_index !8303
  %80 = getelementptr inbounds %struct.ray* %ray, i64 0, i32 2, !llfi_index !8304
  store i64 %79, i64* %80, align 8, !llfi_index !8305
  ret void, !llfi_index !8306
}

; Function Attrs: nounwind uwtable
define void @RayTrace(i64 %pid) #0 {
  %x = alloca i64, align 8, !llfi_index !8307
  %y = alloca i64, align 8, !llfi_index !8308
  %N = alloca [3 x double], align 16, !llfi_index !8309
  %Ipoint = alloca [3 x double], align 16, !llfi_index !8310
  %c = alloca [3 x double], align 16, !llfi_index !8311
  %rmsg = alloca %struct.ray, align 8, !llfi_index !8312
  %job = alloca %struct.rayjob, align 8, !llfi_index !8313
  %hitrecord = alloca %struct.irecord, align 8, !llfi_index !8314
  %1 = call i64 @GetJobs(%struct.rayjob* %job, i64 %pid), !llfi_index !8315
  %2 = icmp eq i64 %1, 0, !llfi_index !8316
  br i1 %2, label %._crit_edge, label %.preheader6.lr.ph, !llfi_index !8317

.preheader6.lr.ph:                                ; preds = %0
  %3 = getelementptr inbounds [3 x double]* %c, i64 0, i64 0, !llfi_index !8318
  %4 = getelementptr inbounds [3 x double]* %c, i64 0, i64 1, !llfi_index !8319
  %5 = getelementptr inbounds [3 x double]* %c, i64 0, i64 2, !llfi_index !8320
  %6 = getelementptr inbounds %struct.ray* %rmsg, i64 0, i32 10, !llfi_index !8321
  %7 = getelementptr inbounds %struct.ray* %rmsg, i64 0, i32 1, !llfi_index !8322
  %8 = getelementptr inbounds %struct.ray* %rmsg, i64 0, i32 2, !llfi_index !8323
  %9 = getelementptr inbounds %struct.irecord* %hitrecord, i64 0, i32 1, !llfi_index !8324
  %10 = getelementptr inbounds %struct.ray* %rmsg, i64 0, i32 3, i64 0, !llfi_index !8325
  %11 = getelementptr inbounds %struct.ray* %rmsg, i64 0, i32 4, i64 0, !llfi_index !8326
  %12 = getelementptr inbounds %struct.irecord* %hitrecord, i64 0, i32 0, !llfi_index !8327
  %13 = getelementptr inbounds [3 x double]* %Ipoint, i64 0, i64 0, !llfi_index !8328
  %14 = getelementptr inbounds %struct.ray* %rmsg, i64 0, i32 3, i64 1, !llfi_index !8329
  %15 = getelementptr inbounds %struct.ray* %rmsg, i64 0, i32 4, i64 1, !llfi_index !8330
  %16 = getelementptr inbounds [3 x double]* %Ipoint, i64 0, i64 1, !llfi_index !8331
  %17 = getelementptr inbounds %struct.ray* %rmsg, i64 0, i32 3, i64 2, !llfi_index !8332
  %18 = getelementptr inbounds %struct.ray* %rmsg, i64 0, i32 4, i64 2, !llfi_index !8333
  %19 = getelementptr inbounds [3 x double]* %Ipoint, i64 0, i64 2, !llfi_index !8334
  %20 = getelementptr inbounds [3 x double]* %N, i64 0, i64 0, !llfi_index !8335
  %21 = getelementptr inbounds [3 x double]* %N, i64 0, i64 1, !llfi_index !8336
  %22 = getelementptr inbounds [3 x double]* %N, i64 0, i64 2, !llfi_index !8337
  br label %.preheader6, !llfi_index !8338

.loopexit7:                                       ; preds = %.loopexit3, %.preheader6
  %hit.1.lcssa = phi i64 [ %hit.011, %.preheader6 ], [ %hit.2.lcssa, %.loopexit3 ], !llfi_index !8339
  %23 = call i64 @GetJobs(%struct.rayjob* %job, i64 %pid), !llfi_index !8340
  %24 = icmp eq i64 %23, 0, !llfi_index !8341
  br i1 %24, label %._crit_edge, label %.preheader6, !llfi_index !8342

.preheader6:                                      ; preds = %.loopexit7, %.preheader6.lr.ph
  %hit.011 = phi i64 [ undef, %.preheader6.lr.ph ], [ %hit.1.lcssa, %.loopexit7 ], !llfi_index !8343
  %25 = call i64 @GetRayJobFromBundle(%struct.rayjob* %job, i64* %x, i64* %y), !llfi_index !8344
  %26 = icmp eq i64 %25, 0, !llfi_index !8345
  br i1 %26, label %.loopexit7, label %.lr.ph9, !llfi_index !8346

.loopexit3:                                       ; preds = %.backedge, %.preheader2
  %hit.2.lcssa = phi i64 [ %hit.18, %.preheader2 ], [ %hit.2.be, %.backedge ], !llfi_index !8347
  %27 = call i64 @GetRayJobFromBundle(%struct.rayjob* %job, i64* %x, i64* %y), !llfi_index !8348
  %28 = icmp eq i64 %27, 0, !llfi_index !8349
  br i1 %28, label %.loopexit7, label %.lr.ph9, !llfi_index !8350

.lr.ph9:                                          ; preds = %.loopexit3, %.preheader6
  %hit.18 = phi i64 [ %hit.2.lcssa, %.loopexit3 ], [ %hit.011, %.preheader6 ], !llfi_index !8351
  %29 = load i64* %x, align 8, !llfi_index !8352
  %30 = sitofp i64 %29 to double, !llfi_index !8353
  %31 = load i64* %y, align 8, !llfi_index !8354
  %32 = sitofp i64 %31 to double, !llfi_index !8355
  %33 = load i64* @AntiAlias, align 8, !llfi_index !8356
  %34 = icmp eq i64 %33, 0, !llfi_index !8357
  br i1 %34, label %44, label %.preheader, !llfi_index !8358

.preheader:                                       ; preds = %.lr.ph9
  %35 = load i64* @NumSubRays, align 8, !llfi_index !8359
  %36 = icmp sgt i64 %35, 0, !llfi_index !8360
  br i1 %36, label %.lr.ph, label %.preheader2, !llfi_index !8361

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %j.01 = phi i64 [ %41, %.lr.ph ], [ 0, %.preheader ], !llfi_index !8362
  %37 = call double @frand(), !llfi_index !8363
  %38 = fadd double %30, %37, !llfi_index !8364
  %39 = call double @frand(), !llfi_index !8365
  %40 = fadd double %32, %39, !llfi_index !8366
  call void @ConvertPrimRayJobToRayMsg(%struct.ray* %rmsg, double %38, double %40), !llfi_index !8367
  call void @PushRayTreeStack(%struct.ray* %rmsg, i64 %pid), !llfi_index !8368
  %41 = add nsw i64 %j.01, 1, !llfi_index !8369
  %42 = load i64* @NumSubRays, align 8, !llfi_index !8370
  %43 = icmp slt i64 %41, %42, !llfi_index !8371
  br i1 %43, label %.lr.ph, label %.preheader2, !llfi_index !8372

; <label>:44                                      ; preds = %.lr.ph9
  call void @ConvertPrimRayJobToRayMsg(%struct.ray* %rmsg, double %30, double %32), !llfi_index !8373
  call void @PushRayTreeStack(%struct.ray* %rmsg, i64 %pid), !llfi_index !8374
  br label %.preheader2, !llfi_index !8375

.preheader2:                                      ; preds = %44, %.lr.ph, %.preheader
  %45 = call i64 @PopRayTreeStack(%struct.ray* %rmsg, i64 %pid), !llfi_index !8376
  %46 = icmp eq i64 %45, 0, !llfi_index !8377
  br i1 %46, label %.loopexit3, label %.lr.ph5, !llfi_index !8378

.lr.ph5:                                          ; preds = %.backedge, %.preheader2
  %hit.24 = phi i64 [ %hit.2.be, %.backedge ], [ %hit.18, %.preheader2 ], !llfi_index !8379
  %47 = load i64* @TraversalType, align 8, !llfi_index !8380
  switch i64 %47, label %52 [
    i64 0, label %48
    i64 1, label %50
  ], !llfi_index !8381

; <label>:48                                      ; preds = %.lr.ph5
  %49 = call i64 @Intersect(%struct.ray* %rmsg, %struct.irecord* %hitrecord), !llfi_index !8382
  br label %52, !llfi_index !8383

; <label>:50                                      ; preds = %.lr.ph5
  %51 = call i64 @TraverseHierarchyUniform(%struct.ray* %rmsg, %struct.irecord* %hitrecord, i64 undef), !llfi_index !8384
  br label %52, !llfi_index !8385

; <label>:52                                      ; preds = %50, %48, %.lr.ph5
  %hit.3 = phi i64 [ %hit.24, %.lr.ph5 ], [ %51, %50 ], [ %49, %48 ], !llfi_index !8386
  %53 = icmp eq i64 %hit.3, 0, !llfi_index !8387
  br i1 %53, label %97, label %54, !llfi_index !8388

; <label>:54                                      ; preds = %52
  %55 = load %struct.element** %9, align 8, !llfi_index !8389
  %56 = getelementptr inbounds %struct.element* %55, i64 0, i32 1, !llfi_index !8390
  %57 = load %struct.object** %56, align 8, !llfi_index !8391
  %58 = load double* %10, align 8, !llfi_index !8392
  %59 = load double* %11, align 8, !llfi_index !8393
  %60 = load double* %12, align 8, !llfi_index !8394
  %61 = fmul double %59, %60, !llfi_index !8395
  %62 = fadd double %58, %61, !llfi_index !8396
  store double %62, double* %13, align 16, !llfi_index !8397
  %63 = load double* %14, align 8, !llfi_index !8398
  %64 = load double* %15, align 8, !llfi_index !8399
  %65 = load double* %12, align 8, !llfi_index !8400
  %66 = fmul double %64, %65, !llfi_index !8401
  %67 = fadd double %63, %66, !llfi_index !8402
  store double %67, double* %16, align 8, !llfi_index !8403
  %68 = load double* %17, align 8, !llfi_index !8404
  %69 = load double* %18, align 8, !llfi_index !8405
  %70 = load double* %12, align 8, !llfi_index !8406
  %71 = fmul double %69, %70, !llfi_index !8407
  %72 = fadd double %68, %71, !llfi_index !8408
  store double %72, double* %19, align 16, !llfi_index !8409
  %73 = getelementptr inbounds %struct.object* %57, i64 0, i32 5, !llfi_index !8410
  %74 = load %struct.pprocs** %73, align 8, !llfi_index !8411
  %75 = getelementptr inbounds %struct.pprocs* %74, i64 0, i32 7, !llfi_index !8412
  %76 = load void (...)** %75, align 8, !llfi_index !8413
  %77 = bitcast void (...)* %76 to void (%struct.irecord*, double*, double*, ...)*, !llfi_index !8414
  call void (%struct.irecord*, double*, double*, ...)* %77(%struct.irecord* %hitrecord, double* %13, double* %20) #2, !llfi_index !8415
  %78 = load double* %11, align 8, !llfi_index !8416
  %79 = load double* %20, align 16, !llfi_index !8417
  %80 = fmul double %78, %79, !llfi_index !8418
  %81 = load double* %15, align 8, !llfi_index !8419
  %82 = load double* %21, align 8, !llfi_index !8420
  %83 = fmul double %81, %82, !llfi_index !8421
  %84 = fadd double %80, %83, !llfi_index !8422
  %85 = load double* %18, align 8, !llfi_index !8423
  %86 = load double* %22, align 16, !llfi_index !8424
  %87 = fmul double %85, %86, !llfi_index !8425
  %88 = fadd double %84, %87, !llfi_index !8426
  %89 = fcmp ogt double %88, 0.000000e+00, !llfi_index !8427
  br i1 %89, label %90, label %96, !llfi_index !8428

; <label>:90                                      ; preds = %54
  %91 = fsub double -0.000000e+00, %79, !llfi_index !8429
  store double %91, double* %20, align 16, !llfi_index !8430
  %92 = load double* %21, align 8, !llfi_index !8431
  %93 = fsub double -0.000000e+00, %92, !llfi_index !8432
  store double %93, double* %21, align 8, !llfi_index !8433
  %94 = load double* %22, align 16, !llfi_index !8434
  %95 = fsub double -0.000000e+00, %94, !llfi_index !8435
  store double %95, double* %22, align 16, !llfi_index !8436
  br label %96, !llfi_index !8437

; <label>:96                                      ; preds = %90, %54
  call void @Shade(double* %13, double* %20, %struct.ray* %rmsg, %struct.irecord* %hitrecord, i64 %pid), !llfi_index !8438
  br label %.backedge, !llfi_index !8439

; <label>:97                                      ; preds = %52
  %98 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 5, i64 0), align 8, !llfi_index !8440
  store double %98, double* %3, align 16, !llfi_index !8441
  %99 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 5, i64 1), align 8, !llfi_index !8442
  store double %99, double* %4, align 8, !llfi_index !8443
  %100 = load double* getelementptr inbounds (%struct.view* @View, i64 0, i32 5, i64 2), align 8, !llfi_index !8444
  store double %100, double* %5, align 16, !llfi_index !8445
  %101 = load float* %6, align 8, !llfi_index !8446
  %102 = fpext float %101 to double, !llfi_index !8447
  %103 = load double* %3, align 16, !llfi_index !8448
  %104 = fmul double %102, %103, !llfi_index !8449
  store double %104, double* %3, align 16, !llfi_index !8450
  %105 = load float* %6, align 8, !llfi_index !8451
  %106 = fpext float %105 to double, !llfi_index !8452
  %107 = load double* %4, align 8, !llfi_index !8453
  %108 = fmul double %106, %107, !llfi_index !8454
  store double %108, double* %4, align 8, !llfi_index !8455
  %109 = load float* %6, align 8, !llfi_index !8456
  %110 = fpext float %109 to double, !llfi_index !8457
  %111 = load double* %5, align 16, !llfi_index !8458
  %112 = fmul double %110, %111, !llfi_index !8459
  store double %112, double* %5, align 16, !llfi_index !8460
  %113 = load i64* %7, align 8, !llfi_index !8461
  %114 = load i64* %8, align 8, !llfi_index !8462
  call void @AddPixelColor(double* %3, i64 %113, i64 %114), !llfi_index !8463
  br label %.backedge, !llfi_index !8464

.backedge:                                        ; preds = %97, %96
  %hit.2.be = phi i64 [ %hit.3, %96 ], [ 0, %97 ], !llfi_index !8465
  %115 = call i64 @PopRayTreeStack(%struct.ray* %rmsg, i64 %pid), !llfi_index !8466
  %116 = icmp eq i64 %115, 0, !llfi_index !8467
  br i1 %116, label %.loopexit3, label %.lr.ph5, !llfi_index !8468

._crit_edge:                                      ; preds = %.loopexit7, %0
  ret void, !llfi_index !8469
}

; Function Attrs: nounwind readnone uwtable
define i8* @TriName() #4 {
  ret i8* getelementptr inbounds ([5 x i8]* @.str413, i64 0, i64 0), !llfi_index !8470
}

; Function Attrs: nounwind uwtable
define void @TriPrint(%struct.object* nocapture readonly %po) #0 {
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !8471
  %2 = load %struct.element** %1, align 8, !llfi_index !8472
  %3 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !8473
  %4 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !8474
  %5 = load i64* %4, align 8, !llfi_index !8475
  %6 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([27 x i8]* @.str1414, i64 0, i64 0), i64 %5) #10, !llfi_index !8476
  %7 = load i64* %4, align 8, !llfi_index !8477
  %8 = icmp sgt i64 %7, 0, !llfi_index !8478
  br i1 %8, label %.preheader, label %._crit_edge, !llfi_index !8479

.preheader:                                       ; preds = %.preheader, %0
  %pe.04 = phi %struct.element* [ %60, %.preheader ], [ %2, %0 ], !llfi_index !8480
  %i.03 = phi i64 [ %61, %.preheader ], [ 0, %0 ], !llfi_index !8481
  %9 = getelementptr inbounds %struct.element* %pe.04, i64 0, i32 2, !llfi_index !8482
  %10 = load i8** %9, align 8, !llfi_index !8483
  %11 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !8484
  %12 = bitcast i8* %10 to double*, !llfi_index !8485
  %13 = load double* %12, align 8, !llfi_index !8486
  %14 = getelementptr inbounds i8* %10, i64 8, !llfi_index !8487
  %15 = bitcast i8* %14 to double*, !llfi_index !8488
  %16 = load double* %15, align 8, !llfi_index !8489
  %17 = getelementptr inbounds i8* %10, i64 16, !llfi_index !8490
  %18 = bitcast i8* %17 to double*, !llfi_index !8491
  %19 = load double* %18, align 8, !llfi_index !8492
  %20 = getelementptr inbounds i8* %10, i64 24, !llfi_index !8493
  %21 = bitcast i8* %20 to double*, !llfi_index !8494
  %22 = load double* %21, align 8, !llfi_index !8495
  %23 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([39 x i8]* @.str2415, i64 0, i64 0), double %13, double %16, double %19, double %22) #10, !llfi_index !8496
  %24 = getelementptr inbounds i8* %10, i64 32, !llfi_index !8497
  %25 = bitcast i8* %24 to [3 x double]**, !llfi_index !8498
  %26 = load [3 x double]** %25, align 8, !llfi_index !8499
  %27 = getelementptr inbounds i8* %10, i64 48, !llfi_index !8500
  %28 = bitcast i8* %27 to i64*, !llfi_index !8501
  %29 = load i64* %28, align 8, !llfi_index !8502
  %30 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !8503
  %31 = getelementptr inbounds [3 x double]* %26, i64 %29, i64 0, !llfi_index !8504
  %32 = load double* %31, align 8, !llfi_index !8505
  %33 = getelementptr inbounds [3 x double]* %26, i64 %29, i64 1, !llfi_index !8506
  %34 = load double* %33, align 8, !llfi_index !8507
  %35 = getelementptr inbounds [3 x double]* %26, i64 %29, i64 2, !llfi_index !8508
  %36 = load double* %35, align 8, !llfi_index !8509
  %37 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([13 x i8]* @.str3416, i64 0, i64 0), double %32, double %34, double %36) #10, !llfi_index !8510
  %38 = getelementptr inbounds i8* %10, i64 56, !llfi_index !8511
  %39 = bitcast i8* %38 to i64*, !llfi_index !8512
  %40 = load i64* %39, align 8, !llfi_index !8513
  %41 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !8514
  %42 = getelementptr inbounds [3 x double]* %26, i64 %40, i64 0, !llfi_index !8515
  %43 = load double* %42, align 8, !llfi_index !8516
  %44 = getelementptr inbounds [3 x double]* %26, i64 %40, i64 1, !llfi_index !8517
  %45 = load double* %44, align 8, !llfi_index !8518
  %46 = getelementptr inbounds [3 x double]* %26, i64 %40, i64 2, !llfi_index !8519
  %47 = load double* %46, align 8, !llfi_index !8520
  %48 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([13 x i8]* @.str3416, i64 0, i64 0), double %43, double %45, double %47) #10, !llfi_index !8521
  %49 = getelementptr inbounds i8* %10, i64 64, !llfi_index !8522
  %50 = bitcast i8* %49 to i64*, !llfi_index !8523
  %51 = load i64* %50, align 8, !llfi_index !8524
  %52 = load %struct._IO_FILE** @stderr, align 8, !llfi_index !8525
  %53 = getelementptr inbounds [3 x double]* %26, i64 %51, i64 0, !llfi_index !8526
  %54 = load double* %53, align 8, !llfi_index !8527
  %55 = getelementptr inbounds [3 x double]* %26, i64 %51, i64 1, !llfi_index !8528
  %56 = load double* %55, align 8, !llfi_index !8529
  %57 = getelementptr inbounds [3 x double]* %26, i64 %51, i64 2, !llfi_index !8530
  %58 = load double* %57, align 8, !llfi_index !8531
  %59 = tail call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([13 x i8]* @.str3416, i64 0, i64 0), double %54, double %56, double %58) #10, !llfi_index !8532
  %60 = getelementptr inbounds %struct.element* %pe.04, i64 1, !llfi_index !8533
  %61 = add nsw i64 %i.03, 1, !llfi_index !8534
  %62 = load i64* %4, align 8, !llfi_index !8535
  %63 = icmp slt i64 %61, %62, !llfi_index !8536
  br i1 %63, label %.preheader, label %._crit_edge, !llfi_index !8537

._crit_edge:                                      ; preds = %.preheader, %0
  ret void, !llfi_index !8538
}

; Function Attrs: nounwind uwtable
define void @TriElementBoundBox(%struct.element* nocapture %pe, %struct.tri* nocapture readonly %pt) #0 {
  %1 = getelementptr inbounds %struct.tri* %pt, i64 0, i32 2, !llfi_index !8539
  %2 = load [3 x double]** %1, align 8, !llfi_index !8540
  %3 = getelementptr inbounds %struct.tri* %pt, i64 0, i32 4, i64 0, !llfi_index !8541
  %4 = load i64* %3, align 8, !llfi_index !8542
  %5 = getelementptr inbounds [3 x double]* %2, i64 %4, i64 0, !llfi_index !8543
  %6 = load double* %5, align 8, !llfi_index !8544
  %7 = fsub double 1.000000e+32, %6, !llfi_index !8545
  %8 = fcmp olt double %7, 0.000000e+00, !llfi_index !8546
  %minx.0. = select i1 %8, double 1.000000e+32, double %6, !llfi_index !8547
  %9 = getelementptr inbounds [3 x double]* %2, i64 %4, i64 1, !llfi_index !8548
  %10 = load double* %9, align 8, !llfi_index !8549
  %11 = fsub double 1.000000e+32, %10, !llfi_index !8550
  %12 = fcmp olt double %11, 0.000000e+00, !llfi_index !8551
  %13 = select i1 %12, double 1.000000e+32, double %10, !llfi_index !8552
  %14 = getelementptr inbounds [3 x double]* %2, i64 %4, i64 2, !llfi_index !8553
  %15 = load double* %14, align 8, !llfi_index !8554
  %16 = fsub double 1.000000e+32, %15, !llfi_index !8555
  %17 = fcmp olt double %16, 0.000000e+00, !llfi_index !8556
  %minz.0. = select i1 %17, double 1.000000e+32, double %15, !llfi_index !8557
  %18 = fsub double -1.000000e+32, %6, !llfi_index !8558
  %19 = fcmp ogt double %18, 0.000000e+00, !llfi_index !8559
  %20 = select i1 %19, double -1.000000e+32, double %6, !llfi_index !8560
  %21 = fsub double -1.000000e+32, %10, !llfi_index !8561
  %22 = fcmp ogt double %21, 0.000000e+00, !llfi_index !8562
  %maxy.0. = select i1 %22, double -1.000000e+32, double %10, !llfi_index !8563
  %23 = fsub double -1.000000e+32, %15, !llfi_index !8564
  %24 = fcmp ogt double %23, 0.000000e+00, !llfi_index !8565
  %25 = select i1 %24, double -1.000000e+32, double %15, !llfi_index !8566
  %26 = getelementptr inbounds %struct.tri* %pt, i64 0, i32 4, i64 1, !llfi_index !8567
  %27 = load i64* %26, align 8, !llfi_index !8568
  %28 = getelementptr inbounds [3 x double]* %2, i64 %27, i64 0, !llfi_index !8569
  %29 = load double* %28, align 8, !llfi_index !8570
  %30 = fsub double %minx.0., %29, !llfi_index !8571
  %31 = fcmp olt double %30, 0.000000e+00, !llfi_index !8572
  %minx.0..1 = select i1 %31, double %minx.0., double %29, !llfi_index !8573
  %32 = getelementptr inbounds [3 x double]* %2, i64 %27, i64 1, !llfi_index !8574
  %33 = load double* %32, align 8, !llfi_index !8575
  %34 = fsub double %13, %33, !llfi_index !8576
  %35 = fcmp olt double %34, 0.000000e+00, !llfi_index !8577
  %36 = select i1 %35, double %13, double %33, !llfi_index !8578
  %37 = getelementptr inbounds [3 x double]* %2, i64 %27, i64 2, !llfi_index !8579
  %38 = load double* %37, align 8, !llfi_index !8580
  %39 = fsub double %minz.0., %38, !llfi_index !8581
  %40 = fcmp olt double %39, 0.000000e+00, !llfi_index !8582
  %minz.0..1 = select i1 %40, double %minz.0., double %38, !llfi_index !8583
  %41 = fsub double %20, %29, !llfi_index !8584
  %42 = fcmp ogt double %41, 0.000000e+00, !llfi_index !8585
  %43 = select i1 %42, double %20, double %29, !llfi_index !8586
  %44 = fsub double %maxy.0., %33, !llfi_index !8587
  %45 = fcmp ogt double %44, 0.000000e+00, !llfi_index !8588
  %maxy.0..1 = select i1 %45, double %maxy.0., double %33, !llfi_index !8589
  %46 = fsub double %25, %38, !llfi_index !8590
  %47 = fcmp ogt double %46, 0.000000e+00, !llfi_index !8591
  %48 = select i1 %47, double %25, double %38, !llfi_index !8592
  %49 = getelementptr inbounds %struct.tri* %pt, i64 0, i32 4, i64 2, !llfi_index !8593
  %50 = load i64* %49, align 8, !llfi_index !8594
  %51 = getelementptr inbounds [3 x double]* %2, i64 %50, i64 0, !llfi_index !8595
  %52 = load double* %51, align 8, !llfi_index !8596
  %53 = fsub double %minx.0..1, %52, !llfi_index !8597
  %54 = fcmp olt double %53, 0.000000e+00, !llfi_index !8598
  %minx.0..2 = select i1 %54, double %minx.0..1, double %52, !llfi_index !8599
  %55 = getelementptr inbounds [3 x double]* %2, i64 %50, i64 1, !llfi_index !8600
  %56 = load double* %55, align 8, !llfi_index !8601
  %57 = fsub double %36, %56, !llfi_index !8602
  %58 = fcmp olt double %57, 0.000000e+00, !llfi_index !8603
  %59 = select i1 %58, double %36, double %56, !llfi_index !8604
  %60 = getelementptr inbounds [3 x double]* %2, i64 %50, i64 2, !llfi_index !8605
  %61 = load double* %60, align 8, !llfi_index !8606
  %62 = fsub double %minz.0..1, %61, !llfi_index !8607
  %63 = fcmp olt double %62, 0.000000e+00, !llfi_index !8608
  %minz.0..2 = select i1 %63, double %minz.0..1, double %61, !llfi_index !8609
  %64 = fsub double %43, %52, !llfi_index !8610
  %65 = fcmp ogt double %64, 0.000000e+00, !llfi_index !8611
  %66 = select i1 %65, double %43, double %52, !llfi_index !8612
  %67 = fsub double %maxy.0..1, %56, !llfi_index !8613
  %68 = fcmp ogt double %67, 0.000000e+00, !llfi_index !8614
  %maxy.0..2 = select i1 %68, double %maxy.0..1, double %56, !llfi_index !8615
  %69 = fsub double %48, %61, !llfi_index !8616
  %70 = fcmp ogt double %69, 0.000000e+00, !llfi_index !8617
  %71 = select i1 %70, double %48, double %61, !llfi_index !8618
  %72 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 0, i64 0, !llfi_index !8619
  store double %minx.0..2, double* %72, align 8, !llfi_index !8620
  %73 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 0, i64 1, !llfi_index !8621
  store double %59, double* %73, align 8, !llfi_index !8622
  %74 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 0, i64 2, !llfi_index !8623
  store double %minz.0..2, double* %74, align 8, !llfi_index !8624
  %75 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 1, i64 0, !llfi_index !8625
  store double %66, double* %75, align 8, !llfi_index !8626
  %76 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 1, i64 1, !llfi_index !8627
  store double %maxy.0..2, double* %76, align 8, !llfi_index !8628
  %77 = getelementptr inbounds %struct.element* %pe, i64 0, i32 3, i32 1, i64 2, !llfi_index !8629
  store double %71, double* %77, align 8, !llfi_index !8630
  ret void, !llfi_index !8631
}

; Function Attrs: nounwind uwtable
define void @TriBoundBox(%struct.object* nocapture %po) #0 {
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !8632
  %2 = load i64* %1, align 8, !llfi_index !8633
  %3 = icmp sgt i64 %2, 0, !llfi_index !8634
  br i1 %3, label %.lr.ph, label %._crit_edge, !llfi_index !8635

.lr.ph:                                           ; preds = %0
  %4 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !8636
  %5 = load %struct.element** %4, align 8, !llfi_index !8637
  br label %6, !llfi_index !8638

; <label>:6                                       ; preds = %6, %.lr.ph
  %maxz.08 = phi double [ -1.000000e+32, %.lr.ph ], [ %36, %6 ], !llfi_index !8639
  %minz.07 = phi double [ 1.000000e+32, %.lr.ph ], [ %minz.0., %6 ], !llfi_index !8640
  %maxy.06 = phi double [ -1.000000e+32, %.lr.ph ], [ %maxy.0., %6 ], !llfi_index !8641
  %miny.05 = phi double [ 1.000000e+32, %.lr.ph ], [ %18, %6 ], !llfi_index !8642
  %maxx.04 = phi double [ -1.000000e+32, %.lr.ph ], [ %27, %6 ], !llfi_index !8643
  %minx.03 = phi double [ 1.000000e+32, %.lr.ph ], [ %minx.0., %6 ], !llfi_index !8644
  %i.02 = phi i64 [ 0, %.lr.ph ], [ %38, %6 ], !llfi_index !8645
  %pe.01 = phi %struct.element* [ %5, %.lr.ph ], [ %37, %6 ], !llfi_index !8646
  %7 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 2, !llfi_index !8647
  %8 = load i8** %7, align 8, !llfi_index !8648
  %9 = bitcast i8* %8 to %struct.tri*, !llfi_index !8649
  tail call void @TriElementBoundBox(%struct.element* %pe.01, %struct.tri* %9), !llfi_index !8650
  %10 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 0, i64 0, !llfi_index !8651
  %11 = load double* %10, align 8, !llfi_index !8652
  %12 = fsub double %minx.03, %11, !llfi_index !8653
  %13 = fcmp olt double %12, 0.000000e+00, !llfi_index !8654
  %minx.0. = select i1 %13, double %minx.03, double %11, !llfi_index !8655
  %14 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 0, i64 1, !llfi_index !8656
  %15 = load double* %14, align 8, !llfi_index !8657
  %16 = fsub double %miny.05, %15, !llfi_index !8658
  %17 = fcmp olt double %16, 0.000000e+00, !llfi_index !8659
  %18 = select i1 %17, double %miny.05, double %15, !llfi_index !8660
  %19 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 0, i64 2, !llfi_index !8661
  %20 = load double* %19, align 8, !llfi_index !8662
  %21 = fsub double %minz.07, %20, !llfi_index !8663
  %22 = fcmp olt double %21, 0.000000e+00, !llfi_index !8664
  %minz.0. = select i1 %22, double %minz.07, double %20, !llfi_index !8665
  %23 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 1, i64 0, !llfi_index !8666
  %24 = load double* %23, align 8, !llfi_index !8667
  %25 = fsub double %maxx.04, %24, !llfi_index !8668
  %26 = fcmp ogt double %25, 0.000000e+00, !llfi_index !8669
  %27 = select i1 %26, double %maxx.04, double %24, !llfi_index !8670
  %28 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 1, i64 1, !llfi_index !8671
  %29 = load double* %28, align 8, !llfi_index !8672
  %30 = fsub double %maxy.06, %29, !llfi_index !8673
  %31 = fcmp ogt double %30, 0.000000e+00, !llfi_index !8674
  %maxy.0. = select i1 %31, double %maxy.06, double %29, !llfi_index !8675
  %32 = getelementptr inbounds %struct.element* %pe.01, i64 0, i32 3, i32 1, i64 2, !llfi_index !8676
  %33 = load double* %32, align 8, !llfi_index !8677
  %34 = fsub double %maxz.08, %33, !llfi_index !8678
  %35 = fcmp ogt double %34, 0.000000e+00, !llfi_index !8679
  %36 = select i1 %35, double %maxz.08, double %33, !llfi_index !8680
  %37 = getelementptr inbounds %struct.element* %pe.01, i64 1, !llfi_index !8681
  %38 = add nsw i64 %i.02, 1, !llfi_index !8682
  %39 = load i64* %1, align 8, !llfi_index !8683
  %40 = icmp slt i64 %38, %39, !llfi_index !8684
  br i1 %40, label %6, label %._crit_edge, !llfi_index !8685

._crit_edge:                                      ; preds = %6, %0
  %maxz.0.lcssa = phi double [ -1.000000e+32, %0 ], [ %36, %6 ], !llfi_index !8686
  %minz.0.lcssa = phi double [ 1.000000e+32, %0 ], [ %minz.0., %6 ], !llfi_index !8687
  %maxy.0.lcssa = phi double [ -1.000000e+32, %0 ], [ %maxy.0., %6 ], !llfi_index !8688
  %miny.0.lcssa = phi double [ 1.000000e+32, %0 ], [ %18, %6 ], !llfi_index !8689
  %maxx.0.lcssa = phi double [ -1.000000e+32, %0 ], [ %27, %6 ], !llfi_index !8690
  %minx.0.lcssa = phi double [ 1.000000e+32, %0 ], [ %minx.0., %6 ], !llfi_index !8691
  %41 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 0, i64 0, !llfi_index !8692
  store double %minx.0.lcssa, double* %41, align 8, !llfi_index !8693
  %42 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 0, i64 1, !llfi_index !8694
  store double %miny.0.lcssa, double* %42, align 8, !llfi_index !8695
  %43 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 0, i64 2, !llfi_index !8696
  store double %minz.0.lcssa, double* %43, align 8, !llfi_index !8697
  %44 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 1, i64 0, !llfi_index !8698
  store double %maxx.0.lcssa, double* %44, align 8, !llfi_index !8699
  %45 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 1, i64 1, !llfi_index !8700
  store double %maxy.0.lcssa, double* %45, align 8, !llfi_index !8701
  %46 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, i32 1, i64 2, !llfi_index !8702
  store double %maxz.0.lcssa, double* %46, align 8, !llfi_index !8703
  ret void, !llfi_index !8704
}

; Function Attrs: nounwind uwtable
define void @TriNormal(%struct.irecord* nocapture %hit, double* nocapture readnone %Pi, double* nocapture %Ni) #0 {
  %1 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 1, !llfi_index !8705
  %2 = load %struct.element** %1, align 8, !llfi_index !8706
  %3 = getelementptr inbounds %struct.element* %2, i64 0, i32 2, !llfi_index !8707
  %4 = load i8** %3, align 8, !llfi_index !8708
  %5 = getelementptr inbounds i8* %4, i64 40, !llfi_index !8709
  %6 = bitcast i8* %5 to [3 x double]**, !llfi_index !8710
  %7 = load [3 x double]** %6, align 8, !llfi_index !8711
  %8 = getelementptr inbounds i8* %4, i64 80, !llfi_index !8712
  %9 = bitcast i8* %8 to i64*, !llfi_index !8713
  %10 = load i64* %9, align 8, !llfi_index !8714
  %11 = icmp eq i64 %10, 0, !llfi_index !8715
  br i1 %11, label %122, label %12, !llfi_index !8716

; <label>:12                                      ; preds = %0
  %13 = getelementptr inbounds i8* %4, i64 88, !llfi_index !8717
  %14 = bitcast i8* %13 to i64*, !llfi_index !8718
  %15 = load i64* %14, align 8, !llfi_index !8719
  %16 = icmp eq i64 %15, 1, !llfi_index !8720
  %17 = getelementptr inbounds i8* %4, i64 48, !llfi_index !8721
  %18 = bitcast i8* %17 to i64*, !llfi_index !8722
  %19 = load i64* %18, align 8, !llfi_index !8723
  br i1 %16, label %20, label %23, !llfi_index !8724

; <label>:20                                      ; preds = %12
  %21 = getelementptr inbounds i8* %4, i64 56, !llfi_index !8725
  %22 = getelementptr inbounds i8* %4, i64 64, !llfi_index !8726
  br label %26, !llfi_index !8727

; <label>:23                                      ; preds = %12
  %24 = getelementptr inbounds i8* %4, i64 64, !llfi_index !8728
  %25 = getelementptr inbounds i8* %4, i64 56, !llfi_index !8729
  br label %26, !llfi_index !8730

; <label>:26                                      ; preds = %23, %20
  %.pn.in.in = phi i8* [ %21, %20 ], [ %24, %23 ], !llfi_index !8731
  %.pn1.in.in = phi i8* [ %22, %20 ], [ %25, %23 ], !llfi_index !8732
  %.pn1.in = bitcast i8* %.pn1.in.in to i64*, !llfi_index !8733
  %.pn.in = bitcast i8* %.pn.in.in to i64*, !llfi_index !8734
  %.pn1 = load i64* %.pn1.in, align 8, !llfi_index !8735
  %.pn = load i64* %.pn.in, align 8, !llfi_index !8736
  %27 = getelementptr inbounds i8* %4, i64 72, !llfi_index !8737
  %28 = bitcast i8* %27 to i64*, !llfi_index !8738
  %29 = load i64* %28, align 8, !llfi_index !8739
  switch i64 %29, label %74 [
    i64 1, label %30
    i64 2, label %44
    i64 3, label %59
  ], !llfi_index !8740

; <label>:30                                      ; preds = %26
  %31 = bitcast i8* %4 to double*, !llfi_index !8741
  %32 = load double* %31, align 8, !llfi_index !8742
  %33 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 2, !llfi_index !8743
  %34 = load double* %33, align 8, !llfi_index !8744
  %35 = fdiv double %34, %32, !llfi_index !8745
  store double %35, double* %33, align 8, !llfi_index !8746
  %36 = load double* %31, align 8, !llfi_index !8747
  %37 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 3, !llfi_index !8748
  %38 = load double* %37, align 8, !llfi_index !8749
  %39 = fdiv double %38, %36, !llfi_index !8750
  store double %39, double* %37, align 8, !llfi_index !8751
  %40 = load double* %31, align 8, !llfi_index !8752
  %41 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 4, !llfi_index !8753
  %42 = load double* %41, align 8, !llfi_index !8754
  %43 = fdiv double %42, %40, !llfi_index !8755
  store double %43, double* %41, align 8, !llfi_index !8756
  br label %74, !llfi_index !8757

; <label>:44                                      ; preds = %26
  %45 = getelementptr inbounds i8* %4, i64 8, !llfi_index !8758
  %46 = bitcast i8* %45 to double*, !llfi_index !8759
  %47 = load double* %46, align 8, !llfi_index !8760
  %48 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 2, !llfi_index !8761
  %49 = load double* %48, align 8, !llfi_index !8762
  %50 = fdiv double %49, %47, !llfi_index !8763
  store double %50, double* %48, align 8, !llfi_index !8764
  %51 = load double* %46, align 8, !llfi_index !8765
  %52 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 3, !llfi_index !8766
  %53 = load double* %52, align 8, !llfi_index !8767
  %54 = fdiv double %53, %51, !llfi_index !8768
  store double %54, double* %52, align 8, !llfi_index !8769
  %55 = load double* %46, align 8, !llfi_index !8770
  %56 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 4, !llfi_index !8771
  %57 = load double* %56, align 8, !llfi_index !8772
  %58 = fdiv double %57, %55, !llfi_index !8773
  store double %58, double* %56, align 8, !llfi_index !8774
  br label %74, !llfi_index !8775

; <label>:59                                      ; preds = %26
  %60 = getelementptr inbounds i8* %4, i64 16, !llfi_index !8776
  %61 = bitcast i8* %60 to double*, !llfi_index !8777
  %62 = load double* %61, align 8, !llfi_index !8778
  %63 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 2, !llfi_index !8779
  %64 = load double* %63, align 8, !llfi_index !8780
  %65 = fdiv double %64, %62, !llfi_index !8781
  store double %65, double* %63, align 8, !llfi_index !8782
  %66 = load double* %61, align 8, !llfi_index !8783
  %67 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 3, !llfi_index !8784
  %68 = load double* %67, align 8, !llfi_index !8785
  %69 = fdiv double %68, %66, !llfi_index !8786
  store double %69, double* %67, align 8, !llfi_index !8787
  %70 = load double* %61, align 8, !llfi_index !8788
  %71 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 4, !llfi_index !8789
  %72 = load double* %71, align 8, !llfi_index !8790
  %73 = fdiv double %72, %70, !llfi_index !8791
  store double %73, double* %71, align 8, !llfi_index !8792
  br label %74, !llfi_index !8793

; <label>:74                                      ; preds = %59, %44, %30, %26
  %75 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 2, !llfi_index !8794
  %76 = load double* %75, align 8, !llfi_index !8795
  %77 = getelementptr inbounds [3 x double]* %7, i64 %19, i64 0, !llfi_index !8796
  %78 = load double* %77, align 8, !llfi_index !8797
  %79 = fmul double %76, %78, !llfi_index !8798
  %80 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 3, !llfi_index !8799
  %81 = load double* %80, align 8, !llfi_index !8800
  %82 = getelementptr inbounds [3 x double]* %7, i64 %.pn, i64 0, !llfi_index !8801
  %83 = load double* %82, align 8, !llfi_index !8802
  %84 = fmul double %81, %83, !llfi_index !8803
  %85 = fadd double %79, %84, !llfi_index !8804
  %86 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 4, !llfi_index !8805
  %87 = load double* %86, align 8, !llfi_index !8806
  %88 = getelementptr inbounds [3 x double]* %7, i64 %.pn1, i64 0, !llfi_index !8807
  %89 = load double* %88, align 8, !llfi_index !8808
  %90 = fmul double %87, %89, !llfi_index !8809
  %91 = fadd double %85, %90, !llfi_index !8810
  store double %91, double* %Ni, align 8, !llfi_index !8811
  %92 = load double* %75, align 8, !llfi_index !8812
  %93 = getelementptr inbounds [3 x double]* %7, i64 %19, i64 1, !llfi_index !8813
  %94 = load double* %93, align 8, !llfi_index !8814
  %95 = fmul double %92, %94, !llfi_index !8815
  %96 = load double* %80, align 8, !llfi_index !8816
  %97 = getelementptr inbounds [3 x double]* %7, i64 %.pn, i64 1, !llfi_index !8817
  %98 = load double* %97, align 8, !llfi_index !8818
  %99 = fmul double %96, %98, !llfi_index !8819
  %100 = fadd double %95, %99, !llfi_index !8820
  %101 = load double* %86, align 8, !llfi_index !8821
  %102 = getelementptr inbounds [3 x double]* %7, i64 %.pn1, i64 1, !llfi_index !8822
  %103 = load double* %102, align 8, !llfi_index !8823
  %104 = fmul double %101, %103, !llfi_index !8824
  %105 = fadd double %100, %104, !llfi_index !8825
  %106 = getelementptr inbounds double* %Ni, i64 1, !llfi_index !8826
  store double %105, double* %106, align 8, !llfi_index !8827
  %107 = load double* %75, align 8, !llfi_index !8828
  %108 = getelementptr inbounds [3 x double]* %7, i64 %19, i64 2, !llfi_index !8829
  %109 = load double* %108, align 8, !llfi_index !8830
  %110 = fmul double %107, %109, !llfi_index !8831
  %111 = load double* %80, align 8, !llfi_index !8832
  %112 = getelementptr inbounds [3 x double]* %7, i64 %.pn, i64 2, !llfi_index !8833
  %113 = load double* %112, align 8, !llfi_index !8834
  %114 = fmul double %111, %113, !llfi_index !8835
  %115 = fadd double %110, %114, !llfi_index !8836
  %116 = load double* %86, align 8, !llfi_index !8837
  %117 = getelementptr inbounds [3 x double]* %7, i64 %.pn1, i64 2, !llfi_index !8838
  %118 = load double* %117, align 8, !llfi_index !8839
  %119 = fmul double %116, %118, !llfi_index !8840
  %120 = fadd double %115, %119, !llfi_index !8841
  %121 = getelementptr inbounds double* %Ni, i64 2, !llfi_index !8842
  store double %120, double* %121, align 8, !llfi_index !8843
  tail call void @VecNorm(double* %Ni), !llfi_index !8844
  br label %133, !llfi_index !8845

; <label>:122                                     ; preds = %0
  %123 = bitcast i8* %4 to double*, !llfi_index !8846
  %124 = load double* %123, align 8, !llfi_index !8847
  store double %124, double* %Ni, align 8, !llfi_index !8848
  %125 = getelementptr inbounds i8* %4, i64 8, !llfi_index !8849
  %126 = bitcast i8* %125 to double*, !llfi_index !8850
  %127 = load double* %126, align 8, !llfi_index !8851
  %128 = getelementptr inbounds double* %Ni, i64 1, !llfi_index !8852
  store double %127, double* %128, align 8, !llfi_index !8853
  %129 = getelementptr inbounds i8* %4, i64 16, !llfi_index !8854
  %130 = bitcast i8* %129 to double*, !llfi_index !8855
  %131 = load double* %130, align 8, !llfi_index !8856
  %132 = getelementptr inbounds double* %Ni, i64 2, !llfi_index !8857
  store double %131, double* %132, align 8, !llfi_index !8858
  br label %133, !llfi_index !8859

; <label>:133                                     ; preds = %122, %74
  ret void, !llfi_index !8860
}

; Function Attrs: nounwind uwtable
define void @TriDataNormalize(%struct.object* nocapture %po, [4 x double]* nocapture readonly %normMat) #0 {
  %coord = alloca [4 x double], align 16, !llfi_index !8861
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !8862
  %2 = load %struct.element** %1, align 8, !llfi_index !8863
  %3 = getelementptr inbounds %struct.object* %po, i64 0, i32 2, !llfi_index !8864
  tail call void @NormalizeBoundBox(%struct.bbox* %3, [4 x double]* %normMat), !llfi_index !8865
  %4 = getelementptr inbounds %struct.element* %2, i64 0, i32 2, !llfi_index !8866
  %5 = load i8** %4, align 8, !llfi_index !8867
  %6 = getelementptr inbounds i8* %5, i64 32, !llfi_index !8868
  %7 = bitcast i8* %6 to [3 x double]**, !llfi_index !8869
  %8 = load [3 x double]** %7, align 8, !llfi_index !8870
  %9 = getelementptr inbounds [3 x double]* %8, i64 0, i64 0, !llfi_index !8871
  %10 = load double* %9, align 8, !llfi_index !8872
  %11 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 0, !llfi_index !8873
  store double %10, double* %11, align 16, !llfi_index !8874
  %12 = getelementptr inbounds [3 x double]* %8, i64 0, i64 1, !llfi_index !8875
  %13 = load double* %12, align 8, !llfi_index !8876
  %14 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 1, !llfi_index !8877
  store double %13, double* %14, align 8, !llfi_index !8878
  %15 = getelementptr inbounds [3 x double]* %8, i64 0, i64 2, !llfi_index !8879
  %16 = load double* %15, align 8, !llfi_index !8880
  %17 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 2, !llfi_index !8881
  store double %16, double* %17, align 16, !llfi_index !8882
  %18 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 3, !llfi_index !8883
  store double 1.000000e+00, double* %18, align 8, !llfi_index !8884
  %19 = load double* %11, align 16, !llfi_index !8885
  %20 = fcmp une double %19, 1.000000e+32, !llfi_index !8886
  %21 = load double* %14, align 8, !llfi_index !8887
  %22 = fcmp une double %21, 1.000000e+32, !llfi_index !8888
  %or.cond7 = and i1 %20, %22, !llfi_index !8889
  %23 = load double* %17, align 16, !llfi_index !8890
  %24 = fcmp une double %23, 1.000000e+32, !llfi_index !8891
  %or.cond48 = and i1 %or.cond7, %24, !llfi_index !8892
  br i1 %or.cond48, label %.lr.ph10, label %.critedge.preheader, !llfi_index !8893

.critedge.preheader:                              ; preds = %.lr.ph10, %0
  %25 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !8894
  %26 = load i64* %25, align 8, !llfi_index !8895
  %27 = icmp sgt i64 %26, 0, !llfi_index !8896
  br i1 %27, label %.critedge, label %.critedge._crit_edge, !llfi_index !8897

.lr.ph10:                                         ; preds = %.lr.ph10, %0
  %pv.09 = phi [3 x double]* [ %34, %.lr.ph10 ], [ %8, %0 ], !llfi_index !8898
  call void @VecMatMult(double* %11, [4 x double]* %normMat, double* %11), !llfi_index !8899
  %28 = load double* %11, align 16, !llfi_index !8900
  %29 = getelementptr inbounds [3 x double]* %pv.09, i64 0, i64 0, !llfi_index !8901
  store double %28, double* %29, align 8, !llfi_index !8902
  %30 = load double* %14, align 8, !llfi_index !8903
  %31 = getelementptr inbounds [3 x double]* %pv.09, i64 0, i64 1, !llfi_index !8904
  store double %30, double* %31, align 8, !llfi_index !8905
  %32 = load double* %17, align 16, !llfi_index !8906
  %33 = getelementptr inbounds [3 x double]* %pv.09, i64 0, i64 2, !llfi_index !8907
  store double %32, double* %33, align 8, !llfi_index !8908
  %34 = getelementptr inbounds [3 x double]* %pv.09, i64 1, !llfi_index !8909
  %35 = getelementptr inbounds [3 x double]* %34, i64 0, i64 0, !llfi_index !8910
  %36 = load double* %35, align 8, !llfi_index !8911
  store double %36, double* %11, align 16, !llfi_index !8912
  %37 = getelementptr inbounds [3 x double]* %pv.09, i64 1, i64 1, !llfi_index !8913
  %38 = load double* %37, align 8, !llfi_index !8914
  store double %38, double* %14, align 8, !llfi_index !8915
  %39 = getelementptr inbounds [3 x double]* %pv.09, i64 1, i64 2, !llfi_index !8916
  %40 = load double* %39, align 8, !llfi_index !8917
  store double %40, double* %17, align 16, !llfi_index !8918
  store double 1.000000e+00, double* %18, align 8, !llfi_index !8919
  %41 = load double* %11, align 16, !llfi_index !8920
  %42 = fcmp une double %41, 1.000000e+32, !llfi_index !8921
  %43 = load double* %14, align 8, !llfi_index !8922
  %44 = fcmp une double %43, 1.000000e+32, !llfi_index !8923
  %or.cond = and i1 %42, %44, !llfi_index !8924
  %45 = load double* %17, align 16, !llfi_index !8925
  %46 = fcmp une double %45, 1.000000e+32, !llfi_index !8926
  %or.cond4 = and i1 %or.cond, %46, !llfi_index !8927
  br i1 %or.cond4, label %.lr.ph10, label %.critedge.preheader, !llfi_index !8928

.critedge:                                        ; preds = %.critedge, %.critedge.preheader
  %pe.06 = phi %struct.element* [ %78, %.critedge ], [ %2, %.critedge.preheader ], !llfi_index !8929
  %i.05 = phi i64 [ %79, %.critedge ], [ 0, %.critedge.preheader ], !llfi_index !8930
  %47 = getelementptr inbounds %struct.element* %pe.06, i64 0, i32 2, !llfi_index !8931
  %48 = load i8** %47, align 8, !llfi_index !8932
  %49 = getelementptr inbounds %struct.element* %pe.06, i64 0, i32 3, !llfi_index !8933
  tail call void @NormalizeBoundBox(%struct.bbox* %49, [4 x double]* %normMat), !llfi_index !8934
  %50 = getelementptr inbounds i8* %48, i64 32, !llfi_index !8935
  %51 = bitcast i8* %50 to [3 x double]**, !llfi_index !8936
  %52 = load [3 x double]** %51, align 8, !llfi_index !8937
  %53 = getelementptr inbounds i8* %48, i64 48, !llfi_index !8938
  %54 = bitcast i8* %53 to i64*, !llfi_index !8939
  %55 = load i64* %54, align 8, !llfi_index !8940
  %56 = bitcast i8* %48 to double*, !llfi_index !8941
  %57 = load double* %56, align 8, !llfi_index !8942
  %58 = getelementptr inbounds [3 x double]* %52, i64 %55, i64 0, !llfi_index !8943
  %59 = load double* %58, align 8, !llfi_index !8944
  %60 = fmul double %57, %59, !llfi_index !8945
  %61 = getelementptr inbounds i8* %48, i64 8, !llfi_index !8946
  %62 = bitcast i8* %61 to double*, !llfi_index !8947
  %63 = load double* %62, align 8, !llfi_index !8948
  %64 = getelementptr inbounds [3 x double]* %52, i64 %55, i64 1, !llfi_index !8949
  %65 = load double* %64, align 8, !llfi_index !8950
  %66 = fmul double %63, %65, !llfi_index !8951
  %67 = fadd double %60, %66, !llfi_index !8952
  %68 = getelementptr inbounds i8* %48, i64 16, !llfi_index !8953
  %69 = bitcast i8* %68 to double*, !llfi_index !8954
  %70 = load double* %69, align 8, !llfi_index !8955
  %71 = getelementptr inbounds [3 x double]* %52, i64 %55, i64 2, !llfi_index !8956
  %72 = load double* %71, align 8, !llfi_index !8957
  %73 = fmul double %70, %72, !llfi_index !8958
  %74 = fadd double %67, %73, !llfi_index !8959
  %75 = fsub double -0.000000e+00, %74, !llfi_index !8960
  %76 = getelementptr inbounds i8* %48, i64 24, !llfi_index !8961
  %77 = bitcast i8* %76 to double*, !llfi_index !8962
  store double %75, double* %77, align 8, !llfi_index !8963
  %78 = getelementptr inbounds %struct.element* %pe.06, i64 1, !llfi_index !8964
  %79 = add nsw i64 %i.05, 1, !llfi_index !8965
  %80 = load i64* %25, align 8, !llfi_index !8966
  %81 = icmp slt i64 %79, %80, !llfi_index !8967
  br i1 %81, label %.critedge, label %.critedge._crit_edge, !llfi_index !8968

.critedge._crit_edge:                             ; preds = %.critedge, %.critedge.preheader
  ret void, !llfi_index !8969
}

; Function Attrs: nounwind uwtable
define i64 @TriPeIntersect(%struct.ray* nocapture readonly %pr, %struct.element* %pe, %struct.irecord* nocapture %hit) #0 {
  %1 = getelementptr inbounds %struct.element* %pe, i64 0, i32 2, !llfi_index !8970
  %2 = load i8** %1, align 8, !llfi_index !8971
  %3 = bitcast i8* %2 to double*, !llfi_index !8972
  %4 = load double* %3, align 8, !llfi_index !8973
  %5 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 4, i64 0, !llfi_index !8974
  %6 = load double* %5, align 8, !llfi_index !8975
  %7 = fmul double %4, %6, !llfi_index !8976
  %8 = getelementptr inbounds i8* %2, i64 8, !llfi_index !8977
  %9 = bitcast i8* %8 to double*, !llfi_index !8978
  %10 = load double* %9, align 8, !llfi_index !8979
  %11 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 4, i64 1, !llfi_index !8980
  %12 = load double* %11, align 8, !llfi_index !8981
  %13 = fmul double %10, %12, !llfi_index !8982
  %14 = fadd double %7, %13, !llfi_index !8983
  %15 = getelementptr inbounds i8* %2, i64 16, !llfi_index !8984
  %16 = bitcast i8* %15 to double*, !llfi_index !8985
  %17 = load double* %16, align 8, !llfi_index !8986
  %18 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 4, i64 2, !llfi_index !8987
  %19 = load double* %18, align 8, !llfi_index !8988
  %20 = fmul double %17, %19, !llfi_index !8989
  %21 = fadd double %14, %20, !llfi_index !8990
  %22 = fcmp ogt double %21, 0.000000e+00, !llfi_index !8991
  br i1 %22, label %25, label %23, !llfi_index !8992

; <label>:23                                      ; preds = %0
  %24 = fsub double -0.000000e+00, %21, !llfi_index !8993
  br label %25, !llfi_index !8994

; <label>:25                                      ; preds = %23, %0
  %26 = phi double [ %24, %23 ], [ %21, %0 ], !llfi_index !8995
  %27 = fcmp olt double %26, 1.000000e-07, !llfi_index !8996
  br i1 %27, label %281, label %28, !llfi_index !8997

; <label>:28                                      ; preds = %25
  %29 = load double* %3, align 8, !llfi_index !8998
  %30 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 3, i64 0, !llfi_index !8999
  %31 = load double* %30, align 8, !llfi_index !9000
  %32 = fmul double %29, %31, !llfi_index !9001
  %33 = load double* %9, align 8, !llfi_index !9002
  %34 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 3, i64 1, !llfi_index !9003
  %35 = load double* %34, align 8, !llfi_index !9004
  %36 = fmul double %33, %35, !llfi_index !9005
  %37 = fadd double %32, %36, !llfi_index !9006
  %38 = load double* %16, align 8, !llfi_index !9007
  %39 = getelementptr inbounds %struct.ray* %pr, i64 0, i32 3, i64 2, !llfi_index !9008
  %40 = load double* %39, align 8, !llfi_index !9009
  %41 = fmul double %38, %40, !llfi_index !9010
  %42 = fadd double %37, %41, !llfi_index !9011
  %43 = getelementptr inbounds i8* %2, i64 24, !llfi_index !9012
  %44 = bitcast i8* %43 to double*, !llfi_index !9013
  %45 = load double* %44, align 8, !llfi_index !9014
  %46 = fadd double %45, %42, !llfi_index !9015
  %47 = fsub double -0.000000e+00, %46, !llfi_index !9016
  %48 = fdiv double %47, %21, !llfi_index !9017
  %49 = fcmp olt double %48, 1.000000e-07, !llfi_index !9018
  br i1 %49, label %281, label %50, !llfi_index !9019

; <label>:50                                      ; preds = %28
  %51 = getelementptr inbounds i8* %2, i64 32, !llfi_index !9020
  %52 = bitcast i8* %51 to [3 x double]**, !llfi_index !9021
  %53 = load [3 x double]** %52, align 8, !llfi_index !9022
  %54 = getelementptr inbounds i8* %2, i64 48, !llfi_index !9023
  %55 = bitcast i8* %54 to i64*, !llfi_index !9024
  %56 = load i64* %55, align 8, !llfi_index !9025
  %57 = getelementptr inbounds i8* %2, i64 88, !llfi_index !9026
  %58 = bitcast i8* %57 to i64*, !llfi_index !9027
  %59 = load i64* %58, align 8, !llfi_index !9028
  %60 = icmp eq i64 %59, 2, !llfi_index !9029
  br i1 %60, label %61, label %64, !llfi_index !9030

; <label>:61                                      ; preds = %50
  %62 = getelementptr inbounds i8* %2, i64 64, !llfi_index !9031
  %63 = getelementptr inbounds i8* %2, i64 56, !llfi_index !9032
  br label %67, !llfi_index !9033

; <label>:64                                      ; preds = %50
  %65 = getelementptr inbounds i8* %2, i64 56, !llfi_index !9034
  %66 = getelementptr inbounds i8* %2, i64 64, !llfi_index !9035
  br label %67, !llfi_index !9036

; <label>:67                                      ; preds = %64, %61
  %.pn.in.in = phi i8* [ %63, %61 ], [ %66, %64 ], !llfi_index !9037
  %.pn1.in.in = phi i8* [ %62, %61 ], [ %65, %64 ], !llfi_index !9038
  %.pn1.in = bitcast i8* %.pn1.in.in to i64*, !llfi_index !9039
  %.pn.in = bitcast i8* %.pn.in.in to i64*, !llfi_index !9040
  %.pn1 = load i64* %.pn1.in, align 8, !llfi_index !9041
  %.pn = load i64* %.pn.in, align 8, !llfi_index !9042
  %68 = getelementptr inbounds [3 x double]* %53, i64 %.pn1, i64 0, !llfi_index !9043
  %69 = load double* %68, align 8, !llfi_index !9044
  %70 = getelementptr inbounds [3 x double]* %53, i64 %56, i64 0, !llfi_index !9045
  %71 = load double* %70, align 8, !llfi_index !9046
  %72 = fsub double %69, %71, !llfi_index !9047
  %73 = getelementptr inbounds [3 x double]* %53, i64 %.pn1, i64 1, !llfi_index !9048
  %74 = load double* %73, align 8, !llfi_index !9049
  %75 = getelementptr inbounds [3 x double]* %53, i64 %56, i64 1, !llfi_index !9050
  %76 = load double* %75, align 8, !llfi_index !9051
  %77 = fsub double %74, %76, !llfi_index !9052
  %78 = getelementptr inbounds [3 x double]* %53, i64 %.pn1, i64 2, !llfi_index !9053
  %79 = load double* %78, align 8, !llfi_index !9054
  %80 = getelementptr inbounds [3 x double]* %53, i64 %56, i64 2, !llfi_index !9055
  %81 = load double* %80, align 8, !llfi_index !9056
  %82 = fsub double %79, %81, !llfi_index !9057
  %83 = getelementptr inbounds [3 x double]* %53, i64 %.pn, i64 0, !llfi_index !9058
  %84 = load double* %83, align 8, !llfi_index !9059
  %85 = fsub double %84, %69, !llfi_index !9060
  %86 = getelementptr inbounds [3 x double]* %53, i64 %.pn, i64 1, !llfi_index !9061
  %87 = load double* %86, align 8, !llfi_index !9062
  %88 = fsub double %87, %74, !llfi_index !9063
  %89 = getelementptr inbounds [3 x double]* %53, i64 %.pn, i64 2, !llfi_index !9064
  %90 = load double* %89, align 8, !llfi_index !9065
  %91 = fsub double %90, %79, !llfi_index !9066
  %92 = fsub double %71, %84, !llfi_index !9067
  %93 = fsub double %76, %87, !llfi_index !9068
  %94 = fsub double %81, %90, !llfi_index !9069
  %95 = getelementptr inbounds i8* %2, i64 72, !llfi_index !9070
  %96 = bitcast i8* %95 to i64*, !llfi_index !9071
  %97 = load i64* %96, align 8, !llfi_index !9072
  switch i64 %97, label %278 [
    i64 1, label %98
    i64 2, label %158
    i64 3, label %218
  ], !llfi_index !9073

; <label>:98                                      ; preds = %67
  %99 = load double* %34, align 8, !llfi_index !9074
  %100 = load double* %11, align 8, !llfi_index !9075
  %101 = fmul double %48, %100, !llfi_index !9076
  %102 = fadd double %99, %101, !llfi_index !9077
  %103 = load double* %39, align 8, !llfi_index !9078
  %104 = load double* %18, align 8, !llfi_index !9079
  %105 = fmul double %48, %104, !llfi_index !9080
  %106 = fadd double %103, %105, !llfi_index !9081
  %107 = fsub double %106, %79, !llfi_index !9082
  %108 = fmul double %88, %107, !llfi_index !9083
  %109 = fsub double %102, %74, !llfi_index !9084
  %110 = fmul double %91, %109, !llfi_index !9085
  %111 = fsub double %108, %110, !llfi_index !9086
  %112 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 2, !llfi_index !9087
  store double %111, double* %112, align 8, !llfi_index !9088
  %113 = load double* %3, align 8, !llfi_index !9089
  %114 = fcmp ugt double %113, 0.000000e+00, !llfi_index !9090
  %115 = fcmp ult double %111, %113, !llfi_index !9091
  %or.cond = or i1 %114, %115, !llfi_index !9092
  %116 = fcmp ugt double %111, 0.000000e+00, !llfi_index !9093
  %or.cond2 = or i1 %or.cond, %116, !llfi_index !9094
  br i1 %or.cond2, label %117, label %122, !llfi_index !9095

; <label>:117                                     ; preds = %98
  %118 = fcmp ogt double %113, 0.000000e+00, !llfi_index !9096
  br i1 %118, label %119, label %281, !llfi_index !9097

; <label>:119                                     ; preds = %117
  %120 = fcmp ult double %111, 0.000000e+00, !llfi_index !9098
  %121 = fcmp ugt double %111, %113, !llfi_index !9099
  %or.cond3 = or i1 %120, %121, !llfi_index !9100
  br i1 %or.cond3, label %281, label %122, !llfi_index !9101

; <label>:122                                     ; preds = %119, %98
  %123 = load double* %89, align 8, !llfi_index !9102
  %124 = fsub double %106, %123, !llfi_index !9103
  %125 = fmul double %93, %124, !llfi_index !9104
  %126 = load double* %86, align 8, !llfi_index !9105
  %127 = fsub double %102, %126, !llfi_index !9106
  %128 = fmul double %94, %127, !llfi_index !9107
  %129 = fsub double %125, %128, !llfi_index !9108
  %130 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 3, !llfi_index !9109
  store double %129, double* %130, align 8, !llfi_index !9110
  %131 = load double* %3, align 8, !llfi_index !9111
  %132 = fcmp ugt double %131, 0.000000e+00, !llfi_index !9112
  %133 = fcmp ult double %129, %131, !llfi_index !9113
  %or.cond4 = or i1 %132, %133, !llfi_index !9114
  %134 = fcmp ugt double %129, 0.000000e+00, !llfi_index !9115
  %or.cond5 = or i1 %or.cond4, %134, !llfi_index !9116
  br i1 %or.cond5, label %135, label %140, !llfi_index !9117

; <label>:135                                     ; preds = %122
  %136 = fcmp ogt double %131, 0.000000e+00, !llfi_index !9118
  br i1 %136, label %137, label %281, !llfi_index !9119

; <label>:137                                     ; preds = %135
  %138 = fcmp ult double %129, 0.000000e+00, !llfi_index !9120
  %139 = fcmp ugt double %129, %131, !llfi_index !9121
  %or.cond6 = or i1 %138, %139, !llfi_index !9122
  br i1 %or.cond6, label %281, label %140, !llfi_index !9123

; <label>:140                                     ; preds = %137, %122
  %141 = load double* %80, align 8, !llfi_index !9124
  %142 = fsub double %106, %141, !llfi_index !9125
  %143 = fmul double %77, %142, !llfi_index !9126
  %144 = load double* %75, align 8, !llfi_index !9127
  %145 = fsub double %102, %144, !llfi_index !9128
  %146 = fmul double %82, %145, !llfi_index !9129
  %147 = fsub double %143, %146, !llfi_index !9130
  %148 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 4, !llfi_index !9131
  store double %147, double* %148, align 8, !llfi_index !9132
  %149 = load double* %3, align 8, !llfi_index !9133
  %150 = fcmp ugt double %149, 0.000000e+00, !llfi_index !9134
  %151 = fcmp ult double %147, %149, !llfi_index !9135
  %or.cond7 = or i1 %150, %151, !llfi_index !9136
  %152 = fcmp ugt double %147, 0.000000e+00, !llfi_index !9137
  %or.cond8 = or i1 %or.cond7, %152, !llfi_index !9138
  br i1 %or.cond8, label %153, label %278, !llfi_index !9139

; <label>:153                                     ; preds = %140
  %154 = fcmp ogt double %149, 0.000000e+00, !llfi_index !9140
  br i1 %154, label %155, label %281, !llfi_index !9141

; <label>:155                                     ; preds = %153
  %156 = fcmp ult double %147, 0.000000e+00, !llfi_index !9142
  %157 = fcmp ugt double %147, %149, !llfi_index !9143
  %or.cond9 = or i1 %156, %157, !llfi_index !9144
  br i1 %or.cond9, label %281, label %278, !llfi_index !9145

; <label>:158                                     ; preds = %67
  %159 = load double* %30, align 8, !llfi_index !9146
  %160 = load double* %5, align 8, !llfi_index !9147
  %161 = fmul double %48, %160, !llfi_index !9148
  %162 = fadd double %159, %161, !llfi_index !9149
  %163 = load double* %39, align 8, !llfi_index !9150
  %164 = load double* %18, align 8, !llfi_index !9151
  %165 = fmul double %48, %164, !llfi_index !9152
  %166 = fadd double %163, %165, !llfi_index !9153
  %167 = fsub double %162, %69, !llfi_index !9154
  %168 = fmul double %91, %167, !llfi_index !9155
  %169 = fsub double %166, %79, !llfi_index !9156
  %170 = fmul double %85, %169, !llfi_index !9157
  %171 = fsub double %168, %170, !llfi_index !9158
  %172 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 2, !llfi_index !9159
  store double %171, double* %172, align 8, !llfi_index !9160
  %173 = load double* %9, align 8, !llfi_index !9161
  %174 = fcmp ugt double %173, 0.000000e+00, !llfi_index !9162
  %175 = fcmp ult double %171, %173, !llfi_index !9163
  %or.cond10 = or i1 %174, %175, !llfi_index !9164
  %176 = fcmp ugt double %171, 0.000000e+00, !llfi_index !9165
  %or.cond11 = or i1 %or.cond10, %176, !llfi_index !9166
  br i1 %or.cond11, label %177, label %182, !llfi_index !9167

; <label>:177                                     ; preds = %158
  %178 = fcmp ogt double %173, 0.000000e+00, !llfi_index !9168
  br i1 %178, label %179, label %281, !llfi_index !9169

; <label>:179                                     ; preds = %177
  %180 = fcmp ult double %171, 0.000000e+00, !llfi_index !9170
  %181 = fcmp ugt double %171, %173, !llfi_index !9171
  %or.cond12 = or i1 %180, %181, !llfi_index !9172
  br i1 %or.cond12, label %281, label %182, !llfi_index !9173

; <label>:182                                     ; preds = %179, %158
  %183 = load double* %83, align 8, !llfi_index !9174
  %184 = fsub double %162, %183, !llfi_index !9175
  %185 = fmul double %94, %184, !llfi_index !9176
  %186 = load double* %89, align 8, !llfi_index !9177
  %187 = fsub double %166, %186, !llfi_index !9178
  %188 = fmul double %92, %187, !llfi_index !9179
  %189 = fsub double %185, %188, !llfi_index !9180
  %190 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 3, !llfi_index !9181
  store double %189, double* %190, align 8, !llfi_index !9182
  %191 = load double* %9, align 8, !llfi_index !9183
  %192 = fcmp ugt double %191, 0.000000e+00, !llfi_index !9184
  %193 = fcmp ult double %189, %191, !llfi_index !9185
  %or.cond13 = or i1 %192, %193, !llfi_index !9186
  %194 = fcmp ugt double %189, 0.000000e+00, !llfi_index !9187
  %or.cond14 = or i1 %or.cond13, %194, !llfi_index !9188
  br i1 %or.cond14, label %195, label %200, !llfi_index !9189

; <label>:195                                     ; preds = %182
  %196 = fcmp ogt double %191, 0.000000e+00, !llfi_index !9190
  br i1 %196, label %197, label %281, !llfi_index !9191

; <label>:197                                     ; preds = %195
  %198 = fcmp ult double %189, 0.000000e+00, !llfi_index !9192
  %199 = fcmp ugt double %189, %191, !llfi_index !9193
  %or.cond15 = or i1 %198, %199, !llfi_index !9194
  br i1 %or.cond15, label %281, label %200, !llfi_index !9195

; <label>:200                                     ; preds = %197, %182
  %201 = load double* %70, align 8, !llfi_index !9196
  %202 = fsub double %162, %201, !llfi_index !9197
  %203 = fmul double %82, %202, !llfi_index !9198
  %204 = load double* %80, align 8, !llfi_index !9199
  %205 = fsub double %166, %204, !llfi_index !9200
  %206 = fmul double %72, %205, !llfi_index !9201
  %207 = fsub double %203, %206, !llfi_index !9202
  %208 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 4, !llfi_index !9203
  store double %207, double* %208, align 8, !llfi_index !9204
  %209 = load double* %9, align 8, !llfi_index !9205
  %210 = fcmp ugt double %209, 0.000000e+00, !llfi_index !9206
  %211 = fcmp ult double %207, %209, !llfi_index !9207
  %or.cond16 = or i1 %210, %211, !llfi_index !9208
  %212 = fcmp ugt double %207, 0.000000e+00, !llfi_index !9209
  %or.cond17 = or i1 %or.cond16, %212, !llfi_index !9210
  br i1 %or.cond17, label %213, label %278, !llfi_index !9211

; <label>:213                                     ; preds = %200
  %214 = fcmp ogt double %209, 0.000000e+00, !llfi_index !9212
  br i1 %214, label %215, label %281, !llfi_index !9213

; <label>:215                                     ; preds = %213
  %216 = fcmp ult double %207, 0.000000e+00, !llfi_index !9214
  %217 = fcmp ugt double %207, %209, !llfi_index !9215
  %or.cond18 = or i1 %216, %217, !llfi_index !9216
  br i1 %or.cond18, label %281, label %278, !llfi_index !9217

; <label>:218                                     ; preds = %67
  %219 = load double* %30, align 8, !llfi_index !9218
  %220 = load double* %5, align 8, !llfi_index !9219
  %221 = fmul double %48, %220, !llfi_index !9220
  %222 = fadd double %219, %221, !llfi_index !9221
  %223 = load double* %34, align 8, !llfi_index !9222
  %224 = load double* %11, align 8, !llfi_index !9223
  %225 = fmul double %48, %224, !llfi_index !9224
  %226 = fadd double %223, %225, !llfi_index !9225
  %227 = fsub double %226, %74, !llfi_index !9226
  %228 = fmul double %85, %227, !llfi_index !9227
  %229 = fsub double %222, %69, !llfi_index !9228
  %230 = fmul double %88, %229, !llfi_index !9229
  %231 = fsub double %228, %230, !llfi_index !9230
  %232 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 2, !llfi_index !9231
  store double %231, double* %232, align 8, !llfi_index !9232
  %233 = load double* %16, align 8, !llfi_index !9233
  %234 = fcmp ugt double %233, 0.000000e+00, !llfi_index !9234
  %235 = fcmp ult double %231, %233, !llfi_index !9235
  %or.cond19 = or i1 %234, %235, !llfi_index !9236
  %236 = fcmp ugt double %231, 0.000000e+00, !llfi_index !9237
  %or.cond20 = or i1 %or.cond19, %236, !llfi_index !9238
  br i1 %or.cond20, label %237, label %242, !llfi_index !9239

; <label>:237                                     ; preds = %218
  %238 = fcmp ogt double %233, 0.000000e+00, !llfi_index !9240
  br i1 %238, label %239, label %281, !llfi_index !9241

; <label>:239                                     ; preds = %237
  %240 = fcmp ult double %231, 0.000000e+00, !llfi_index !9242
  %241 = fcmp ugt double %231, %233, !llfi_index !9243
  %or.cond21 = or i1 %240, %241, !llfi_index !9244
  br i1 %or.cond21, label %281, label %242, !llfi_index !9245

; <label>:242                                     ; preds = %239, %218
  %243 = load double* %86, align 8, !llfi_index !9246
  %244 = fsub double %226, %243, !llfi_index !9247
  %245 = fmul double %92, %244, !llfi_index !9248
  %246 = load double* %83, align 8, !llfi_index !9249
  %247 = fsub double %222, %246, !llfi_index !9250
  %248 = fmul double %93, %247, !llfi_index !9251
  %249 = fsub double %245, %248, !llfi_index !9252
  %250 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 3, !llfi_index !9253
  store double %249, double* %250, align 8, !llfi_index !9254
  %251 = load double* %16, align 8, !llfi_index !9255
  %252 = fcmp ugt double %251, 0.000000e+00, !llfi_index !9256
  %253 = fcmp ult double %249, %251, !llfi_index !9257
  %or.cond22 = or i1 %252, %253, !llfi_index !9258
  %254 = fcmp ugt double %249, 0.000000e+00, !llfi_index !9259
  %or.cond23 = or i1 %or.cond22, %254, !llfi_index !9260
  br i1 %or.cond23, label %255, label %260, !llfi_index !9261

; <label>:255                                     ; preds = %242
  %256 = fcmp ogt double %251, 0.000000e+00, !llfi_index !9262
  br i1 %256, label %257, label %281, !llfi_index !9263

; <label>:257                                     ; preds = %255
  %258 = fcmp ult double %249, 0.000000e+00, !llfi_index !9264
  %259 = fcmp ugt double %249, %251, !llfi_index !9265
  %or.cond24 = or i1 %258, %259, !llfi_index !9266
  br i1 %or.cond24, label %281, label %260, !llfi_index !9267

; <label>:260                                     ; preds = %257, %242
  %261 = load double* %75, align 8, !llfi_index !9268
  %262 = fsub double %226, %261, !llfi_index !9269
  %263 = fmul double %72, %262, !llfi_index !9270
  %264 = load double* %70, align 8, !llfi_index !9271
  %265 = fsub double %222, %264, !llfi_index !9272
  %266 = fmul double %77, %265, !llfi_index !9273
  %267 = fsub double %263, %266, !llfi_index !9274
  %268 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 4, !llfi_index !9275
  store double %267, double* %268, align 8, !llfi_index !9276
  %269 = load double* %16, align 8, !llfi_index !9277
  %270 = fcmp ugt double %269, 0.000000e+00, !llfi_index !9278
  %271 = fcmp ult double %267, %269, !llfi_index !9279
  %or.cond25 = or i1 %270, %271, !llfi_index !9280
  %272 = fcmp ugt double %267, 0.000000e+00, !llfi_index !9281
  %or.cond26 = or i1 %or.cond25, %272, !llfi_index !9282
  br i1 %or.cond26, label %273, label %278, !llfi_index !9283

; <label>:273                                     ; preds = %260
  %274 = fcmp ogt double %269, 0.000000e+00, !llfi_index !9284
  br i1 %274, label %275, label %281, !llfi_index !9285

; <label>:275                                     ; preds = %273
  %276 = fcmp ult double %267, 0.000000e+00, !llfi_index !9286
  %277 = fcmp ugt double %267, %269, !llfi_index !9287
  %or.cond27 = or i1 %276, %277, !llfi_index !9288
  br i1 %or.cond27, label %281, label %278, !llfi_index !9289

; <label>:278                                     ; preds = %275, %260, %215, %200, %155, %140, %67
  %279 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 0, !llfi_index !9290
  store double %48, double* %279, align 8, !llfi_index !9291
  %280 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 1, !llfi_index !9292
  store %struct.element* %pe, %struct.element** %280, align 8, !llfi_index !9293
  br label %281, !llfi_index !9294

; <label>:281                                     ; preds = %278, %275, %273, %257, %255, %239, %237, %215, %213, %197, %195, %179, %177, %155, %153, %137, %135, %119, %117, %28, %25
  %.0 = phi i64 [ 1, %278 ], [ 0, %25 ], [ 0, %28 ], [ 0, %119 ], [ 0, %117 ], [ 0, %137 ], [ 0, %135 ], [ 0, %155 ], [ 0, %153 ], [ 0, %179 ], [ 0, %177 ], [ 0, %197 ], [ 0, %195 ], [ 0, %215 ], [ 0, %213 ], [ 0, %239 ], [ 0, %237 ], [ 0, %257 ], [ 0, %255 ], [ 0, %275 ], [ 0, %273 ], !llfi_index !9295
  ret i64 %.0, !llfi_index !9296
}

; Function Attrs: nounwind uwtable
define i64 @TriIntersect(%struct.ray* nocapture readonly %pr, %struct.object* nocapture readonly %po, %struct.irecord* nocapture %hit) #0 {
  %newhit = alloca %struct.irecord, align 8, !llfi_index !9297
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !9298
  %2 = load %struct.element** %1, align 8, !llfi_index !9299
  %3 = getelementptr inbounds %struct.irecord* %hit, i64 0, i32 0, !llfi_index !9300
  store double 1.000000e+32, double* %3, align 8, !llfi_index !9301
  %4 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !9302
  %5 = load i64* %4, align 8, !llfi_index !9303
  %6 = icmp sgt i64 %5, 0, !llfi_index !9304
  br i1 %6, label %.lr.ph, label %._crit_edge, !llfi_index !9305

.lr.ph:                                           ; preds = %0
  %7 = getelementptr inbounds %struct.irecord* %newhit, i64 0, i32 0, !llfi_index !9306
  %8 = bitcast %struct.irecord* %hit to i8*, !llfi_index !9307
  %9 = bitcast %struct.irecord* %newhit to i8*, !llfi_index !9308
  br label %10, !llfi_index !9309

; <label>:10                                      ; preds = %19, %.lr.ph
  %pe.03 = phi %struct.element* [ %2, %.lr.ph ], [ %20, %19 ], !llfi_index !9310
  %nhits.02 = phi i64 [ 0, %.lr.ph ], [ %nhits.1, %19 ], !llfi_index !9311
  %i.01 = phi i64 [ 0, %.lr.ph ], [ %21, %19 ], !llfi_index !9312
  %11 = call i64 @TriPeIntersect(%struct.ray* %pr, %struct.element* %pe.03, %struct.irecord* %newhit), !llfi_index !9313
  %12 = icmp eq i64 %11, 0, !llfi_index !9314
  br i1 %12, label %19, label %13, !llfi_index !9315

; <label>:13                                      ; preds = %10
  %14 = add nsw i64 %nhits.02, 1, !llfi_index !9316
  %15 = load double* %7, align 8, !llfi_index !9317
  %16 = load double* %3, align 8, !llfi_index !9318
  %17 = fcmp olt double %15, %16, !llfi_index !9319
  br i1 %17, label %18, label %19, !llfi_index !9320

; <label>:18                                      ; preds = %13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 40, i32 8, i1 false), !llfi_index !9321
  br label %19, !llfi_index !9322

; <label>:19                                      ; preds = %18, %13, %10
  %nhits.1 = phi i64 [ %14, %18 ], [ %14, %13 ], [ %nhits.02, %10 ], !llfi_index !9323
  %20 = getelementptr inbounds %struct.element* %pe.03, i64 1, !llfi_index !9324
  %21 = add nsw i64 %i.01, 1, !llfi_index !9325
  %22 = load i64* %4, align 8, !llfi_index !9326
  %23 = icmp slt i64 %21, %22, !llfi_index !9327
  br i1 %23, label %10, label %._crit_edge, !llfi_index !9328

._crit_edge:                                      ; preds = %19, %0
  %nhits.0.lcssa = phi i64 [ 0, %0 ], [ %nhits.1, %19 ], !llfi_index !9329
  ret i64 %nhits.0.lcssa, !llfi_index !9330
}

; Function Attrs: nounwind uwtable
define void @TriTransform(%struct.object* nocapture readonly %po, [4 x double]* nocapture readonly %xtrans, [4 x double]* nocapture readonly %xinvT) #0 {
  %pnorm = alloca [4 x double], align 16, !llfi_index !9331
  %norm = alloca [4 x double], align 16, !llfi_index !9332
  %coord = alloca [4 x double], align 16, !llfi_index !9333
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !9334
  %2 = load %struct.element** %1, align 8, !llfi_index !9335
  %3 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !9336
  %4 = load i64* %3, align 8, !llfi_index !9337
  %5 = getelementptr inbounds %struct.element* %2, i64 0, i32 2, !llfi_index !9338
  %6 = load i8** %5, align 8, !llfi_index !9339
  %7 = getelementptr inbounds i8* %6, i64 32, !llfi_index !9340
  %8 = bitcast i8* %7 to [3 x double]**, !llfi_index !9341
  %9 = load [3 x double]** %8, align 8, !llfi_index !9342
  %10 = getelementptr inbounds i8* %6, i64 40, !llfi_index !9343
  %11 = bitcast i8* %10 to [3 x double]**, !llfi_index !9344
  %12 = load [3 x double]** %11, align 8, !llfi_index !9345
  %13 = getelementptr inbounds [3 x double]* %9, i64 0, i64 0, !llfi_index !9346
  %14 = load double* %13, align 8, !llfi_index !9347
  %15 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 0, !llfi_index !9348
  store double %14, double* %15, align 16, !llfi_index !9349
  %16 = getelementptr inbounds [3 x double]* %9, i64 0, i64 1, !llfi_index !9350
  %17 = load double* %16, align 8, !llfi_index !9351
  %18 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 1, !llfi_index !9352
  store double %17, double* %18, align 8, !llfi_index !9353
  %19 = getelementptr inbounds [3 x double]* %9, i64 0, i64 2, !llfi_index !9354
  %20 = load double* %19, align 8, !llfi_index !9355
  %21 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 2, !llfi_index !9356
  store double %20, double* %21, align 16, !llfi_index !9357
  %22 = getelementptr inbounds [4 x double]* %coord, i64 0, i64 3, !llfi_index !9358
  store double 1.000000e+00, double* %22, align 8, !llfi_index !9359
  %23 = load double* %15, align 16, !llfi_index !9360
  %24 = fcmp une double %23, 1.000000e+32, !llfi_index !9361
  %25 = load double* %18, align 8, !llfi_index !9362
  %26 = fcmp une double %25, 1.000000e+32, !llfi_index !9363
  %or.cond10 = and i1 %24, %26, !llfi_index !9364
  %27 = load double* %21, align 16, !llfi_index !9365
  %28 = fcmp une double %27, 1.000000e+32, !llfi_index !9366
  %or.cond411 = and i1 %or.cond10, %28, !llfi_index !9367
  br i1 %or.cond411, label %.lr.ph14, label %.critedge.preheader, !llfi_index !9368

.lr.ph14:                                         ; preds = %0
  %29 = getelementptr inbounds [4 x double]* %norm, i64 0, i64 0, !llfi_index !9369
  %30 = getelementptr inbounds [4 x double]* %norm, i64 0, i64 1, !llfi_index !9370
  %31 = getelementptr inbounds [4 x double]* %norm, i64 0, i64 2, !llfi_index !9371
  %32 = getelementptr inbounds [4 x double]* %norm, i64 0, i64 3, !llfi_index !9372
  br label %40, !llfi_index !9373

.critedge.preheader:                              ; preds = %40, %0
  %33 = icmp sgt i64 %4, 0, !llfi_index !9374
  br i1 %33, label %.lr.ph, label %.critedge._crit_edge, !llfi_index !9375

.lr.ph:                                           ; preds = %.critedge.preheader
  %34 = getelementptr inbounds [4 x double]* %norm, i64 0, i64 0, !llfi_index !9376
  %35 = getelementptr inbounds [4 x double]* %norm, i64 0, i64 1, !llfi_index !9377
  %36 = getelementptr inbounds [4 x double]* %norm, i64 0, i64 2, !llfi_index !9378
  %37 = getelementptr inbounds [4 x double]* %pnorm, i64 0, i64 0, !llfi_index !9379
  %38 = getelementptr inbounds [4 x double]* %pnorm, i64 0, i64 1, !llfi_index !9380
  %39 = getelementptr inbounds [4 x double]* %pnorm, i64 0, i64 2, !llfi_index !9381
  br label %70, !llfi_index !9382

; <label>:40                                      ; preds = %40, %.lr.ph14
  %vptr.013 = phi [3 x double]* [ %9, %.lr.ph14 ], [ %47, %40 ], !llfi_index !9383
  %nptr.012 = phi [3 x double]* [ %12, %.lr.ph14 ], [ %63, %40 ], !llfi_index !9384
  call void @VecMatMult(double* %15, [4 x double]* %xtrans, double* %15), !llfi_index !9385
  %41 = load double* %15, align 16, !llfi_index !9386
  %42 = getelementptr inbounds [3 x double]* %vptr.013, i64 0, i64 0, !llfi_index !9387
  store double %41, double* %42, align 8, !llfi_index !9388
  %43 = load double* %18, align 8, !llfi_index !9389
  %44 = getelementptr inbounds [3 x double]* %vptr.013, i64 0, i64 1, !llfi_index !9390
  store double %43, double* %44, align 8, !llfi_index !9391
  %45 = load double* %21, align 16, !llfi_index !9392
  %46 = getelementptr inbounds [3 x double]* %vptr.013, i64 0, i64 2, !llfi_index !9393
  store double %45, double* %46, align 8, !llfi_index !9394
  %47 = getelementptr inbounds [3 x double]* %vptr.013, i64 1, !llfi_index !9395
  %48 = getelementptr inbounds [3 x double]* %47, i64 0, i64 0, !llfi_index !9396
  %49 = load double* %48, align 8, !llfi_index !9397
  store double %49, double* %15, align 16, !llfi_index !9398
  %50 = getelementptr inbounds [3 x double]* %vptr.013, i64 1, i64 1, !llfi_index !9399
  %51 = load double* %50, align 8, !llfi_index !9400
  store double %51, double* %18, align 8, !llfi_index !9401
  %52 = getelementptr inbounds [3 x double]* %vptr.013, i64 1, i64 2, !llfi_index !9402
  %53 = load double* %52, align 8, !llfi_index !9403
  store double %53, double* %21, align 16, !llfi_index !9404
  store double 1.000000e+00, double* %22, align 8, !llfi_index !9405
  %54 = getelementptr inbounds [3 x double]* %nptr.012, i64 0, i64 0, !llfi_index !9406
  %55 = load double* %54, align 8, !llfi_index !9407
  store double %55, double* %29, align 16, !llfi_index !9408
  %56 = getelementptr inbounds [3 x double]* %nptr.012, i64 0, i64 1, !llfi_index !9409
  %57 = load double* %56, align 8, !llfi_index !9410
  store double %57, double* %30, align 8, !llfi_index !9411
  %58 = getelementptr inbounds [3 x double]* %nptr.012, i64 0, i64 2, !llfi_index !9412
  %59 = load double* %58, align 8, !llfi_index !9413
  store double %59, double* %31, align 16, !llfi_index !9414
  store double 0.000000e+00, double* %32, align 8, !llfi_index !9415
  call void @VecMatMult(double* %29, [4 x double]* %xinvT, double* %29), !llfi_index !9416
  call void @VecNorm(double* %29), !llfi_index !9417
  %60 = load double* %29, align 16, !llfi_index !9418
  store double %60, double* %54, align 8, !llfi_index !9419
  %61 = load double* %30, align 8, !llfi_index !9420
  store double %61, double* %56, align 8, !llfi_index !9421
  %62 = load double* %31, align 16, !llfi_index !9422
  store double %62, double* %58, align 8, !llfi_index !9423
  %63 = getelementptr inbounds [3 x double]* %nptr.012, i64 1, !llfi_index !9424
  %64 = load double* %15, align 16, !llfi_index !9425
  %65 = fcmp une double %64, 1.000000e+32, !llfi_index !9426
  %66 = load double* %18, align 8, !llfi_index !9427
  %67 = fcmp une double %66, 1.000000e+32, !llfi_index !9428
  %or.cond = and i1 %65, %67, !llfi_index !9429
  %68 = load double* %21, align 16, !llfi_index !9430
  %69 = fcmp une double %68, 1.000000e+32, !llfi_index !9431
  %or.cond4 = and i1 %or.cond, %69, !llfi_index !9432
  br i1 %or.cond4, label %40, label %.critedge.preheader, !llfi_index !9433

; <label>:70                                      ; preds = %.critedge, %.lr.ph
  %pe.09 = phi %struct.element* [ %2, %.lr.ph ], [ %213, %.critedge ], !llfi_index !9434
  %i.08 = phi i64 [ 0, %.lr.ph ], [ %214, %.critedge ], !llfi_index !9435
  %71 = getelementptr inbounds %struct.element* %pe.09, i64 0, i32 2, !llfi_index !9436
  %72 = load i8** %71, align 8, !llfi_index !9437
  %73 = getelementptr inbounds i8* %72, i64 48, !llfi_index !9438
  %74 = bitcast i8* %73 to i64*, !llfi_index !9439
  %75 = getelementptr inbounds i8* %72, i64 32, !llfi_index !9440
  %76 = bitcast i8* %75 to [3 x double]**, !llfi_index !9441
  %77 = load [3 x double]** %76, align 8, !llfi_index !9442
  %78 = load i64* %74, align 8, !llfi_index !9443
  %79 = getelementptr inbounds i8* %72, i64 56, !llfi_index !9444
  %80 = bitcast i8* %79 to i64*, !llfi_index !9445
  %81 = load i64* %80, align 8, !llfi_index !9446
  %82 = getelementptr inbounds [3 x double]* %77, i64 %81, i64 0, !llfi_index !9447
  %83 = load double* %82, align 8, !llfi_index !9448
  %84 = getelementptr inbounds [3 x double]* %77, i64 %78, i64 0, !llfi_index !9449
  %85 = load double* %84, align 8, !llfi_index !9450
  %86 = fsub double %83, %85, !llfi_index !9451
  %87 = getelementptr inbounds [3 x double]* %77, i64 %81, i64 1, !llfi_index !9452
  %88 = load double* %87, align 8, !llfi_index !9453
  %89 = getelementptr inbounds [3 x double]* %77, i64 %78, i64 1, !llfi_index !9454
  %90 = load double* %89, align 8, !llfi_index !9455
  %91 = fsub double %88, %90, !llfi_index !9456
  %92 = getelementptr inbounds [3 x double]* %77, i64 %81, i64 2, !llfi_index !9457
  %93 = load double* %92, align 8, !llfi_index !9458
  %94 = getelementptr inbounds [3 x double]* %77, i64 %78, i64 2, !llfi_index !9459
  %95 = load double* %94, align 8, !llfi_index !9460
  %96 = fsub double %93, %95, !llfi_index !9461
  %97 = getelementptr inbounds i8* %72, i64 64, !llfi_index !9462
  %98 = bitcast i8* %97 to i64*, !llfi_index !9463
  %99 = load i64* %98, align 8, !llfi_index !9464
  %100 = getelementptr inbounds [3 x double]* %77, i64 %99, i64 0, !llfi_index !9465
  %101 = load double* %100, align 8, !llfi_index !9466
  %102 = fsub double %101, %85, !llfi_index !9467
  %103 = getelementptr inbounds [3 x double]* %77, i64 %99, i64 1, !llfi_index !9468
  %104 = load double* %103, align 8, !llfi_index !9469
  %105 = fsub double %104, %90, !llfi_index !9470
  %106 = getelementptr inbounds [3 x double]* %77, i64 %99, i64 2, !llfi_index !9471
  %107 = load double* %106, align 8, !llfi_index !9472
  %108 = fsub double %107, %95, !llfi_index !9473
  %109 = fmul double %91, %108, !llfi_index !9474
  %110 = fmul double %96, %105, !llfi_index !9475
  %111 = fsub double %109, %110, !llfi_index !9476
  %112 = bitcast i8* %72 to double*, !llfi_index !9477
  store double %111, double* %112, align 8, !llfi_index !9478
  %113 = fmul double %96, %102, !llfi_index !9479
  %114 = fmul double %86, %108, !llfi_index !9480
  %115 = fsub double %113, %114, !llfi_index !9481
  %116 = getelementptr inbounds i8* %72, i64 8, !llfi_index !9482
  %117 = bitcast i8* %116 to double*, !llfi_index !9483
  store double %115, double* %117, align 8, !llfi_index !9484
  %118 = fmul double %86, %105, !llfi_index !9485
  %119 = fmul double %91, %102, !llfi_index !9486
  %120 = fsub double %118, %119, !llfi_index !9487
  %121 = getelementptr inbounds i8* %72, i64 16, !llfi_index !9488
  %122 = bitcast i8* %121 to double*, !llfi_index !9489
  store double %120, double* %122, align 8, !llfi_index !9490
  %123 = load [3 x double]** %76, align 8, !llfi_index !9491
  %124 = load i64* %74, align 8, !llfi_index !9492
  %125 = load double* %112, align 8, !llfi_index !9493
  %126 = getelementptr inbounds [3 x double]* %123, i64 %124, i64 0, !llfi_index !9494
  %127 = load double* %126, align 8, !llfi_index !9495
  %128 = fmul double %125, %127, !llfi_index !9496
  %129 = load double* %117, align 8, !llfi_index !9497
  %130 = getelementptr inbounds [3 x double]* %123, i64 %124, i64 1, !llfi_index !9498
  %131 = load double* %130, align 8, !llfi_index !9499
  %132 = fmul double %129, %131, !llfi_index !9500
  %133 = fadd double %128, %132, !llfi_index !9501
  %134 = getelementptr inbounds [3 x double]* %123, i64 %124, i64 2, !llfi_index !9502
  %135 = load double* %134, align 8, !llfi_index !9503
  %136 = fmul double %120, %135, !llfi_index !9504
  %137 = fadd double %133, %136, !llfi_index !9505
  %138 = fsub double -0.000000e+00, %137, !llfi_index !9506
  %139 = getelementptr inbounds i8* %72, i64 24, !llfi_index !9507
  %140 = bitcast i8* %139 to double*, !llfi_index !9508
  store double %138, double* %140, align 8, !llfi_index !9509
  %141 = getelementptr inbounds i8* %72, i64 80, !llfi_index !9510
  %142 = bitcast i8* %141 to i64*, !llfi_index !9511
  %143 = load i64* %142, align 8, !llfi_index !9512
  %144 = icmp eq i64 %143, 0, !llfi_index !9513
  br i1 %144, label %180, label %145, !llfi_index !9514

; <label>:145                                     ; preds = %70
  %146 = getelementptr inbounds i8* %72, i64 40, !llfi_index !9515
  %147 = bitcast i8* %146 to [3 x double]**, !llfi_index !9516
  %148 = load [3 x double]** %147, align 8, !llfi_index !9517
  %149 = load i64* %74, align 8, !llfi_index !9518
  %150 = load double* %112, align 8, !llfi_index !9519
  store double %150, double* %37, align 16, !llfi_index !9520
  %151 = load double* %117, align 8, !llfi_index !9521
  store double %151, double* %38, align 8, !llfi_index !9522
  %152 = load double* %122, align 8, !llfi_index !9523
  store double %152, double* %39, align 16, !llfi_index !9524
  call void @VecNorm(double* %37), !llfi_index !9525
  %153 = load double* %37, align 16, !llfi_index !9526
  %154 = getelementptr inbounds [3 x double]* %148, i64 %149, i64 0, !llfi_index !9527
  %155 = load double* %154, align 8, !llfi_index !9528
  %156 = fmul double %153, %155, !llfi_index !9529
  %157 = load double* %38, align 8, !llfi_index !9530
  %158 = getelementptr inbounds [3 x double]* %148, i64 %149, i64 1, !llfi_index !9531
  %159 = load double* %158, align 8, !llfi_index !9532
  %160 = fmul double %157, %159, !llfi_index !9533
  %161 = fadd double %156, %160, !llfi_index !9534
  %162 = load double* %39, align 16, !llfi_index !9535
  %163 = getelementptr inbounds [3 x double]* %148, i64 %149, i64 2, !llfi_index !9536
  %164 = load double* %163, align 8, !llfi_index !9537
  %165 = fmul double %162, %164, !llfi_index !9538
  %166 = fadd double %161, %165, !llfi_index !9539
  %167 = fcmp ult double %166, 0.000000e+00, !llfi_index !9540
  %168 = getelementptr inbounds i8* %72, i64 88, !llfi_index !9541
  %169 = bitcast i8* %168 to i64*, !llfi_index !9542
  br i1 %167, label %171, label %170, !llfi_index !9543

; <label>:170                                     ; preds = %145
  store i64 1, i64* %169, align 8, !llfi_index !9544
  br label %180, !llfi_index !9545

; <label>:171                                     ; preds = %145
  store i64 2, i64* %169, align 8, !llfi_index !9546
  %172 = load double* %112, align 8, !llfi_index !9547
  %173 = fmul double %172, -1.000000e+00, !llfi_index !9548
  store double %173, double* %112, align 8, !llfi_index !9549
  %174 = load double* %117, align 8, !llfi_index !9550
  %175 = fmul double %174, -1.000000e+00, !llfi_index !9551
  store double %175, double* %117, align 8, !llfi_index !9552
  %176 = load double* %122, align 8, !llfi_index !9553
  %177 = fmul double %176, -1.000000e+00, !llfi_index !9554
  store double %177, double* %122, align 8, !llfi_index !9555
  %178 = load double* %140, align 8, !llfi_index !9556
  %179 = fsub double -0.000000e+00, %178, !llfi_index !9557
  store double %179, double* %140, align 8, !llfi_index !9558
  br label %180, !llfi_index !9559

; <label>:180                                     ; preds = %171, %170, %70
  %181 = load double* %112, align 8, !llfi_index !9560
  %182 = fcmp ogt double %181, 0.000000e+00, !llfi_index !9561
  br i1 %182, label %185, label %183, !llfi_index !9562

; <label>:183                                     ; preds = %180
  %184 = fsub double -0.000000e+00, %181, !llfi_index !9563
  br label %185, !llfi_index !9564

; <label>:185                                     ; preds = %183, %180
  %186 = phi double [ %184, %183 ], [ %181, %180 ], !llfi_index !9565
  store double %186, double* %34, align 16, !llfi_index !9566
  %187 = load double* %117, align 8, !llfi_index !9567
  %188 = fcmp ogt double %187, 0.000000e+00, !llfi_index !9568
  br i1 %188, label %191, label %189, !llfi_index !9569

; <label>:189                                     ; preds = %185
  %190 = fsub double -0.000000e+00, %187, !llfi_index !9570
  br label %191, !llfi_index !9571

; <label>:191                                     ; preds = %189, %185
  %192 = phi double [ %190, %189 ], [ %187, %185 ], !llfi_index !9572
  store double %192, double* %35, align 8, !llfi_index !9573
  %193 = load double* %122, align 8, !llfi_index !9574
  %194 = fcmp ogt double %193, 0.000000e+00, !llfi_index !9575
  br i1 %194, label %197, label %195, !llfi_index !9576

; <label>:195                                     ; preds = %191
  %196 = fsub double -0.000000e+00, %193, !llfi_index !9577
  br label %197, !llfi_index !9578

; <label>:197                                     ; preds = %195, %191
  %198 = phi double [ %196, %195 ], [ %193, %191 ], !llfi_index !9579
  store double %198, double* %36, align 16, !llfi_index !9580
  %199 = load double* %34, align 16, !llfi_index !9581
  %200 = load double* %35, align 8, !llfi_index !9582
  %201 = fcmp ult double %199, %200, !llfi_index !9583
  %202 = fcmp ult double %199, %198, !llfi_index !9584
  %or.cond5 = or i1 %201, %202, !llfi_index !9585
  br i1 %or.cond5, label %206, label %203, !llfi_index !9586

; <label>:203                                     ; preds = %197
  %204 = getelementptr inbounds i8* %72, i64 72, !llfi_index !9587
  %205 = bitcast i8* %204 to i64*, !llfi_index !9588
  store i64 1, i64* %205, align 8, !llfi_index !9589
  br label %.critedge, !llfi_index !9590

; <label>:206                                     ; preds = %197
  %207 = fcmp ult double %200, %199, !llfi_index !9591
  %208 = fcmp ult double %200, %198, !llfi_index !9592
  %or.cond7 = or i1 %207, %208, !llfi_index !9593
  %209 = getelementptr inbounds i8* %72, i64 72, !llfi_index !9594
  %210 = bitcast i8* %209 to i64*, !llfi_index !9595
  br i1 %or.cond7, label %212, label %211, !llfi_index !9596

; <label>:211                                     ; preds = %206
  store i64 2, i64* %210, align 8, !llfi_index !9597
  br label %.critedge, !llfi_index !9598

; <label>:212                                     ; preds = %206
  store i64 3, i64* %210, align 8, !llfi_index !9599
  br label %.critedge, !llfi_index !9600

.critedge:                                        ; preds = %212, %211, %203
  %213 = getelementptr inbounds %struct.element* %pe.09, i64 1, !llfi_index !9601
  %214 = add nsw i64 %i.08, 1, !llfi_index !9602
  %exitcond = icmp eq i64 %214, %4, !llfi_index !9603
  br i1 %exitcond, label %.critedge._crit_edge, label %70, !llfi_index !9604

.critedge._crit_edge:                             ; preds = %.critedge, %.critedge.preheader
  ret void, !llfi_index !9605
}

; Function Attrs: nounwind uwtable
define void @TriRead(%struct.object* %po, %struct._IO_FILE* %pf) #0 {
  %totalverts = alloca i64, align 8, !llfi_index !9606
  %normstr = alloca [5 x i8], align 1, !llfi_index !9607
  %1 = getelementptr inbounds %struct.object* %po, i64 0, i32 3, !llfi_index !9608
  %2 = load %struct.element** %1, align 8, !llfi_index !9609
  %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %pf, i8* getelementptr inbounds ([4 x i8]* @.str4417, i64 0, i64 0), i64* %totalverts) #2, !llfi_index !9610
  %4 = icmp eq i32 %3, 1, !llfi_index !9611
  br i1 %4, label %6, label %5, !llfi_index !9612

; <label>:5                                       ; preds = %0
  %puts2 = call i32 @puts(i8* getelementptr inbounds ([30 x i8]* @str55, i64 0, i64 0)), !llfi_index !9613
  call void @exit(i32 -1) #11, !llfi_index !9614
  unreachable, !llfi_index !9615

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.object* %po, i64 0, i32 4, !llfi_index !9616
  %8 = load i64* %7, align 8, !llfi_index !9617
  %9 = mul i64 %8, 96, !llfi_index !9618
  %10 = call i8* @GlobalMalloc(i64 %9, i8* getelementptr inbounds ([6 x i8]* @.str6419, i64 0, i64 0)), !llfi_index !9619
  %11 = bitcast i8* %10 to %struct.tri*, !llfi_index !9620
  %12 = load i64* %totalverts, align 8, !llfi_index !9621
  %13 = mul i64 %12, 24, !llfi_index !9622
  %14 = add i64 %13, 24, !llfi_index !9623
  %15 = call i8* @GlobalMalloc(i64 %14, i8* getelementptr inbounds ([6 x i8]* @.str6419, i64 0, i64 0)), !llfi_index !9624
  %16 = bitcast i8* %15 to [3 x double]*, !llfi_index !9625
  %17 = load i64* %totalverts, align 8, !llfi_index !9626
  %18 = mul i64 %17, 24, !llfi_index !9627
  %19 = call i8* @GlobalMalloc(i64 %18, i8* getelementptr inbounds ([6 x i8]* @.str6419, i64 0, i64 0)), !llfi_index !9628
  %20 = bitcast i8* %19 to [3 x double]*, !llfi_index !9629
  %21 = getelementptr inbounds [5 x i8]* %normstr, i64 0, i64 0, !llfi_index !9630
  %22 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %pf, i8* getelementptr inbounds ([4 x i8]* @.str7420, i64 0, i64 0), i8* %21) #2, !llfi_index !9631
  %23 = icmp eq i32 %22, 1, !llfi_index !9632
  br i1 %23, label %25, label %24, !llfi_index !9633

; <label>:24                                      ; preds = %6
  %puts1 = call i32 @puts(i8* getelementptr inbounds ([41 x i8]* @str54, i64 0, i64 0)), !llfi_index !9634
  call void @exit(i32 -1) #11, !llfi_index !9635
  unreachable, !llfi_index !9636

; <label>:25                                      ; preds = %6
  %26 = getelementptr inbounds [5 x i8]* %normstr, i64 0, i64 2, !llfi_index !9637
  %27 = load i8* %26, align 1, !llfi_index !9638
  %28 = icmp eq i8 %27, 121, !llfi_index !9639
  %29 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %pf, i8* getelementptr inbounds ([4 x i8]* @.str7420, i64 0, i64 0), i8* %21) #2, !llfi_index !9640
  %30 = icmp eq i32 %29, 1, !llfi_index !9641
  br i1 %30, label %32, label %31, !llfi_index !9642

; <label>:31                                      ; preds = %25
  %puts = call i32 @puts(i8* getelementptr inbounds ([43 x i8]* @str53, i64 0, i64 0)), !llfi_index !9643
  call void @exit(i32 -1) #11, !llfi_index !9644
  unreachable, !llfi_index !9645

; <label>:32                                      ; preds = %25
  %33 = load i8* %26, align 1, !llfi_index !9646
  %34 = icmp eq i8 %33, 121, !llfi_index !9647
  %35 = zext i1 %34 to i64, !llfi_index !9648
  %36 = load i64* %totalverts, align 8, !llfi_index !9649
  %37 = icmp sgt i64 %36, 0, !llfi_index !9650
  %38 = bitcast i8* %15 to double*, !llfi_index !9651
  br i1 %37, label %.lr.ph18, label %63, !llfi_index !9652

.lr.ph18:                                         ; preds = %57, %32
  %39 = phi double* [ %58, %57 ], [ %38, %32 ], !llfi_index !9653
  %nptr.016 = phi [3 x double]* [ %nptr.1, %57 ], [ %20, %32 ], !llfi_index !9654
  %i.015 = phi i64 [ %59, %57 ], [ 0, %32 ], !llfi_index !9655
  %40 = getelementptr inbounds double* %39, i64 1, !llfi_index !9656
  %41 = getelementptr inbounds double* %39, i64 2, !llfi_index !9657
  %42 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %pf, i8* getelementptr inbounds ([12 x i8]* @.str10423, i64 0, i64 0), double* %39, double* %40, double* %41) #2, !llfi_index !9658
  %43 = icmp eq i32 %42, 3, !llfi_index !9659
  br i1 %43, label %46, label %44, !llfi_index !9660

; <label>:44                                      ; preds = %.lr.ph18
  %45 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str11424, i64 0, i64 0), i64 %i.015) #2, !llfi_index !9661
  call void @exit(i32 -1) #11, !llfi_index !9662
  unreachable, !llfi_index !9663

; <label>:46                                      ; preds = %.lr.ph18
  br i1 %34, label %47, label %57, !llfi_index !9664

; <label>:47                                      ; preds = %46
  %48 = getelementptr inbounds [3 x double]* %nptr.016, i64 0, i64 0, !llfi_index !9665
  %49 = getelementptr inbounds [3 x double]* %nptr.016, i64 0, i64 1, !llfi_index !9666
  %50 = getelementptr inbounds [3 x double]* %nptr.016, i64 0, i64 2, !llfi_index !9667
  %51 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %pf, i8* getelementptr inbounds ([12 x i8]* @.str10423, i64 0, i64 0), double* %48, double* %49, double* %50) #2, !llfi_index !9668
  %52 = icmp eq i32 %51, 3, !llfi_index !9669
  br i1 %52, label %55, label %53, !llfi_index !9670

; <label>:53                                      ; preds = %47
  %54 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str12425, i64 0, i64 0), i64 %i.015) #2, !llfi_index !9671
  call void @exit(i32 -1) #11, !llfi_index !9672
  unreachable, !llfi_index !9673

; <label>:55                                      ; preds = %47
  %56 = getelementptr inbounds [3 x double]* %nptr.016, i64 1, !llfi_index !9674
  br label %57, !llfi_index !9675

; <label>:57                                      ; preds = %55, %46
  %nptr.1 = phi [3 x double]* [ %56, %55 ], [ %nptr.016, %46 ], !llfi_index !9676
  %58 = getelementptr inbounds double* %39, i64 3, !llfi_index !9677
  %59 = add nsw i64 %i.015, 1, !llfi_index !9678
  %60 = load i64* %totalverts, align 8, !llfi_index !9679
  %61 = icmp slt i64 %59, %60, !llfi_index !9680
  br i1 %61, label %.lr.ph18, label %._crit_edge19, !llfi_index !9681

._crit_edge19:                                    ; preds = %57
  %62 = bitcast double* %58 to [3 x double]*, !llfi_index !9682
  br label %63, !llfi_index !9683

; <label>:63                                      ; preds = %._crit_edge19, %32
  %.lcssa = phi double* [ %58, %._crit_edge19 ], [ %38, %32 ], !llfi_index !9684
  %vptr.0.lcssa = phi [3 x double]* [ %62, %._crit_edge19 ], [ %16, %32 ], !llfi_index !9685
  store double 1.000000e+32, double* %.lcssa, align 8, !llfi_index !9686
  %64 = getelementptr inbounds [3 x double]* %vptr.0.lcssa, i64 0, i64 1, !llfi_index !9687
  store double 1.000000e+32, double* %64, align 8, !llfi_index !9688
  %65 = getelementptr inbounds [3 x double]* %vptr.0.lcssa, i64 0, i64 2, !llfi_index !9689
  store double 1.000000e+32, double* %65, align 8, !llfi_index !9690
  %66 = load i64* %7, align 8, !llfi_index !9691
  %67 = icmp sgt i64 %66, 0, !llfi_index !9692
  br i1 %67, label %.lr.ph, label %._crit_edge, !llfi_index !9693

.lr.ph:                                           ; preds = %87, %63
  %pe.07 = phi %struct.element* [ %92, %87 ], [ %2, %63 ], !llfi_index !9694
  %pt.06 = phi %struct.tri* [ %91, %87 ], [ %11, %63 ], !llfi_index !9695
  %i.15 = phi i64 [ %93, %87 ], [ 0, %63 ], !llfi_index !9696
  br i1 %28, label %68, label %76, !llfi_index !9697

; <label>:68                                      ; preds = %.lr.ph
  %69 = getelementptr inbounds %struct.tri* %pt.06, i64 0, i32 0, i64 0, !llfi_index !9698
  %70 = getelementptr inbounds %struct.tri* %pt.06, i64 0, i32 0, i64 1, !llfi_index !9699
  %71 = getelementptr inbounds %struct.tri* %pt.06, i64 0, i32 0, i64 2, !llfi_index !9700
  %72 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %pf, i8* getelementptr inbounds ([13 x i8]* @.str13426, i64 0, i64 0), double* %69, double* %70, double* %71) #2, !llfi_index !9701
  %73 = icmp eq i32 %72, 3, !llfi_index !9702
  br i1 %73, label %76, label %74, !llfi_index !9703

; <label>:74                                      ; preds = %68
  %75 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str14427, i64 0, i64 0), i64 %i.15) #2, !llfi_index !9704
  call void @exit(i32 -1) #11, !llfi_index !9705
  unreachable, !llfi_index !9706

; <label>:76                                      ; preds = %68, %.lr.ph
  %77 = getelementptr inbounds %struct.tri* %pt.06, i64 0, i32 2, !llfi_index !9707
  store [3 x double]* %16, [3 x double]** %77, align 8, !llfi_index !9708
  %78 = getelementptr inbounds %struct.tri* %pt.06, i64 0, i32 3, !llfi_index !9709
  store [3 x double]* %20, [3 x double]** %78, align 8, !llfi_index !9710
  %79 = getelementptr inbounds %struct.tri* %pt.06, i64 0, i32 6, !llfi_index !9711
  store i64 %35, i64* %79, align 8, !llfi_index !9712
  %80 = getelementptr inbounds %struct.tri* %pt.06, i64 0, i32 4, i64 0, !llfi_index !9713
  %81 = getelementptr inbounds %struct.tri* %pt.06, i64 0, i32 4, i64 1, !llfi_index !9714
  %82 = getelementptr inbounds %struct.tri* %pt.06, i64 0, i32 4, i64 2, !llfi_index !9715
  %83 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %pf, i8* getelementptr inbounds ([12 x i8]* @.str15428, i64 0, i64 0), i64* %80, i64* %81, i64* %82) #2, !llfi_index !9716
  %84 = icmp eq i32 %83, 3, !llfi_index !9717
  br i1 %84, label %87, label %85, !llfi_index !9718

; <label>:85                                      ; preds = %76
  %86 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str16429, i64 0, i64 0), i64 %i.15) #2, !llfi_index !9719
  call void @exit(i32 -1) #11, !llfi_index !9720
  unreachable, !llfi_index !9721

; <label>:87                                      ; preds = %76
  %88 = bitcast %struct.tri* %pt.06 to i8*, !llfi_index !9722
  %89 = getelementptr inbounds %struct.element* %pe.07, i64 0, i32 2, !llfi_index !9723
  store i8* %88, i8** %89, align 8, !llfi_index !9724
  %90 = getelementptr inbounds %struct.element* %pe.07, i64 0, i32 1, !llfi_index !9725
  store %struct.object* %po, %struct.object** %90, align 8, !llfi_index !9726
  call void @TriElementBoundBox(%struct.element* %pe.07, %struct.tri* %pt.06), !llfi_index !9727
  %91 = getelementptr inbounds %struct.tri* %pt.06, i64 1, !llfi_index !9728
  %92 = getelementptr inbounds %struct.element* %pe.07, i64 1, !llfi_index !9729
  %93 = add nsw i64 %i.15, 1, !llfi_index !9730
  %94 = load i64* %7, align 8, !llfi_index !9731
  %95 = icmp slt i64 %93, %94, !llfi_index !9732
  br i1 %95, label %.lr.ph, label %._crit_edge, !llfi_index !9733

._crit_edge:                                      ; preds = %87, %63
  br i1 %34, label %97, label %96, !llfi_index !9734

; <label>:96                                      ; preds = %._crit_edge
  call void @GlobalFree(i8* %19), !llfi_index !9735
  br label %97, !llfi_index !9736

; <label>:97                                      ; preds = %96, %._crit_edge
  ret void, !llfi_index !9737
}

; Function Attrs: nounwind uwtable
define void @PutJob(i64 %xs, i64 %ys, i64 %xe, i64 %ye, i64 %xbe, i64 %ybe, i64 %pid) #0 {
  %1 = add nsw i64 %xe, %xs, !llfi_index !9738
  %2 = add nsw i64 %ye, %ys, !llfi_index !9739
  %3 = icmp sgt i64 %ye, 0, !llfi_index !9740
  br i1 %3, label %.preheader.lr.ph, label %._crit_edge5, !llfi_index !9741

.preheader.lr.ph:                                 ; preds = %0
  %4 = icmp sgt i64 %xe, 0, !llfi_index !9742
  br label %.preheader, !llfi_index !9743

.preheader:                                       ; preds = %._crit_edge, %.preheader.lr.ph
  %i.04 = phi i64 [ 0, %.preheader.lr.ph ], [ %32, %._crit_edge ], !llfi_index !9744
  %yb_addr.03 = phi i64 [ %ys, %.preheader.lr.ph ], [ %31, %._crit_edge ], !llfi_index !9745
  br i1 %4, label %.lr.ph, label %._crit_edge, !llfi_index !9746

.lr.ph:                                           ; preds = %.preheader
  %5 = add i64 %yb_addr.03, %ybe, !llfi_index !9747
  %6 = icmp sgt i64 %5, %2, !llfi_index !9748
  %7 = sub i64 %2, %yb_addr.03, !llfi_index !9749
  %yb_size.0 = select i1 %6, i64 %7, i64 %ybe, !llfi_index !9750
  br label %8, !llfi_index !9751

; <label>:8                                       ; preds = %8, %.lr.ph
  %j.02 = phi i64 [ 0, %.lr.ph ], [ %29, %8 ], !llfi_index !9752
  %xb_addr.11 = phi i64 [ %xs, %.lr.ph ], [ %9, %8 ], !llfi_index !9753
  %9 = add nsw i64 %xb_addr.11, %xbe, !llfi_index !9754
  %10 = add i64 %xb_addr.11, %xbe, !llfi_index !9755
  %11 = icmp sgt i64 %10, %1, !llfi_index !9756
  %12 = sub i64 %1, %xb_addr.11, !llfi_index !9757
  %.xbe = select i1 %11, i64 %12, i64 %xbe, !llfi_index !9758
  %13 = tail call i8* @GlobalMalloc(i64 40, i8* getelementptr inbounds ([11 x i8]* @.str448, i64 0, i64 0)), !llfi_index !9759
  %14 = bitcast i8* %13 to %struct.wpjob*, !llfi_index !9760
  %15 = getelementptr inbounds i8* %13, i64 8, !llfi_index !9761
  %16 = bitcast i8* %15 to i64*, !llfi_index !9762
  store i64 %xb_addr.11, i64* %16, align 8, !llfi_index !9763
  %17 = bitcast i8* %13 to i64*, !llfi_index !9764
  store i64 %yb_addr.03, i64* %17, align 8, !llfi_index !9765
  %18 = getelementptr inbounds i8* %13, i64 16, !llfi_index !9766
  %19 = bitcast i8* %18 to i64*, !llfi_index !9767
  store i64 %.xbe, i64* %19, align 8, !llfi_index !9768
  %20 = getelementptr inbounds i8* %13, i64 24, !llfi_index !9769
  %21 = bitcast i8* %20 to i64*, !llfi_index !9770
  store i64 %yb_size.0, i64* %21, align 8, !llfi_index !9771
  %22 = load %struct.gmem** @gm, align 8, !llfi_index !9772
  %23 = getelementptr inbounds %struct.gmem* %22, i64 0, i32 7, i64 %pid, i64 0, !llfi_index !9773
  %24 = load %struct.wpjob** %23, align 8, !llfi_index !9774
  %25 = getelementptr inbounds i8* %13, i64 32, !llfi_index !9775
  %26 = bitcast i8* %25 to %struct.wpjob**, !llfi_index !9776
  store %struct.wpjob* %24, %struct.wpjob** %26, align 8, !llfi_index !9777
  %27 = load %struct.gmem** @gm, align 8, !llfi_index !9778
  %28 = getelementptr inbounds %struct.gmem* %27, i64 0, i32 7, i64 %pid, i64 0, !llfi_index !9779
  store %struct.wpjob* %14, %struct.wpjob** %28, align 8, !llfi_index !9780
  %29 = add nsw i64 %j.02, %xbe, !llfi_index !9781
  %30 = icmp slt i64 %29, %xe, !llfi_index !9782
  br i1 %30, label %8, label %._crit_edge, !llfi_index !9783

._crit_edge:                                      ; preds = %8, %.preheader
  %31 = add nsw i64 %yb_addr.03, %ybe, !llfi_index !9784
  %32 = add nsw i64 %i.04, %ybe, !llfi_index !9785
  %33 = icmp slt i64 %32, %ye, !llfi_index !9786
  br i1 %33, label %.preheader, label %._crit_edge5, !llfi_index !9787

._crit_edge5:                                     ; preds = %._crit_edge, %0
  ret void, !llfi_index !9788
}

; Function Attrs: nounwind uwtable
define i64 @GetJob(%struct.rayjob* nocapture %job, i64 %pid) #0 {
  %1 = load %struct.gmem** @gm, align 8, !llfi_index !9789
  %2 = getelementptr inbounds %struct.gmem* %1, i64 0, i32 12, i64 %pid, !llfi_index !9790
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #2, !llfi_index !9791
  %4 = load %struct.gmem** @gm, align 8, !llfi_index !9792
  %5 = getelementptr inbounds %struct.gmem* %4, i64 0, i32 7, i64 %pid, i64 0, !llfi_index !9793
  %6 = load %struct.wpjob** %5, align 8, !llfi_index !9794
  %7 = icmp eq %struct.wpjob* %6, null, !llfi_index !9795
  br i1 %7, label %8, label %13, !llfi_index !9796

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.gmem* %4, i64 0, i32 6, i64 %pid, i64 0, !llfi_index !9797
  store i64 0, i64* %9, align 8, !llfi_index !9798
  %10 = load %struct.gmem** @gm, align 8, !llfi_index !9799
  %11 = getelementptr inbounds %struct.gmem* %10, i64 0, i32 12, i64 %pid, !llfi_index !9800
  %12 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #2, !llfi_index !9801
  br label %36, !llfi_index !9802

; <label>:13                                      ; preds = %0
  %14 = getelementptr inbounds %struct.wpjob* %6, i64 0, i32 4, !llfi_index !9803
  %15 = load %struct.wpjob** %14, align 8, !llfi_index !9804
  store %struct.wpjob* %15, %struct.wpjob** %5, align 8, !llfi_index !9805
  %16 = load %struct.gmem** @gm, align 8, !llfi_index !9806
  %17 = getelementptr inbounds %struct.gmem* %16, i64 0, i32 12, i64 %pid, !llfi_index !9807
  %18 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %17) #2, !llfi_index !9808
  %19 = getelementptr inbounds %struct.wpjob* %6, i64 0, i32 1, !llfi_index !9809
  %20 = load i64* %19, align 8, !llfi_index !9810
  %21 = getelementptr inbounds %struct.rayjob* %job, i64 0, i32 0, !llfi_index !9811
  store i64 %20, i64* %21, align 8, !llfi_index !9812
  %22 = getelementptr inbounds %struct.wpjob* %6, i64 0, i32 0, !llfi_index !9813
  %23 = load i64* %22, align 8, !llfi_index !9814
  %24 = getelementptr inbounds %struct.rayjob* %job, i64 0, i32 1, !llfi_index !9815
  store i64 %23, i64* %24, align 8, !llfi_index !9816
  %25 = load i64* %19, align 8, !llfi_index !9817
  %26 = getelementptr inbounds %struct.rayjob* %job, i64 0, i32 4, !llfi_index !9818
  store i64 %25, i64* %26, align 8, !llfi_index !9819
  %27 = load i64* %22, align 8, !llfi_index !9820
  %28 = getelementptr inbounds %struct.rayjob* %job, i64 0, i32 5, !llfi_index !9821
  store i64 %27, i64* %28, align 8, !llfi_index !9822
  %29 = getelementptr inbounds %struct.wpjob* %6, i64 0, i32 2, !llfi_index !9823
  %30 = load i64* %29, align 8, !llfi_index !9824
  %31 = getelementptr inbounds %struct.rayjob* %job, i64 0, i32 2, !llfi_index !9825
  store i64 %30, i64* %31, align 8, !llfi_index !9826
  %32 = getelementptr inbounds %struct.wpjob* %6, i64 0, i32 3, !llfi_index !9827
  %33 = load i64* %32, align 8, !llfi_index !9828
  %34 = getelementptr inbounds %struct.rayjob* %job, i64 0, i32 3, !llfi_index !9829
  store i64 %33, i64* %34, align 8, !llfi_index !9830
  %35 = bitcast %struct.wpjob* %6 to i8*, !llfi_index !9831
  tail call void @GlobalFree(i8* %35), !llfi_index !9832
  br label %36, !llfi_index !9833

; <label>:36                                      ; preds = %13, %8
  %.0 = phi i64 [ 1, %13 ], [ 0, %8 ], !llfi_index !9834
  ret i64 %.0, !llfi_index !9835
}

; Function Attrs: nounwind uwtable
define i64 @GetJobs(%struct.rayjob* nocapture %job, i64 %pid) #0 {
  %1 = load %struct.gmem** @gm, align 8, !llfi_index !9836
  %2 = getelementptr inbounds %struct.gmem* %1, i64 0, i32 6, i64 %pid, i64 0, !llfi_index !9837
  %3 = load i64* %2, align 8, !llfi_index !9838
  %4 = icmp eq i64 %3, 1, !llfi_index !9839
  br i1 %4, label %5, label %8, !llfi_index !9840

; <label>:5                                       ; preds = %0
  %6 = tail call i64 @GetJob(%struct.rayjob* %job, i64 %pid), !llfi_index !9841
  %7 = icmp eq i64 %6, 1, !llfi_index !9842
  br i1 %7, label %.loopexit, label %8, !llfi_index !9843

; <label>:8                                       ; preds = %5, %0
  %9 = add nsw i64 %pid, 1, !llfi_index !9844
  %10 = load %struct.gmem** @gm, align 8, !llfi_index !9845
  %11 = getelementptr inbounds %struct.gmem* %10, i64 0, i32 0, !llfi_index !9846
  %12 = load i64* %11, align 8, !llfi_index !9847
  %13 = srem i64 %9, %12, !llfi_index !9848
  %14 = icmp eq i64 %13, %pid, !llfi_index !9849
  br i1 %14, label %.loopexit, label %.lr.ph, !llfi_index !9850

.lr.ph:                                           ; preds = %22, %8
  %i.01 = phi i64 [ %27, %22 ], [ %13, %8 ], !llfi_index !9851
  %15 = load %struct.gmem** @gm, align 8, !llfi_index !9852
  %16 = getelementptr inbounds %struct.gmem* %15, i64 0, i32 6, i64 %i.01, i64 0, !llfi_index !9853
  %17 = load i64* %16, align 8, !llfi_index !9854
  %18 = icmp eq i64 %17, 1, !llfi_index !9855
  br i1 %18, label %19, label %22, !llfi_index !9856

; <label>:19                                      ; preds = %.lr.ph
  %20 = tail call i64 @GetJob(%struct.rayjob* %job, i64 %i.01), !llfi_index !9857
  %21 = icmp eq i64 %20, 1, !llfi_index !9858
  br i1 %21, label %.loopexit, label %22, !llfi_index !9859

; <label>:22                                      ; preds = %19, %.lr.ph
  %23 = add nsw i64 %i.01, 1, !llfi_index !9860
  %24 = load %struct.gmem** @gm, align 8, !llfi_index !9861
  %25 = getelementptr inbounds %struct.gmem* %24, i64 0, i32 0, !llfi_index !9862
  %26 = load i64* %25, align 8, !llfi_index !9863
  %27 = srem i64 %23, %26, !llfi_index !9864
  %28 = icmp eq i64 %27, %pid, !llfi_index !9865
  br i1 %28, label %.loopexit, label %.lr.ph, !llfi_index !9866

.loopexit:                                        ; preds = %22, %19, %8, %5
  %.0 = phi i64 [ 1, %5 ], [ 0, %8 ], [ 0, %22 ], [ 1, %19 ], !llfi_index !9867
  ret i64 %.0, !llfi_index !9868
}

; Function Attrs: nounwind uwtable
define void @PrintWorkPool(i64 %pid) #0 {
  %1 = load %struct.gmem** @gm, align 8, !llfi_index !9869
  %2 = getelementptr inbounds %struct.gmem* %1, i64 0, i32 7, i64 %pid, i64 0, !llfi_index !9870
  %j.01 = load %struct.wpjob** %2, align 8, !llfi_index !9871
  %3 = icmp eq %struct.wpjob* %j.01, null, !llfi_index !9872
  br i1 %3, label %._crit_edge, label %.lr.ph, !llfi_index !9873

.lr.ph:                                           ; preds = %.lr.ph, %0
  %j.02 = phi %struct.wpjob* [ %j.0, %.lr.ph ], [ %j.01, %0 ], !llfi_index !9874
  %4 = getelementptr inbounds %struct.wpjob* %j.02, i64 0, i32 1, !llfi_index !9875
  %5 = load i64* %4, align 8, !llfi_index !9876
  %6 = getelementptr inbounds %struct.wpjob* %j.02, i64 0, i32 0, !llfi_index !9877
  %7 = load i64* %6, align 8, !llfi_index !9878
  %8 = getelementptr inbounds %struct.wpjob* %j.02, i64 0, i32 2, !llfi_index !9879
  %9 = load i64* %8, align 8, !llfi_index !9880
  %10 = getelementptr inbounds %struct.wpjob* %j.02, i64 0, i32 3, !llfi_index !9881
  %11 = load i64* %10, align 8, !llfi_index !9882
  %12 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([73 x i8]* @.str1449, i64 0, i64 0), i64 %pid, i64 %5, i64 %7, i64 %9, i64 %11) #2, !llfi_index !9883
  %13 = getelementptr inbounds %struct.wpjob* %j.02, i64 0, i32 4, !llfi_index !9884
  %j.0 = load %struct.wpjob** %13, align 8, !llfi_index !9885
  %14 = icmp eq %struct.wpjob* %j.0, null, !llfi_index !9886
  br i1 %14, label %._crit_edge, label %.lr.ph, !llfi_index !9887

._crit_edge:                                      ; preds = %.lr.ph, %0
  ret void, !llfi_index !9888
}

; Function Attrs: nounwind uwtable
define void @InitWorkPool(i64 %pid) #0 {
  %1 = load %struct.gmem** @gm, align 8, !llfi_index !9889
  %2 = getelementptr inbounds %struct.gmem* %1, i64 0, i32 6, i64 %pid, i64 0, !llfi_index !9890
  store i64 1, i64* %2, align 8, !llfi_index !9891
  %3 = load %struct.gmem** @gm, align 8, !llfi_index !9892
  %4 = getelementptr inbounds %struct.gmem* %3, i64 0, i32 7, i64 %pid, i64 0, !llfi_index !9893
  store %struct.wpjob* null, %struct.wpjob** %4, align 8, !llfi_index !9894
  %5 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), align 8, !llfi_index !9895
  %6 = load i64* @blockx, align 8, !llfi_index !9896
  %7 = sdiv i64 %5, %6, !llfi_index !9897
  %8 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 6), align 8, !llfi_index !9898
  %9 = load i64* @blocky, align 8, !llfi_index !9899
  %10 = sdiv i64 %8, %9, !llfi_index !9900
  %11 = icmp sgt i64 %8, 0, !llfi_index !9901
  br i1 %11, label %.lr.ph5, label %._crit_edge, !llfi_index !9902

.loopexit:                                        ; preds = %28, %.lr.ph5
  %i.1.lcssa = phi i64 [ %i.04, %.lr.ph5 ], [ %33, %28 ], !llfi_index !9903
  %12 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 6), align 8, !llfi_index !9904
  %13 = icmp sgt i64 %12, %15, !llfi_index !9905
  br i1 %13, label %.lr.ph5, label %._crit_edge, !llfi_index !9906

.lr.ph5:                                          ; preds = %.loopexit, %0
  %14 = phi i64 [ %12, %.loopexit ], [ %8, %0 ], !llfi_index !9907
  %i.04 = phi i64 [ %i.1.lcssa, %.loopexit ], [ 0, %0 ], !llfi_index !9908
  %y.03 = phi i64 [ %15, %.loopexit ], [ 0, %0 ], !llfi_index !9909
  %15 = add nsw i64 %y.03, %10, !llfi_index !9910
  %16 = icmp sgt i64 %15, %14, !llfi_index !9911
  %17 = sub nsw i64 %14, %y.03, !llfi_index !9912
  %ye.0 = select i1 %16, i64 %17, i64 %10, !llfi_index !9913
  %18 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), align 8, !llfi_index !9914
  %19 = icmp sgt i64 %18, 0, !llfi_index !9915
  br i1 %19, label %.lr.ph, label %.loopexit, !llfi_index !9916

.lr.ph:                                           ; preds = %28, %.lr.ph5
  %20 = phi i64 [ %34, %28 ], [ %18, %.lr.ph5 ], !llfi_index !9917
  %i.12 = phi i64 [ %33, %28 ], [ %i.04, %.lr.ph5 ], !llfi_index !9918
  %x.01 = phi i64 [ %21, %28 ], [ 0, %.lr.ph5 ], !llfi_index !9919
  %21 = add nsw i64 %x.01, %7, !llfi_index !9920
  %22 = icmp eq i64 %i.12, %pid, !llfi_index !9921
  br i1 %22, label %23, label %28, !llfi_index !9922

; <label>:23                                      ; preds = %.lr.ph
  %24 = sub nsw i64 %20, %x.01, !llfi_index !9923
  %25 = icmp sgt i64 %21, %20, !llfi_index !9924
  %xe.0 = select i1 %25, i64 %24, i64 %7, !llfi_index !9925
  %26 = load i64* @bundlex, align 8, !llfi_index !9926
  %27 = load i64* @bundley, align 8, !llfi_index !9927
  tail call void @PutJob(i64 %x.01, i64 %y.03, i64 %xe.0, i64 %ye.0, i64 %26, i64 %27, i64 %pid), !llfi_index !9928
  br label %28, !llfi_index !9929

; <label>:28                                      ; preds = %23, %.lr.ph
  %29 = add nsw i64 %i.12, 1, !llfi_index !9930
  %30 = load %struct.gmem** @gm, align 8, !llfi_index !9931
  %31 = getelementptr inbounds %struct.gmem* %30, i64 0, i32 0, !llfi_index !9932
  %32 = load i64* %31, align 8, !llfi_index !9933
  %33 = srem i64 %29, %32, !llfi_index !9934
  %34 = load i64* getelementptr inbounds (%struct.display* @Display, i64 0, i32 5), align 8, !llfi_index !9935
  %35 = icmp sgt i64 %34, %21, !llfi_index !9936
  br i1 %35, label %.lr.ph, label %.loopexit, !llfi_index !9937

._crit_edge:                                      ; preds = %.loopexit, %0
  ret void, !llfi_index !9938
}

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #2

; Function Attrs: nounwind
declare i32 @putchar(i32) #2

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) #2

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) #2

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { noreturn nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold }
attributes #10 = { cold nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readonly }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}

!0 = metadata !{metadata !"clang version 3.4 (tags/RELEASE_34/final)"}
!1 = metadata !{i64 1}
!2 = metadata !{i64 2}
!3 = metadata !{i64 3}
!4 = metadata !{i64 4}
!5 = metadata !{i64 5}
!6 = metadata !{i64 6}
!7 = metadata !{i64 7}
!8 = metadata !{i64 8}
!9 = metadata !{i64 9}
!10 = metadata !{i64 10}
!11 = metadata !{i64 11}
!12 = metadata !{i64 12}
!13 = metadata !{i64 13}
!14 = metadata !{i64 14}
!15 = metadata !{i64 15}
!16 = metadata !{i64 16}
!17 = metadata !{i64 17}
!18 = metadata !{i64 18}
!19 = metadata !{i64 19}
!20 = metadata !{i64 20}
!21 = metadata !{i64 21}
!22 = metadata !{i64 22}
!23 = metadata !{i64 23}
!24 = metadata !{i64 24}
!25 = metadata !{i64 25}
!26 = metadata !{i64 26}
!27 = metadata !{i64 27}
!28 = metadata !{i64 28}
!29 = metadata !{i64 29}
!30 = metadata !{i64 30}
!31 = metadata !{i64 31}
!32 = metadata !{i64 32}
!33 = metadata !{i64 33}
!34 = metadata !{i64 34}
!35 = metadata !{i64 35}
!36 = metadata !{i64 36}
!37 = metadata !{i64 37}
!38 = metadata !{i64 38}
!39 = metadata !{i64 39}
!40 = metadata !{i64 40}
!41 = metadata !{i64 41}
!42 = metadata !{i64 42}
!43 = metadata !{i64 43}
!44 = metadata !{i64 44}
!45 = metadata !{i64 45}
!46 = metadata !{i64 46}
!47 = metadata !{i64 47}
!48 = metadata !{i64 48}
!49 = metadata !{i64 49}
!50 = metadata !{i64 50}
!51 = metadata !{i64 51}
!52 = metadata !{i64 52}
!53 = metadata !{i64 53}
!54 = metadata !{i64 54}
!55 = metadata !{i64 55}
!56 = metadata !{i64 56}
!57 = metadata !{i64 57}
!58 = metadata !{i64 58}
!59 = metadata !{i64 59}
!60 = metadata !{i64 60}
!61 = metadata !{i64 61}
!62 = metadata !{i64 62}
!63 = metadata !{i64 63}
!64 = metadata !{i64 64}
!65 = metadata !{i64 65}
!66 = metadata !{i64 66}
!67 = metadata !{i64 67}
!68 = metadata !{i64 68}
!69 = metadata !{i64 69}
!70 = metadata !{i64 70}
!71 = metadata !{i64 71}
!72 = metadata !{i64 72}
!73 = metadata !{i64 73}
!74 = metadata !{i64 74}
!75 = metadata !{i64 75}
!76 = metadata !{i64 76}
!77 = metadata !{i64 77}
!78 = metadata !{i64 78}
!79 = metadata !{i64 79}
!80 = metadata !{i64 80}
!81 = metadata !{i64 81}
!82 = metadata !{i64 82}
!83 = metadata !{i64 83}
!84 = metadata !{i64 84}
!85 = metadata !{i64 85}
!86 = metadata !{i64 86}
!87 = metadata !{i64 87}
!88 = metadata !{i64 88}
!89 = metadata !{i64 89}
!90 = metadata !{i64 90}
!91 = metadata !{i64 91}
!92 = metadata !{i64 92}
!93 = metadata !{i64 93}
!94 = metadata !{i64 94}
!95 = metadata !{i64 95}
!96 = metadata !{i64 96}
!97 = metadata !{i64 97}
!98 = metadata !{i64 98}
!99 = metadata !{i64 99}
!100 = metadata !{i64 100}
!101 = metadata !{i64 101}
!102 = metadata !{i64 102}
!103 = metadata !{i64 103}
!104 = metadata !{i64 104}
!105 = metadata !{i64 105}
!106 = metadata !{i64 106}
!107 = metadata !{i64 107}
!108 = metadata !{i64 108}
!109 = metadata !{i64 109}
!110 = metadata !{i64 110}
!111 = metadata !{i64 111}
!112 = metadata !{i64 112}
!113 = metadata !{i64 113}
!114 = metadata !{i64 114}
!115 = metadata !{i64 115}
!116 = metadata !{i64 116}
!117 = metadata !{i64 117}
!118 = metadata !{i64 118}
!119 = metadata !{i64 119}
!120 = metadata !{i64 120}
!121 = metadata !{i64 121}
!122 = metadata !{i64 122}
!123 = metadata !{i64 123}
!124 = metadata !{i64 124}
!125 = metadata !{i64 125}
!126 = metadata !{i64 126}
!127 = metadata !{i64 127}
!128 = metadata !{i64 128}
!129 = metadata !{i64 129}
!130 = metadata !{i64 130}
!131 = metadata !{i64 131}
!132 = metadata !{i64 132}
!133 = metadata !{i64 133}
!134 = metadata !{i64 134}
!135 = metadata !{i64 135}
!136 = metadata !{i64 136}
!137 = metadata !{i64 137}
!138 = metadata !{i64 138}
!139 = metadata !{i64 139}
!140 = metadata !{i64 140}
!141 = metadata !{i64 141}
!142 = metadata !{i64 142}
!143 = metadata !{i64 143}
!144 = metadata !{i64 144}
!145 = metadata !{i64 145}
!146 = metadata !{i64 146}
!147 = metadata !{i64 147}
!148 = metadata !{i64 148}
!149 = metadata !{i64 149}
!150 = metadata !{i64 150}
!151 = metadata !{i64 151}
!152 = metadata !{i64 152}
!153 = metadata !{i64 153}
!154 = metadata !{i64 154}
!155 = metadata !{i64 155}
!156 = metadata !{i64 156}
!157 = metadata !{i64 157}
!158 = metadata !{i64 158}
!159 = metadata !{i64 159}
!160 = metadata !{i64 160}
!161 = metadata !{i64 161}
!162 = metadata !{i64 162}
!163 = metadata !{i64 163}
!164 = metadata !{i64 164}
!165 = metadata !{i64 165}
!166 = metadata !{i64 166}
!167 = metadata !{i64 167}
!168 = metadata !{i64 168}
!169 = metadata !{i64 169}
!170 = metadata !{i64 170}
!171 = metadata !{i64 171}
!172 = metadata !{i64 172}
!173 = metadata !{i64 173}
!174 = metadata !{i64 174}
!175 = metadata !{i64 175}
!176 = metadata !{i64 176}
!177 = metadata !{i64 177}
!178 = metadata !{i64 178}
!179 = metadata !{i64 179}
!180 = metadata !{i64 180}
!181 = metadata !{i64 181}
!182 = metadata !{i64 182}
!183 = metadata !{i64 183}
!184 = metadata !{i64 184}
!185 = metadata !{i64 185}
!186 = metadata !{i64 186}
!187 = metadata !{i64 187}
!188 = metadata !{i64 188}
!189 = metadata !{i64 189}
!190 = metadata !{i64 190}
!191 = metadata !{i64 191}
!192 = metadata !{i64 192}
!193 = metadata !{i64 193}
!194 = metadata !{i64 194}
!195 = metadata !{i64 195}
!196 = metadata !{i64 196}
!197 = metadata !{i64 197}
!198 = metadata !{i64 198}
!199 = metadata !{i64 199}
!200 = metadata !{i64 200}
!201 = metadata !{i64 201}
!202 = metadata !{i64 202}
!203 = metadata !{i64 203}
!204 = metadata !{i64 204}
!205 = metadata !{i64 205}
!206 = metadata !{i64 206}
!207 = metadata !{i64 207}
!208 = metadata !{i64 208}
!209 = metadata !{i64 209}
!210 = metadata !{i64 210}
!211 = metadata !{i64 211}
!212 = metadata !{i64 212}
!213 = metadata !{i64 213}
!214 = metadata !{i64 214}
!215 = metadata !{i64 215}
!216 = metadata !{i64 216}
!217 = metadata !{i64 217}
!218 = metadata !{i64 218}
!219 = metadata !{i64 219}
!220 = metadata !{i64 220}
!221 = metadata !{i64 221}
!222 = metadata !{i64 222}
!223 = metadata !{i64 223}
!224 = metadata !{i64 224}
!225 = metadata !{i64 225}
!226 = metadata !{i64 226}
!227 = metadata !{i64 227}
!228 = metadata !{i64 228}
!229 = metadata !{i64 229}
!230 = metadata !{i64 230}
!231 = metadata !{i64 231}
!232 = metadata !{i64 232}
!233 = metadata !{i64 233}
!234 = metadata !{i64 234}
!235 = metadata !{i64 235}
!236 = metadata !{i64 236}
!237 = metadata !{i64 237}
!238 = metadata !{i64 238}
!239 = metadata !{i64 239}
!240 = metadata !{i64 240}
!241 = metadata !{i64 241}
!242 = metadata !{i64 242}
!243 = metadata !{i64 243}
!244 = metadata !{i64 244}
!245 = metadata !{i64 245}
!246 = metadata !{i64 246}
!247 = metadata !{i64 247}
!248 = metadata !{i64 248}
!249 = metadata !{i64 249}
!250 = metadata !{i64 250}
!251 = metadata !{i64 251}
!252 = metadata !{i64 252}
!253 = metadata !{i64 253}
!254 = metadata !{i64 254}
!255 = metadata !{i64 255}
!256 = metadata !{i64 256}
!257 = metadata !{i64 257}
!258 = metadata !{i64 258}
!259 = metadata !{i64 259}
!260 = metadata !{i64 260}
!261 = metadata !{i64 261}
!262 = metadata !{i64 262}
!263 = metadata !{i64 263}
!264 = metadata !{i64 264}
!265 = metadata !{i64 265}
!266 = metadata !{i64 266}
!267 = metadata !{i64 267}
!268 = metadata !{i64 268}
!269 = metadata !{i64 269}
!270 = metadata !{i64 270}
!271 = metadata !{i64 271}
!272 = metadata !{i64 272}
!273 = metadata !{i64 273}
!274 = metadata !{i64 274}
!275 = metadata !{i64 275}
!276 = metadata !{i64 276}
!277 = metadata !{i64 277}
!278 = metadata !{i64 278}
!279 = metadata !{i64 279}
!280 = metadata !{i64 280}
!281 = metadata !{i64 281}
!282 = metadata !{i64 282}
!283 = metadata !{i64 283}
!284 = metadata !{i64 284}
!285 = metadata !{i64 285}
!286 = metadata !{i64 286}
!287 = metadata !{i64 287}
!288 = metadata !{i64 288}
!289 = metadata !{i64 289}
!290 = metadata !{i64 290}
!291 = metadata !{i64 291}
!292 = metadata !{i64 292}
!293 = metadata !{i64 293}
!294 = metadata !{i64 294}
!295 = metadata !{i64 295}
!296 = metadata !{i64 296}
!297 = metadata !{i64 297}
!298 = metadata !{i64 298}
!299 = metadata !{i64 299}
!300 = metadata !{i64 300}
!301 = metadata !{i64 301}
!302 = metadata !{i64 302}
!303 = metadata !{i64 303}
!304 = metadata !{i64 304}
!305 = metadata !{i64 305}
!306 = metadata !{i64 306}
!307 = metadata !{i64 307}
!308 = metadata !{i64 308}
!309 = metadata !{i64 309}
!310 = metadata !{i64 310}
!311 = metadata !{i64 311}
!312 = metadata !{i64 312}
!313 = metadata !{i64 313}
!314 = metadata !{i64 314}
!315 = metadata !{i64 315}
!316 = metadata !{i64 316}
!317 = metadata !{i64 317}
!318 = metadata !{i64 318}
!319 = metadata !{i64 319}
!320 = metadata !{i64 320}
!321 = metadata !{i64 321}
!322 = metadata !{i64 322}
!323 = metadata !{i64 323}
!324 = metadata !{i64 324}
!325 = metadata !{i64 325}
!326 = metadata !{i64 326}
!327 = metadata !{i64 327}
!328 = metadata !{i64 328}
!329 = metadata !{i64 329}
!330 = metadata !{i64 330}
!331 = metadata !{i64 331}
!332 = metadata !{i64 332}
!333 = metadata !{i64 333}
!334 = metadata !{i64 334}
!335 = metadata !{i64 335}
!336 = metadata !{i64 336}
!337 = metadata !{i64 337}
!338 = metadata !{i64 338}
!339 = metadata !{i64 339}
!340 = metadata !{i64 340}
!341 = metadata !{i64 341}
!342 = metadata !{i64 342}
!343 = metadata !{i64 343}
!344 = metadata !{i64 344}
!345 = metadata !{i64 345}
!346 = metadata !{i64 346}
!347 = metadata !{i64 347}
!348 = metadata !{i64 348}
!349 = metadata !{i64 349}
!350 = metadata !{i64 350}
!351 = metadata !{i64 351}
!352 = metadata !{i64 352}
!353 = metadata !{i64 353}
!354 = metadata !{i64 354}
!355 = metadata !{i64 355}
!356 = metadata !{i64 356}
!357 = metadata !{i64 357}
!358 = metadata !{i64 358}
!359 = metadata !{i64 359}
!360 = metadata !{i64 360}
!361 = metadata !{i64 361}
!362 = metadata !{i64 362}
!363 = metadata !{i64 363}
!364 = metadata !{i64 364}
!365 = metadata !{i64 365}
!366 = metadata !{i64 366}
!367 = metadata !{i64 367}
!368 = metadata !{i64 368}
!369 = metadata !{i64 369}
!370 = metadata !{i64 370}
!371 = metadata !{i64 371}
!372 = metadata !{i64 372}
!373 = metadata !{i64 373}
!374 = metadata !{i64 374}
!375 = metadata !{i64 375}
!376 = metadata !{i64 376}
!377 = metadata !{i64 377}
!378 = metadata !{i64 378}
!379 = metadata !{i64 379}
!380 = metadata !{i64 380}
!381 = metadata !{i64 381}
!382 = metadata !{i64 382}
!383 = metadata !{i64 383}
!384 = metadata !{i64 384}
!385 = metadata !{i64 385}
!386 = metadata !{i64 386}
!387 = metadata !{i64 387}
!388 = metadata !{i64 388}
!389 = metadata !{i64 389}
!390 = metadata !{i64 390}
!391 = metadata !{i64 391}
!392 = metadata !{i64 392}
!393 = metadata !{i64 393}
!394 = metadata !{i64 394}
!395 = metadata !{i64 395}
!396 = metadata !{i64 396}
!397 = metadata !{i64 397}
!398 = metadata !{i64 398}
!399 = metadata !{i64 399}
!400 = metadata !{i64 400}
!401 = metadata !{i64 401}
!402 = metadata !{i64 402}
!403 = metadata !{i64 403}
!404 = metadata !{i64 404}
!405 = metadata !{i64 405}
!406 = metadata !{i64 406}
!407 = metadata !{i64 407}
!408 = metadata !{i64 408}
!409 = metadata !{i64 409}
!410 = metadata !{i64 410}
!411 = metadata !{i64 411}
!412 = metadata !{i64 412}
!413 = metadata !{i64 413}
!414 = metadata !{i64 414}
!415 = metadata !{i64 415}
!416 = metadata !{i64 416}
!417 = metadata !{i64 417}
!418 = metadata !{i64 418}
!419 = metadata !{i64 419}
!420 = metadata !{i64 420}
!421 = metadata !{i64 421}
!422 = metadata !{i64 422}
!423 = metadata !{i64 423}
!424 = metadata !{i64 424}
!425 = metadata !{i64 425}
!426 = metadata !{i64 426}
!427 = metadata !{i64 427}
!428 = metadata !{i64 428}
!429 = metadata !{i64 429}
!430 = metadata !{i64 430}
!431 = metadata !{i64 431}
!432 = metadata !{i64 432}
!433 = metadata !{i64 433}
!434 = metadata !{i64 434}
!435 = metadata !{i64 435}
!436 = metadata !{i64 436}
!437 = metadata !{i64 437}
!438 = metadata !{i64 438}
!439 = metadata !{i64 439}
!440 = metadata !{i64 440}
!441 = metadata !{i64 441}
!442 = metadata !{i64 442}
!443 = metadata !{i64 443}
!444 = metadata !{i64 444}
!445 = metadata !{i64 445}
!446 = metadata !{i64 446}
!447 = metadata !{i64 447}
!448 = metadata !{i64 448}
!449 = metadata !{i64 449}
!450 = metadata !{i64 450}
!451 = metadata !{i64 451}
!452 = metadata !{i64 452}
!453 = metadata !{i64 453}
!454 = metadata !{i64 454}
!455 = metadata !{i64 455}
!456 = metadata !{i64 456}
!457 = metadata !{i64 457}
!458 = metadata !{i64 458}
!459 = metadata !{i64 459}
!460 = metadata !{i64 460}
!461 = metadata !{i64 461}
!462 = metadata !{i64 462}
!463 = metadata !{i64 463}
!464 = metadata !{i64 464}
!465 = metadata !{i64 465}
!466 = metadata !{i64 466}
!467 = metadata !{i64 467}
!468 = metadata !{i64 468}
!469 = metadata !{i64 469}
!470 = metadata !{i64 470}
!471 = metadata !{i64 471}
!472 = metadata !{i64 472}
!473 = metadata !{i64 473}
!474 = metadata !{i64 474}
!475 = metadata !{i64 475}
!476 = metadata !{i64 476}
!477 = metadata !{i64 477}
!478 = metadata !{i64 478}
!479 = metadata !{i64 479}
!480 = metadata !{i64 480}
!481 = metadata !{i64 481}
!482 = metadata !{i64 482}
!483 = metadata !{i64 483}
!484 = metadata !{i64 484}
!485 = metadata !{i64 485}
!486 = metadata !{i64 486}
!487 = metadata !{i64 487}
!488 = metadata !{i64 488}
!489 = metadata !{i64 489}
!490 = metadata !{i64 490}
!491 = metadata !{i64 491}
!492 = metadata !{i64 492}
!493 = metadata !{i64 493}
!494 = metadata !{i64 494}
!495 = metadata !{i64 495}
!496 = metadata !{i64 496}
!497 = metadata !{i64 497}
!498 = metadata !{i64 498}
!499 = metadata !{i64 499}
!500 = metadata !{i64 500}
!501 = metadata !{i64 501}
!502 = metadata !{i64 502}
!503 = metadata !{i64 503}
!504 = metadata !{i64 504}
!505 = metadata !{i64 505}
!506 = metadata !{i64 506}
!507 = metadata !{i64 507}
!508 = metadata !{i64 508}
!509 = metadata !{i64 509}
!510 = metadata !{i64 510}
!511 = metadata !{i64 511}
!512 = metadata !{i64 512}
!513 = metadata !{i64 513}
!514 = metadata !{i64 514}
!515 = metadata !{i64 515}
!516 = metadata !{i64 516}
!517 = metadata !{i64 517}
!518 = metadata !{i64 518}
!519 = metadata !{i64 519}
!520 = metadata !{i64 520}
!521 = metadata !{i64 521}
!522 = metadata !{i64 522}
!523 = metadata !{i64 523}
!524 = metadata !{i64 524}
!525 = metadata !{i64 525}
!526 = metadata !{i64 526}
!527 = metadata !{i64 527}
!528 = metadata !{i64 528}
!529 = metadata !{i64 529}
!530 = metadata !{i64 530}
!531 = metadata !{i64 531}
!532 = metadata !{i64 532}
!533 = metadata !{i64 533}
!534 = metadata !{i64 534}
!535 = metadata !{i64 535}
!536 = metadata !{i64 536}
!537 = metadata !{i64 537}
!538 = metadata !{i64 538}
!539 = metadata !{i64 539}
!540 = metadata !{i64 540}
!541 = metadata !{i64 541}
!542 = metadata !{i64 542}
!543 = metadata !{i64 543}
!544 = metadata !{i64 544}
!545 = metadata !{i64 545}
!546 = metadata !{i64 546}
!547 = metadata !{i64 547}
!548 = metadata !{i64 548}
!549 = metadata !{i64 549}
!550 = metadata !{i64 550}
!551 = metadata !{i64 551}
!552 = metadata !{i64 552}
!553 = metadata !{i64 553}
!554 = metadata !{i64 554}
!555 = metadata !{i64 555}
!556 = metadata !{i64 556}
!557 = metadata !{i64 557}
!558 = metadata !{i64 558}
!559 = metadata !{i64 559}
!560 = metadata !{i64 560}
!561 = metadata !{i64 561}
!562 = metadata !{i64 562}
!563 = metadata !{i64 563}
!564 = metadata !{i64 564}
!565 = metadata !{i64 565}
!566 = metadata !{i64 566}
!567 = metadata !{i64 567}
!568 = metadata !{i64 568}
!569 = metadata !{i64 569}
!570 = metadata !{i64 570}
!571 = metadata !{i64 571}
!572 = metadata !{i64 572}
!573 = metadata !{i64 573}
!574 = metadata !{i64 574}
!575 = metadata !{i64 575}
!576 = metadata !{i64 576}
!577 = metadata !{i64 577}
!578 = metadata !{i64 578}
!579 = metadata !{i64 579}
!580 = metadata !{i64 580}
!581 = metadata !{i64 581}
!582 = metadata !{i64 582}
!583 = metadata !{i64 583}
!584 = metadata !{i64 584}
!585 = metadata !{i64 585}
!586 = metadata !{i64 586}
!587 = metadata !{i64 587}
!588 = metadata !{i64 588}
!589 = metadata !{i64 589}
!590 = metadata !{i64 590}
!591 = metadata !{i64 591}
!592 = metadata !{i64 592}
!593 = metadata !{i64 593}
!594 = metadata !{i64 594}
!595 = metadata !{i64 595}
!596 = metadata !{i64 596}
!597 = metadata !{i64 597}
!598 = metadata !{i64 598}
!599 = metadata !{i64 599}
!600 = metadata !{i64 600}
!601 = metadata !{i64 601}
!602 = metadata !{i64 602}
!603 = metadata !{i64 603}
!604 = metadata !{i64 604}
!605 = metadata !{i64 605}
!606 = metadata !{i64 606}
!607 = metadata !{i64 607}
!608 = metadata !{i64 608}
!609 = metadata !{i64 609}
!610 = metadata !{i64 610}
!611 = metadata !{i64 611}
!612 = metadata !{i64 612}
!613 = metadata !{i64 613}
!614 = metadata !{i64 614}
!615 = metadata !{i64 615}
!616 = metadata !{i64 616}
!617 = metadata !{i64 617}
!618 = metadata !{i64 618}
!619 = metadata !{i64 619}
!620 = metadata !{i64 620}
!621 = metadata !{i64 621}
!622 = metadata !{i64 622}
!623 = metadata !{i64 623}
!624 = metadata !{i64 624}
!625 = metadata !{i64 625}
!626 = metadata !{i64 626}
!627 = metadata !{i64 627}
!628 = metadata !{i64 628}
!629 = metadata !{i64 629}
!630 = metadata !{i64 630}
!631 = metadata !{i64 631}
!632 = metadata !{i64 632}
!633 = metadata !{i64 633}
!634 = metadata !{i64 634}
!635 = metadata !{i64 635}
!636 = metadata !{i64 636}
!637 = metadata !{i64 637}
!638 = metadata !{i64 638}
!639 = metadata !{i64 639}
!640 = metadata !{i64 640}
!641 = metadata !{i64 641}
!642 = metadata !{i64 642}
!643 = metadata !{i64 643}
!644 = metadata !{i64 644}
!645 = metadata !{i64 645}
!646 = metadata !{i64 646}
!647 = metadata !{i64 647}
!648 = metadata !{i64 648}
!649 = metadata !{i64 649}
!650 = metadata !{i64 650}
!651 = metadata !{i64 651}
!652 = metadata !{i64 652}
!653 = metadata !{i64 653}
!654 = metadata !{i64 654}
!655 = metadata !{i64 655}
!656 = metadata !{i64 656}
!657 = metadata !{i64 657}
!658 = metadata !{i64 658}
!659 = metadata !{i64 659}
!660 = metadata !{i64 660}
!661 = metadata !{i64 661}
!662 = metadata !{i64 662}
!663 = metadata !{i64 663}
!664 = metadata !{i64 664}
!665 = metadata !{i64 665}
!666 = metadata !{i64 666}
!667 = metadata !{i64 667}
!668 = metadata !{i64 668}
!669 = metadata !{i64 669}
!670 = metadata !{i64 670}
!671 = metadata !{i64 671}
!672 = metadata !{i64 672}
!673 = metadata !{i64 673}
!674 = metadata !{i64 674}
!675 = metadata !{i64 675}
!676 = metadata !{i64 676}
!677 = metadata !{i64 677}
!678 = metadata !{i64 678}
!679 = metadata !{i64 679}
!680 = metadata !{i64 680}
!681 = metadata !{i64 681}
!682 = metadata !{i64 682}
!683 = metadata !{i64 683}
!684 = metadata !{i64 684}
!685 = metadata !{i64 685}
!686 = metadata !{i64 686}
!687 = metadata !{i64 687}
!688 = metadata !{i64 688}
!689 = metadata !{i64 689}
!690 = metadata !{i64 690}
!691 = metadata !{i64 691}
!692 = metadata !{i64 692}
!693 = metadata !{i64 693}
!694 = metadata !{i64 694}
!695 = metadata !{i64 695}
!696 = metadata !{i64 696}
!697 = metadata !{i64 697}
!698 = metadata !{i64 698}
!699 = metadata !{i64 699}
!700 = metadata !{i64 700}
!701 = metadata !{i64 701}
!702 = metadata !{i64 702}
!703 = metadata !{i64 703}
!704 = metadata !{i64 704}
!705 = metadata !{i64 705}
!706 = metadata !{i64 706}
!707 = metadata !{i64 707}
!708 = metadata !{i64 708}
!709 = metadata !{i64 709}
!710 = metadata !{i64 710}
!711 = metadata !{i64 711}
!712 = metadata !{i64 712}
!713 = metadata !{i64 713}
!714 = metadata !{i64 714}
!715 = metadata !{i64 715}
!716 = metadata !{i64 716}
!717 = metadata !{i64 717}
!718 = metadata !{i64 718}
!719 = metadata !{i64 719}
!720 = metadata !{i64 720}
!721 = metadata !{i64 721}
!722 = metadata !{i64 722}
!723 = metadata !{i64 723}
!724 = metadata !{i64 724}
!725 = metadata !{i64 725}
!726 = metadata !{i64 726}
!727 = metadata !{i64 727}
!728 = metadata !{i64 728}
!729 = metadata !{i64 729}
!730 = metadata !{i64 730}
!731 = metadata !{i64 731}
!732 = metadata !{i64 732}
!733 = metadata !{i64 733}
!734 = metadata !{i64 734}
!735 = metadata !{i64 735}
!736 = metadata !{i64 736}
!737 = metadata !{i64 737}
!738 = metadata !{i64 738}
!739 = metadata !{i64 739}
!740 = metadata !{i64 740}
!741 = metadata !{i64 741}
!742 = metadata !{i64 742}
!743 = metadata !{i64 743}
!744 = metadata !{i64 744}
!745 = metadata !{i64 745}
!746 = metadata !{i64 746}
!747 = metadata !{i64 747}
!748 = metadata !{i64 748}
!749 = metadata !{i64 749}
!750 = metadata !{i64 750}
!751 = metadata !{i64 751}
!752 = metadata !{i64 752}
!753 = metadata !{i64 753}
!754 = metadata !{i64 754}
!755 = metadata !{i64 755}
!756 = metadata !{i64 756}
!757 = metadata !{i64 757}
!758 = metadata !{i64 758}
!759 = metadata !{i64 759}
!760 = metadata !{i64 760}
!761 = metadata !{i64 761}
!762 = metadata !{i64 762}
!763 = metadata !{i64 763}
!764 = metadata !{i64 764}
!765 = metadata !{i64 765}
!766 = metadata !{i64 766}
!767 = metadata !{i64 767}
!768 = metadata !{i64 768}
!769 = metadata !{i64 769}
!770 = metadata !{i64 770}
!771 = metadata !{i64 771}
!772 = metadata !{i64 772}
!773 = metadata !{i64 773}
!774 = metadata !{i64 774}
!775 = metadata !{i64 775}
!776 = metadata !{i64 776}
!777 = metadata !{i64 777}
!778 = metadata !{i64 778}
!779 = metadata !{i64 779}
!780 = metadata !{i64 780}
!781 = metadata !{i64 781}
!782 = metadata !{i64 782}
!783 = metadata !{i64 783}
!784 = metadata !{i64 784}
!785 = metadata !{i64 785}
!786 = metadata !{i64 786}
!787 = metadata !{i64 787}
!788 = metadata !{i64 788}
!789 = metadata !{i64 789}
!790 = metadata !{i64 790}
!791 = metadata !{i64 791}
!792 = metadata !{i64 792}
!793 = metadata !{i64 793}
!794 = metadata !{i64 794}
!795 = metadata !{i64 795}
!796 = metadata !{i64 796}
!797 = metadata !{i64 797}
!798 = metadata !{i64 798}
!799 = metadata !{i64 799}
!800 = metadata !{i64 800}
!801 = metadata !{i64 801}
!802 = metadata !{i64 802}
!803 = metadata !{i64 803}
!804 = metadata !{i64 804}
!805 = metadata !{i64 805}
!806 = metadata !{i64 806}
!807 = metadata !{i64 807}
!808 = metadata !{i64 808}
!809 = metadata !{i64 809}
!810 = metadata !{i64 810}
!811 = metadata !{i64 811}
!812 = metadata !{i64 812}
!813 = metadata !{i64 813}
!814 = metadata !{i64 814}
!815 = metadata !{i64 815}
!816 = metadata !{i64 816}
!817 = metadata !{i64 817}
!818 = metadata !{i64 818}
!819 = metadata !{i64 819}
!820 = metadata !{i64 820}
!821 = metadata !{i64 821}
!822 = metadata !{i64 822}
!823 = metadata !{i64 823}
!824 = metadata !{i64 824}
!825 = metadata !{i64 825}
!826 = metadata !{i64 826}
!827 = metadata !{i64 827}
!828 = metadata !{i64 828}
!829 = metadata !{i64 829}
!830 = metadata !{i64 830}
!831 = metadata !{i64 831}
!832 = metadata !{i64 832}
!833 = metadata !{i64 833}
!834 = metadata !{i64 834}
!835 = metadata !{i64 835}
!836 = metadata !{i64 836}
!837 = metadata !{i64 837}
!838 = metadata !{i64 838}
!839 = metadata !{i64 839}
!840 = metadata !{i64 840}
!841 = metadata !{i64 841}
!842 = metadata !{i64 842}
!843 = metadata !{i64 843}
!844 = metadata !{i64 844}
!845 = metadata !{i64 845}
!846 = metadata !{i64 846}
!847 = metadata !{i64 847}
!848 = metadata !{i64 848}
!849 = metadata !{i64 849}
!850 = metadata !{i64 850}
!851 = metadata !{i64 851}
!852 = metadata !{i64 852}
!853 = metadata !{i64 853}
!854 = metadata !{i64 854}
!855 = metadata !{i64 855}
!856 = metadata !{i64 856}
!857 = metadata !{i64 857}
!858 = metadata !{i64 858}
!859 = metadata !{i64 859}
!860 = metadata !{i64 860}
!861 = metadata !{i64 861}
!862 = metadata !{i64 862}
!863 = metadata !{i64 863}
!864 = metadata !{i64 864}
!865 = metadata !{i64 865}
!866 = metadata !{i64 866}
!867 = metadata !{i64 867}
!868 = metadata !{i64 868}
!869 = metadata !{i64 869}
!870 = metadata !{i64 870}
!871 = metadata !{i64 871}
!872 = metadata !{i64 872}
!873 = metadata !{i64 873}
!874 = metadata !{i64 874}
!875 = metadata !{i64 875}
!876 = metadata !{i64 876}
!877 = metadata !{i64 877}
!878 = metadata !{i64 878}
!879 = metadata !{i64 879}
!880 = metadata !{i64 880}
!881 = metadata !{i64 881}
!882 = metadata !{i64 882}
!883 = metadata !{i64 883}
!884 = metadata !{i64 884}
!885 = metadata !{i64 885}
!886 = metadata !{i64 886}
!887 = metadata !{i64 887}
!888 = metadata !{i64 888}
!889 = metadata !{i64 889}
!890 = metadata !{i64 890}
!891 = metadata !{i64 891}
!892 = metadata !{i64 892}
!893 = metadata !{i64 893}
!894 = metadata !{i64 894}
!895 = metadata !{i64 895}
!896 = metadata !{i64 896}
!897 = metadata !{i64 897}
!898 = metadata !{i64 898}
!899 = metadata !{i64 899}
!900 = metadata !{i64 900}
!901 = metadata !{i64 901}
!902 = metadata !{i64 902}
!903 = metadata !{i64 903}
!904 = metadata !{i64 904}
!905 = metadata !{i64 905}
!906 = metadata !{i64 906}
!907 = metadata !{i64 907}
!908 = metadata !{i64 908}
!909 = metadata !{i64 909}
!910 = metadata !{i64 910}
!911 = metadata !{i64 911}
!912 = metadata !{i64 912}
!913 = metadata !{i64 913}
!914 = metadata !{i64 914}
!915 = metadata !{i64 915}
!916 = metadata !{i64 916}
!917 = metadata !{i64 917}
!918 = metadata !{i64 918}
!919 = metadata !{i64 919}
!920 = metadata !{i64 920}
!921 = metadata !{i64 921}
!922 = metadata !{i64 922}
!923 = metadata !{i64 923}
!924 = metadata !{i64 924}
!925 = metadata !{i64 925}
!926 = metadata !{i64 926}
!927 = metadata !{i64 927}
!928 = metadata !{i64 928}
!929 = metadata !{i64 929}
!930 = metadata !{i64 930}
!931 = metadata !{i64 931}
!932 = metadata !{i64 932}
!933 = metadata !{i64 933}
!934 = metadata !{i64 934}
!935 = metadata !{i64 935}
!936 = metadata !{i64 936}
!937 = metadata !{i64 937}
!938 = metadata !{i64 938}
!939 = metadata !{i64 939}
!940 = metadata !{i64 940}
!941 = metadata !{i64 941}
!942 = metadata !{i64 942}
!943 = metadata !{i64 943}
!944 = metadata !{i64 944}
!945 = metadata !{i64 945}
!946 = metadata !{i64 946}
!947 = metadata !{i64 947}
!948 = metadata !{i64 948}
!949 = metadata !{i64 949}
!950 = metadata !{i64 950}
!951 = metadata !{i64 951}
!952 = metadata !{i64 952}
!953 = metadata !{i64 953}
!954 = metadata !{i64 954}
!955 = metadata !{i64 955}
!956 = metadata !{i64 956}
!957 = metadata !{i64 957}
!958 = metadata !{i64 958}
!959 = metadata !{i64 959}
!960 = metadata !{i64 960}
!961 = metadata !{i64 961}
!962 = metadata !{i64 962}
!963 = metadata !{i64 963}
!964 = metadata !{i64 964}
!965 = metadata !{i64 965}
!966 = metadata !{i64 966}
!967 = metadata !{i64 967}
!968 = metadata !{i64 968}
!969 = metadata !{i64 969}
!970 = metadata !{i64 970}
!971 = metadata !{i64 971}
!972 = metadata !{i64 972}
!973 = metadata !{i64 973}
!974 = metadata !{i64 974}
!975 = metadata !{i64 975}
!976 = metadata !{i64 976}
!977 = metadata !{i64 977}
!978 = metadata !{i64 978}
!979 = metadata !{i64 979}
!980 = metadata !{i64 980}
!981 = metadata !{i64 981}
!982 = metadata !{i64 982}
!983 = metadata !{i64 983}
!984 = metadata !{i64 984}
!985 = metadata !{i64 985}
!986 = metadata !{i64 986}
!987 = metadata !{i64 987}
!988 = metadata !{i64 988}
!989 = metadata !{i64 989}
!990 = metadata !{i64 990}
!991 = metadata !{i64 991}
!992 = metadata !{i64 992}
!993 = metadata !{i64 993}
!994 = metadata !{i64 994}
!995 = metadata !{i64 995}
!996 = metadata !{i64 996}
!997 = metadata !{i64 997}
!998 = metadata !{i64 998}
!999 = metadata !{i64 999}
!1000 = metadata !{i64 1000}
!1001 = metadata !{i64 1001}
!1002 = metadata !{i64 1002}
!1003 = metadata !{i64 1003}
!1004 = metadata !{i64 1004}
!1005 = metadata !{i64 1005}
!1006 = metadata !{i64 1006}
!1007 = metadata !{i64 1007}
!1008 = metadata !{i64 1008}
!1009 = metadata !{i64 1009}
!1010 = metadata !{i64 1010}
!1011 = metadata !{i64 1011}
!1012 = metadata !{i64 1012}
!1013 = metadata !{i64 1013}
!1014 = metadata !{i64 1014}
!1015 = metadata !{i64 1015}
!1016 = metadata !{i64 1016}
!1017 = metadata !{i64 1017}
!1018 = metadata !{i64 1018}
!1019 = metadata !{i64 1019}
!1020 = metadata !{i64 1020}
!1021 = metadata !{i64 1021}
!1022 = metadata !{i64 1022}
!1023 = metadata !{i64 1023}
!1024 = metadata !{i64 1024}
!1025 = metadata !{i64 1025}
!1026 = metadata !{i64 1026}
!1027 = metadata !{i64 1027}
!1028 = metadata !{i64 1028}
!1029 = metadata !{i64 1029}
!1030 = metadata !{i64 1030}
!1031 = metadata !{i64 1031}
!1032 = metadata !{i64 1032}
!1033 = metadata !{i64 1033}
!1034 = metadata !{i64 1034}
!1035 = metadata !{i64 1035}
!1036 = metadata !{i64 1036}
!1037 = metadata !{i64 1037}
!1038 = metadata !{i64 1038}
!1039 = metadata !{i64 1039}
!1040 = metadata !{i64 1040}
!1041 = metadata !{i64 1041}
!1042 = metadata !{i64 1042}
!1043 = metadata !{i64 1043}
!1044 = metadata !{i64 1044}
!1045 = metadata !{i64 1045}
!1046 = metadata !{i64 1046}
!1047 = metadata !{i64 1047}
!1048 = metadata !{i64 1048}
!1049 = metadata !{i64 1049}
!1050 = metadata !{i64 1050}
!1051 = metadata !{i64 1051}
!1052 = metadata !{i64 1052}
!1053 = metadata !{i64 1053}
!1054 = metadata !{i64 1054}
!1055 = metadata !{i64 1055}
!1056 = metadata !{i64 1056}
!1057 = metadata !{i64 1057}
!1058 = metadata !{i64 1058}
!1059 = metadata !{i64 1059}
!1060 = metadata !{i64 1060}
!1061 = metadata !{i64 1061}
!1062 = metadata !{i64 1062}
!1063 = metadata !{i64 1063}
!1064 = metadata !{i64 1064}
!1065 = metadata !{i64 1065}
!1066 = metadata !{i64 1066}
!1067 = metadata !{i64 1067}
!1068 = metadata !{i64 1068}
!1069 = metadata !{i64 1069}
!1070 = metadata !{i64 1070}
!1071 = metadata !{i64 1071}
!1072 = metadata !{i64 1072}
!1073 = metadata !{i64 1073}
!1074 = metadata !{i64 1074}
!1075 = metadata !{i64 1075}
!1076 = metadata !{i64 1076}
!1077 = metadata !{i64 1077}
!1078 = metadata !{i64 1078}
!1079 = metadata !{i64 1079}
!1080 = metadata !{i64 1080}
!1081 = metadata !{i64 1081}
!1082 = metadata !{i64 1082}
!1083 = metadata !{i64 1083}
!1084 = metadata !{i64 1084}
!1085 = metadata !{i64 1085}
!1086 = metadata !{i64 1086}
!1087 = metadata !{i64 1087}
!1088 = metadata !{i64 1088}
!1089 = metadata !{i64 1089}
!1090 = metadata !{i64 1090}
!1091 = metadata !{i64 1091}
!1092 = metadata !{i64 1092}
!1093 = metadata !{i64 1093}
!1094 = metadata !{i64 1094}
!1095 = metadata !{i64 1095}
!1096 = metadata !{i64 1096}
!1097 = metadata !{i64 1097}
!1098 = metadata !{i64 1098}
!1099 = metadata !{i64 1099}
!1100 = metadata !{i64 1100}
!1101 = metadata !{i64 1101}
!1102 = metadata !{i64 1102}
!1103 = metadata !{i64 1103}
!1104 = metadata !{i64 1104}
!1105 = metadata !{i64 1105}
!1106 = metadata !{i64 1106}
!1107 = metadata !{i64 1107}
!1108 = metadata !{i64 1108}
!1109 = metadata !{i64 1109}
!1110 = metadata !{i64 1110}
!1111 = metadata !{i64 1111}
!1112 = metadata !{i64 1112}
!1113 = metadata !{i64 1113}
!1114 = metadata !{i64 1114}
!1115 = metadata !{i64 1115}
!1116 = metadata !{i64 1116}
!1117 = metadata !{i64 1117}
!1118 = metadata !{i64 1118}
!1119 = metadata !{i64 1119}
!1120 = metadata !{i64 1120}
!1121 = metadata !{i64 1121}
!1122 = metadata !{i64 1122}
!1123 = metadata !{i64 1123}
!1124 = metadata !{i64 1124}
!1125 = metadata !{i64 1125}
!1126 = metadata !{i64 1126}
!1127 = metadata !{i64 1127}
!1128 = metadata !{i64 1128}
!1129 = metadata !{i64 1129}
!1130 = metadata !{i64 1130}
!1131 = metadata !{i64 1131}
!1132 = metadata !{i64 1132}
!1133 = metadata !{i64 1133}
!1134 = metadata !{i64 1134}
!1135 = metadata !{i64 1135}
!1136 = metadata !{i64 1136}
!1137 = metadata !{i64 1137}
!1138 = metadata !{i64 1138}
!1139 = metadata !{i64 1139}
!1140 = metadata !{i64 1140}
!1141 = metadata !{i64 1141}
!1142 = metadata !{i64 1142}
!1143 = metadata !{i64 1143}
!1144 = metadata !{i64 1144}
!1145 = metadata !{i64 1145}
!1146 = metadata !{i64 1146}
!1147 = metadata !{i64 1147}
!1148 = metadata !{i64 1148}
!1149 = metadata !{i64 1149}
!1150 = metadata !{i64 1150}
!1151 = metadata !{i64 1151}
!1152 = metadata !{i64 1152}
!1153 = metadata !{i64 1153}
!1154 = metadata !{i64 1154}
!1155 = metadata !{i64 1155}
!1156 = metadata !{i64 1156}
!1157 = metadata !{i64 1157}
!1158 = metadata !{i64 1158}
!1159 = metadata !{i64 1159}
!1160 = metadata !{i64 1160}
!1161 = metadata !{i64 1161}
!1162 = metadata !{i64 1162}
!1163 = metadata !{i64 1163}
!1164 = metadata !{i64 1164}
!1165 = metadata !{i64 1165}
!1166 = metadata !{i64 1166}
!1167 = metadata !{i64 1167}
!1168 = metadata !{i64 1168}
!1169 = metadata !{i64 1169}
!1170 = metadata !{i64 1170}
!1171 = metadata !{i64 1171}
!1172 = metadata !{i64 1172}
!1173 = metadata !{i64 1173}
!1174 = metadata !{i64 1174}
!1175 = metadata !{i64 1175}
!1176 = metadata !{i64 1176}
!1177 = metadata !{i64 1177}
!1178 = metadata !{i64 1178}
!1179 = metadata !{i64 1179}
!1180 = metadata !{i64 1180}
!1181 = metadata !{i64 1181}
!1182 = metadata !{i64 1182}
!1183 = metadata !{i64 1183}
!1184 = metadata !{i64 1184}
!1185 = metadata !{i64 1185}
!1186 = metadata !{i64 1186}
!1187 = metadata !{i64 1187}
!1188 = metadata !{i64 1188}
!1189 = metadata !{i64 1189}
!1190 = metadata !{i64 1190}
!1191 = metadata !{i64 1191}
!1192 = metadata !{i64 1192}
!1193 = metadata !{i64 1193}
!1194 = metadata !{i64 1194}
!1195 = metadata !{i64 1195}
!1196 = metadata !{i64 1196}
!1197 = metadata !{i64 1197}
!1198 = metadata !{i64 1198}
!1199 = metadata !{i64 1199}
!1200 = metadata !{i64 1200}
!1201 = metadata !{i64 1201}
!1202 = metadata !{i64 1202}
!1203 = metadata !{i64 1203}
!1204 = metadata !{i64 1204}
!1205 = metadata !{i64 1205}
!1206 = metadata !{i64 1206}
!1207 = metadata !{i64 1207}
!1208 = metadata !{i64 1208}
!1209 = metadata !{i64 1209}
!1210 = metadata !{i64 1210}
!1211 = metadata !{i64 1211}
!1212 = metadata !{i64 1212}
!1213 = metadata !{i64 1213}
!1214 = metadata !{i64 1214}
!1215 = metadata !{i64 1215}
!1216 = metadata !{i64 1216}
!1217 = metadata !{i64 1217}
!1218 = metadata !{i64 1218}
!1219 = metadata !{i64 1219}
!1220 = metadata !{i64 1220}
!1221 = metadata !{i64 1221}
!1222 = metadata !{i64 1222}
!1223 = metadata !{i64 1223}
!1224 = metadata !{i64 1224}
!1225 = metadata !{i64 1225}
!1226 = metadata !{i64 1226}
!1227 = metadata !{i64 1227}
!1228 = metadata !{i64 1228}
!1229 = metadata !{i64 1229}
!1230 = metadata !{i64 1230}
!1231 = metadata !{i64 1231}
!1232 = metadata !{i64 1232}
!1233 = metadata !{i64 1233}
!1234 = metadata !{i64 1234}
!1235 = metadata !{i64 1235}
!1236 = metadata !{i64 1236}
!1237 = metadata !{i64 1237}
!1238 = metadata !{i64 1238}
!1239 = metadata !{i64 1239}
!1240 = metadata !{i64 1240}
!1241 = metadata !{i64 1241}
!1242 = metadata !{i64 1242}
!1243 = metadata !{i64 1243}
!1244 = metadata !{i64 1244}
!1245 = metadata !{i64 1245}
!1246 = metadata !{i64 1246}
!1247 = metadata !{i64 1247}
!1248 = metadata !{i64 1248}
!1249 = metadata !{i64 1249}
!1250 = metadata !{i64 1250}
!1251 = metadata !{i64 1251}
!1252 = metadata !{i64 1252}
!1253 = metadata !{i64 1253}
!1254 = metadata !{i64 1254}
!1255 = metadata !{i64 1255}
!1256 = metadata !{i64 1256}
!1257 = metadata !{i64 1257}
!1258 = metadata !{i64 1258}
!1259 = metadata !{i64 1259}
!1260 = metadata !{i64 1260}
!1261 = metadata !{i64 1261}
!1262 = metadata !{i64 1262}
!1263 = metadata !{i64 1263}
!1264 = metadata !{i64 1264}
!1265 = metadata !{i64 1265}
!1266 = metadata !{i64 1266}
!1267 = metadata !{i64 1267}
!1268 = metadata !{i64 1268}
!1269 = metadata !{i64 1269}
!1270 = metadata !{i64 1270}
!1271 = metadata !{i64 1271}
!1272 = metadata !{i64 1272}
!1273 = metadata !{i64 1273}
!1274 = metadata !{i64 1274}
!1275 = metadata !{i64 1275}
!1276 = metadata !{i64 1276}
!1277 = metadata !{i64 1277}
!1278 = metadata !{i64 1278}
!1279 = metadata !{i64 1279}
!1280 = metadata !{i64 1280}
!1281 = metadata !{i64 1281}
!1282 = metadata !{i64 1282}
!1283 = metadata !{i64 1283}
!1284 = metadata !{i64 1284}
!1285 = metadata !{i64 1285}
!1286 = metadata !{i64 1286}
!1287 = metadata !{i64 1287}
!1288 = metadata !{i64 1288}
!1289 = metadata !{i64 1289}
!1290 = metadata !{i64 1290}
!1291 = metadata !{i64 1291}
!1292 = metadata !{i64 1292}
!1293 = metadata !{i64 1293}
!1294 = metadata !{i64 1294}
!1295 = metadata !{i64 1295}
!1296 = metadata !{i64 1296}
!1297 = metadata !{i64 1297}
!1298 = metadata !{i64 1298}
!1299 = metadata !{i64 1299}
!1300 = metadata !{i64 1300}
!1301 = metadata !{i64 1301}
!1302 = metadata !{i64 1302}
!1303 = metadata !{i64 1303}
!1304 = metadata !{i64 1304}
!1305 = metadata !{i64 1305}
!1306 = metadata !{i64 1306}
!1307 = metadata !{i64 1307}
!1308 = metadata !{i64 1308}
!1309 = metadata !{i64 1309}
!1310 = metadata !{i64 1310}
!1311 = metadata !{i64 1311}
!1312 = metadata !{i64 1312}
!1313 = metadata !{i64 1313}
!1314 = metadata !{i64 1314}
!1315 = metadata !{i64 1315}
!1316 = metadata !{i64 1316}
!1317 = metadata !{i64 1317}
!1318 = metadata !{i64 1318}
!1319 = metadata !{i64 1319}
!1320 = metadata !{i64 1320}
!1321 = metadata !{i64 1321}
!1322 = metadata !{i64 1322}
!1323 = metadata !{i64 1323}
!1324 = metadata !{i64 1324}
!1325 = metadata !{i64 1325}
!1326 = metadata !{i64 1326}
!1327 = metadata !{i64 1327}
!1328 = metadata !{i64 1328}
!1329 = metadata !{i64 1329}
!1330 = metadata !{i64 1330}
!1331 = metadata !{i64 1331}
!1332 = metadata !{i64 1332}
!1333 = metadata !{i64 1333}
!1334 = metadata !{i64 1334}
!1335 = metadata !{i64 1335}
!1336 = metadata !{i64 1336}
!1337 = metadata !{i64 1337}
!1338 = metadata !{i64 1338}
!1339 = metadata !{i64 1339}
!1340 = metadata !{i64 1340}
!1341 = metadata !{i64 1341}
!1342 = metadata !{i64 1342}
!1343 = metadata !{i64 1343}
!1344 = metadata !{i64 1344}
!1345 = metadata !{i64 1345}
!1346 = metadata !{i64 1346}
!1347 = metadata !{i64 1347}
!1348 = metadata !{i64 1348}
!1349 = metadata !{i64 1349}
!1350 = metadata !{i64 1350}
!1351 = metadata !{i64 1351}
!1352 = metadata !{i64 1352}
!1353 = metadata !{i64 1353}
!1354 = metadata !{i64 1354}
!1355 = metadata !{i64 1355}
!1356 = metadata !{i64 1356}
!1357 = metadata !{i64 1357}
!1358 = metadata !{i64 1358}
!1359 = metadata !{i64 1359}
!1360 = metadata !{i64 1360}
!1361 = metadata !{i64 1361}
!1362 = metadata !{i64 1362}
!1363 = metadata !{i64 1363}
!1364 = metadata !{i64 1364}
!1365 = metadata !{i64 1365}
!1366 = metadata !{i64 1366}
!1367 = metadata !{i64 1367}
!1368 = metadata !{i64 1368}
!1369 = metadata !{i64 1369}
!1370 = metadata !{i64 1370}
!1371 = metadata !{i64 1371}
!1372 = metadata !{i64 1372}
!1373 = metadata !{i64 1373}
!1374 = metadata !{i64 1374}
!1375 = metadata !{i64 1375}
!1376 = metadata !{i64 1376}
!1377 = metadata !{i64 1377}
!1378 = metadata !{i64 1378}
!1379 = metadata !{i64 1379}
!1380 = metadata !{i64 1380}
!1381 = metadata !{i64 1381}
!1382 = metadata !{i64 1382}
!1383 = metadata !{i64 1383}
!1384 = metadata !{i64 1384}
!1385 = metadata !{i64 1385}
!1386 = metadata !{i64 1386}
!1387 = metadata !{i64 1387}
!1388 = metadata !{i64 1388}
!1389 = metadata !{i64 1389}
!1390 = metadata !{i64 1390}
!1391 = metadata !{i64 1391}
!1392 = metadata !{i64 1392}
!1393 = metadata !{i64 1393}
!1394 = metadata !{i64 1394}
!1395 = metadata !{i64 1395}
!1396 = metadata !{i64 1396}
!1397 = metadata !{i64 1397}
!1398 = metadata !{i64 1398}
!1399 = metadata !{i64 1399}
!1400 = metadata !{i64 1400}
!1401 = metadata !{i64 1401}
!1402 = metadata !{i64 1402}
!1403 = metadata !{i64 1403}
!1404 = metadata !{i64 1404}
!1405 = metadata !{i64 1405}
!1406 = metadata !{i64 1406}
!1407 = metadata !{i64 1407}
!1408 = metadata !{i64 1408}
!1409 = metadata !{i64 1409}
!1410 = metadata !{i64 1410}
!1411 = metadata !{i64 1411}
!1412 = metadata !{i64 1412}
!1413 = metadata !{i64 1413}
!1414 = metadata !{i64 1414}
!1415 = metadata !{i64 1415}
!1416 = metadata !{i64 1416}
!1417 = metadata !{i64 1417}
!1418 = metadata !{i64 1418}
!1419 = metadata !{i64 1419}
!1420 = metadata !{i64 1420}
!1421 = metadata !{i64 1421}
!1422 = metadata !{i64 1422}
!1423 = metadata !{i64 1423}
!1424 = metadata !{i64 1424}
!1425 = metadata !{i64 1425}
!1426 = metadata !{i64 1426}
!1427 = metadata !{i64 1427}
!1428 = metadata !{i64 1428}
!1429 = metadata !{i64 1429}
!1430 = metadata !{i64 1430}
!1431 = metadata !{i64 1431}
!1432 = metadata !{i64 1432}
!1433 = metadata !{i64 1433}
!1434 = metadata !{i64 1434}
!1435 = metadata !{i64 1435}
!1436 = metadata !{i64 1436}
!1437 = metadata !{i64 1437}
!1438 = metadata !{i64 1438}
!1439 = metadata !{i64 1439}
!1440 = metadata !{i64 1440}
!1441 = metadata !{i64 1441}
!1442 = metadata !{i64 1442}
!1443 = metadata !{i64 1443}
!1444 = metadata !{i64 1444}
!1445 = metadata !{i64 1445}
!1446 = metadata !{i64 1446}
!1447 = metadata !{i64 1447}
!1448 = metadata !{i64 1448}
!1449 = metadata !{i64 1449}
!1450 = metadata !{i64 1450}
!1451 = metadata !{i64 1451}
!1452 = metadata !{i64 1452}
!1453 = metadata !{i64 1453}
!1454 = metadata !{i64 1454}
!1455 = metadata !{i64 1455}
!1456 = metadata !{i64 1456}
!1457 = metadata !{i64 1457}
!1458 = metadata !{i64 1458}
!1459 = metadata !{i64 1459}
!1460 = metadata !{i64 1460}
!1461 = metadata !{i64 1461}
!1462 = metadata !{i64 1462}
!1463 = metadata !{i64 1463}
!1464 = metadata !{i64 1464}
!1465 = metadata !{i64 1465}
!1466 = metadata !{i64 1466}
!1467 = metadata !{i64 1467}
!1468 = metadata !{i64 1468}
!1469 = metadata !{i64 1469}
!1470 = metadata !{i64 1470}
!1471 = metadata !{i64 1471}
!1472 = metadata !{i64 1472}
!1473 = metadata !{i64 1473}
!1474 = metadata !{i64 1474}
!1475 = metadata !{i64 1475}
!1476 = metadata !{i64 1476}
!1477 = metadata !{i64 1477}
!1478 = metadata !{i64 1478}
!1479 = metadata !{i64 1479}
!1480 = metadata !{i64 1480}
!1481 = metadata !{i64 1481}
!1482 = metadata !{i64 1482}
!1483 = metadata !{i64 1483}
!1484 = metadata !{i64 1484}
!1485 = metadata !{i64 1485}
!1486 = metadata !{i64 1486}
!1487 = metadata !{i64 1487}
!1488 = metadata !{i64 1488}
!1489 = metadata !{i64 1489}
!1490 = metadata !{i64 1490}
!1491 = metadata !{i64 1491}
!1492 = metadata !{i64 1492}
!1493 = metadata !{i64 1493}
!1494 = metadata !{i64 1494}
!1495 = metadata !{i64 1495}
!1496 = metadata !{i64 1496}
!1497 = metadata !{i64 1497}
!1498 = metadata !{i64 1498}
!1499 = metadata !{i64 1499}
!1500 = metadata !{i64 1500}
!1501 = metadata !{i64 1501}
!1502 = metadata !{i64 1502}
!1503 = metadata !{i64 1503}
!1504 = metadata !{i64 1504}
!1505 = metadata !{i64 1505}
!1506 = metadata !{i64 1506}
!1507 = metadata !{i64 1507}
!1508 = metadata !{i64 1508}
!1509 = metadata !{i64 1509}
!1510 = metadata !{i64 1510}
!1511 = metadata !{i64 1511}
!1512 = metadata !{i64 1512}
!1513 = metadata !{i64 1513}
!1514 = metadata !{i64 1514}
!1515 = metadata !{i64 1515}
!1516 = metadata !{i64 1516}
!1517 = metadata !{i64 1517}
!1518 = metadata !{i64 1518}
!1519 = metadata !{i64 1519}
!1520 = metadata !{i64 1520}
!1521 = metadata !{i64 1521}
!1522 = metadata !{i64 1522}
!1523 = metadata !{i64 1523}
!1524 = metadata !{i64 1524}
!1525 = metadata !{i64 1525}
!1526 = metadata !{i64 1526}
!1527 = metadata !{i64 1527}
!1528 = metadata !{i64 1528}
!1529 = metadata !{i64 1529}
!1530 = metadata !{i64 1530}
!1531 = metadata !{i64 1531}
!1532 = metadata !{i64 1532}
!1533 = metadata !{i64 1533}
!1534 = metadata !{i64 1534}
!1535 = metadata !{i64 1535}
!1536 = metadata !{i64 1536}
!1537 = metadata !{i64 1537}
!1538 = metadata !{i64 1538}
!1539 = metadata !{i64 1539}
!1540 = metadata !{i64 1540}
!1541 = metadata !{i64 1541}
!1542 = metadata !{i64 1542}
!1543 = metadata !{i64 1543}
!1544 = metadata !{i64 1544}
!1545 = metadata !{i64 1545}
!1546 = metadata !{i64 1546}
!1547 = metadata !{i64 1547}
!1548 = metadata !{i64 1548}
!1549 = metadata !{i64 1549}
!1550 = metadata !{i64 1550}
!1551 = metadata !{i64 1551}
!1552 = metadata !{i64 1552}
!1553 = metadata !{i64 1553}
!1554 = metadata !{i64 1554}
!1555 = metadata !{i64 1555}
!1556 = metadata !{i64 1556}
!1557 = metadata !{i64 1557}
!1558 = metadata !{i64 1558}
!1559 = metadata !{i64 1559}
!1560 = metadata !{i64 1560}
!1561 = metadata !{i64 1561}
!1562 = metadata !{i64 1562}
!1563 = metadata !{i64 1563}
!1564 = metadata !{i64 1564}
!1565 = metadata !{i64 1565}
!1566 = metadata !{i64 1566}
!1567 = metadata !{i64 1567}
!1568 = metadata !{i64 1568}
!1569 = metadata !{i64 1569}
!1570 = metadata !{i64 1570}
!1571 = metadata !{i64 1571}
!1572 = metadata !{i64 1572}
!1573 = metadata !{i64 1573}
!1574 = metadata !{i64 1574}
!1575 = metadata !{i64 1575}
!1576 = metadata !{i64 1576}
!1577 = metadata !{i64 1577}
!1578 = metadata !{i64 1578}
!1579 = metadata !{i64 1579}
!1580 = metadata !{i64 1580}
!1581 = metadata !{i64 1581}
!1582 = metadata !{i64 1582}
!1583 = metadata !{i64 1583}
!1584 = metadata !{i64 1584}
!1585 = metadata !{i64 1585}
!1586 = metadata !{i64 1586}
!1587 = metadata !{i64 1587}
!1588 = metadata !{i64 1588}
!1589 = metadata !{i64 1589}
!1590 = metadata !{i64 1590}
!1591 = metadata !{i64 1591}
!1592 = metadata !{i64 1592}
!1593 = metadata !{i64 1593}
!1594 = metadata !{i64 1594}
!1595 = metadata !{i64 1595}
!1596 = metadata !{i64 1596}
!1597 = metadata !{i64 1597}
!1598 = metadata !{i64 1598}
!1599 = metadata !{i64 1599}
!1600 = metadata !{i64 1600}
!1601 = metadata !{i64 1601}
!1602 = metadata !{i64 1602}
!1603 = metadata !{i64 1603}
!1604 = metadata !{i64 1604}
!1605 = metadata !{i64 1605}
!1606 = metadata !{i64 1606}
!1607 = metadata !{i64 1607}
!1608 = metadata !{i64 1608}
!1609 = metadata !{i64 1609}
!1610 = metadata !{i64 1610}
!1611 = metadata !{i64 1611}
!1612 = metadata !{i64 1612}
!1613 = metadata !{i64 1613}
!1614 = metadata !{i64 1614}
!1615 = metadata !{i64 1615}
!1616 = metadata !{i64 1616}
!1617 = metadata !{i64 1617}
!1618 = metadata !{i64 1618}
!1619 = metadata !{i64 1619}
!1620 = metadata !{i64 1620}
!1621 = metadata !{i64 1621}
!1622 = metadata !{i64 1622}
!1623 = metadata !{i64 1623}
!1624 = metadata !{i64 1624}
!1625 = metadata !{i64 1625}
!1626 = metadata !{i64 1626}
!1627 = metadata !{i64 1627}
!1628 = metadata !{i64 1628}
!1629 = metadata !{i64 1629}
!1630 = metadata !{i64 1630}
!1631 = metadata !{i64 1631}
!1632 = metadata !{i64 1632}
!1633 = metadata !{i64 1633}
!1634 = metadata !{i64 1634}
!1635 = metadata !{i64 1635}
!1636 = metadata !{i64 1636}
!1637 = metadata !{i64 1637}
!1638 = metadata !{i64 1638}
!1639 = metadata !{i64 1639}
!1640 = metadata !{i64 1640}
!1641 = metadata !{i64 1641}
!1642 = metadata !{i64 1642}
!1643 = metadata !{i64 1643}
!1644 = metadata !{i64 1644}
!1645 = metadata !{i64 1645}
!1646 = metadata !{i64 1646}
!1647 = metadata !{i64 1647}
!1648 = metadata !{i64 1648}
!1649 = metadata !{i64 1649}
!1650 = metadata !{i64 1650}
!1651 = metadata !{i64 1651}
!1652 = metadata !{i64 1652}
!1653 = metadata !{i64 1653}
!1654 = metadata !{i64 1654}
!1655 = metadata !{i64 1655}
!1656 = metadata !{i64 1656}
!1657 = metadata !{i64 1657}
!1658 = metadata !{i64 1658}
!1659 = metadata !{i64 1659}
!1660 = metadata !{i64 1660}
!1661 = metadata !{i64 1661}
!1662 = metadata !{i64 1662}
!1663 = metadata !{i64 1663}
!1664 = metadata !{i64 1664}
!1665 = metadata !{i64 1665}
!1666 = metadata !{i64 1666}
!1667 = metadata !{i64 1667}
!1668 = metadata !{i64 1668}
!1669 = metadata !{i64 1669}
!1670 = metadata !{i64 1670}
!1671 = metadata !{i64 1671}
!1672 = metadata !{i64 1672}
!1673 = metadata !{i64 1673}
!1674 = metadata !{i64 1674}
!1675 = metadata !{i64 1675}
!1676 = metadata !{i64 1676}
!1677 = metadata !{i64 1677}
!1678 = metadata !{i64 1678}
!1679 = metadata !{i64 1679}
!1680 = metadata !{i64 1680}
!1681 = metadata !{i64 1681}
!1682 = metadata !{i64 1682}
!1683 = metadata !{i64 1683}
!1684 = metadata !{i64 1684}
!1685 = metadata !{i64 1685}
!1686 = metadata !{i64 1686}
!1687 = metadata !{i64 1687}
!1688 = metadata !{i64 1688}
!1689 = metadata !{i64 1689}
!1690 = metadata !{i64 1690}
!1691 = metadata !{i64 1691}
!1692 = metadata !{i64 1692}
!1693 = metadata !{i64 1693}
!1694 = metadata !{i64 1694}
!1695 = metadata !{i64 1695}
!1696 = metadata !{i64 1696}
!1697 = metadata !{i64 1697}
!1698 = metadata !{i64 1698}
!1699 = metadata !{i64 1699}
!1700 = metadata !{i64 1700}
!1701 = metadata !{i64 1701}
!1702 = metadata !{i64 1702}
!1703 = metadata !{i64 1703}
!1704 = metadata !{i64 1704}
!1705 = metadata !{i64 1705}
!1706 = metadata !{i64 1706}
!1707 = metadata !{i64 1707}
!1708 = metadata !{i64 1708}
!1709 = metadata !{i64 1709}
!1710 = metadata !{i64 1710}
!1711 = metadata !{i64 1711}
!1712 = metadata !{i64 1712}
!1713 = metadata !{i64 1713}
!1714 = metadata !{i64 1714}
!1715 = metadata !{i64 1715}
!1716 = metadata !{i64 1716}
!1717 = metadata !{i64 1717}
!1718 = metadata !{i64 1718}
!1719 = metadata !{i64 1719}
!1720 = metadata !{i64 1720}
!1721 = metadata !{i64 1721}
!1722 = metadata !{i64 1722}
!1723 = metadata !{i64 1723}
!1724 = metadata !{i64 1724}
!1725 = metadata !{i64 1725}
!1726 = metadata !{i64 1726}
!1727 = metadata !{i64 1727}
!1728 = metadata !{i64 1728}
!1729 = metadata !{i64 1729}
!1730 = metadata !{i64 1730}
!1731 = metadata !{i64 1731}
!1732 = metadata !{i64 1732}
!1733 = metadata !{i64 1733}
!1734 = metadata !{i64 1734}
!1735 = metadata !{i64 1735}
!1736 = metadata !{i64 1736}
!1737 = metadata !{i64 1737}
!1738 = metadata !{i64 1738}
!1739 = metadata !{i64 1739}
!1740 = metadata !{i64 1740}
!1741 = metadata !{i64 1741}
!1742 = metadata !{i64 1742}
!1743 = metadata !{i64 1743}
!1744 = metadata !{i64 1744}
!1745 = metadata !{i64 1745}
!1746 = metadata !{i64 1746}
!1747 = metadata !{i64 1747}
!1748 = metadata !{i64 1748}
!1749 = metadata !{i64 1749}
!1750 = metadata !{i64 1750}
!1751 = metadata !{i64 1751}
!1752 = metadata !{i64 1752}
!1753 = metadata !{i64 1753}
!1754 = metadata !{i64 1754}
!1755 = metadata !{i64 1755}
!1756 = metadata !{i64 1756}
!1757 = metadata !{i64 1757}
!1758 = metadata !{i64 1758}
!1759 = metadata !{i64 1759}
!1760 = metadata !{i64 1760}
!1761 = metadata !{i64 1761}
!1762 = metadata !{i64 1762}
!1763 = metadata !{i64 1763}
!1764 = metadata !{i64 1764}
!1765 = metadata !{i64 1765}
!1766 = metadata !{i64 1766}
!1767 = metadata !{i64 1767}
!1768 = metadata !{i64 1768}
!1769 = metadata !{i64 1769}
!1770 = metadata !{i64 1770}
!1771 = metadata !{i64 1771}
!1772 = metadata !{i64 1772}
!1773 = metadata !{i64 1773}
!1774 = metadata !{i64 1774}
!1775 = metadata !{i64 1775}
!1776 = metadata !{i64 1776}
!1777 = metadata !{i64 1777}
!1778 = metadata !{i64 1778}
!1779 = metadata !{i64 1779}
!1780 = metadata !{i64 1780}
!1781 = metadata !{i64 1781}
!1782 = metadata !{i64 1782}
!1783 = metadata !{i64 1783}
!1784 = metadata !{i64 1784}
!1785 = metadata !{i64 1785}
!1786 = metadata !{i64 1786}
!1787 = metadata !{i64 1787}
!1788 = metadata !{i64 1788}
!1789 = metadata !{i64 1789}
!1790 = metadata !{i64 1790}
!1791 = metadata !{i64 1791}
!1792 = metadata !{i64 1792}
!1793 = metadata !{i64 1793}
!1794 = metadata !{i64 1794}
!1795 = metadata !{i64 1795}
!1796 = metadata !{i64 1796}
!1797 = metadata !{i64 1797}
!1798 = metadata !{i64 1798}
!1799 = metadata !{i64 1799}
!1800 = metadata !{i64 1800}
!1801 = metadata !{i64 1801}
!1802 = metadata !{i64 1802}
!1803 = metadata !{i64 1803}
!1804 = metadata !{i64 1804}
!1805 = metadata !{i64 1805}
!1806 = metadata !{i64 1806}
!1807 = metadata !{i64 1807}
!1808 = metadata !{i64 1808}
!1809 = metadata !{i64 1809}
!1810 = metadata !{i64 1810}
!1811 = metadata !{i64 1811}
!1812 = metadata !{i64 1812}
!1813 = metadata !{i64 1813}
!1814 = metadata !{i64 1814}
!1815 = metadata !{i64 1815}
!1816 = metadata !{i64 1816}
!1817 = metadata !{i64 1817}
!1818 = metadata !{i64 1818}
!1819 = metadata !{i64 1819}
!1820 = metadata !{i64 1820}
!1821 = metadata !{i64 1821}
!1822 = metadata !{i64 1822}
!1823 = metadata !{i64 1823}
!1824 = metadata !{i64 1824}
!1825 = metadata !{i64 1825}
!1826 = metadata !{i64 1826}
!1827 = metadata !{i64 1827}
!1828 = metadata !{i64 1828}
!1829 = metadata !{i64 1829}
!1830 = metadata !{i64 1830}
!1831 = metadata !{i64 1831}
!1832 = metadata !{i64 1832}
!1833 = metadata !{i64 1833}
!1834 = metadata !{i64 1834}
!1835 = metadata !{i64 1835}
!1836 = metadata !{i64 1836}
!1837 = metadata !{i64 1837}
!1838 = metadata !{i64 1838}
!1839 = metadata !{i64 1839}
!1840 = metadata !{i64 1840}
!1841 = metadata !{i64 1841}
!1842 = metadata !{i64 1842}
!1843 = metadata !{i64 1843}
!1844 = metadata !{i64 1844}
!1845 = metadata !{i64 1845}
!1846 = metadata !{i64 1846}
!1847 = metadata !{i64 1847}
!1848 = metadata !{i64 1848}
!1849 = metadata !{i64 1849}
!1850 = metadata !{i64 1850}
!1851 = metadata !{i64 1851}
!1852 = metadata !{i64 1852}
!1853 = metadata !{i64 1853}
!1854 = metadata !{i64 1854}
!1855 = metadata !{i64 1855}
!1856 = metadata !{i64 1856}
!1857 = metadata !{i64 1857}
!1858 = metadata !{i64 1858}
!1859 = metadata !{i64 1859}
!1860 = metadata !{i64 1860}
!1861 = metadata !{i64 1861}
!1862 = metadata !{i64 1862}
!1863 = metadata !{i64 1863}
!1864 = metadata !{i64 1864}
!1865 = metadata !{i64 1865}
!1866 = metadata !{i64 1866}
!1867 = metadata !{i64 1867}
!1868 = metadata !{i64 1868}
!1869 = metadata !{i64 1869}
!1870 = metadata !{i64 1870}
!1871 = metadata !{i64 1871}
!1872 = metadata !{i64 1872}
!1873 = metadata !{i64 1873}
!1874 = metadata !{i64 1874}
!1875 = metadata !{i64 1875}
!1876 = metadata !{i64 1876}
!1877 = metadata !{i64 1877}
!1878 = metadata !{i64 1878}
!1879 = metadata !{i64 1879}
!1880 = metadata !{i64 1880}
!1881 = metadata !{i64 1881}
!1882 = metadata !{i64 1882}
!1883 = metadata !{i64 1883}
!1884 = metadata !{i64 1884}
!1885 = metadata !{i64 1885}
!1886 = metadata !{i64 1886}
!1887 = metadata !{i64 1887}
!1888 = metadata !{i64 1888}
!1889 = metadata !{i64 1889}
!1890 = metadata !{i64 1890}
!1891 = metadata !{i64 1891}
!1892 = metadata !{i64 1892}
!1893 = metadata !{i64 1893}
!1894 = metadata !{i64 1894}
!1895 = metadata !{i64 1895}
!1896 = metadata !{i64 1896}
!1897 = metadata !{i64 1897}
!1898 = metadata !{i64 1898}
!1899 = metadata !{i64 1899}
!1900 = metadata !{i64 1900}
!1901 = metadata !{i64 1901}
!1902 = metadata !{i64 1902}
!1903 = metadata !{i64 1903}
!1904 = metadata !{i64 1904}
!1905 = metadata !{i64 1905}
!1906 = metadata !{i64 1906}
!1907 = metadata !{i64 1907}
!1908 = metadata !{i64 1908}
!1909 = metadata !{i64 1909}
!1910 = metadata !{i64 1910}
!1911 = metadata !{i64 1911}
!1912 = metadata !{i64 1912}
!1913 = metadata !{i64 1913}
!1914 = metadata !{i64 1914}
!1915 = metadata !{i64 1915}
!1916 = metadata !{i64 1916}
!1917 = metadata !{i64 1917}
!1918 = metadata !{i64 1918}
!1919 = metadata !{i64 1919}
!1920 = metadata !{i64 1920}
!1921 = metadata !{i64 1921}
!1922 = metadata !{i64 1922}
!1923 = metadata !{i64 1923}
!1924 = metadata !{i64 1924}
!1925 = metadata !{i64 1925}
!1926 = metadata !{i64 1926}
!1927 = metadata !{i64 1927}
!1928 = metadata !{i64 1928}
!1929 = metadata !{i64 1929}
!1930 = metadata !{i64 1930}
!1931 = metadata !{i64 1931}
!1932 = metadata !{i64 1932}
!1933 = metadata !{i64 1933}
!1934 = metadata !{i64 1934}
!1935 = metadata !{i64 1935}
!1936 = metadata !{i64 1936}
!1937 = metadata !{i64 1937}
!1938 = metadata !{i64 1938}
!1939 = metadata !{i64 1939}
!1940 = metadata !{i64 1940}
!1941 = metadata !{i64 1941}
!1942 = metadata !{i64 1942}
!1943 = metadata !{i64 1943}
!1944 = metadata !{i64 1944}
!1945 = metadata !{i64 1945}
!1946 = metadata !{i64 1946}
!1947 = metadata !{i64 1947}
!1948 = metadata !{i64 1948}
!1949 = metadata !{i64 1949}
!1950 = metadata !{i64 1950}
!1951 = metadata !{i64 1951}
!1952 = metadata !{i64 1952}
!1953 = metadata !{i64 1953}
!1954 = metadata !{i64 1954}
!1955 = metadata !{i64 1955}
!1956 = metadata !{i64 1956}
!1957 = metadata !{i64 1957}
!1958 = metadata !{i64 1958}
!1959 = metadata !{i64 1959}
!1960 = metadata !{i64 1960}
!1961 = metadata !{i64 1961}
!1962 = metadata !{i64 1962}
!1963 = metadata !{i64 1963}
!1964 = metadata !{i64 1964}
!1965 = metadata !{i64 1965}
!1966 = metadata !{i64 1966}
!1967 = metadata !{i64 1967}
!1968 = metadata !{i64 1968}
!1969 = metadata !{i64 1969}
!1970 = metadata !{i64 1970}
!1971 = metadata !{i64 1971}
!1972 = metadata !{i64 1972}
!1973 = metadata !{i64 1973}
!1974 = metadata !{i64 1974}
!1975 = metadata !{i64 1975}
!1976 = metadata !{i64 1976}
!1977 = metadata !{i64 1977}
!1978 = metadata !{i64 1978}
!1979 = metadata !{i64 1979}
!1980 = metadata !{i64 1980}
!1981 = metadata !{i64 1981}
!1982 = metadata !{i64 1982}
!1983 = metadata !{i64 1983}
!1984 = metadata !{i64 1984}
!1985 = metadata !{i64 1985}
!1986 = metadata !{i64 1986}
!1987 = metadata !{i64 1987}
!1988 = metadata !{i64 1988}
!1989 = metadata !{i64 1989}
!1990 = metadata !{i64 1990}
!1991 = metadata !{i64 1991}
!1992 = metadata !{i64 1992}
!1993 = metadata !{i64 1993}
!1994 = metadata !{i64 1994}
!1995 = metadata !{i64 1995}
!1996 = metadata !{i64 1996}
!1997 = metadata !{i64 1997}
!1998 = metadata !{i64 1998}
!1999 = metadata !{i64 1999}
!2000 = metadata !{i64 2000}
!2001 = metadata !{i64 2001}
!2002 = metadata !{i64 2002}
!2003 = metadata !{i64 2003}
!2004 = metadata !{i64 2004}
!2005 = metadata !{i64 2005}
!2006 = metadata !{i64 2006}
!2007 = metadata !{i64 2007}
!2008 = metadata !{i64 2008}
!2009 = metadata !{i64 2009}
!2010 = metadata !{i64 2010}
!2011 = metadata !{i64 2011}
!2012 = metadata !{i64 2012}
!2013 = metadata !{i64 2013}
!2014 = metadata !{i64 2014}
!2015 = metadata !{i64 2015}
!2016 = metadata !{i64 2016}
!2017 = metadata !{i64 2017}
!2018 = metadata !{i64 2018}
!2019 = metadata !{i64 2019}
!2020 = metadata !{i64 2020}
!2021 = metadata !{i64 2021}
!2022 = metadata !{i64 2022}
!2023 = metadata !{i64 2023}
!2024 = metadata !{i64 2024}
!2025 = metadata !{i64 2025}
!2026 = metadata !{i64 2026}
!2027 = metadata !{i64 2027}
!2028 = metadata !{i64 2028}
!2029 = metadata !{i64 2029}
!2030 = metadata !{i64 2030}
!2031 = metadata !{i64 2031}
!2032 = metadata !{i64 2032}
!2033 = metadata !{i64 2033}
!2034 = metadata !{i64 2034}
!2035 = metadata !{i64 2035}
!2036 = metadata !{i64 2036}
!2037 = metadata !{i64 2037}
!2038 = metadata !{i64 2038}
!2039 = metadata !{i64 2039}
!2040 = metadata !{i64 2040}
!2041 = metadata !{i64 2041}
!2042 = metadata !{i64 2042}
!2043 = metadata !{i64 2043}
!2044 = metadata !{i64 2044}
!2045 = metadata !{i64 2045}
!2046 = metadata !{i64 2046}
!2047 = metadata !{i64 2047}
!2048 = metadata !{i64 2048}
!2049 = metadata !{i64 2049}
!2050 = metadata !{i64 2050}
!2051 = metadata !{i64 2051}
!2052 = metadata !{i64 2052}
!2053 = metadata !{i64 2053}
!2054 = metadata !{i64 2054}
!2055 = metadata !{i64 2055}
!2056 = metadata !{i64 2056}
!2057 = metadata !{i64 2057}
!2058 = metadata !{i64 2058}
!2059 = metadata !{i64 2059}
!2060 = metadata !{i64 2060}
!2061 = metadata !{i64 2061}
!2062 = metadata !{i64 2062}
!2063 = metadata !{i64 2063}
!2064 = metadata !{i64 2064}
!2065 = metadata !{i64 2065}
!2066 = metadata !{i64 2066}
!2067 = metadata !{i64 2067}
!2068 = metadata !{i64 2068}
!2069 = metadata !{i64 2069}
!2070 = metadata !{i64 2070}
!2071 = metadata !{i64 2071}
!2072 = metadata !{i64 2072}
!2073 = metadata !{i64 2073}
!2074 = metadata !{i64 2074}
!2075 = metadata !{i64 2075}
!2076 = metadata !{i64 2076}
!2077 = metadata !{i64 2077}
!2078 = metadata !{i64 2078}
!2079 = metadata !{i64 2079}
!2080 = metadata !{i64 2080}
!2081 = metadata !{i64 2081}
!2082 = metadata !{i64 2082}
!2083 = metadata !{i64 2083}
!2084 = metadata !{i64 2084}
!2085 = metadata !{i64 2085}
!2086 = metadata !{i64 2086}
!2087 = metadata !{i64 2087}
!2088 = metadata !{i64 2088}
!2089 = metadata !{i64 2089}
!2090 = metadata !{i64 2090}
!2091 = metadata !{i64 2091}
!2092 = metadata !{i64 2092}
!2093 = metadata !{i64 2093}
!2094 = metadata !{i64 2094}
!2095 = metadata !{i64 2095}
!2096 = metadata !{i64 2096}
!2097 = metadata !{i64 2097}
!2098 = metadata !{i64 2098}
!2099 = metadata !{i64 2099}
!2100 = metadata !{i64 2100}
!2101 = metadata !{i64 2101}
!2102 = metadata !{i64 2102}
!2103 = metadata !{i64 2103}
!2104 = metadata !{i64 2104}
!2105 = metadata !{i64 2105}
!2106 = metadata !{i64 2106}
!2107 = metadata !{i64 2107}
!2108 = metadata !{i64 2108}
!2109 = metadata !{i64 2109}
!2110 = metadata !{i64 2110}
!2111 = metadata !{i64 2111}
!2112 = metadata !{i64 2112}
!2113 = metadata !{i64 2113}
!2114 = metadata !{i64 2114}
!2115 = metadata !{i64 2115}
!2116 = metadata !{i64 2116}
!2117 = metadata !{i64 2117}
!2118 = metadata !{i64 2118}
!2119 = metadata !{i64 2119}
!2120 = metadata !{i64 2120}
!2121 = metadata !{i64 2121}
!2122 = metadata !{i64 2122}
!2123 = metadata !{i64 2123}
!2124 = metadata !{i64 2124}
!2125 = metadata !{i64 2125}
!2126 = metadata !{i64 2126}
!2127 = metadata !{i64 2127}
!2128 = metadata !{i64 2128}
!2129 = metadata !{i64 2129}
!2130 = metadata !{i64 2130}
!2131 = metadata !{i64 2131}
!2132 = metadata !{i64 2132}
!2133 = metadata !{i64 2133}
!2134 = metadata !{i64 2134}
!2135 = metadata !{i64 2135}
!2136 = metadata !{i64 2136}
!2137 = metadata !{i64 2137}
!2138 = metadata !{i64 2138}
!2139 = metadata !{i64 2139}
!2140 = metadata !{i64 2140}
!2141 = metadata !{i64 2141}
!2142 = metadata !{i64 2142}
!2143 = metadata !{i64 2143}
!2144 = metadata !{i64 2144}
!2145 = metadata !{i64 2145}
!2146 = metadata !{i64 2146}
!2147 = metadata !{i64 2147}
!2148 = metadata !{i64 2148}
!2149 = metadata !{i64 2149}
!2150 = metadata !{i64 2150}
!2151 = metadata !{i64 2151}
!2152 = metadata !{i64 2152}
!2153 = metadata !{i64 2153}
!2154 = metadata !{i64 2154}
!2155 = metadata !{i64 2155}
!2156 = metadata !{i64 2156}
!2157 = metadata !{i64 2157}
!2158 = metadata !{i64 2158}
!2159 = metadata !{i64 2159}
!2160 = metadata !{i64 2160}
!2161 = metadata !{i64 2161}
!2162 = metadata !{i64 2162}
!2163 = metadata !{i64 2163}
!2164 = metadata !{i64 2164}
!2165 = metadata !{i64 2165}
!2166 = metadata !{i64 2166}
!2167 = metadata !{i64 2167}
!2168 = metadata !{i64 2168}
!2169 = metadata !{i64 2169}
!2170 = metadata !{i64 2170}
!2171 = metadata !{i64 2171}
!2172 = metadata !{i64 2172}
!2173 = metadata !{i64 2173}
!2174 = metadata !{i64 2174}
!2175 = metadata !{i64 2175}
!2176 = metadata !{i64 2176}
!2177 = metadata !{i64 2177}
!2178 = metadata !{i64 2178}
!2179 = metadata !{i64 2179}
!2180 = metadata !{i64 2180}
!2181 = metadata !{i64 2181}
!2182 = metadata !{i64 2182}
!2183 = metadata !{i64 2183}
!2184 = metadata !{i64 2184}
!2185 = metadata !{i64 2185}
!2186 = metadata !{i64 2186}
!2187 = metadata !{i64 2187}
!2188 = metadata !{i64 2188}
!2189 = metadata !{i64 2189}
!2190 = metadata !{i64 2190}
!2191 = metadata !{i64 2191}
!2192 = metadata !{i64 2192}
!2193 = metadata !{i64 2193}
!2194 = metadata !{i64 2194}
!2195 = metadata !{i64 2195}
!2196 = metadata !{i64 2196}
!2197 = metadata !{i64 2197}
!2198 = metadata !{i64 2198}
!2199 = metadata !{i64 2199}
!2200 = metadata !{i64 2200}
!2201 = metadata !{i64 2201}
!2202 = metadata !{i64 2202}
!2203 = metadata !{i64 2203}
!2204 = metadata !{i64 2204}
!2205 = metadata !{i64 2205}
!2206 = metadata !{i64 2206}
!2207 = metadata !{i64 2207}
!2208 = metadata !{i64 2208}
!2209 = metadata !{i64 2209}
!2210 = metadata !{i64 2210}
!2211 = metadata !{i64 2211}
!2212 = metadata !{i64 2212}
!2213 = metadata !{i64 2213}
!2214 = metadata !{i64 2214}
!2215 = metadata !{i64 2215}
!2216 = metadata !{i64 2216}
!2217 = metadata !{i64 2217}
!2218 = metadata !{i64 2218}
!2219 = metadata !{i64 2219}
!2220 = metadata !{i64 2220}
!2221 = metadata !{i64 2221}
!2222 = metadata !{i64 2222}
!2223 = metadata !{i64 2223}
!2224 = metadata !{i64 2224}
!2225 = metadata !{i64 2225}
!2226 = metadata !{i64 2226}
!2227 = metadata !{i64 2227}
!2228 = metadata !{i64 2228}
!2229 = metadata !{i64 2229}
!2230 = metadata !{i64 2230}
!2231 = metadata !{i64 2231}
!2232 = metadata !{i64 2232}
!2233 = metadata !{i64 2233}
!2234 = metadata !{i64 2234}
!2235 = metadata !{i64 2235}
!2236 = metadata !{i64 2236}
!2237 = metadata !{i64 2237}
!2238 = metadata !{i64 2238}
!2239 = metadata !{i64 2239}
!2240 = metadata !{i64 2240}
!2241 = metadata !{i64 2241}
!2242 = metadata !{i64 2242}
!2243 = metadata !{i64 2243}
!2244 = metadata !{i64 2244}
!2245 = metadata !{i64 2245}
!2246 = metadata !{i64 2246}
!2247 = metadata !{i64 2247}
!2248 = metadata !{i64 2248}
!2249 = metadata !{i64 2249}
!2250 = metadata !{i64 2250}
!2251 = metadata !{i64 2251}
!2252 = metadata !{i64 2252}
!2253 = metadata !{i64 2253}
!2254 = metadata !{i64 2254}
!2255 = metadata !{i64 2255}
!2256 = metadata !{i64 2256}
!2257 = metadata !{i64 2257}
!2258 = metadata !{i64 2258}
!2259 = metadata !{i64 2259}
!2260 = metadata !{i64 2260}
!2261 = metadata !{i64 2261}
!2262 = metadata !{i64 2262}
!2263 = metadata !{i64 2263}
!2264 = metadata !{i64 2264}
!2265 = metadata !{i64 2265}
!2266 = metadata !{i64 2266}
!2267 = metadata !{i64 2267}
!2268 = metadata !{i64 2268}
!2269 = metadata !{i64 2269}
!2270 = metadata !{i64 2270}
!2271 = metadata !{i64 2271}
!2272 = metadata !{i64 2272}
!2273 = metadata !{i64 2273}
!2274 = metadata !{i64 2274}
!2275 = metadata !{i64 2275}
!2276 = metadata !{i64 2276}
!2277 = metadata !{i64 2277}
!2278 = metadata !{i64 2278}
!2279 = metadata !{i64 2279}
!2280 = metadata !{i64 2280}
!2281 = metadata !{i64 2281}
!2282 = metadata !{i64 2282}
!2283 = metadata !{i64 2283}
!2284 = metadata !{i64 2284}
!2285 = metadata !{i64 2285}
!2286 = metadata !{i64 2286}
!2287 = metadata !{i64 2287}
!2288 = metadata !{i64 2288}
!2289 = metadata !{i64 2289}
!2290 = metadata !{i64 2290}
!2291 = metadata !{i64 2291}
!2292 = metadata !{i64 2292}
!2293 = metadata !{i64 2293}
!2294 = metadata !{i64 2294}
!2295 = metadata !{i64 2295}
!2296 = metadata !{i64 2296}
!2297 = metadata !{i64 2297}
!2298 = metadata !{i64 2298}
!2299 = metadata !{i64 2299}
!2300 = metadata !{i64 2300}
!2301 = metadata !{i64 2301}
!2302 = metadata !{i64 2302}
!2303 = metadata !{i64 2303}
!2304 = metadata !{i64 2304}
!2305 = metadata !{i64 2305}
!2306 = metadata !{i64 2306}
!2307 = metadata !{i64 2307}
!2308 = metadata !{i64 2308}
!2309 = metadata !{i64 2309}
!2310 = metadata !{i64 2310}
!2311 = metadata !{i64 2311}
!2312 = metadata !{i64 2312}
!2313 = metadata !{i64 2313}
!2314 = metadata !{i64 2314}
!2315 = metadata !{i64 2315}
!2316 = metadata !{i64 2316}
!2317 = metadata !{i64 2317}
!2318 = metadata !{i64 2318}
!2319 = metadata !{i64 2319}
!2320 = metadata !{i64 2320}
!2321 = metadata !{i64 2321}
!2322 = metadata !{i64 2322}
!2323 = metadata !{i64 2323}
!2324 = metadata !{i64 2324}
!2325 = metadata !{i64 2325}
!2326 = metadata !{i64 2326}
!2327 = metadata !{i64 2327}
!2328 = metadata !{i64 2328}
!2329 = metadata !{i64 2329}
!2330 = metadata !{i64 2330}
!2331 = metadata !{i64 2331}
!2332 = metadata !{i64 2332}
!2333 = metadata !{i64 2333}
!2334 = metadata !{i64 2334}
!2335 = metadata !{i64 2335}
!2336 = metadata !{i64 2336}
!2337 = metadata !{i64 2337}
!2338 = metadata !{i64 2338}
!2339 = metadata !{i64 2339}
!2340 = metadata !{i64 2340}
!2341 = metadata !{i64 2341}
!2342 = metadata !{i64 2342}
!2343 = metadata !{i64 2343}
!2344 = metadata !{i64 2344}
!2345 = metadata !{i64 2345}
!2346 = metadata !{i64 2346}
!2347 = metadata !{i64 2347}
!2348 = metadata !{i64 2348}
!2349 = metadata !{i64 2349}
!2350 = metadata !{i64 2350}
!2351 = metadata !{i64 2351}
!2352 = metadata !{i64 2352}
!2353 = metadata !{i64 2353}
!2354 = metadata !{i64 2354}
!2355 = metadata !{i64 2355}
!2356 = metadata !{i64 2356}
!2357 = metadata !{i64 2357}
!2358 = metadata !{i64 2358}
!2359 = metadata !{i64 2359}
!2360 = metadata !{i64 2360}
!2361 = metadata !{i64 2361}
!2362 = metadata !{i64 2362}
!2363 = metadata !{i64 2363}
!2364 = metadata !{i64 2364}
!2365 = metadata !{i64 2365}
!2366 = metadata !{i64 2366}
!2367 = metadata !{i64 2367}
!2368 = metadata !{i64 2368}
!2369 = metadata !{i64 2369}
!2370 = metadata !{i64 2370}
!2371 = metadata !{i64 2371}
!2372 = metadata !{i64 2372}
!2373 = metadata !{i64 2373}
!2374 = metadata !{i64 2374}
!2375 = metadata !{i64 2375}
!2376 = metadata !{i64 2376}
!2377 = metadata !{i64 2377}
!2378 = metadata !{i64 2378}
!2379 = metadata !{i64 2379}
!2380 = metadata !{i64 2380}
!2381 = metadata !{i64 2381}
!2382 = metadata !{i64 2382}
!2383 = metadata !{i64 2383}
!2384 = metadata !{i64 2384}
!2385 = metadata !{i64 2385}
!2386 = metadata !{i64 2386}
!2387 = metadata !{i64 2387}
!2388 = metadata !{i64 2388}
!2389 = metadata !{i64 2389}
!2390 = metadata !{i64 2390}
!2391 = metadata !{i64 2391}
!2392 = metadata !{i64 2392}
!2393 = metadata !{i64 2393}
!2394 = metadata !{i64 2394}
!2395 = metadata !{i64 2395}
!2396 = metadata !{i64 2396}
!2397 = metadata !{i64 2397}
!2398 = metadata !{i64 2398}
!2399 = metadata !{i64 2399}
!2400 = metadata !{i64 2400}
!2401 = metadata !{i64 2401}
!2402 = metadata !{i64 2402}
!2403 = metadata !{i64 2403}
!2404 = metadata !{i64 2404}
!2405 = metadata !{i64 2405}
!2406 = metadata !{i64 2406}
!2407 = metadata !{i64 2407}
!2408 = metadata !{i64 2408}
!2409 = metadata !{i64 2409}
!2410 = metadata !{i64 2410}
!2411 = metadata !{i64 2411}
!2412 = metadata !{i64 2412}
!2413 = metadata !{i64 2413}
!2414 = metadata !{i64 2414}
!2415 = metadata !{i64 2415}
!2416 = metadata !{i64 2416}
!2417 = metadata !{i64 2417}
!2418 = metadata !{i64 2418}
!2419 = metadata !{i64 2419}
!2420 = metadata !{i64 2420}
!2421 = metadata !{i64 2421}
!2422 = metadata !{i64 2422}
!2423 = metadata !{i64 2423}
!2424 = metadata !{i64 2424}
!2425 = metadata !{i64 2425}
!2426 = metadata !{i64 2426}
!2427 = metadata !{i64 2427}
!2428 = metadata !{i64 2428}
!2429 = metadata !{i64 2429}
!2430 = metadata !{i64 2430}
!2431 = metadata !{i64 2431}
!2432 = metadata !{i64 2432}
!2433 = metadata !{i64 2433}
!2434 = metadata !{i64 2434}
!2435 = metadata !{i64 2435}
!2436 = metadata !{i64 2436}
!2437 = metadata !{i64 2437}
!2438 = metadata !{i64 2438}
!2439 = metadata !{i64 2439}
!2440 = metadata !{i64 2440}
!2441 = metadata !{i64 2441}
!2442 = metadata !{i64 2442}
!2443 = metadata !{i64 2443}
!2444 = metadata !{i64 2444}
!2445 = metadata !{i64 2445}
!2446 = metadata !{i64 2446}
!2447 = metadata !{i64 2447}
!2448 = metadata !{i64 2448}
!2449 = metadata !{i64 2449}
!2450 = metadata !{i64 2450}
!2451 = metadata !{i64 2451}
!2452 = metadata !{i64 2452}
!2453 = metadata !{i64 2453}
!2454 = metadata !{i64 2454}
!2455 = metadata !{i64 2455}
!2456 = metadata !{i64 2456}
!2457 = metadata !{i64 2457}
!2458 = metadata !{i64 2458}
!2459 = metadata !{i64 2459}
!2460 = metadata !{i64 2460}
!2461 = metadata !{i64 2461}
!2462 = metadata !{i64 2462}
!2463 = metadata !{i64 2463}
!2464 = metadata !{i64 2464}
!2465 = metadata !{i64 2465}
!2466 = metadata !{i64 2466}
!2467 = metadata !{i64 2467}
!2468 = metadata !{i64 2468}
!2469 = metadata !{i64 2469}
!2470 = metadata !{i64 2470}
!2471 = metadata !{i64 2471}
!2472 = metadata !{i64 2472}
!2473 = metadata !{i64 2473}
!2474 = metadata !{i64 2474}
!2475 = metadata !{i64 2475}
!2476 = metadata !{i64 2476}
!2477 = metadata !{i64 2477}
!2478 = metadata !{i64 2478}
!2479 = metadata !{i64 2479}
!2480 = metadata !{i64 2480}
!2481 = metadata !{i64 2481}
!2482 = metadata !{i64 2482}
!2483 = metadata !{i64 2483}
!2484 = metadata !{i64 2484}
!2485 = metadata !{i64 2485}
!2486 = metadata !{i64 2486}
!2487 = metadata !{i64 2487}
!2488 = metadata !{i64 2488}
!2489 = metadata !{i64 2489}
!2490 = metadata !{i64 2490}
!2491 = metadata !{i64 2491}
!2492 = metadata !{i64 2492}
!2493 = metadata !{i64 2493}
!2494 = metadata !{i64 2494}
!2495 = metadata !{i64 2495}
!2496 = metadata !{i64 2496}
!2497 = metadata !{i64 2497}
!2498 = metadata !{i64 2498}
!2499 = metadata !{i64 2499}
!2500 = metadata !{i64 2500}
!2501 = metadata !{i64 2501}
!2502 = metadata !{i64 2502}
!2503 = metadata !{i64 2503}
!2504 = metadata !{i64 2504}
!2505 = metadata !{i64 2505}
!2506 = metadata !{i64 2506}
!2507 = metadata !{i64 2507}
!2508 = metadata !{i64 2508}
!2509 = metadata !{i64 2509}
!2510 = metadata !{i64 2510}
!2511 = metadata !{i64 2511}
!2512 = metadata !{i64 2512}
!2513 = metadata !{i64 2513}
!2514 = metadata !{i64 2514}
!2515 = metadata !{i64 2515}
!2516 = metadata !{i64 2516}
!2517 = metadata !{i64 2517}
!2518 = metadata !{i64 2518}
!2519 = metadata !{i64 2519}
!2520 = metadata !{i64 2520}
!2521 = metadata !{i64 2521}
!2522 = metadata !{i64 2522}
!2523 = metadata !{i64 2523}
!2524 = metadata !{i64 2524}
!2525 = metadata !{i64 2525}
!2526 = metadata !{i64 2526}
!2527 = metadata !{i64 2527}
!2528 = metadata !{i64 2528}
!2529 = metadata !{i64 2529}
!2530 = metadata !{i64 2530}
!2531 = metadata !{i64 2531}
!2532 = metadata !{i64 2532}
!2533 = metadata !{i64 2533}
!2534 = metadata !{i64 2534}
!2535 = metadata !{i64 2535}
!2536 = metadata !{i64 2536}
!2537 = metadata !{i64 2537}
!2538 = metadata !{i64 2538}
!2539 = metadata !{i64 2539}
!2540 = metadata !{i64 2540}
!2541 = metadata !{i64 2541}
!2542 = metadata !{i64 2542}
!2543 = metadata !{i64 2543}
!2544 = metadata !{i64 2544}
!2545 = metadata !{i64 2545}
!2546 = metadata !{i64 2546}
!2547 = metadata !{i64 2547}
!2548 = metadata !{i64 2548}
!2549 = metadata !{i64 2549}
!2550 = metadata !{i64 2550}
!2551 = metadata !{i64 2551}
!2552 = metadata !{i64 2552}
!2553 = metadata !{i64 2553}
!2554 = metadata !{i64 2554}
!2555 = metadata !{i64 2555}
!2556 = metadata !{i64 2556}
!2557 = metadata !{i64 2557}
!2558 = metadata !{i64 2558}
!2559 = metadata !{i64 2559}
!2560 = metadata !{i64 2560}
!2561 = metadata !{i64 2561}
!2562 = metadata !{i64 2562}
!2563 = metadata !{i64 2563}
!2564 = metadata !{i64 2564}
!2565 = metadata !{i64 2565}
!2566 = metadata !{i64 2566}
!2567 = metadata !{i64 2567}
!2568 = metadata !{i64 2568}
!2569 = metadata !{i64 2569}
!2570 = metadata !{i64 2570}
!2571 = metadata !{i64 2571}
!2572 = metadata !{i64 2572}
!2573 = metadata !{i64 2573}
!2574 = metadata !{i64 2574}
!2575 = metadata !{i64 2575}
!2576 = metadata !{i64 2576}
!2577 = metadata !{i64 2577}
!2578 = metadata !{i64 2578}
!2579 = metadata !{i64 2579}
!2580 = metadata !{i64 2580}
!2581 = metadata !{i64 2581}
!2582 = metadata !{i64 2582}
!2583 = metadata !{i64 2583}
!2584 = metadata !{i64 2584}
!2585 = metadata !{i64 2585}
!2586 = metadata !{i64 2586}
!2587 = metadata !{i64 2587}
!2588 = metadata !{i64 2588}
!2589 = metadata !{i64 2589}
!2590 = metadata !{i64 2590}
!2591 = metadata !{i64 2591}
!2592 = metadata !{i64 2592}
!2593 = metadata !{i64 2593}
!2594 = metadata !{i64 2594}
!2595 = metadata !{i64 2595}
!2596 = metadata !{i64 2596}
!2597 = metadata !{i64 2597}
!2598 = metadata !{i64 2598}
!2599 = metadata !{i64 2599}
!2600 = metadata !{i64 2600}
!2601 = metadata !{i64 2601}
!2602 = metadata !{i64 2602}
!2603 = metadata !{i64 2603}
!2604 = metadata !{i64 2604}
!2605 = metadata !{i64 2605}
!2606 = metadata !{i64 2606}
!2607 = metadata !{i64 2607}
!2608 = metadata !{i64 2608}
!2609 = metadata !{i64 2609}
!2610 = metadata !{i64 2610}
!2611 = metadata !{i64 2611}
!2612 = metadata !{i64 2612}
!2613 = metadata !{i64 2613}
!2614 = metadata !{i64 2614}
!2615 = metadata !{i64 2615}
!2616 = metadata !{i64 2616}
!2617 = metadata !{i64 2617}
!2618 = metadata !{i64 2618}
!2619 = metadata !{i64 2619}
!2620 = metadata !{i64 2620}
!2621 = metadata !{i64 2621}
!2622 = metadata !{i64 2622}
!2623 = metadata !{i64 2623}
!2624 = metadata !{i64 2624}
!2625 = metadata !{i64 2625}
!2626 = metadata !{i64 2626}
!2627 = metadata !{i64 2627}
!2628 = metadata !{i64 2628}
!2629 = metadata !{i64 2629}
!2630 = metadata !{i64 2630}
!2631 = metadata !{i64 2631}
!2632 = metadata !{i64 2632}
!2633 = metadata !{i64 2633}
!2634 = metadata !{i64 2634}
!2635 = metadata !{i64 2635}
!2636 = metadata !{i64 2636}
!2637 = metadata !{i64 2637}
!2638 = metadata !{i64 2638}
!2639 = metadata !{i64 2639}
!2640 = metadata !{i64 2640}
!2641 = metadata !{i64 2641}
!2642 = metadata !{i64 2642}
!2643 = metadata !{i64 2643}
!2644 = metadata !{i64 2644}
!2645 = metadata !{i64 2645}
!2646 = metadata !{i64 2646}
!2647 = metadata !{i64 2647}
!2648 = metadata !{i64 2648}
!2649 = metadata !{i64 2649}
!2650 = metadata !{i64 2650}
!2651 = metadata !{i64 2651}
!2652 = metadata !{i64 2652}
!2653 = metadata !{i64 2653}
!2654 = metadata !{i64 2654}
!2655 = metadata !{i64 2655}
!2656 = metadata !{i64 2656}
!2657 = metadata !{i64 2657}
!2658 = metadata !{i64 2658}
!2659 = metadata !{i64 2659}
!2660 = metadata !{i64 2660}
!2661 = metadata !{i64 2661}
!2662 = metadata !{i64 2662}
!2663 = metadata !{i64 2663}
!2664 = metadata !{i64 2664}
!2665 = metadata !{i64 2665}
!2666 = metadata !{i64 2666}
!2667 = metadata !{i64 2667}
!2668 = metadata !{i64 2668}
!2669 = metadata !{i64 2669}
!2670 = metadata !{i64 2670}
!2671 = metadata !{i64 2671}
!2672 = metadata !{i64 2672}
!2673 = metadata !{i64 2673}
!2674 = metadata !{i64 2674}
!2675 = metadata !{i64 2675}
!2676 = metadata !{i64 2676}
!2677 = metadata !{i64 2677}
!2678 = metadata !{i64 2678}
!2679 = metadata !{i64 2679}
!2680 = metadata !{i64 2680}
!2681 = metadata !{i64 2681}
!2682 = metadata !{i64 2682}
!2683 = metadata !{i64 2683}
!2684 = metadata !{i64 2684}
!2685 = metadata !{i64 2685}
!2686 = metadata !{i64 2686}
!2687 = metadata !{i64 2687}
!2688 = metadata !{i64 2688}
!2689 = metadata !{i64 2689}
!2690 = metadata !{i64 2690}
!2691 = metadata !{i64 2691}
!2692 = metadata !{i64 2692}
!2693 = metadata !{i64 2693}
!2694 = metadata !{i64 2694}
!2695 = metadata !{i64 2695}
!2696 = metadata !{i64 2696}
!2697 = metadata !{i64 2697}
!2698 = metadata !{i64 2698}
!2699 = metadata !{i64 2699}
!2700 = metadata !{i64 2700}
!2701 = metadata !{i64 2701}
!2702 = metadata !{i64 2702}
!2703 = metadata !{i64 2703}
!2704 = metadata !{i64 2704}
!2705 = metadata !{i64 2705}
!2706 = metadata !{i64 2706}
!2707 = metadata !{i64 2707}
!2708 = metadata !{i64 2708}
!2709 = metadata !{i64 2709}
!2710 = metadata !{i64 2710}
!2711 = metadata !{i64 2711}
!2712 = metadata !{i64 2712}
!2713 = metadata !{i64 2713}
!2714 = metadata !{i64 2714}
!2715 = metadata !{i64 2715}
!2716 = metadata !{i64 2716}
!2717 = metadata !{i64 2717}
!2718 = metadata !{i64 2718}
!2719 = metadata !{i64 2719}
!2720 = metadata !{i64 2720}
!2721 = metadata !{i64 2721}
!2722 = metadata !{i64 2722}
!2723 = metadata !{i64 2723}
!2724 = metadata !{i64 2724}
!2725 = metadata !{i64 2725}
!2726 = metadata !{i64 2726}
!2727 = metadata !{i64 2727}
!2728 = metadata !{i64 2728}
!2729 = metadata !{i64 2729}
!2730 = metadata !{i64 2730}
!2731 = metadata !{i64 2731}
!2732 = metadata !{i64 2732}
!2733 = metadata !{i64 2733}
!2734 = metadata !{i64 2734}
!2735 = metadata !{i64 2735}
!2736 = metadata !{i64 2736}
!2737 = metadata !{i64 2737}
!2738 = metadata !{i64 2738}
!2739 = metadata !{i64 2739}
!2740 = metadata !{i64 2740}
!2741 = metadata !{i64 2741}
!2742 = metadata !{i64 2742}
!2743 = metadata !{i64 2743}
!2744 = metadata !{i64 2744}
!2745 = metadata !{i64 2745}
!2746 = metadata !{i64 2746}
!2747 = metadata !{i64 2747}
!2748 = metadata !{i64 2748}
!2749 = metadata !{i64 2749}
!2750 = metadata !{i64 2750}
!2751 = metadata !{i64 2751}
!2752 = metadata !{i64 2752}
!2753 = metadata !{i64 2753}
!2754 = metadata !{i64 2754}
!2755 = metadata !{i64 2755}
!2756 = metadata !{i64 2756}
!2757 = metadata !{i64 2757}
!2758 = metadata !{i64 2758}
!2759 = metadata !{i64 2759}
!2760 = metadata !{i64 2760}
!2761 = metadata !{i64 2761}
!2762 = metadata !{i64 2762}
!2763 = metadata !{i64 2763}
!2764 = metadata !{i64 2764}
!2765 = metadata !{i64 2765}
!2766 = metadata !{i64 2766}
!2767 = metadata !{i64 2767}
!2768 = metadata !{i64 2768}
!2769 = metadata !{i64 2769}
!2770 = metadata !{i64 2770}
!2771 = metadata !{i64 2771}
!2772 = metadata !{i64 2772}
!2773 = metadata !{i64 2773}
!2774 = metadata !{i64 2774}
!2775 = metadata !{i64 2775}
!2776 = metadata !{i64 2776}
!2777 = metadata !{i64 2777}
!2778 = metadata !{i64 2778}
!2779 = metadata !{i64 2779}
!2780 = metadata !{i64 2780}
!2781 = metadata !{i64 2781}
!2782 = metadata !{i64 2782}
!2783 = metadata !{i64 2783}
!2784 = metadata !{i64 2784}
!2785 = metadata !{i64 2785}
!2786 = metadata !{i64 2786}
!2787 = metadata !{i64 2787}
!2788 = metadata !{i64 2788}
!2789 = metadata !{i64 2789}
!2790 = metadata !{i64 2790}
!2791 = metadata !{i64 2791}
!2792 = metadata !{i64 2792}
!2793 = metadata !{i64 2793}
!2794 = metadata !{i64 2794}
!2795 = metadata !{i64 2795}
!2796 = metadata !{i64 2796}
!2797 = metadata !{i64 2797}
!2798 = metadata !{i64 2798}
!2799 = metadata !{i64 2799}
!2800 = metadata !{i64 2800}
!2801 = metadata !{i64 2801}
!2802 = metadata !{i64 2802}
!2803 = metadata !{i64 2803}
!2804 = metadata !{i64 2804}
!2805 = metadata !{i64 2805}
!2806 = metadata !{i64 2806}
!2807 = metadata !{i64 2807}
!2808 = metadata !{i64 2808}
!2809 = metadata !{i64 2809}
!2810 = metadata !{i64 2810}
!2811 = metadata !{i64 2811}
!2812 = metadata !{i64 2812}
!2813 = metadata !{i64 2813}
!2814 = metadata !{i64 2814}
!2815 = metadata !{i64 2815}
!2816 = metadata !{i64 2816}
!2817 = metadata !{i64 2817}
!2818 = metadata !{i64 2818}
!2819 = metadata !{i64 2819}
!2820 = metadata !{i64 2820}
!2821 = metadata !{i64 2821}
!2822 = metadata !{i64 2822}
!2823 = metadata !{i64 2823}
!2824 = metadata !{i64 2824}
!2825 = metadata !{i64 2825}
!2826 = metadata !{i64 2826}
!2827 = metadata !{i64 2827}
!2828 = metadata !{i64 2828}
!2829 = metadata !{i64 2829}
!2830 = metadata !{i64 2830}
!2831 = metadata !{i64 2831}
!2832 = metadata !{i64 2832}
!2833 = metadata !{i64 2833}
!2834 = metadata !{i64 2834}
!2835 = metadata !{i64 2835}
!2836 = metadata !{i64 2836}
!2837 = metadata !{i64 2837}
!2838 = metadata !{i64 2838}
!2839 = metadata !{i64 2839}
!2840 = metadata !{i64 2840}
!2841 = metadata !{i64 2841}
!2842 = metadata !{i64 2842}
!2843 = metadata !{i64 2843}
!2844 = metadata !{i64 2844}
!2845 = metadata !{i64 2845}
!2846 = metadata !{i64 2846}
!2847 = metadata !{i64 2847}
!2848 = metadata !{i64 2848}
!2849 = metadata !{i64 2849}
!2850 = metadata !{i64 2850}
!2851 = metadata !{i64 2851}
!2852 = metadata !{i64 2852}
!2853 = metadata !{i64 2853}
!2854 = metadata !{i64 2854}
!2855 = metadata !{i64 2855}
!2856 = metadata !{i64 2856}
!2857 = metadata !{i64 2857}
!2858 = metadata !{i64 2858}
!2859 = metadata !{i64 2859}
!2860 = metadata !{i64 2860}
!2861 = metadata !{i64 2861}
!2862 = metadata !{i64 2862}
!2863 = metadata !{i64 2863}
!2864 = metadata !{i64 2864}
!2865 = metadata !{i64 2865}
!2866 = metadata !{i64 2866}
!2867 = metadata !{i64 2867}
!2868 = metadata !{i64 2868}
!2869 = metadata !{i64 2869}
!2870 = metadata !{i64 2870}
!2871 = metadata !{i64 2871}
!2872 = metadata !{i64 2872}
!2873 = metadata !{i64 2873}
!2874 = metadata !{i64 2874}
!2875 = metadata !{i64 2875}
!2876 = metadata !{i64 2876}
!2877 = metadata !{i64 2877}
!2878 = metadata !{i64 2878}
!2879 = metadata !{i64 2879}
!2880 = metadata !{i64 2880}
!2881 = metadata !{i64 2881}
!2882 = metadata !{i64 2882}
!2883 = metadata !{i64 2883}
!2884 = metadata !{i64 2884}
!2885 = metadata !{i64 2885}
!2886 = metadata !{i64 2886}
!2887 = metadata !{i64 2887}
!2888 = metadata !{i64 2888}
!2889 = metadata !{i64 2889}
!2890 = metadata !{i64 2890}
!2891 = metadata !{i64 2891}
!2892 = metadata !{i64 2892}
!2893 = metadata !{i64 2893}
!2894 = metadata !{i64 2894}
!2895 = metadata !{i64 2895}
!2896 = metadata !{i64 2896}
!2897 = metadata !{i64 2897}
!2898 = metadata !{i64 2898}
!2899 = metadata !{i64 2899}
!2900 = metadata !{i64 2900}
!2901 = metadata !{i64 2901}
!2902 = metadata !{i64 2902}
!2903 = metadata !{i64 2903}
!2904 = metadata !{i64 2904}
!2905 = metadata !{i64 2905}
!2906 = metadata !{i64 2906}
!2907 = metadata !{i64 2907}
!2908 = metadata !{i64 2908}
!2909 = metadata !{i64 2909}
!2910 = metadata !{i64 2910}
!2911 = metadata !{i64 2911}
!2912 = metadata !{i64 2912}
!2913 = metadata !{i64 2913}
!2914 = metadata !{i64 2914}
!2915 = metadata !{i64 2915}
!2916 = metadata !{i64 2916}
!2917 = metadata !{i64 2917}
!2918 = metadata !{i64 2918}
!2919 = metadata !{i64 2919}
!2920 = metadata !{i64 2920}
!2921 = metadata !{i64 2921}
!2922 = metadata !{i64 2922}
!2923 = metadata !{i64 2923}
!2924 = metadata !{i64 2924}
!2925 = metadata !{i64 2925}
!2926 = metadata !{i64 2926}
!2927 = metadata !{i64 2927}
!2928 = metadata !{i64 2928}
!2929 = metadata !{i64 2929}
!2930 = metadata !{i64 2930}
!2931 = metadata !{i64 2931}
!2932 = metadata !{i64 2932}
!2933 = metadata !{i64 2933}
!2934 = metadata !{i64 2934}
!2935 = metadata !{i64 2935}
!2936 = metadata !{i64 2936}
!2937 = metadata !{i64 2937}
!2938 = metadata !{i64 2938}
!2939 = metadata !{i64 2939}
!2940 = metadata !{i64 2940}
!2941 = metadata !{i64 2941}
!2942 = metadata !{i64 2942}
!2943 = metadata !{i64 2943}
!2944 = metadata !{i64 2944}
!2945 = metadata !{i64 2945}
!2946 = metadata !{i64 2946}
!2947 = metadata !{i64 2947}
!2948 = metadata !{i64 2948}
!2949 = metadata !{i64 2949}
!2950 = metadata !{i64 2950}
!2951 = metadata !{i64 2951}
!2952 = metadata !{i64 2952}
!2953 = metadata !{i64 2953}
!2954 = metadata !{i64 2954}
!2955 = metadata !{i64 2955}
!2956 = metadata !{i64 2956}
!2957 = metadata !{i64 2957}
!2958 = metadata !{i64 2958}
!2959 = metadata !{i64 2959}
!2960 = metadata !{i64 2960}
!2961 = metadata !{i64 2961}
!2962 = metadata !{i64 2962}
!2963 = metadata !{i64 2963}
!2964 = metadata !{i64 2964}
!2965 = metadata !{i64 2965}
!2966 = metadata !{i64 2966}
!2967 = metadata !{i64 2967}
!2968 = metadata !{i64 2968}
!2969 = metadata !{i64 2969}
!2970 = metadata !{i64 2970}
!2971 = metadata !{i64 2971}
!2972 = metadata !{i64 2972}
!2973 = metadata !{i64 2973}
!2974 = metadata !{i64 2974}
!2975 = metadata !{i64 2975}
!2976 = metadata !{i64 2976}
!2977 = metadata !{i64 2977}
!2978 = metadata !{i64 2978}
!2979 = metadata !{i64 2979}
!2980 = metadata !{i64 2980}
!2981 = metadata !{i64 2981}
!2982 = metadata !{i64 2982}
!2983 = metadata !{i64 2983}
!2984 = metadata !{i64 2984}
!2985 = metadata !{i64 2985}
!2986 = metadata !{i64 2986}
!2987 = metadata !{i64 2987}
!2988 = metadata !{i64 2988}
!2989 = metadata !{i64 2989}
!2990 = metadata !{i64 2990}
!2991 = metadata !{i64 2991}
!2992 = metadata !{i64 2992}
!2993 = metadata !{i64 2993}
!2994 = metadata !{i64 2994}
!2995 = metadata !{i64 2995}
!2996 = metadata !{i64 2996}
!2997 = metadata !{i64 2997}
!2998 = metadata !{i64 2998}
!2999 = metadata !{i64 2999}
!3000 = metadata !{i64 3000}
!3001 = metadata !{i64 3001}
!3002 = metadata !{i64 3002}
!3003 = metadata !{i64 3003}
!3004 = metadata !{i64 3004}
!3005 = metadata !{i64 3005}
!3006 = metadata !{i64 3006}
!3007 = metadata !{i64 3007}
!3008 = metadata !{i64 3008}
!3009 = metadata !{i64 3009}
!3010 = metadata !{i64 3010}
!3011 = metadata !{i64 3011}
!3012 = metadata !{i64 3012}
!3013 = metadata !{i64 3013}
!3014 = metadata !{i64 3014}
!3015 = metadata !{i64 3015}
!3016 = metadata !{i64 3016}
!3017 = metadata !{i64 3017}
!3018 = metadata !{i64 3018}
!3019 = metadata !{i64 3019}
!3020 = metadata !{i64 3020}
!3021 = metadata !{i64 3021}
!3022 = metadata !{i64 3022}
!3023 = metadata !{i64 3023}
!3024 = metadata !{i64 3024}
!3025 = metadata !{i64 3025}
!3026 = metadata !{i64 3026}
!3027 = metadata !{i64 3027}
!3028 = metadata !{i64 3028}
!3029 = metadata !{i64 3029}
!3030 = metadata !{i64 3030}
!3031 = metadata !{i64 3031}
!3032 = metadata !{i64 3032}
!3033 = metadata !{i64 3033}
!3034 = metadata !{i64 3034}
!3035 = metadata !{i64 3035}
!3036 = metadata !{i64 3036}
!3037 = metadata !{i64 3037}
!3038 = metadata !{i64 3038}
!3039 = metadata !{i64 3039}
!3040 = metadata !{i64 3040}
!3041 = metadata !{i64 3041}
!3042 = metadata !{i64 3042}
!3043 = metadata !{i64 3043}
!3044 = metadata !{i64 3044}
!3045 = metadata !{i64 3045}
!3046 = metadata !{i64 3046}
!3047 = metadata !{i64 3047}
!3048 = metadata !{i64 3048}
!3049 = metadata !{i64 3049}
!3050 = metadata !{i64 3050}
!3051 = metadata !{i64 3051}
!3052 = metadata !{i64 3052}
!3053 = metadata !{i64 3053}
!3054 = metadata !{i64 3054}
!3055 = metadata !{i64 3055}
!3056 = metadata !{i64 3056}
!3057 = metadata !{i64 3057}
!3058 = metadata !{i64 3058}
!3059 = metadata !{i64 3059}
!3060 = metadata !{i64 3060}
!3061 = metadata !{i64 3061}
!3062 = metadata !{i64 3062}
!3063 = metadata !{i64 3063}
!3064 = metadata !{i64 3064}
!3065 = metadata !{i64 3065}
!3066 = metadata !{i64 3066}
!3067 = metadata !{i64 3067}
!3068 = metadata !{i64 3068}
!3069 = metadata !{i64 3069}
!3070 = metadata !{i64 3070}
!3071 = metadata !{i64 3071}
!3072 = metadata !{i64 3072}
!3073 = metadata !{i64 3073}
!3074 = metadata !{i64 3074}
!3075 = metadata !{i64 3075}
!3076 = metadata !{i64 3076}
!3077 = metadata !{i64 3077}
!3078 = metadata !{i64 3078}
!3079 = metadata !{i64 3079}
!3080 = metadata !{i64 3080}
!3081 = metadata !{i64 3081}
!3082 = metadata !{i64 3082}
!3083 = metadata !{i64 3083}
!3084 = metadata !{i64 3084}
!3085 = metadata !{i64 3085}
!3086 = metadata !{i64 3086}
!3087 = metadata !{i64 3087}
!3088 = metadata !{i64 3088}
!3089 = metadata !{i64 3089}
!3090 = metadata !{i64 3090}
!3091 = metadata !{i64 3091}
!3092 = metadata !{i64 3092}
!3093 = metadata !{i64 3093}
!3094 = metadata !{i64 3094}
!3095 = metadata !{i64 3095}
!3096 = metadata !{i64 3096}
!3097 = metadata !{i64 3097}
!3098 = metadata !{i64 3098}
!3099 = metadata !{i64 3099}
!3100 = metadata !{i64 3100}
!3101 = metadata !{i64 3101}
!3102 = metadata !{i64 3102}
!3103 = metadata !{i64 3103}
!3104 = metadata !{i64 3104}
!3105 = metadata !{i64 3105}
!3106 = metadata !{i64 3106}
!3107 = metadata !{i64 3107}
!3108 = metadata !{i64 3108}
!3109 = metadata !{i64 3109}
!3110 = metadata !{i64 3110}
!3111 = metadata !{i64 3111}
!3112 = metadata !{i64 3112}
!3113 = metadata !{i64 3113}
!3114 = metadata !{i64 3114}
!3115 = metadata !{i64 3115}
!3116 = metadata !{i64 3116}
!3117 = metadata !{i64 3117}
!3118 = metadata !{i64 3118}
!3119 = metadata !{i64 3119}
!3120 = metadata !{i64 3120}
!3121 = metadata !{i64 3121}
!3122 = metadata !{i64 3122}
!3123 = metadata !{i64 3123}
!3124 = metadata !{i64 3124}
!3125 = metadata !{i64 3125}
!3126 = metadata !{i64 3126}
!3127 = metadata !{i64 3127}
!3128 = metadata !{i64 3128}
!3129 = metadata !{i64 3129}
!3130 = metadata !{i64 3130}
!3131 = metadata !{i64 3131}
!3132 = metadata !{i64 3132}
!3133 = metadata !{i64 3133}
!3134 = metadata !{i64 3134}
!3135 = metadata !{i64 3135}
!3136 = metadata !{i64 3136}
!3137 = metadata !{i64 3137}
!3138 = metadata !{i64 3138}
!3139 = metadata !{i64 3139}
!3140 = metadata !{i64 3140}
!3141 = metadata !{i64 3141}
!3142 = metadata !{i64 3142}
!3143 = metadata !{i64 3143}
!3144 = metadata !{i64 3144}
!3145 = metadata !{i64 3145}
!3146 = metadata !{i64 3146}
!3147 = metadata !{i64 3147}
!3148 = metadata !{i64 3148}
!3149 = metadata !{i64 3149}
!3150 = metadata !{i64 3150}
!3151 = metadata !{i64 3151}
!3152 = metadata !{i64 3152}
!3153 = metadata !{i64 3153}
!3154 = metadata !{i64 3154}
!3155 = metadata !{i64 3155}
!3156 = metadata !{i64 3156}
!3157 = metadata !{i64 3157}
!3158 = metadata !{i64 3158}
!3159 = metadata !{i64 3159}
!3160 = metadata !{i64 3160}
!3161 = metadata !{i64 3161}
!3162 = metadata !{i64 3162}
!3163 = metadata !{i64 3163}
!3164 = metadata !{i64 3164}
!3165 = metadata !{i64 3165}
!3166 = metadata !{i64 3166}
!3167 = metadata !{i64 3167}
!3168 = metadata !{i64 3168}
!3169 = metadata !{i64 3169}
!3170 = metadata !{i64 3170}
!3171 = metadata !{i64 3171}
!3172 = metadata !{i64 3172}
!3173 = metadata !{i64 3173}
!3174 = metadata !{i64 3174}
!3175 = metadata !{i64 3175}
!3176 = metadata !{i64 3176}
!3177 = metadata !{i64 3177}
!3178 = metadata !{i64 3178}
!3179 = metadata !{i64 3179}
!3180 = metadata !{i64 3180}
!3181 = metadata !{i64 3181}
!3182 = metadata !{i64 3182}
!3183 = metadata !{i64 3183}
!3184 = metadata !{i64 3184}
!3185 = metadata !{i64 3185}
!3186 = metadata !{i64 3186}
!3187 = metadata !{i64 3187}
!3188 = metadata !{i64 3188}
!3189 = metadata !{i64 3189}
!3190 = metadata !{i64 3190}
!3191 = metadata !{i64 3191}
!3192 = metadata !{i64 3192}
!3193 = metadata !{i64 3193}
!3194 = metadata !{i64 3194}
!3195 = metadata !{i64 3195}
!3196 = metadata !{i64 3196}
!3197 = metadata !{i64 3197}
!3198 = metadata !{i64 3198}
!3199 = metadata !{i64 3199}
!3200 = metadata !{i64 3200}
!3201 = metadata !{i64 3201}
!3202 = metadata !{i64 3202}
!3203 = metadata !{i64 3203}
!3204 = metadata !{i64 3204}
!3205 = metadata !{i64 3205}
!3206 = metadata !{i64 3206}
!3207 = metadata !{i64 3207}
!3208 = metadata !{i64 3208}
!3209 = metadata !{i64 3209}
!3210 = metadata !{i64 3210}
!3211 = metadata !{i64 3211}
!3212 = metadata !{i64 3212}
!3213 = metadata !{i64 3213}
!3214 = metadata !{i64 3214}
!3215 = metadata !{i64 3215}
!3216 = metadata !{i64 3216}
!3217 = metadata !{i64 3217}
!3218 = metadata !{i64 3218}
!3219 = metadata !{i64 3219}
!3220 = metadata !{i64 3220}
!3221 = metadata !{i64 3221}
!3222 = metadata !{i64 3222}
!3223 = metadata !{i64 3223}
!3224 = metadata !{i64 3224}
!3225 = metadata !{i64 3225}
!3226 = metadata !{i64 3226}
!3227 = metadata !{i64 3227}
!3228 = metadata !{i64 3228}
!3229 = metadata !{i64 3229}
!3230 = metadata !{i64 3230}
!3231 = metadata !{i64 3231}
!3232 = metadata !{i64 3232}
!3233 = metadata !{i64 3233}
!3234 = metadata !{i64 3234}
!3235 = metadata !{i64 3235}
!3236 = metadata !{i64 3236}
!3237 = metadata !{i64 3237}
!3238 = metadata !{i64 3238}
!3239 = metadata !{i64 3239}
!3240 = metadata !{i64 3240}
!3241 = metadata !{i64 3241}
!3242 = metadata !{i64 3242}
!3243 = metadata !{i64 3243}
!3244 = metadata !{i64 3244}
!3245 = metadata !{i64 3245}
!3246 = metadata !{i64 3246}
!3247 = metadata !{i64 3247}
!3248 = metadata !{i64 3248}
!3249 = metadata !{i64 3249}
!3250 = metadata !{i64 3250}
!3251 = metadata !{i64 3251}
!3252 = metadata !{i64 3252}
!3253 = metadata !{i64 3253}
!3254 = metadata !{i64 3254}
!3255 = metadata !{i64 3255}
!3256 = metadata !{i64 3256}
!3257 = metadata !{i64 3257}
!3258 = metadata !{i64 3258}
!3259 = metadata !{i64 3259}
!3260 = metadata !{i64 3260}
!3261 = metadata !{i64 3261}
!3262 = metadata !{i64 3262}
!3263 = metadata !{i64 3263}
!3264 = metadata !{i64 3264}
!3265 = metadata !{i64 3265}
!3266 = metadata !{i64 3266}
!3267 = metadata !{i64 3267}
!3268 = metadata !{i64 3268}
!3269 = metadata !{i64 3269}
!3270 = metadata !{i64 3270}
!3271 = metadata !{i64 3271}
!3272 = metadata !{i64 3272}
!3273 = metadata !{i64 3273}
!3274 = metadata !{i64 3274}
!3275 = metadata !{i64 3275}
!3276 = metadata !{i64 3276}
!3277 = metadata !{i64 3277}
!3278 = metadata !{i64 3278}
!3279 = metadata !{i64 3279}
!3280 = metadata !{i64 3280}
!3281 = metadata !{i64 3281}
!3282 = metadata !{i64 3282}
!3283 = metadata !{i64 3283}
!3284 = metadata !{i64 3284}
!3285 = metadata !{i64 3285}
!3286 = metadata !{i64 3286}
!3287 = metadata !{i64 3287}
!3288 = metadata !{i64 3288}
!3289 = metadata !{i64 3289}
!3290 = metadata !{i64 3290}
!3291 = metadata !{i64 3291}
!3292 = metadata !{i64 3292}
!3293 = metadata !{i64 3293}
!3294 = metadata !{i64 3294}
!3295 = metadata !{i64 3295}
!3296 = metadata !{i64 3296}
!3297 = metadata !{i64 3297}
!3298 = metadata !{i64 3298}
!3299 = metadata !{i64 3299}
!3300 = metadata !{i64 3300}
!3301 = metadata !{i64 3301}
!3302 = metadata !{i64 3302}
!3303 = metadata !{i64 3303}
!3304 = metadata !{i64 3304}
!3305 = metadata !{i64 3305}
!3306 = metadata !{i64 3306}
!3307 = metadata !{i64 3307}
!3308 = metadata !{i64 3308}
!3309 = metadata !{i64 3309}
!3310 = metadata !{i64 3310}
!3311 = metadata !{i64 3311}
!3312 = metadata !{i64 3312}
!3313 = metadata !{i64 3313}
!3314 = metadata !{i64 3314}
!3315 = metadata !{i64 3315}
!3316 = metadata !{i64 3316}
!3317 = metadata !{i64 3317}
!3318 = metadata !{i64 3318}
!3319 = metadata !{i64 3319}
!3320 = metadata !{i64 3320}
!3321 = metadata !{i64 3321}
!3322 = metadata !{i64 3322}
!3323 = metadata !{i64 3323}
!3324 = metadata !{i64 3324}
!3325 = metadata !{i64 3325}
!3326 = metadata !{i64 3326}
!3327 = metadata !{i64 3327}
!3328 = metadata !{i64 3328}
!3329 = metadata !{i64 3329}
!3330 = metadata !{i64 3330}
!3331 = metadata !{i64 3331}
!3332 = metadata !{i64 3332}
!3333 = metadata !{i64 3333}
!3334 = metadata !{i64 3334}
!3335 = metadata !{i64 3335}
!3336 = metadata !{i64 3336}
!3337 = metadata !{i64 3337}
!3338 = metadata !{i64 3338}
!3339 = metadata !{i64 3339}
!3340 = metadata !{i64 3340}
!3341 = metadata !{i64 3341}
!3342 = metadata !{i64 3342}
!3343 = metadata !{i64 3343}
!3344 = metadata !{i64 3344}
!3345 = metadata !{i64 3345}
!3346 = metadata !{i64 3346}
!3347 = metadata !{i64 3347}
!3348 = metadata !{i64 3348}
!3349 = metadata !{i64 3349}
!3350 = metadata !{i64 3350}
!3351 = metadata !{i64 3351}
!3352 = metadata !{i64 3352}
!3353 = metadata !{i64 3353}
!3354 = metadata !{i64 3354}
!3355 = metadata !{i64 3355}
!3356 = metadata !{i64 3356}
!3357 = metadata !{i64 3357}
!3358 = metadata !{i64 3358}
!3359 = metadata !{i64 3359}
!3360 = metadata !{i64 3360}
!3361 = metadata !{i64 3361}
!3362 = metadata !{i64 3362}
!3363 = metadata !{i64 3363}
!3364 = metadata !{i64 3364}
!3365 = metadata !{i64 3365}
!3366 = metadata !{i64 3366}
!3367 = metadata !{i64 3367}
!3368 = metadata !{i64 3368}
!3369 = metadata !{i64 3369}
!3370 = metadata !{i64 3370}
!3371 = metadata !{i64 3371}
!3372 = metadata !{i64 3372}
!3373 = metadata !{i64 3373}
!3374 = metadata !{i64 3374}
!3375 = metadata !{i64 3375}
!3376 = metadata !{i64 3376}
!3377 = metadata !{i64 3377}
!3378 = metadata !{i64 3378}
!3379 = metadata !{i64 3379}
!3380 = metadata !{i64 3380}
!3381 = metadata !{i64 3381}
!3382 = metadata !{i64 3382}
!3383 = metadata !{i64 3383}
!3384 = metadata !{i64 3384}
!3385 = metadata !{i64 3385}
!3386 = metadata !{i64 3386}
!3387 = metadata !{i64 3387}
!3388 = metadata !{i64 3388}
!3389 = metadata !{i64 3389}
!3390 = metadata !{i64 3390}
!3391 = metadata !{i64 3391}
!3392 = metadata !{i64 3392}
!3393 = metadata !{i64 3393}
!3394 = metadata !{i64 3394}
!3395 = metadata !{i64 3395}
!3396 = metadata !{i64 3396}
!3397 = metadata !{i64 3397}
!3398 = metadata !{i64 3398}
!3399 = metadata !{i64 3399}
!3400 = metadata !{i64 3400}
!3401 = metadata !{i64 3401}
!3402 = metadata !{i64 3402}
!3403 = metadata !{i64 3403}
!3404 = metadata !{i64 3404}
!3405 = metadata !{i64 3405}
!3406 = metadata !{i64 3406}
!3407 = metadata !{i64 3407}
!3408 = metadata !{i64 3408}
!3409 = metadata !{i64 3409}
!3410 = metadata !{i64 3410}
!3411 = metadata !{i64 3411}
!3412 = metadata !{i64 3412}
!3413 = metadata !{i64 3413}
!3414 = metadata !{i64 3414}
!3415 = metadata !{i64 3415}
!3416 = metadata !{i64 3416}
!3417 = metadata !{i64 3417}
!3418 = metadata !{i64 3418}
!3419 = metadata !{i64 3419}
!3420 = metadata !{i64 3420}
!3421 = metadata !{i64 3421}
!3422 = metadata !{i64 3422}
!3423 = metadata !{i64 3423}
!3424 = metadata !{i64 3424}
!3425 = metadata !{i64 3425}
!3426 = metadata !{i64 3426}
!3427 = metadata !{i64 3427}
!3428 = metadata !{i64 3428}
!3429 = metadata !{i64 3429}
!3430 = metadata !{i64 3430}
!3431 = metadata !{i64 3431}
!3432 = metadata !{i64 3432}
!3433 = metadata !{i64 3433}
!3434 = metadata !{i64 3434}
!3435 = metadata !{i64 3435}
!3436 = metadata !{i64 3436}
!3437 = metadata !{i64 3437}
!3438 = metadata !{i64 3438}
!3439 = metadata !{i64 3439}
!3440 = metadata !{i64 3440}
!3441 = metadata !{i64 3441}
!3442 = metadata !{i64 3442}
!3443 = metadata !{i64 3443}
!3444 = metadata !{i64 3444}
!3445 = metadata !{i64 3445}
!3446 = metadata !{i64 3446}
!3447 = metadata !{i64 3447}
!3448 = metadata !{i64 3448}
!3449 = metadata !{i64 3449}
!3450 = metadata !{i64 3450}
!3451 = metadata !{i64 3451}
!3452 = metadata !{i64 3452}
!3453 = metadata !{i64 3453}
!3454 = metadata !{i64 3454}
!3455 = metadata !{i64 3455}
!3456 = metadata !{i64 3456}
!3457 = metadata !{i64 3457}
!3458 = metadata !{i64 3458}
!3459 = metadata !{i64 3459}
!3460 = metadata !{i64 3460}
!3461 = metadata !{i64 3461}
!3462 = metadata !{i64 3462}
!3463 = metadata !{i64 3463}
!3464 = metadata !{i64 3464}
!3465 = metadata !{i64 3465}
!3466 = metadata !{i64 3466}
!3467 = metadata !{i64 3467}
!3468 = metadata !{i64 3468}
!3469 = metadata !{i64 3469}
!3470 = metadata !{i64 3470}
!3471 = metadata !{i64 3471}
!3472 = metadata !{i64 3472}
!3473 = metadata !{i64 3473}
!3474 = metadata !{i64 3474}
!3475 = metadata !{i64 3475}
!3476 = metadata !{i64 3476}
!3477 = metadata !{i64 3477}
!3478 = metadata !{i64 3478}
!3479 = metadata !{i64 3479}
!3480 = metadata !{i64 3480}
!3481 = metadata !{i64 3481}
!3482 = metadata !{i64 3482}
!3483 = metadata !{i64 3483}
!3484 = metadata !{i64 3484}
!3485 = metadata !{i64 3485}
!3486 = metadata !{i64 3486}
!3487 = metadata !{i64 3487}
!3488 = metadata !{i64 3488}
!3489 = metadata !{i64 3489}
!3490 = metadata !{i64 3490}
!3491 = metadata !{i64 3491}
!3492 = metadata !{i64 3492}
!3493 = metadata !{i64 3493}
!3494 = metadata !{i64 3494}
!3495 = metadata !{i64 3495}
!3496 = metadata !{i64 3496}
!3497 = metadata !{i64 3497}
!3498 = metadata !{i64 3498}
!3499 = metadata !{i64 3499}
!3500 = metadata !{i64 3500}
!3501 = metadata !{i64 3501}
!3502 = metadata !{i64 3502}
!3503 = metadata !{i64 3503}
!3504 = metadata !{i64 3504}
!3505 = metadata !{i64 3505}
!3506 = metadata !{i64 3506}
!3507 = metadata !{i64 3507}
!3508 = metadata !{i64 3508}
!3509 = metadata !{i64 3509}
!3510 = metadata !{i64 3510}
!3511 = metadata !{i64 3511}
!3512 = metadata !{i64 3512}
!3513 = metadata !{i64 3513}
!3514 = metadata !{i64 3514}
!3515 = metadata !{i64 3515}
!3516 = metadata !{i64 3516}
!3517 = metadata !{i64 3517}
!3518 = metadata !{i64 3518}
!3519 = metadata !{i64 3519}
!3520 = metadata !{i64 3520}
!3521 = metadata !{i64 3521}
!3522 = metadata !{i64 3522}
!3523 = metadata !{i64 3523}
!3524 = metadata !{i64 3524}
!3525 = metadata !{i64 3525}
!3526 = metadata !{i64 3526}
!3527 = metadata !{i64 3527}
!3528 = metadata !{i64 3528}
!3529 = metadata !{i64 3529}
!3530 = metadata !{i64 3530}
!3531 = metadata !{i64 3531}
!3532 = metadata !{i64 3532}
!3533 = metadata !{i64 3533}
!3534 = metadata !{i64 3534}
!3535 = metadata !{i64 3535}
!3536 = metadata !{i64 3536}
!3537 = metadata !{i64 3537}
!3538 = metadata !{i64 3538}
!3539 = metadata !{i64 3539}
!3540 = metadata !{i64 3540}
!3541 = metadata !{i64 3541}
!3542 = metadata !{i64 3542}
!3543 = metadata !{i64 3543}
!3544 = metadata !{i64 3544}
!3545 = metadata !{i64 3545}
!3546 = metadata !{i64 3546}
!3547 = metadata !{i64 3547}
!3548 = metadata !{i64 3548}
!3549 = metadata !{i64 3549}
!3550 = metadata !{i64 3550}
!3551 = metadata !{i64 3551}
!3552 = metadata !{i64 3552}
!3553 = metadata !{i64 3553}
!3554 = metadata !{i64 3554}
!3555 = metadata !{i64 3555}
!3556 = metadata !{i64 3556}
!3557 = metadata !{i64 3557}
!3558 = metadata !{i64 3558}
!3559 = metadata !{i64 3559}
!3560 = metadata !{i64 3560}
!3561 = metadata !{i64 3561}
!3562 = metadata !{i64 3562}
!3563 = metadata !{i64 3563}
!3564 = metadata !{i64 3564}
!3565 = metadata !{i64 3565}
!3566 = metadata !{i64 3566}
!3567 = metadata !{i64 3567}
!3568 = metadata !{i64 3568}
!3569 = metadata !{i64 3569}
!3570 = metadata !{i64 3570}
!3571 = metadata !{i64 3571}
!3572 = metadata !{i64 3572}
!3573 = metadata !{i64 3573}
!3574 = metadata !{i64 3574}
!3575 = metadata !{i64 3575}
!3576 = metadata !{i64 3576}
!3577 = metadata !{i64 3577}
!3578 = metadata !{i64 3578}
!3579 = metadata !{i64 3579}
!3580 = metadata !{i64 3580}
!3581 = metadata !{i64 3581}
!3582 = metadata !{i64 3582}
!3583 = metadata !{i64 3583}
!3584 = metadata !{i64 3584}
!3585 = metadata !{i64 3585}
!3586 = metadata !{i64 3586}
!3587 = metadata !{i64 3587}
!3588 = metadata !{i64 3588}
!3589 = metadata !{i64 3589}
!3590 = metadata !{i64 3590}
!3591 = metadata !{i64 3591}
!3592 = metadata !{i64 3592}
!3593 = metadata !{i64 3593}
!3594 = metadata !{i64 3594}
!3595 = metadata !{i64 3595}
!3596 = metadata !{i64 3596}
!3597 = metadata !{i64 3597}
!3598 = metadata !{i64 3598}
!3599 = metadata !{i64 3599}
!3600 = metadata !{i64 3600}
!3601 = metadata !{i64 3601}
!3602 = metadata !{i64 3602}
!3603 = metadata !{i64 3603}
!3604 = metadata !{i64 3604}
!3605 = metadata !{i64 3605}
!3606 = metadata !{i64 3606}
!3607 = metadata !{i64 3607}
!3608 = metadata !{i64 3608}
!3609 = metadata !{i64 3609}
!3610 = metadata !{i64 3610}
!3611 = metadata !{i64 3611}
!3612 = metadata !{i64 3612}
!3613 = metadata !{i64 3613}
!3614 = metadata !{i64 3614}
!3615 = metadata !{i64 3615}
!3616 = metadata !{i64 3616}
!3617 = metadata !{i64 3617}
!3618 = metadata !{i64 3618}
!3619 = metadata !{i64 3619}
!3620 = metadata !{i64 3620}
!3621 = metadata !{i64 3621}
!3622 = metadata !{i64 3622}
!3623 = metadata !{i64 3623}
!3624 = metadata !{i64 3624}
!3625 = metadata !{i64 3625}
!3626 = metadata !{i64 3626}
!3627 = metadata !{i64 3627}
!3628 = metadata !{i64 3628}
!3629 = metadata !{i64 3629}
!3630 = metadata !{i64 3630}
!3631 = metadata !{i64 3631}
!3632 = metadata !{i64 3632}
!3633 = metadata !{i64 3633}
!3634 = metadata !{i64 3634}
!3635 = metadata !{i64 3635}
!3636 = metadata !{i64 3636}
!3637 = metadata !{i64 3637}
!3638 = metadata !{i64 3638}
!3639 = metadata !{i64 3639}
!3640 = metadata !{i64 3640}
!3641 = metadata !{i64 3641}
!3642 = metadata !{i64 3642}
!3643 = metadata !{i64 3643}
!3644 = metadata !{i64 3644}
!3645 = metadata !{i64 3645}
!3646 = metadata !{i64 3646}
!3647 = metadata !{i64 3647}
!3648 = metadata !{i64 3648}
!3649 = metadata !{i64 3649}
!3650 = metadata !{i64 3650}
!3651 = metadata !{i64 3651}
!3652 = metadata !{i64 3652}
!3653 = metadata !{i64 3653}
!3654 = metadata !{i64 3654}
!3655 = metadata !{i64 3655}
!3656 = metadata !{i64 3656}
!3657 = metadata !{i64 3657}
!3658 = metadata !{i64 3658}
!3659 = metadata !{i64 3659}
!3660 = metadata !{i64 3660}
!3661 = metadata !{i64 3661}
!3662 = metadata !{i64 3662}
!3663 = metadata !{i64 3663}
!3664 = metadata !{i64 3664}
!3665 = metadata !{i64 3665}
!3666 = metadata !{i64 3666}
!3667 = metadata !{i64 3667}
!3668 = metadata !{i64 3668}
!3669 = metadata !{i64 3669}
!3670 = metadata !{i64 3670}
!3671 = metadata !{i64 3671}
!3672 = metadata !{i64 3672}
!3673 = metadata !{i64 3673}
!3674 = metadata !{i64 3674}
!3675 = metadata !{i64 3675}
!3676 = metadata !{i64 3676}
!3677 = metadata !{i64 3677}
!3678 = metadata !{i64 3678}
!3679 = metadata !{i64 3679}
!3680 = metadata !{i64 3680}
!3681 = metadata !{i64 3681}
!3682 = metadata !{i64 3682}
!3683 = metadata !{i64 3683}
!3684 = metadata !{i64 3684}
!3685 = metadata !{i64 3685}
!3686 = metadata !{i64 3686}
!3687 = metadata !{i64 3687}
!3688 = metadata !{i64 3688}
!3689 = metadata !{i64 3689}
!3690 = metadata !{i64 3690}
!3691 = metadata !{i64 3691}
!3692 = metadata !{i64 3692}
!3693 = metadata !{i64 3693}
!3694 = metadata !{i64 3694}
!3695 = metadata !{i64 3695}
!3696 = metadata !{i64 3696}
!3697 = metadata !{i64 3697}
!3698 = metadata !{i64 3698}
!3699 = metadata !{i64 3699}
!3700 = metadata !{i64 3700}
!3701 = metadata !{i64 3701}
!3702 = metadata !{i64 3702}
!3703 = metadata !{i64 3703}
!3704 = metadata !{i64 3704}
!3705 = metadata !{i64 3705}
!3706 = metadata !{i64 3706}
!3707 = metadata !{i64 3707}
!3708 = metadata !{i64 3708}
!3709 = metadata !{i64 3709}
!3710 = metadata !{i64 3710}
!3711 = metadata !{i64 3711}
!3712 = metadata !{i64 3712}
!3713 = metadata !{i64 3713}
!3714 = metadata !{i64 3714}
!3715 = metadata !{i64 3715}
!3716 = metadata !{i64 3716}
!3717 = metadata !{i64 3717}
!3718 = metadata !{i64 3718}
!3719 = metadata !{i64 3719}
!3720 = metadata !{i64 3720}
!3721 = metadata !{i64 3721}
!3722 = metadata !{i64 3722}
!3723 = metadata !{i64 3723}
!3724 = metadata !{i64 3724}
!3725 = metadata !{i64 3725}
!3726 = metadata !{i64 3726}
!3727 = metadata !{i64 3727}
!3728 = metadata !{i64 3728}
!3729 = metadata !{i64 3729}
!3730 = metadata !{i64 3730}
!3731 = metadata !{i64 3731}
!3732 = metadata !{i64 3732}
!3733 = metadata !{i64 3733}
!3734 = metadata !{i64 3734}
!3735 = metadata !{i64 3735}
!3736 = metadata !{i64 3736}
!3737 = metadata !{i64 3737}
!3738 = metadata !{i64 3738}
!3739 = metadata !{i64 3739}
!3740 = metadata !{i64 3740}
!3741 = metadata !{i64 3741}
!3742 = metadata !{i64 3742}
!3743 = metadata !{i64 3743}
!3744 = metadata !{i64 3744}
!3745 = metadata !{i64 3745}
!3746 = metadata !{i64 3746}
!3747 = metadata !{i64 3747}
!3748 = metadata !{i64 3748}
!3749 = metadata !{i64 3749}
!3750 = metadata !{i64 3750}
!3751 = metadata !{i64 3751}
!3752 = metadata !{i64 3752}
!3753 = metadata !{i64 3753}
!3754 = metadata !{i64 3754}
!3755 = metadata !{i64 3755}
!3756 = metadata !{i64 3756}
!3757 = metadata !{i64 3757}
!3758 = metadata !{i64 3758}
!3759 = metadata !{i64 3759}
!3760 = metadata !{i64 3760}
!3761 = metadata !{i64 3761}
!3762 = metadata !{i64 3762}
!3763 = metadata !{i64 3763}
!3764 = metadata !{i64 3764}
!3765 = metadata !{i64 3765}
!3766 = metadata !{i64 3766}
!3767 = metadata !{i64 3767}
!3768 = metadata !{i64 3768}
!3769 = metadata !{i64 3769}
!3770 = metadata !{i64 3770}
!3771 = metadata !{i64 3771}
!3772 = metadata !{i64 3772}
!3773 = metadata !{i64 3773}
!3774 = metadata !{i64 3774}
!3775 = metadata !{i64 3775}
!3776 = metadata !{i64 3776}
!3777 = metadata !{i64 3777}
!3778 = metadata !{i64 3778}
!3779 = metadata !{i64 3779}
!3780 = metadata !{i64 3780}
!3781 = metadata !{i64 3781}
!3782 = metadata !{i64 3782}
!3783 = metadata !{i64 3783}
!3784 = metadata !{i64 3784}
!3785 = metadata !{i64 3785}
!3786 = metadata !{i64 3786}
!3787 = metadata !{i64 3787}
!3788 = metadata !{i64 3788}
!3789 = metadata !{i64 3789}
!3790 = metadata !{i64 3790}
!3791 = metadata !{i64 3791}
!3792 = metadata !{i64 3792}
!3793 = metadata !{i64 3793}
!3794 = metadata !{i64 3794}
!3795 = metadata !{i64 3795}
!3796 = metadata !{i64 3796}
!3797 = metadata !{i64 3797}
!3798 = metadata !{i64 3798}
!3799 = metadata !{i64 3799}
!3800 = metadata !{i64 3800}
!3801 = metadata !{i64 3801}
!3802 = metadata !{i64 3802}
!3803 = metadata !{i64 3803}
!3804 = metadata !{i64 3804}
!3805 = metadata !{i64 3805}
!3806 = metadata !{i64 3806}
!3807 = metadata !{i64 3807}
!3808 = metadata !{i64 3808}
!3809 = metadata !{i64 3809}
!3810 = metadata !{i64 3810}
!3811 = metadata !{i64 3811}
!3812 = metadata !{i64 3812}
!3813 = metadata !{i64 3813}
!3814 = metadata !{i64 3814}
!3815 = metadata !{i64 3815}
!3816 = metadata !{i64 3816}
!3817 = metadata !{i64 3817}
!3818 = metadata !{i64 3818}
!3819 = metadata !{i64 3819}
!3820 = metadata !{i64 3820}
!3821 = metadata !{i64 3821}
!3822 = metadata !{i64 3822}
!3823 = metadata !{i64 3823}
!3824 = metadata !{i64 3824}
!3825 = metadata !{i64 3825}
!3826 = metadata !{i64 3826}
!3827 = metadata !{i64 3827}
!3828 = metadata !{i64 3828}
!3829 = metadata !{i64 3829}
!3830 = metadata !{i64 3830}
!3831 = metadata !{i64 3831}
!3832 = metadata !{i64 3832}
!3833 = metadata !{i64 3833}
!3834 = metadata !{i64 3834}
!3835 = metadata !{i64 3835}
!3836 = metadata !{i64 3836}
!3837 = metadata !{i64 3837}
!3838 = metadata !{i64 3838}
!3839 = metadata !{i64 3839}
!3840 = metadata !{i64 3840}
!3841 = metadata !{i64 3841}
!3842 = metadata !{i64 3842}
!3843 = metadata !{i64 3843}
!3844 = metadata !{i64 3844}
!3845 = metadata !{i64 3845}
!3846 = metadata !{i64 3846}
!3847 = metadata !{i64 3847}
!3848 = metadata !{i64 3848}
!3849 = metadata !{i64 3849}
!3850 = metadata !{i64 3850}
!3851 = metadata !{i64 3851}
!3852 = metadata !{i64 3852}
!3853 = metadata !{i64 3853}
!3854 = metadata !{i64 3854}
!3855 = metadata !{i64 3855}
!3856 = metadata !{i64 3856}
!3857 = metadata !{i64 3857}
!3858 = metadata !{i64 3858}
!3859 = metadata !{i64 3859}
!3860 = metadata !{i64 3860}
!3861 = metadata !{i64 3861}
!3862 = metadata !{i64 3862}
!3863 = metadata !{i64 3863}
!3864 = metadata !{i64 3864}
!3865 = metadata !{i64 3865}
!3866 = metadata !{i64 3866}
!3867 = metadata !{i64 3867}
!3868 = metadata !{i64 3868}
!3869 = metadata !{i64 3869}
!3870 = metadata !{i64 3870}
!3871 = metadata !{i64 3871}
!3872 = metadata !{i64 3872}
!3873 = metadata !{i64 3873}
!3874 = metadata !{i64 3874}
!3875 = metadata !{i64 3875}
!3876 = metadata !{i64 3876}
!3877 = metadata !{i64 3877}
!3878 = metadata !{i64 3878}
!3879 = metadata !{i64 3879}
!3880 = metadata !{i64 3880}
!3881 = metadata !{i64 3881}
!3882 = metadata !{i64 3882}
!3883 = metadata !{i64 3883}
!3884 = metadata !{i64 3884}
!3885 = metadata !{i64 3885}
!3886 = metadata !{i64 3886}
!3887 = metadata !{i64 3887}
!3888 = metadata !{i64 3888}
!3889 = metadata !{i64 3889}
!3890 = metadata !{i64 3890}
!3891 = metadata !{i64 3891}
!3892 = metadata !{i64 3892}
!3893 = metadata !{i64 3893}
!3894 = metadata !{i64 3894}
!3895 = metadata !{i64 3895}
!3896 = metadata !{i64 3896}
!3897 = metadata !{i64 3897}
!3898 = metadata !{i64 3898}
!3899 = metadata !{i64 3899}
!3900 = metadata !{i64 3900}
!3901 = metadata !{i64 3901}
!3902 = metadata !{i64 3902}
!3903 = metadata !{i64 3903}
!3904 = metadata !{i64 3904}
!3905 = metadata !{i64 3905}
!3906 = metadata !{i64 3906}
!3907 = metadata !{i64 3907}
!3908 = metadata !{i64 3908}
!3909 = metadata !{i64 3909}
!3910 = metadata !{i64 3910}
!3911 = metadata !{i64 3911}
!3912 = metadata !{i64 3912}
!3913 = metadata !{i64 3913}
!3914 = metadata !{i64 3914}
!3915 = metadata !{i64 3915}
!3916 = metadata !{i64 3916}
!3917 = metadata !{i64 3917}
!3918 = metadata !{i64 3918}
!3919 = metadata !{i64 3919}
!3920 = metadata !{i64 3920}
!3921 = metadata !{i64 3921}
!3922 = metadata !{i64 3922}
!3923 = metadata !{i64 3923}
!3924 = metadata !{i64 3924}
!3925 = metadata !{i64 3925}
!3926 = metadata !{i64 3926}
!3927 = metadata !{i64 3927}
!3928 = metadata !{i64 3928}
!3929 = metadata !{i64 3929}
!3930 = metadata !{i64 3930}
!3931 = metadata !{i64 3931}
!3932 = metadata !{i64 3932}
!3933 = metadata !{i64 3933}
!3934 = metadata !{i64 3934}
!3935 = metadata !{i64 3935}
!3936 = metadata !{i64 3936}
!3937 = metadata !{i64 3937}
!3938 = metadata !{i64 3938}
!3939 = metadata !{i64 3939}
!3940 = metadata !{i64 3940}
!3941 = metadata !{i64 3941}
!3942 = metadata !{i64 3942}
!3943 = metadata !{i64 3943}
!3944 = metadata !{i64 3944}
!3945 = metadata !{i64 3945}
!3946 = metadata !{i64 3946}
!3947 = metadata !{i64 3947}
!3948 = metadata !{i64 3948}
!3949 = metadata !{i64 3949}
!3950 = metadata !{i64 3950}
!3951 = metadata !{i64 3951}
!3952 = metadata !{i64 3952}
!3953 = metadata !{i64 3953}
!3954 = metadata !{i64 3954}
!3955 = metadata !{i64 3955}
!3956 = metadata !{i64 3956}
!3957 = metadata !{i64 3957}
!3958 = metadata !{i64 3958}
!3959 = metadata !{i64 3959}
!3960 = metadata !{i64 3960}
!3961 = metadata !{i64 3961}
!3962 = metadata !{i64 3962}
!3963 = metadata !{i64 3963}
!3964 = metadata !{i64 3964}
!3965 = metadata !{i64 3965}
!3966 = metadata !{i64 3966}
!3967 = metadata !{i64 3967}
!3968 = metadata !{i64 3968}
!3969 = metadata !{i64 3969}
!3970 = metadata !{i64 3970}
!3971 = metadata !{i64 3971}
!3972 = metadata !{i64 3972}
!3973 = metadata !{i64 3973}
!3974 = metadata !{i64 3974}
!3975 = metadata !{i64 3975}
!3976 = metadata !{i64 3976}
!3977 = metadata !{i64 3977}
!3978 = metadata !{i64 3978}
!3979 = metadata !{i64 3979}
!3980 = metadata !{i64 3980}
!3981 = metadata !{i64 3981}
!3982 = metadata !{i64 3982}
!3983 = metadata !{i64 3983}
!3984 = metadata !{i64 3984}
!3985 = metadata !{i64 3985}
!3986 = metadata !{i64 3986}
!3987 = metadata !{i64 3987}
!3988 = metadata !{i64 3988}
!3989 = metadata !{i64 3989}
!3990 = metadata !{i64 3990}
!3991 = metadata !{i64 3991}
!3992 = metadata !{i64 3992}
!3993 = metadata !{i64 3993}
!3994 = metadata !{i64 3994}
!3995 = metadata !{i64 3995}
!3996 = metadata !{i64 3996}
!3997 = metadata !{i64 3997}
!3998 = metadata !{i64 3998}
!3999 = metadata !{i64 3999}
!4000 = metadata !{i64 4000}
!4001 = metadata !{i64 4001}
!4002 = metadata !{i64 4002}
!4003 = metadata !{i64 4003}
!4004 = metadata !{i64 4004}
!4005 = metadata !{i64 4005}
!4006 = metadata !{i64 4006}
!4007 = metadata !{i64 4007}
!4008 = metadata !{i64 4008}
!4009 = metadata !{i64 4009}
!4010 = metadata !{i64 4010}
!4011 = metadata !{i64 4011}
!4012 = metadata !{i64 4012}
!4013 = metadata !{i64 4013}
!4014 = metadata !{i64 4014}
!4015 = metadata !{i64 4015}
!4016 = metadata !{i64 4016}
!4017 = metadata !{i64 4017}
!4018 = metadata !{i64 4018}
!4019 = metadata !{i64 4019}
!4020 = metadata !{i64 4020}
!4021 = metadata !{i64 4021}
!4022 = metadata !{i64 4022}
!4023 = metadata !{i64 4023}
!4024 = metadata !{i64 4024}
!4025 = metadata !{i64 4025}
!4026 = metadata !{i64 4026}
!4027 = metadata !{i64 4027}
!4028 = metadata !{i64 4028}
!4029 = metadata !{i64 4029}
!4030 = metadata !{i64 4030}
!4031 = metadata !{i64 4031}
!4032 = metadata !{i64 4032}
!4033 = metadata !{i64 4033}
!4034 = metadata !{i64 4034}
!4035 = metadata !{i64 4035}
!4036 = metadata !{i64 4036}
!4037 = metadata !{i64 4037}
!4038 = metadata !{i64 4038}
!4039 = metadata !{i64 4039}
!4040 = metadata !{i64 4040}
!4041 = metadata !{i64 4041}
!4042 = metadata !{i64 4042}
!4043 = metadata !{i64 4043}
!4044 = metadata !{i64 4044}
!4045 = metadata !{i64 4045}
!4046 = metadata !{i64 4046}
!4047 = metadata !{i64 4047}
!4048 = metadata !{i64 4048}
!4049 = metadata !{i64 4049}
!4050 = metadata !{i64 4050}
!4051 = metadata !{i64 4051}
!4052 = metadata !{i64 4052}
!4053 = metadata !{i64 4053}
!4054 = metadata !{i64 4054}
!4055 = metadata !{i64 4055}
!4056 = metadata !{i64 4056}
!4057 = metadata !{i64 4057}
!4058 = metadata !{i64 4058}
!4059 = metadata !{i64 4059}
!4060 = metadata !{i64 4060}
!4061 = metadata !{i64 4061}
!4062 = metadata !{i64 4062}
!4063 = metadata !{i64 4063}
!4064 = metadata !{i64 4064}
!4065 = metadata !{i64 4065}
!4066 = metadata !{i64 4066}
!4067 = metadata !{i64 4067}
!4068 = metadata !{i64 4068}
!4069 = metadata !{i64 4069}
!4070 = metadata !{i64 4070}
!4071 = metadata !{i64 4071}
!4072 = metadata !{i64 4072}
!4073 = metadata !{i64 4073}
!4074 = metadata !{i64 4074}
!4075 = metadata !{i64 4075}
!4076 = metadata !{i64 4076}
!4077 = metadata !{i64 4077}
!4078 = metadata !{i64 4078}
!4079 = metadata !{i64 4079}
!4080 = metadata !{i64 4080}
!4081 = metadata !{i64 4081}
!4082 = metadata !{i64 4082}
!4083 = metadata !{i64 4083}
!4084 = metadata !{i64 4084}
!4085 = metadata !{i64 4085}
!4086 = metadata !{i64 4086}
!4087 = metadata !{i64 4087}
!4088 = metadata !{i64 4088}
!4089 = metadata !{i64 4089}
!4090 = metadata !{i64 4090}
!4091 = metadata !{i64 4091}
!4092 = metadata !{i64 4092}
!4093 = metadata !{i64 4093}
!4094 = metadata !{i64 4094}
!4095 = metadata !{i64 4095}
!4096 = metadata !{i64 4096}
!4097 = metadata !{i64 4097}
!4098 = metadata !{i64 4098}
!4099 = metadata !{i64 4099}
!4100 = metadata !{i64 4100}
!4101 = metadata !{i64 4101}
!4102 = metadata !{i64 4102}
!4103 = metadata !{i64 4103}
!4104 = metadata !{i64 4104}
!4105 = metadata !{i64 4105}
!4106 = metadata !{i64 4106}
!4107 = metadata !{i64 4107}
!4108 = metadata !{i64 4108}
!4109 = metadata !{i64 4109}
!4110 = metadata !{i64 4110}
!4111 = metadata !{i64 4111}
!4112 = metadata !{i64 4112}
!4113 = metadata !{i64 4113}
!4114 = metadata !{i64 4114}
!4115 = metadata !{i64 4115}
!4116 = metadata !{i64 4116}
!4117 = metadata !{i64 4117}
!4118 = metadata !{i64 4118}
!4119 = metadata !{i64 4119}
!4120 = metadata !{i64 4120}
!4121 = metadata !{i64 4121}
!4122 = metadata !{i64 4122}
!4123 = metadata !{i64 4123}
!4124 = metadata !{i64 4124}
!4125 = metadata !{i64 4125}
!4126 = metadata !{i64 4126}
!4127 = metadata !{i64 4127}
!4128 = metadata !{i64 4128}
!4129 = metadata !{i64 4129}
!4130 = metadata !{i64 4130}
!4131 = metadata !{i64 4131}
!4132 = metadata !{i64 4132}
!4133 = metadata !{i64 4133}
!4134 = metadata !{i64 4134}
!4135 = metadata !{i64 4135}
!4136 = metadata !{i64 4136}
!4137 = metadata !{i64 4137}
!4138 = metadata !{i64 4138}
!4139 = metadata !{i64 4139}
!4140 = metadata !{i64 4140}
!4141 = metadata !{i64 4141}
!4142 = metadata !{i64 4142}
!4143 = metadata !{i64 4143}
!4144 = metadata !{i64 4144}
!4145 = metadata !{i64 4145}
!4146 = metadata !{i64 4146}
!4147 = metadata !{i64 4147}
!4148 = metadata !{i64 4148}
!4149 = metadata !{i64 4149}
!4150 = metadata !{i64 4150}
!4151 = metadata !{i64 4151}
!4152 = metadata !{i64 4152}
!4153 = metadata !{i64 4153}
!4154 = metadata !{i64 4154}
!4155 = metadata !{i64 4155}
!4156 = metadata !{i64 4156}
!4157 = metadata !{i64 4157}
!4158 = metadata !{i64 4158}
!4159 = metadata !{i64 4159}
!4160 = metadata !{i64 4160}
!4161 = metadata !{i64 4161}
!4162 = metadata !{i64 4162}
!4163 = metadata !{i64 4163}
!4164 = metadata !{i64 4164}
!4165 = metadata !{i64 4165}
!4166 = metadata !{i64 4166}
!4167 = metadata !{i64 4167}
!4168 = metadata !{i64 4168}
!4169 = metadata !{i64 4169}
!4170 = metadata !{i64 4170}
!4171 = metadata !{i64 4171}
!4172 = metadata !{i64 4172}
!4173 = metadata !{i64 4173}
!4174 = metadata !{i64 4174}
!4175 = metadata !{i64 4175}
!4176 = metadata !{i64 4176}
!4177 = metadata !{i64 4177}
!4178 = metadata !{i64 4178}
!4179 = metadata !{i64 4179}
!4180 = metadata !{i64 4180}
!4181 = metadata !{i64 4181}
!4182 = metadata !{i64 4182}
!4183 = metadata !{i64 4183}
!4184 = metadata !{i64 4184}
!4185 = metadata !{i64 4185}
!4186 = metadata !{i64 4186}
!4187 = metadata !{i64 4187}
!4188 = metadata !{i64 4188}
!4189 = metadata !{i64 4189}
!4190 = metadata !{i64 4190}
!4191 = metadata !{i64 4191}
!4192 = metadata !{i64 4192}
!4193 = metadata !{i64 4193}
!4194 = metadata !{i64 4194}
!4195 = metadata !{i64 4195}
!4196 = metadata !{i64 4196}
!4197 = metadata !{i64 4197}
!4198 = metadata !{i64 4198}
!4199 = metadata !{i64 4199}
!4200 = metadata !{i64 4200}
!4201 = metadata !{i64 4201}
!4202 = metadata !{i64 4202}
!4203 = metadata !{i64 4203}
!4204 = metadata !{i64 4204}
!4205 = metadata !{i64 4205}
!4206 = metadata !{i64 4206}
!4207 = metadata !{i64 4207}
!4208 = metadata !{i64 4208}
!4209 = metadata !{i64 4209}
!4210 = metadata !{i64 4210}
!4211 = metadata !{i64 4211}
!4212 = metadata !{i64 4212}
!4213 = metadata !{i64 4213}
!4214 = metadata !{i64 4214}
!4215 = metadata !{i64 4215}
!4216 = metadata !{i64 4216}
!4217 = metadata !{i64 4217}
!4218 = metadata !{i64 4218}
!4219 = metadata !{i64 4219}
!4220 = metadata !{i64 4220}
!4221 = metadata !{i64 4221}
!4222 = metadata !{i64 4222}
!4223 = metadata !{i64 4223}
!4224 = metadata !{i64 4224}
!4225 = metadata !{i64 4225}
!4226 = metadata !{i64 4226}
!4227 = metadata !{i64 4227}
!4228 = metadata !{i64 4228}
!4229 = metadata !{i64 4229}
!4230 = metadata !{i64 4230}
!4231 = metadata !{i64 4231}
!4232 = metadata !{i64 4232}
!4233 = metadata !{i64 4233}
!4234 = metadata !{i64 4234}
!4235 = metadata !{i64 4235}
!4236 = metadata !{i64 4236}
!4237 = metadata !{i64 4237}
!4238 = metadata !{i64 4238}
!4239 = metadata !{i64 4239}
!4240 = metadata !{i64 4240}
!4241 = metadata !{i64 4241}
!4242 = metadata !{i64 4242}
!4243 = metadata !{i64 4243}
!4244 = metadata !{i64 4244}
!4245 = metadata !{i64 4245}
!4246 = metadata !{i64 4246}
!4247 = metadata !{i64 4247}
!4248 = metadata !{i64 4248}
!4249 = metadata !{i64 4249}
!4250 = metadata !{i64 4250}
!4251 = metadata !{i64 4251}
!4252 = metadata !{i64 4252}
!4253 = metadata !{i64 4253}
!4254 = metadata !{i64 4254}
!4255 = metadata !{i64 4255}
!4256 = metadata !{i64 4256}
!4257 = metadata !{i64 4257}
!4258 = metadata !{i64 4258}
!4259 = metadata !{i64 4259}
!4260 = metadata !{i64 4260}
!4261 = metadata !{i64 4261}
!4262 = metadata !{i64 4262}
!4263 = metadata !{i64 4263}
!4264 = metadata !{i64 4264}
!4265 = metadata !{i64 4265}
!4266 = metadata !{i64 4266}
!4267 = metadata !{i64 4267}
!4268 = metadata !{i64 4268}
!4269 = metadata !{i64 4269}
!4270 = metadata !{i64 4270}
!4271 = metadata !{i64 4271}
!4272 = metadata !{i64 4272}
!4273 = metadata !{i64 4273}
!4274 = metadata !{i64 4274}
!4275 = metadata !{i64 4275}
!4276 = metadata !{i64 4276}
!4277 = metadata !{i64 4277}
!4278 = metadata !{i64 4278}
!4279 = metadata !{i64 4279}
!4280 = metadata !{i64 4280}
!4281 = metadata !{i64 4281}
!4282 = metadata !{i64 4282}
!4283 = metadata !{i64 4283}
!4284 = metadata !{i64 4284}
!4285 = metadata !{i64 4285}
!4286 = metadata !{i64 4286}
!4287 = metadata !{i64 4287}
!4288 = metadata !{i64 4288}
!4289 = metadata !{i64 4289}
!4290 = metadata !{i64 4290}
!4291 = metadata !{i64 4291}
!4292 = metadata !{i64 4292}
!4293 = metadata !{i64 4293}
!4294 = metadata !{i64 4294}
!4295 = metadata !{i64 4295}
!4296 = metadata !{i64 4296}
!4297 = metadata !{i64 4297}
!4298 = metadata !{i64 4298}
!4299 = metadata !{i64 4299}
!4300 = metadata !{i64 4300}
!4301 = metadata !{i64 4301}
!4302 = metadata !{i64 4302}
!4303 = metadata !{i64 4303}
!4304 = metadata !{i64 4304}
!4305 = metadata !{i64 4305}
!4306 = metadata !{i64 4306}
!4307 = metadata !{i64 4307}
!4308 = metadata !{i64 4308}
!4309 = metadata !{i64 4309}
!4310 = metadata !{i64 4310}
!4311 = metadata !{i64 4311}
!4312 = metadata !{i64 4312}
!4313 = metadata !{i64 4313}
!4314 = metadata !{i64 4314}
!4315 = metadata !{i64 4315}
!4316 = metadata !{i64 4316}
!4317 = metadata !{i64 4317}
!4318 = metadata !{i64 4318}
!4319 = metadata !{i64 4319}
!4320 = metadata !{i64 4320}
!4321 = metadata !{i64 4321}
!4322 = metadata !{i64 4322}
!4323 = metadata !{i64 4323}
!4324 = metadata !{i64 4324}
!4325 = metadata !{i64 4325}
!4326 = metadata !{i64 4326}
!4327 = metadata !{i64 4327}
!4328 = metadata !{i64 4328}
!4329 = metadata !{i64 4329}
!4330 = metadata !{i64 4330}
!4331 = metadata !{i64 4331}
!4332 = metadata !{i64 4332}
!4333 = metadata !{i64 4333}
!4334 = metadata !{i64 4334}
!4335 = metadata !{i64 4335}
!4336 = metadata !{i64 4336}
!4337 = metadata !{i64 4337}
!4338 = metadata !{i64 4338}
!4339 = metadata !{i64 4339}
!4340 = metadata !{i64 4340}
!4341 = metadata !{i64 4341}
!4342 = metadata !{i64 4342}
!4343 = metadata !{i64 4343}
!4344 = metadata !{i64 4344}
!4345 = metadata !{i64 4345}
!4346 = metadata !{i64 4346}
!4347 = metadata !{i64 4347}
!4348 = metadata !{i64 4348}
!4349 = metadata !{i64 4349}
!4350 = metadata !{i64 4350}
!4351 = metadata !{i64 4351}
!4352 = metadata !{i64 4352}
!4353 = metadata !{i64 4353}
!4354 = metadata !{i64 4354}
!4355 = metadata !{i64 4355}
!4356 = metadata !{i64 4356}
!4357 = metadata !{i64 4357}
!4358 = metadata !{i64 4358}
!4359 = metadata !{i64 4359}
!4360 = metadata !{i64 4360}
!4361 = metadata !{i64 4361}
!4362 = metadata !{i64 4362}
!4363 = metadata !{i64 4363}
!4364 = metadata !{i64 4364}
!4365 = metadata !{i64 4365}
!4366 = metadata !{i64 4366}
!4367 = metadata !{i64 4367}
!4368 = metadata !{i64 4368}
!4369 = metadata !{i64 4369}
!4370 = metadata !{i64 4370}
!4371 = metadata !{i64 4371}
!4372 = metadata !{i64 4372}
!4373 = metadata !{i64 4373}
!4374 = metadata !{i64 4374}
!4375 = metadata !{i64 4375}
!4376 = metadata !{i64 4376}
!4377 = metadata !{i64 4377}
!4378 = metadata !{i64 4378}
!4379 = metadata !{i64 4379}
!4380 = metadata !{i64 4380}
!4381 = metadata !{i64 4381}
!4382 = metadata !{i64 4382}
!4383 = metadata !{i64 4383}
!4384 = metadata !{i64 4384}
!4385 = metadata !{i64 4385}
!4386 = metadata !{i64 4386}
!4387 = metadata !{i64 4387}
!4388 = metadata !{i64 4388}
!4389 = metadata !{i64 4389}
!4390 = metadata !{i64 4390}
!4391 = metadata !{i64 4391}
!4392 = metadata !{i64 4392}
!4393 = metadata !{i64 4393}
!4394 = metadata !{i64 4394}
!4395 = metadata !{i64 4395}
!4396 = metadata !{i64 4396}
!4397 = metadata !{i64 4397}
!4398 = metadata !{i64 4398}
!4399 = metadata !{i64 4399}
!4400 = metadata !{i64 4400}
!4401 = metadata !{i64 4401}
!4402 = metadata !{i64 4402}
!4403 = metadata !{i64 4403}
!4404 = metadata !{i64 4404}
!4405 = metadata !{i64 4405}
!4406 = metadata !{i64 4406}
!4407 = metadata !{i64 4407}
!4408 = metadata !{i64 4408}
!4409 = metadata !{i64 4409}
!4410 = metadata !{i64 4410}
!4411 = metadata !{i64 4411}
!4412 = metadata !{i64 4412}
!4413 = metadata !{i64 4413}
!4414 = metadata !{i64 4414}
!4415 = metadata !{i64 4415}
!4416 = metadata !{i64 4416}
!4417 = metadata !{i64 4417}
!4418 = metadata !{i64 4418}
!4419 = metadata !{i64 4419}
!4420 = metadata !{i64 4420}
!4421 = metadata !{i64 4421}
!4422 = metadata !{i64 4422}
!4423 = metadata !{i64 4423}
!4424 = metadata !{i64 4424}
!4425 = metadata !{i64 4425}
!4426 = metadata !{i64 4426}
!4427 = metadata !{i64 4427}
!4428 = metadata !{i64 4428}
!4429 = metadata !{i64 4429}
!4430 = metadata !{i64 4430}
!4431 = metadata !{i64 4431}
!4432 = metadata !{i64 4432}
!4433 = metadata !{i64 4433}
!4434 = metadata !{i64 4434}
!4435 = metadata !{i64 4435}
!4436 = metadata !{i64 4436}
!4437 = metadata !{i64 4437}
!4438 = metadata !{i64 4438}
!4439 = metadata !{i64 4439}
!4440 = metadata !{i64 4440}
!4441 = metadata !{i64 4441}
!4442 = metadata !{i64 4442}
!4443 = metadata !{i64 4443}
!4444 = metadata !{i64 4444}
!4445 = metadata !{i64 4445}
!4446 = metadata !{i64 4446}
!4447 = metadata !{i64 4447}
!4448 = metadata !{i64 4448}
!4449 = metadata !{i64 4449}
!4450 = metadata !{i64 4450}
!4451 = metadata !{i64 4451}
!4452 = metadata !{i64 4452}
!4453 = metadata !{i64 4453}
!4454 = metadata !{i64 4454}
!4455 = metadata !{i64 4455}
!4456 = metadata !{i64 4456}
!4457 = metadata !{i64 4457}
!4458 = metadata !{i64 4458}
!4459 = metadata !{i64 4459}
!4460 = metadata !{i64 4460}
!4461 = metadata !{i64 4461}
!4462 = metadata !{i64 4462}
!4463 = metadata !{i64 4463}
!4464 = metadata !{i64 4464}
!4465 = metadata !{i64 4465}
!4466 = metadata !{i64 4466}
!4467 = metadata !{i64 4467}
!4468 = metadata !{i64 4468}
!4469 = metadata !{i64 4469}
!4470 = metadata !{i64 4470}
!4471 = metadata !{i64 4471}
!4472 = metadata !{i64 4472}
!4473 = metadata !{i64 4473}
!4474 = metadata !{i64 4474}
!4475 = metadata !{i64 4475}
!4476 = metadata !{i64 4476}
!4477 = metadata !{i64 4477}
!4478 = metadata !{i64 4478}
!4479 = metadata !{i64 4479}
!4480 = metadata !{i64 4480}
!4481 = metadata !{i64 4481}
!4482 = metadata !{i64 4482}
!4483 = metadata !{i64 4483}
!4484 = metadata !{i64 4484}
!4485 = metadata !{i64 4485}
!4486 = metadata !{i64 4486}
!4487 = metadata !{i64 4487}
!4488 = metadata !{i64 4488}
!4489 = metadata !{i64 4489}
!4490 = metadata !{i64 4490}
!4491 = metadata !{i64 4491}
!4492 = metadata !{i64 4492}
!4493 = metadata !{i64 4493}
!4494 = metadata !{i64 4494}
!4495 = metadata !{i64 4495}
!4496 = metadata !{i64 4496}
!4497 = metadata !{i64 4497}
!4498 = metadata !{i64 4498}
!4499 = metadata !{i64 4499}
!4500 = metadata !{i64 4500}
!4501 = metadata !{i64 4501}
!4502 = metadata !{i64 4502}
!4503 = metadata !{i64 4503}
!4504 = metadata !{i64 4504}
!4505 = metadata !{i64 4505}
!4506 = metadata !{i64 4506}
!4507 = metadata !{i64 4507}
!4508 = metadata !{i64 4508}
!4509 = metadata !{i64 4509}
!4510 = metadata !{i64 4510}
!4511 = metadata !{i64 4511}
!4512 = metadata !{i64 4512}
!4513 = metadata !{i64 4513}
!4514 = metadata !{i64 4514}
!4515 = metadata !{i64 4515}
!4516 = metadata !{i64 4516}
!4517 = metadata !{i64 4517}
!4518 = metadata !{i64 4518}
!4519 = metadata !{i64 4519}
!4520 = metadata !{i64 4520}
!4521 = metadata !{i64 4521}
!4522 = metadata !{i64 4522}
!4523 = metadata !{i64 4523}
!4524 = metadata !{i64 4524}
!4525 = metadata !{i64 4525}
!4526 = metadata !{i64 4526}
!4527 = metadata !{i64 4527}
!4528 = metadata !{i64 4528}
!4529 = metadata !{i64 4529}
!4530 = metadata !{i64 4530}
!4531 = metadata !{i64 4531}
!4532 = metadata !{i64 4532}
!4533 = metadata !{i64 4533}
!4534 = metadata !{i64 4534}
!4535 = metadata !{i64 4535}
!4536 = metadata !{i64 4536}
!4537 = metadata !{i64 4537}
!4538 = metadata !{i64 4538}
!4539 = metadata !{i64 4539}
!4540 = metadata !{i64 4540}
!4541 = metadata !{i64 4541}
!4542 = metadata !{i64 4542}
!4543 = metadata !{i64 4543}
!4544 = metadata !{i64 4544}
!4545 = metadata !{i64 4545}
!4546 = metadata !{i64 4546}
!4547 = metadata !{i64 4547}
!4548 = metadata !{i64 4548}
!4549 = metadata !{i64 4549}
!4550 = metadata !{i64 4550}
!4551 = metadata !{i64 4551}
!4552 = metadata !{i64 4552}
!4553 = metadata !{i64 4553}
!4554 = metadata !{i64 4554}
!4555 = metadata !{i64 4555}
!4556 = metadata !{i64 4556}
!4557 = metadata !{i64 4557}
!4558 = metadata !{i64 4558}
!4559 = metadata !{i64 4559}
!4560 = metadata !{i64 4560}
!4561 = metadata !{i64 4561}
!4562 = metadata !{i64 4562}
!4563 = metadata !{i64 4563}
!4564 = metadata !{i64 4564}
!4565 = metadata !{i64 4565}
!4566 = metadata !{i64 4566}
!4567 = metadata !{i64 4567}
!4568 = metadata !{i64 4568}
!4569 = metadata !{i64 4569}
!4570 = metadata !{i64 4570}
!4571 = metadata !{i64 4571}
!4572 = metadata !{i64 4572}
!4573 = metadata !{i64 4573}
!4574 = metadata !{i64 4574}
!4575 = metadata !{i64 4575}
!4576 = metadata !{i64 4576}
!4577 = metadata !{i64 4577}
!4578 = metadata !{i64 4578}
!4579 = metadata !{i64 4579}
!4580 = metadata !{i64 4580}
!4581 = metadata !{i64 4581}
!4582 = metadata !{i64 4582}
!4583 = metadata !{i64 4583}
!4584 = metadata !{i64 4584}
!4585 = metadata !{i64 4585}
!4586 = metadata !{i64 4586}
!4587 = metadata !{i64 4587}
!4588 = metadata !{i64 4588}
!4589 = metadata !{i64 4589}
!4590 = metadata !{i64 4590}
!4591 = metadata !{i64 4591}
!4592 = metadata !{i64 4592}
!4593 = metadata !{i64 4593}
!4594 = metadata !{i64 4594}
!4595 = metadata !{i64 4595}
!4596 = metadata !{i64 4596}
!4597 = metadata !{i64 4597}
!4598 = metadata !{i64 4598}
!4599 = metadata !{i64 4599}
!4600 = metadata !{i64 4600}
!4601 = metadata !{i64 4601}
!4602 = metadata !{i64 4602}
!4603 = metadata !{i64 4603}
!4604 = metadata !{i64 4604}
!4605 = metadata !{i64 4605}
!4606 = metadata !{i64 4606}
!4607 = metadata !{i64 4607}
!4608 = metadata !{i64 4608}
!4609 = metadata !{i64 4609}
!4610 = metadata !{i64 4610}
!4611 = metadata !{i64 4611}
!4612 = metadata !{i64 4612}
!4613 = metadata !{i64 4613}
!4614 = metadata !{i64 4614}
!4615 = metadata !{i64 4615}
!4616 = metadata !{i64 4616}
!4617 = metadata !{i64 4617}
!4618 = metadata !{i64 4618}
!4619 = metadata !{i64 4619}
!4620 = metadata !{i64 4620}
!4621 = metadata !{i64 4621}
!4622 = metadata !{i64 4622}
!4623 = metadata !{i64 4623}
!4624 = metadata !{i64 4624}
!4625 = metadata !{i64 4625}
!4626 = metadata !{i64 4626}
!4627 = metadata !{i64 4627}
!4628 = metadata !{i64 4628}
!4629 = metadata !{i64 4629}
!4630 = metadata !{i64 4630}
!4631 = metadata !{i64 4631}
!4632 = metadata !{i64 4632}
!4633 = metadata !{i64 4633}
!4634 = metadata !{i64 4634}
!4635 = metadata !{i64 4635}
!4636 = metadata !{i64 4636}
!4637 = metadata !{i64 4637}
!4638 = metadata !{i64 4638}
!4639 = metadata !{i64 4639}
!4640 = metadata !{i64 4640}
!4641 = metadata !{i64 4641}
!4642 = metadata !{i64 4642}
!4643 = metadata !{i64 4643}
!4644 = metadata !{i64 4644}
!4645 = metadata !{i64 4645}
!4646 = metadata !{i64 4646}
!4647 = metadata !{i64 4647}
!4648 = metadata !{i64 4648}
!4649 = metadata !{i64 4649}
!4650 = metadata !{i64 4650}
!4651 = metadata !{i64 4651}
!4652 = metadata !{i64 4652}
!4653 = metadata !{i64 4653}
!4654 = metadata !{i64 4654}
!4655 = metadata !{i64 4655}
!4656 = metadata !{i64 4656}
!4657 = metadata !{i64 4657}
!4658 = metadata !{i64 4658}
!4659 = metadata !{i64 4659}
!4660 = metadata !{i64 4660}
!4661 = metadata !{i64 4661}
!4662 = metadata !{i64 4662}
!4663 = metadata !{i64 4663}
!4664 = metadata !{i64 4664}
!4665 = metadata !{i64 4665}
!4666 = metadata !{i64 4666}
!4667 = metadata !{i64 4667}
!4668 = metadata !{i64 4668}
!4669 = metadata !{i64 4669}
!4670 = metadata !{i64 4670}
!4671 = metadata !{i64 4671}
!4672 = metadata !{i64 4672}
!4673 = metadata !{i64 4673}
!4674 = metadata !{i64 4674}
!4675 = metadata !{i64 4675}
!4676 = metadata !{i64 4676}
!4677 = metadata !{i64 4677}
!4678 = metadata !{i64 4678}
!4679 = metadata !{i64 4679}
!4680 = metadata !{i64 4680}
!4681 = metadata !{i64 4681}
!4682 = metadata !{i64 4682}
!4683 = metadata !{i64 4683}
!4684 = metadata !{i64 4684}
!4685 = metadata !{i64 4685}
!4686 = metadata !{i64 4686}
!4687 = metadata !{i64 4687}
!4688 = metadata !{i64 4688}
!4689 = metadata !{i64 4689}
!4690 = metadata !{i64 4690}
!4691 = metadata !{i64 4691}
!4692 = metadata !{i64 4692}
!4693 = metadata !{i64 4693}
!4694 = metadata !{i64 4694}
!4695 = metadata !{i64 4695}
!4696 = metadata !{i64 4696}
!4697 = metadata !{i64 4697}
!4698 = metadata !{i64 4698}
!4699 = metadata !{i64 4699}
!4700 = metadata !{i64 4700}
!4701 = metadata !{i64 4701}
!4702 = metadata !{i64 4702}
!4703 = metadata !{i64 4703}
!4704 = metadata !{i64 4704}
!4705 = metadata !{i64 4705}
!4706 = metadata !{i64 4706}
!4707 = metadata !{i64 4707}
!4708 = metadata !{i64 4708}
!4709 = metadata !{i64 4709}
!4710 = metadata !{i64 4710}
!4711 = metadata !{i64 4711}
!4712 = metadata !{i64 4712}
!4713 = metadata !{i64 4713}
!4714 = metadata !{i64 4714}
!4715 = metadata !{i64 4715}
!4716 = metadata !{i64 4716}
!4717 = metadata !{i64 4717}
!4718 = metadata !{i64 4718}
!4719 = metadata !{i64 4719}
!4720 = metadata !{i64 4720}
!4721 = metadata !{i64 4721}
!4722 = metadata !{i64 4722}
!4723 = metadata !{i64 4723}
!4724 = metadata !{i64 4724}
!4725 = metadata !{i64 4725}
!4726 = metadata !{i64 4726}
!4727 = metadata !{i64 4727}
!4728 = metadata !{i64 4728}
!4729 = metadata !{i64 4729}
!4730 = metadata !{i64 4730}
!4731 = metadata !{i64 4731}
!4732 = metadata !{i64 4732}
!4733 = metadata !{i64 4733}
!4734 = metadata !{i64 4734}
!4735 = metadata !{i64 4735}
!4736 = metadata !{i64 4736}
!4737 = metadata !{i64 4737}
!4738 = metadata !{i64 4738}
!4739 = metadata !{i64 4739}
!4740 = metadata !{i64 4740}
!4741 = metadata !{i64 4741}
!4742 = metadata !{i64 4742}
!4743 = metadata !{i64 4743}
!4744 = metadata !{i64 4744}
!4745 = metadata !{i64 4745}
!4746 = metadata !{i64 4746}
!4747 = metadata !{i64 4747}
!4748 = metadata !{i64 4748}
!4749 = metadata !{i64 4749}
!4750 = metadata !{i64 4750}
!4751 = metadata !{i64 4751}
!4752 = metadata !{i64 4752}
!4753 = metadata !{i64 4753}
!4754 = metadata !{i64 4754}
!4755 = metadata !{i64 4755}
!4756 = metadata !{i64 4756}
!4757 = metadata !{i64 4757}
!4758 = metadata !{i64 4758}
!4759 = metadata !{i64 4759}
!4760 = metadata !{i64 4760}
!4761 = metadata !{i64 4761}
!4762 = metadata !{i64 4762}
!4763 = metadata !{i64 4763}
!4764 = metadata !{i64 4764}
!4765 = metadata !{i64 4765}
!4766 = metadata !{i64 4766}
!4767 = metadata !{i64 4767}
!4768 = metadata !{i64 4768}
!4769 = metadata !{i64 4769}
!4770 = metadata !{i64 4770}
!4771 = metadata !{i64 4771}
!4772 = metadata !{i64 4772}
!4773 = metadata !{i64 4773}
!4774 = metadata !{i64 4774}
!4775 = metadata !{i64 4775}
!4776 = metadata !{i64 4776}
!4777 = metadata !{i64 4777}
!4778 = metadata !{i64 4778}
!4779 = metadata !{i64 4779}
!4780 = metadata !{i64 4780}
!4781 = metadata !{i64 4781}
!4782 = metadata !{i64 4782}
!4783 = metadata !{i64 4783}
!4784 = metadata !{i64 4784}
!4785 = metadata !{i64 4785}
!4786 = metadata !{i64 4786}
!4787 = metadata !{i64 4787}
!4788 = metadata !{i64 4788}
!4789 = metadata !{i64 4789}
!4790 = metadata !{i64 4790}
!4791 = metadata !{i64 4791}
!4792 = metadata !{i64 4792}
!4793 = metadata !{i64 4793}
!4794 = metadata !{i64 4794}
!4795 = metadata !{i64 4795}
!4796 = metadata !{i64 4796}
!4797 = metadata !{i64 4797}
!4798 = metadata !{i64 4798}
!4799 = metadata !{i64 4799}
!4800 = metadata !{i64 4800}
!4801 = metadata !{i64 4801}
!4802 = metadata !{i64 4802}
!4803 = metadata !{i64 4803}
!4804 = metadata !{i64 4804}
!4805 = metadata !{i64 4805}
!4806 = metadata !{i64 4806}
!4807 = metadata !{i64 4807}
!4808 = metadata !{i64 4808}
!4809 = metadata !{i64 4809}
!4810 = metadata !{i64 4810}
!4811 = metadata !{i64 4811}
!4812 = metadata !{i64 4812}
!4813 = metadata !{i64 4813}
!4814 = metadata !{i64 4814}
!4815 = metadata !{i64 4815}
!4816 = metadata !{i64 4816}
!4817 = metadata !{i64 4817}
!4818 = metadata !{i64 4818}
!4819 = metadata !{i64 4819}
!4820 = metadata !{i64 4820}
!4821 = metadata !{i64 4821}
!4822 = metadata !{i64 4822}
!4823 = metadata !{i64 4823}
!4824 = metadata !{i64 4824}
!4825 = metadata !{i64 4825}
!4826 = metadata !{i64 4826}
!4827 = metadata !{i64 4827}
!4828 = metadata !{i64 4828}
!4829 = metadata !{i64 4829}
!4830 = metadata !{i64 4830}
!4831 = metadata !{i64 4831}
!4832 = metadata !{i64 4832}
!4833 = metadata !{i64 4833}
!4834 = metadata !{i64 4834}
!4835 = metadata !{i64 4835}
!4836 = metadata !{i64 4836}
!4837 = metadata !{i64 4837}
!4838 = metadata !{i64 4838}
!4839 = metadata !{i64 4839}
!4840 = metadata !{i64 4840}
!4841 = metadata !{i64 4841}
!4842 = metadata !{i64 4842}
!4843 = metadata !{i64 4843}
!4844 = metadata !{i64 4844}
!4845 = metadata !{i64 4845}
!4846 = metadata !{i64 4846}
!4847 = metadata !{i64 4847}
!4848 = metadata !{i64 4848}
!4849 = metadata !{i64 4849}
!4850 = metadata !{i64 4850}
!4851 = metadata !{i64 4851}
!4852 = metadata !{i64 4852}
!4853 = metadata !{i64 4853}
!4854 = metadata !{i64 4854}
!4855 = metadata !{i64 4855}
!4856 = metadata !{i64 4856}
!4857 = metadata !{i64 4857}
!4858 = metadata !{i64 4858}
!4859 = metadata !{i64 4859}
!4860 = metadata !{i64 4860}
!4861 = metadata !{i64 4861}
!4862 = metadata !{i64 4862}
!4863 = metadata !{i64 4863}
!4864 = metadata !{i64 4864}
!4865 = metadata !{i64 4865}
!4866 = metadata !{i64 4866}
!4867 = metadata !{i64 4867}
!4868 = metadata !{i64 4868}
!4869 = metadata !{i64 4869}
!4870 = metadata !{i64 4870}
!4871 = metadata !{i64 4871}
!4872 = metadata !{i64 4872}
!4873 = metadata !{i64 4873}
!4874 = metadata !{i64 4874}
!4875 = metadata !{i64 4875}
!4876 = metadata !{i64 4876}
!4877 = metadata !{i64 4877}
!4878 = metadata !{i64 4878}
!4879 = metadata !{i64 4879}
!4880 = metadata !{i64 4880}
!4881 = metadata !{i64 4881}
!4882 = metadata !{i64 4882}
!4883 = metadata !{i64 4883}
!4884 = metadata !{i64 4884}
!4885 = metadata !{i64 4885}
!4886 = metadata !{i64 4886}
!4887 = metadata !{i64 4887}
!4888 = metadata !{i64 4888}
!4889 = metadata !{i64 4889}
!4890 = metadata !{i64 4890}
!4891 = metadata !{i64 4891}
!4892 = metadata !{i64 4892}
!4893 = metadata !{i64 4893}
!4894 = metadata !{i64 4894}
!4895 = metadata !{i64 4895}
!4896 = metadata !{i64 4896}
!4897 = metadata !{i64 4897}
!4898 = metadata !{i64 4898}
!4899 = metadata !{i64 4899}
!4900 = metadata !{i64 4900}
!4901 = metadata !{i64 4901}
!4902 = metadata !{i64 4902}
!4903 = metadata !{i64 4903}
!4904 = metadata !{i64 4904}
!4905 = metadata !{i64 4905}
!4906 = metadata !{i64 4906}
!4907 = metadata !{i64 4907}
!4908 = metadata !{i64 4908}
!4909 = metadata !{i64 4909}
!4910 = metadata !{i64 4910}
!4911 = metadata !{i64 4911}
!4912 = metadata !{i64 4912}
!4913 = metadata !{i64 4913}
!4914 = metadata !{i64 4914}
!4915 = metadata !{i64 4915}
!4916 = metadata !{i64 4916}
!4917 = metadata !{i64 4917}
!4918 = metadata !{i64 4918}
!4919 = metadata !{i64 4919}
!4920 = metadata !{i64 4920}
!4921 = metadata !{i64 4921}
!4922 = metadata !{i64 4922}
!4923 = metadata !{i64 4923}
!4924 = metadata !{i64 4924}
!4925 = metadata !{i64 4925}
!4926 = metadata !{i64 4926}
!4927 = metadata !{i64 4927}
!4928 = metadata !{i64 4928}
!4929 = metadata !{i64 4929}
!4930 = metadata !{i64 4930}
!4931 = metadata !{i64 4931}
!4932 = metadata !{i64 4932}
!4933 = metadata !{i64 4933}
!4934 = metadata !{i64 4934}
!4935 = metadata !{i64 4935}
!4936 = metadata !{i64 4936}
!4937 = metadata !{i64 4937}
!4938 = metadata !{i64 4938}
!4939 = metadata !{i64 4939}
!4940 = metadata !{i64 4940}
!4941 = metadata !{i64 4941}
!4942 = metadata !{i64 4942}
!4943 = metadata !{i64 4943}
!4944 = metadata !{i64 4944}
!4945 = metadata !{i64 4945}
!4946 = metadata !{i64 4946}
!4947 = metadata !{i64 4947}
!4948 = metadata !{i64 4948}
!4949 = metadata !{i64 4949}
!4950 = metadata !{i64 4950}
!4951 = metadata !{i64 4951}
!4952 = metadata !{i64 4952}
!4953 = metadata !{i64 4953}
!4954 = metadata !{i64 4954}
!4955 = metadata !{i64 4955}
!4956 = metadata !{i64 4956}
!4957 = metadata !{i64 4957}
!4958 = metadata !{i64 4958}
!4959 = metadata !{i64 4959}
!4960 = metadata !{i64 4960}
!4961 = metadata !{i64 4961}
!4962 = metadata !{i64 4962}
!4963 = metadata !{i64 4963}
!4964 = metadata !{i64 4964}
!4965 = metadata !{i64 4965}
!4966 = metadata !{i64 4966}
!4967 = metadata !{i64 4967}
!4968 = metadata !{i64 4968}
!4969 = metadata !{i64 4969}
!4970 = metadata !{i64 4970}
!4971 = metadata !{i64 4971}
!4972 = metadata !{i64 4972}
!4973 = metadata !{i64 4973}
!4974 = metadata !{i64 4974}
!4975 = metadata !{i64 4975}
!4976 = metadata !{i64 4976}
!4977 = metadata !{i64 4977}
!4978 = metadata !{i64 4978}
!4979 = metadata !{i64 4979}
!4980 = metadata !{i64 4980}
!4981 = metadata !{i64 4981}
!4982 = metadata !{i64 4982}
!4983 = metadata !{i64 4983}
!4984 = metadata !{i64 4984}
!4985 = metadata !{i64 4985}
!4986 = metadata !{i64 4986}
!4987 = metadata !{i64 4987}
!4988 = metadata !{i64 4988}
!4989 = metadata !{i64 4989}
!4990 = metadata !{i64 4990}
!4991 = metadata !{i64 4991}
!4992 = metadata !{i64 4992}
!4993 = metadata !{i64 4993}
!4994 = metadata !{i64 4994}
!4995 = metadata !{i64 4995}
!4996 = metadata !{i64 4996}
!4997 = metadata !{i64 4997}
!4998 = metadata !{i64 4998}
!4999 = metadata !{i64 4999}
!5000 = metadata !{i64 5000}
!5001 = metadata !{i64 5001}
!5002 = metadata !{i64 5002}
!5003 = metadata !{i64 5003}
!5004 = metadata !{i64 5004}
!5005 = metadata !{i64 5005}
!5006 = metadata !{i64 5006}
!5007 = metadata !{i64 5007}
!5008 = metadata !{i64 5008}
!5009 = metadata !{i64 5009}
!5010 = metadata !{i64 5010}
!5011 = metadata !{i64 5011}
!5012 = metadata !{i64 5012}
!5013 = metadata !{i64 5013}
!5014 = metadata !{i64 5014}
!5015 = metadata !{i64 5015}
!5016 = metadata !{i64 5016}
!5017 = metadata !{i64 5017}
!5018 = metadata !{i64 5018}
!5019 = metadata !{i64 5019}
!5020 = metadata !{i64 5020}
!5021 = metadata !{i64 5021}
!5022 = metadata !{i64 5022}
!5023 = metadata !{i64 5023}
!5024 = metadata !{i64 5024}
!5025 = metadata !{i64 5025}
!5026 = metadata !{i64 5026}
!5027 = metadata !{i64 5027}
!5028 = metadata !{i64 5028}
!5029 = metadata !{i64 5029}
!5030 = metadata !{i64 5030}
!5031 = metadata !{i64 5031}
!5032 = metadata !{i64 5032}
!5033 = metadata !{i64 5033}
!5034 = metadata !{i64 5034}
!5035 = metadata !{i64 5035}
!5036 = metadata !{i64 5036}
!5037 = metadata !{i64 5037}
!5038 = metadata !{i64 5038}
!5039 = metadata !{i64 5039}
!5040 = metadata !{i64 5040}
!5041 = metadata !{i64 5041}
!5042 = metadata !{i64 5042}
!5043 = metadata !{i64 5043}
!5044 = metadata !{i64 5044}
!5045 = metadata !{i64 5045}
!5046 = metadata !{i64 5046}
!5047 = metadata !{i64 5047}
!5048 = metadata !{i64 5048}
!5049 = metadata !{i64 5049}
!5050 = metadata !{i64 5050}
!5051 = metadata !{i64 5051}
!5052 = metadata !{i64 5052}
!5053 = metadata !{i64 5053}
!5054 = metadata !{i64 5054}
!5055 = metadata !{i64 5055}
!5056 = metadata !{i64 5056}
!5057 = metadata !{i64 5057}
!5058 = metadata !{i64 5058}
!5059 = metadata !{i64 5059}
!5060 = metadata !{i64 5060}
!5061 = metadata !{i64 5061}
!5062 = metadata !{i64 5062}
!5063 = metadata !{i64 5063}
!5064 = metadata !{i64 5064}
!5065 = metadata !{i64 5065}
!5066 = metadata !{i64 5066}
!5067 = metadata !{i64 5067}
!5068 = metadata !{i64 5068}
!5069 = metadata !{i64 5069}
!5070 = metadata !{i64 5070}
!5071 = metadata !{i64 5071}
!5072 = metadata !{i64 5072}
!5073 = metadata !{i64 5073}
!5074 = metadata !{i64 5074}
!5075 = metadata !{i64 5075}
!5076 = metadata !{i64 5076}
!5077 = metadata !{i64 5077}
!5078 = metadata !{i64 5078}
!5079 = metadata !{i64 5079}
!5080 = metadata !{i64 5080}
!5081 = metadata !{i64 5081}
!5082 = metadata !{i64 5082}
!5083 = metadata !{i64 5083}
!5084 = metadata !{i64 5084}
!5085 = metadata !{i64 5085}
!5086 = metadata !{i64 5086}
!5087 = metadata !{i64 5087}
!5088 = metadata !{i64 5088}
!5089 = metadata !{i64 5089}
!5090 = metadata !{i64 5090}
!5091 = metadata !{i64 5091}
!5092 = metadata !{i64 5092}
!5093 = metadata !{i64 5093}
!5094 = metadata !{i64 5094}
!5095 = metadata !{i64 5095}
!5096 = metadata !{i64 5096}
!5097 = metadata !{i64 5097}
!5098 = metadata !{i64 5098}
!5099 = metadata !{i64 5099}
!5100 = metadata !{i64 5100}
!5101 = metadata !{i64 5101}
!5102 = metadata !{i64 5102}
!5103 = metadata !{i64 5103}
!5104 = metadata !{i64 5104}
!5105 = metadata !{i64 5105}
!5106 = metadata !{i64 5106}
!5107 = metadata !{i64 5107}
!5108 = metadata !{i64 5108}
!5109 = metadata !{i64 5109}
!5110 = metadata !{i64 5110}
!5111 = metadata !{i64 5111}
!5112 = metadata !{i64 5112}
!5113 = metadata !{i64 5113}
!5114 = metadata !{i64 5114}
!5115 = metadata !{i64 5115}
!5116 = metadata !{i64 5116}
!5117 = metadata !{i64 5117}
!5118 = metadata !{i64 5118}
!5119 = metadata !{i64 5119}
!5120 = metadata !{i64 5120}
!5121 = metadata !{i64 5121}
!5122 = metadata !{i64 5122}
!5123 = metadata !{i64 5123}
!5124 = metadata !{i64 5124}
!5125 = metadata !{i64 5125}
!5126 = metadata !{i64 5126}
!5127 = metadata !{i64 5127}
!5128 = metadata !{i64 5128}
!5129 = metadata !{i64 5129}
!5130 = metadata !{i64 5130}
!5131 = metadata !{i64 5131}
!5132 = metadata !{i64 5132}
!5133 = metadata !{i64 5133}
!5134 = metadata !{i64 5134}
!5135 = metadata !{i64 5135}
!5136 = metadata !{i64 5136}
!5137 = metadata !{i64 5137}
!5138 = metadata !{i64 5138}
!5139 = metadata !{i64 5139}
!5140 = metadata !{i64 5140}
!5141 = metadata !{i64 5141}
!5142 = metadata !{i64 5142}
!5143 = metadata !{i64 5143}
!5144 = metadata !{i64 5144}
!5145 = metadata !{i64 5145}
!5146 = metadata !{i64 5146}
!5147 = metadata !{i64 5147}
!5148 = metadata !{i64 5148}
!5149 = metadata !{i64 5149}
!5150 = metadata !{i64 5150}
!5151 = metadata !{i64 5151}
!5152 = metadata !{i64 5152}
!5153 = metadata !{i64 5153}
!5154 = metadata !{i64 5154}
!5155 = metadata !{i64 5155}
!5156 = metadata !{i64 5156}
!5157 = metadata !{i64 5157}
!5158 = metadata !{i64 5158}
!5159 = metadata !{i64 5159}
!5160 = metadata !{i64 5160}
!5161 = metadata !{i64 5161}
!5162 = metadata !{i64 5162}
!5163 = metadata !{i64 5163}
!5164 = metadata !{i64 5164}
!5165 = metadata !{i64 5165}
!5166 = metadata !{i64 5166}
!5167 = metadata !{i64 5167}
!5168 = metadata !{i64 5168}
!5169 = metadata !{i64 5169}
!5170 = metadata !{i64 5170}
!5171 = metadata !{i64 5171}
!5172 = metadata !{i64 5172}
!5173 = metadata !{i64 5173}
!5174 = metadata !{i64 5174}
!5175 = metadata !{i64 5175}
!5176 = metadata !{i64 5176}
!5177 = metadata !{i64 5177}
!5178 = metadata !{i64 5178}
!5179 = metadata !{i64 5179}
!5180 = metadata !{i64 5180}
!5181 = metadata !{i64 5181}
!5182 = metadata !{i64 5182}
!5183 = metadata !{i64 5183}
!5184 = metadata !{i64 5184}
!5185 = metadata !{i64 5185}
!5186 = metadata !{i64 5186}
!5187 = metadata !{i64 5187}
!5188 = metadata !{i64 5188}
!5189 = metadata !{i64 5189}
!5190 = metadata !{i64 5190}
!5191 = metadata !{i64 5191}
!5192 = metadata !{i64 5192}
!5193 = metadata !{i64 5193}
!5194 = metadata !{i64 5194}
!5195 = metadata !{i64 5195}
!5196 = metadata !{i64 5196}
!5197 = metadata !{i64 5197}
!5198 = metadata !{i64 5198}
!5199 = metadata !{i64 5199}
!5200 = metadata !{i64 5200}
!5201 = metadata !{i64 5201}
!5202 = metadata !{i64 5202}
!5203 = metadata !{i64 5203}
!5204 = metadata !{i64 5204}
!5205 = metadata !{i64 5205}
!5206 = metadata !{i64 5206}
!5207 = metadata !{i64 5207}
!5208 = metadata !{i64 5208}
!5209 = metadata !{i64 5209}
!5210 = metadata !{i64 5210}
!5211 = metadata !{i64 5211}
!5212 = metadata !{i64 5212}
!5213 = metadata !{i64 5213}
!5214 = metadata !{i64 5214}
!5215 = metadata !{i64 5215}
!5216 = metadata !{i64 5216}
!5217 = metadata !{i64 5217}
!5218 = metadata !{i64 5218}
!5219 = metadata !{i64 5219}
!5220 = metadata !{i64 5220}
!5221 = metadata !{i64 5221}
!5222 = metadata !{i64 5222}
!5223 = metadata !{i64 5223}
!5224 = metadata !{i64 5224}
!5225 = metadata !{i64 5225}
!5226 = metadata !{i64 5226}
!5227 = metadata !{i64 5227}
!5228 = metadata !{i64 5228}
!5229 = metadata !{i64 5229}
!5230 = metadata !{i64 5230}
!5231 = metadata !{i64 5231}
!5232 = metadata !{i64 5232}
!5233 = metadata !{i64 5233}
!5234 = metadata !{i64 5234}
!5235 = metadata !{i64 5235}
!5236 = metadata !{i64 5236}
!5237 = metadata !{i64 5237}
!5238 = metadata !{i64 5238}
!5239 = metadata !{i64 5239}
!5240 = metadata !{i64 5240}
!5241 = metadata !{i64 5241}
!5242 = metadata !{i64 5242}
!5243 = metadata !{i64 5243}
!5244 = metadata !{i64 5244}
!5245 = metadata !{i64 5245}
!5246 = metadata !{i64 5246}
!5247 = metadata !{i64 5247}
!5248 = metadata !{i64 5248}
!5249 = metadata !{i64 5249}
!5250 = metadata !{i64 5250}
!5251 = metadata !{i64 5251}
!5252 = metadata !{i64 5252}
!5253 = metadata !{i64 5253}
!5254 = metadata !{i64 5254}
!5255 = metadata !{i64 5255}
!5256 = metadata !{i64 5256}
!5257 = metadata !{i64 5257}
!5258 = metadata !{i64 5258}
!5259 = metadata !{i64 5259}
!5260 = metadata !{i64 5260}
!5261 = metadata !{i64 5261}
!5262 = metadata !{i64 5262}
!5263 = metadata !{i64 5263}
!5264 = metadata !{i64 5264}
!5265 = metadata !{i64 5265}
!5266 = metadata !{i64 5266}
!5267 = metadata !{i64 5267}
!5268 = metadata !{i64 5268}
!5269 = metadata !{i64 5269}
!5270 = metadata !{i64 5270}
!5271 = metadata !{i64 5271}
!5272 = metadata !{i64 5272}
!5273 = metadata !{i64 5273}
!5274 = metadata !{i64 5274}
!5275 = metadata !{i64 5275}
!5276 = metadata !{i64 5276}
!5277 = metadata !{i64 5277}
!5278 = metadata !{i64 5278}
!5279 = metadata !{i64 5279}
!5280 = metadata !{i64 5280}
!5281 = metadata !{i64 5281}
!5282 = metadata !{i64 5282}
!5283 = metadata !{i64 5283}
!5284 = metadata !{i64 5284}
!5285 = metadata !{i64 5285}
!5286 = metadata !{i64 5286}
!5287 = metadata !{i64 5287}
!5288 = metadata !{i64 5288}
!5289 = metadata !{i64 5289}
!5290 = metadata !{i64 5290}
!5291 = metadata !{i64 5291}
!5292 = metadata !{i64 5292}
!5293 = metadata !{i64 5293}
!5294 = metadata !{i64 5294}
!5295 = metadata !{i64 5295}
!5296 = metadata !{i64 5296}
!5297 = metadata !{i64 5297}
!5298 = metadata !{i64 5298}
!5299 = metadata !{i64 5299}
!5300 = metadata !{i64 5300}
!5301 = metadata !{i64 5301}
!5302 = metadata !{i64 5302}
!5303 = metadata !{i64 5303}
!5304 = metadata !{i64 5304}
!5305 = metadata !{i64 5305}
!5306 = metadata !{i64 5306}
!5307 = metadata !{i64 5307}
!5308 = metadata !{i64 5308}
!5309 = metadata !{i64 5309}
!5310 = metadata !{i64 5310}
!5311 = metadata !{i64 5311}
!5312 = metadata !{i64 5312}
!5313 = metadata !{i64 5313}
!5314 = metadata !{i64 5314}
!5315 = metadata !{i64 5315}
!5316 = metadata !{i64 5316}
!5317 = metadata !{i64 5317}
!5318 = metadata !{i64 5318}
!5319 = metadata !{i64 5319}
!5320 = metadata !{i64 5320}
!5321 = metadata !{i64 5321}
!5322 = metadata !{i64 5322}
!5323 = metadata !{i64 5323}
!5324 = metadata !{i64 5324}
!5325 = metadata !{i64 5325}
!5326 = metadata !{i64 5326}
!5327 = metadata !{i64 5327}
!5328 = metadata !{i64 5328}
!5329 = metadata !{i64 5329}
!5330 = metadata !{i64 5330}
!5331 = metadata !{i64 5331}
!5332 = metadata !{i64 5332}
!5333 = metadata !{i64 5333}
!5334 = metadata !{i64 5334}
!5335 = metadata !{i64 5335}
!5336 = metadata !{i64 5336}
!5337 = metadata !{i64 5337}
!5338 = metadata !{i64 5338}
!5339 = metadata !{i64 5339}
!5340 = metadata !{i64 5340}
!5341 = metadata !{i64 5341}
!5342 = metadata !{i64 5342}
!5343 = metadata !{i64 5343}
!5344 = metadata !{i64 5344}
!5345 = metadata !{i64 5345}
!5346 = metadata !{i64 5346}
!5347 = metadata !{i64 5347}
!5348 = metadata !{i64 5348}
!5349 = metadata !{i64 5349}
!5350 = metadata !{i64 5350}
!5351 = metadata !{i64 5351}
!5352 = metadata !{i64 5352}
!5353 = metadata !{i64 5353}
!5354 = metadata !{i64 5354}
!5355 = metadata !{i64 5355}
!5356 = metadata !{i64 5356}
!5357 = metadata !{i64 5357}
!5358 = metadata !{i64 5358}
!5359 = metadata !{i64 5359}
!5360 = metadata !{i64 5360}
!5361 = metadata !{i64 5361}
!5362 = metadata !{i64 5362}
!5363 = metadata !{i64 5363}
!5364 = metadata !{i64 5364}
!5365 = metadata !{i64 5365}
!5366 = metadata !{i64 5366}
!5367 = metadata !{i64 5367}
!5368 = metadata !{i64 5368}
!5369 = metadata !{i64 5369}
!5370 = metadata !{i64 5370}
!5371 = metadata !{i64 5371}
!5372 = metadata !{i64 5372}
!5373 = metadata !{i64 5373}
!5374 = metadata !{i64 5374}
!5375 = metadata !{i64 5375}
!5376 = metadata !{i64 5376}
!5377 = metadata !{i64 5377}
!5378 = metadata !{i64 5378}
!5379 = metadata !{i64 5379}
!5380 = metadata !{i64 5380}
!5381 = metadata !{i64 5381}
!5382 = metadata !{i64 5382}
!5383 = metadata !{i64 5383}
!5384 = metadata !{i64 5384}
!5385 = metadata !{i64 5385}
!5386 = metadata !{i64 5386}
!5387 = metadata !{i64 5387}
!5388 = metadata !{i64 5388}
!5389 = metadata !{i64 5389}
!5390 = metadata !{i64 5390}
!5391 = metadata !{i64 5391}
!5392 = metadata !{i64 5392}
!5393 = metadata !{i64 5393}
!5394 = metadata !{i64 5394}
!5395 = metadata !{i64 5395}
!5396 = metadata !{i64 5396}
!5397 = metadata !{i64 5397}
!5398 = metadata !{i64 5398}
!5399 = metadata !{i64 5399}
!5400 = metadata !{i64 5400}
!5401 = metadata !{i64 5401}
!5402 = metadata !{i64 5402}
!5403 = metadata !{i64 5403}
!5404 = metadata !{i64 5404}
!5405 = metadata !{i64 5405}
!5406 = metadata !{i64 5406}
!5407 = metadata !{i64 5407}
!5408 = metadata !{i64 5408}
!5409 = metadata !{i64 5409}
!5410 = metadata !{i64 5410}
!5411 = metadata !{i64 5411}
!5412 = metadata !{i64 5412}
!5413 = metadata !{i64 5413}
!5414 = metadata !{i64 5414}
!5415 = metadata !{i64 5415}
!5416 = metadata !{i64 5416}
!5417 = metadata !{i64 5417}
!5418 = metadata !{i64 5418}
!5419 = metadata !{i64 5419}
!5420 = metadata !{i64 5420}
!5421 = metadata !{i64 5421}
!5422 = metadata !{i64 5422}
!5423 = metadata !{i64 5423}
!5424 = metadata !{i64 5424}
!5425 = metadata !{i64 5425}
!5426 = metadata !{i64 5426}
!5427 = metadata !{i64 5427}
!5428 = metadata !{i64 5428}
!5429 = metadata !{i64 5429}
!5430 = metadata !{i64 5430}
!5431 = metadata !{i64 5431}
!5432 = metadata !{i64 5432}
!5433 = metadata !{i64 5433}
!5434 = metadata !{i64 5434}
!5435 = metadata !{i64 5435}
!5436 = metadata !{i64 5436}
!5437 = metadata !{i64 5437}
!5438 = metadata !{i64 5438}
!5439 = metadata !{i64 5439}
!5440 = metadata !{i64 5440}
!5441 = metadata !{i64 5441}
!5442 = metadata !{i64 5442}
!5443 = metadata !{i64 5443}
!5444 = metadata !{i64 5444}
!5445 = metadata !{i64 5445}
!5446 = metadata !{i64 5446}
!5447 = metadata !{i64 5447}
!5448 = metadata !{i64 5448}
!5449 = metadata !{i64 5449}
!5450 = metadata !{i64 5450}
!5451 = metadata !{i64 5451}
!5452 = metadata !{i64 5452}
!5453 = metadata !{i64 5453}
!5454 = metadata !{i64 5454}
!5455 = metadata !{i64 5455}
!5456 = metadata !{i64 5456}
!5457 = metadata !{i64 5457}
!5458 = metadata !{i64 5458}
!5459 = metadata !{i64 5459}
!5460 = metadata !{i64 5460}
!5461 = metadata !{i64 5461}
!5462 = metadata !{i64 5462}
!5463 = metadata !{i64 5463}
!5464 = metadata !{i64 5464}
!5465 = metadata !{i64 5465}
!5466 = metadata !{i64 5466}
!5467 = metadata !{i64 5467}
!5468 = metadata !{i64 5468}
!5469 = metadata !{i64 5469}
!5470 = metadata !{i64 5470}
!5471 = metadata !{i64 5471}
!5472 = metadata !{i64 5472}
!5473 = metadata !{i64 5473}
!5474 = metadata !{i64 5474}
!5475 = metadata !{i64 5475}
!5476 = metadata !{i64 5476}
!5477 = metadata !{i64 5477}
!5478 = metadata !{i64 5478}
!5479 = metadata !{i64 5479}
!5480 = metadata !{i64 5480}
!5481 = metadata !{i64 5481}
!5482 = metadata !{i64 5482}
!5483 = metadata !{i64 5483}
!5484 = metadata !{i64 5484}
!5485 = metadata !{i64 5485}
!5486 = metadata !{i64 5486}
!5487 = metadata !{i64 5487}
!5488 = metadata !{i64 5488}
!5489 = metadata !{i64 5489}
!5490 = metadata !{i64 5490}
!5491 = metadata !{i64 5491}
!5492 = metadata !{i64 5492}
!5493 = metadata !{i64 5493}
!5494 = metadata !{i64 5494}
!5495 = metadata !{i64 5495}
!5496 = metadata !{i64 5496}
!5497 = metadata !{i64 5497}
!5498 = metadata !{i64 5498}
!5499 = metadata !{i64 5499}
!5500 = metadata !{i64 5500}
!5501 = metadata !{i64 5501}
!5502 = metadata !{i64 5502}
!5503 = metadata !{i64 5503}
!5504 = metadata !{i64 5504}
!5505 = metadata !{i64 5505}
!5506 = metadata !{i64 5506}
!5507 = metadata !{i64 5507}
!5508 = metadata !{i64 5508}
!5509 = metadata !{i64 5509}
!5510 = metadata !{i64 5510}
!5511 = metadata !{i64 5511}
!5512 = metadata !{i64 5512}
!5513 = metadata !{i64 5513}
!5514 = metadata !{i64 5514}
!5515 = metadata !{i64 5515}
!5516 = metadata !{i64 5516}
!5517 = metadata !{i64 5517}
!5518 = metadata !{i64 5518}
!5519 = metadata !{i64 5519}
!5520 = metadata !{i64 5520}
!5521 = metadata !{i64 5521}
!5522 = metadata !{i64 5522}
!5523 = metadata !{i64 5523}
!5524 = metadata !{i64 5524}
!5525 = metadata !{i64 5525}
!5526 = metadata !{i64 5526}
!5527 = metadata !{i64 5527}
!5528 = metadata !{i64 5528}
!5529 = metadata !{i64 5529}
!5530 = metadata !{i64 5530}
!5531 = metadata !{i64 5531}
!5532 = metadata !{i64 5532}
!5533 = metadata !{i64 5533}
!5534 = metadata !{i64 5534}
!5535 = metadata !{i64 5535}
!5536 = metadata !{i64 5536}
!5537 = metadata !{i64 5537}
!5538 = metadata !{i64 5538}
!5539 = metadata !{i64 5539}
!5540 = metadata !{i64 5540}
!5541 = metadata !{i64 5541}
!5542 = metadata !{i64 5542}
!5543 = metadata !{i64 5543}
!5544 = metadata !{i64 5544}
!5545 = metadata !{i64 5545}
!5546 = metadata !{i64 5546}
!5547 = metadata !{i64 5547}
!5548 = metadata !{i64 5548}
!5549 = metadata !{i64 5549}
!5550 = metadata !{i64 5550}
!5551 = metadata !{i64 5551}
!5552 = metadata !{i64 5552}
!5553 = metadata !{i64 5553}
!5554 = metadata !{i64 5554}
!5555 = metadata !{i64 5555}
!5556 = metadata !{i64 5556}
!5557 = metadata !{i64 5557}
!5558 = metadata !{i64 5558}
!5559 = metadata !{i64 5559}
!5560 = metadata !{i64 5560}
!5561 = metadata !{i64 5561}
!5562 = metadata !{i64 5562}
!5563 = metadata !{i64 5563}
!5564 = metadata !{i64 5564}
!5565 = metadata !{i64 5565}
!5566 = metadata !{i64 5566}
!5567 = metadata !{i64 5567}
!5568 = metadata !{i64 5568}
!5569 = metadata !{i64 5569}
!5570 = metadata !{i64 5570}
!5571 = metadata !{i64 5571}
!5572 = metadata !{i64 5572}
!5573 = metadata !{i64 5573}
!5574 = metadata !{i64 5574}
!5575 = metadata !{i64 5575}
!5576 = metadata !{i64 5576}
!5577 = metadata !{i64 5577}
!5578 = metadata !{i64 5578}
!5579 = metadata !{i64 5579}
!5580 = metadata !{i64 5580}
!5581 = metadata !{i64 5581}
!5582 = metadata !{i64 5582}
!5583 = metadata !{i64 5583}
!5584 = metadata !{i64 5584}
!5585 = metadata !{i64 5585}
!5586 = metadata !{i64 5586}
!5587 = metadata !{i64 5587}
!5588 = metadata !{i64 5588}
!5589 = metadata !{i64 5589}
!5590 = metadata !{i64 5590}
!5591 = metadata !{i64 5591}
!5592 = metadata !{i64 5592}
!5593 = metadata !{i64 5593}
!5594 = metadata !{i64 5594}
!5595 = metadata !{i64 5595}
!5596 = metadata !{i64 5596}
!5597 = metadata !{i64 5597}
!5598 = metadata !{i64 5598}
!5599 = metadata !{i64 5599}
!5600 = metadata !{i64 5600}
!5601 = metadata !{i64 5601}
!5602 = metadata !{i64 5602}
!5603 = metadata !{i64 5603}
!5604 = metadata !{i64 5604}
!5605 = metadata !{i64 5605}
!5606 = metadata !{i64 5606}
!5607 = metadata !{i64 5607}
!5608 = metadata !{i64 5608}
!5609 = metadata !{i64 5609}
!5610 = metadata !{i64 5610}
!5611 = metadata !{i64 5611}
!5612 = metadata !{i64 5612}
!5613 = metadata !{i64 5613}
!5614 = metadata !{i64 5614}
!5615 = metadata !{i64 5615}
!5616 = metadata !{i64 5616}
!5617 = metadata !{i64 5617}
!5618 = metadata !{i64 5618}
!5619 = metadata !{i64 5619}
!5620 = metadata !{i64 5620}
!5621 = metadata !{i64 5621}
!5622 = metadata !{i64 5622}
!5623 = metadata !{i64 5623}
!5624 = metadata !{i64 5624}
!5625 = metadata !{i64 5625}
!5626 = metadata !{i64 5626}
!5627 = metadata !{i64 5627}
!5628 = metadata !{i64 5628}
!5629 = metadata !{i64 5629}
!5630 = metadata !{i64 5630}
!5631 = metadata !{i64 5631}
!5632 = metadata !{i64 5632}
!5633 = metadata !{i64 5633}
!5634 = metadata !{i64 5634}
!5635 = metadata !{i64 5635}
!5636 = metadata !{i64 5636}
!5637 = metadata !{i64 5637}
!5638 = metadata !{i64 5638}
!5639 = metadata !{i64 5639}
!5640 = metadata !{i64 5640}
!5641 = metadata !{i64 5641}
!5642 = metadata !{i64 5642}
!5643 = metadata !{i64 5643}
!5644 = metadata !{i64 5644}
!5645 = metadata !{i64 5645}
!5646 = metadata !{i64 5646}
!5647 = metadata !{i64 5647}
!5648 = metadata !{i64 5648}
!5649 = metadata !{i64 5649}
!5650 = metadata !{i64 5650}
!5651 = metadata !{i64 5651}
!5652 = metadata !{i64 5652}
!5653 = metadata !{i64 5653}
!5654 = metadata !{i64 5654}
!5655 = metadata !{i64 5655}
!5656 = metadata !{i64 5656}
!5657 = metadata !{i64 5657}
!5658 = metadata !{i64 5658}
!5659 = metadata !{i64 5659}
!5660 = metadata !{i64 5660}
!5661 = metadata !{i64 5661}
!5662 = metadata !{i64 5662}
!5663 = metadata !{i64 5663}
!5664 = metadata !{i64 5664}
!5665 = metadata !{i64 5665}
!5666 = metadata !{i64 5666}
!5667 = metadata !{i64 5667}
!5668 = metadata !{i64 5668}
!5669 = metadata !{i64 5669}
!5670 = metadata !{i64 5670}
!5671 = metadata !{i64 5671}
!5672 = metadata !{i64 5672}
!5673 = metadata !{i64 5673}
!5674 = metadata !{i64 5674}
!5675 = metadata !{i64 5675}
!5676 = metadata !{i64 5676}
!5677 = metadata !{i64 5677}
!5678 = metadata !{i64 5678}
!5679 = metadata !{i64 5679}
!5680 = metadata !{i64 5680}
!5681 = metadata !{i64 5681}
!5682 = metadata !{i64 5682}
!5683 = metadata !{i64 5683}
!5684 = metadata !{i64 5684}
!5685 = metadata !{i64 5685}
!5686 = metadata !{i64 5686}
!5687 = metadata !{i64 5687}
!5688 = metadata !{i64 5688}
!5689 = metadata !{i64 5689}
!5690 = metadata !{i64 5690}
!5691 = metadata !{i64 5691}
!5692 = metadata !{i64 5692}
!5693 = metadata !{i64 5693}
!5694 = metadata !{i64 5694}
!5695 = metadata !{i64 5695}
!5696 = metadata !{i64 5696}
!5697 = metadata !{i64 5697}
!5698 = metadata !{i64 5698}
!5699 = metadata !{i64 5699}
!5700 = metadata !{i64 5700}
!5701 = metadata !{i64 5701}
!5702 = metadata !{i64 5702}
!5703 = metadata !{i64 5703}
!5704 = metadata !{i64 5704}
!5705 = metadata !{i64 5705}
!5706 = metadata !{i64 5706}
!5707 = metadata !{i64 5707}
!5708 = metadata !{i64 5708}
!5709 = metadata !{i64 5709}
!5710 = metadata !{i64 5710}
!5711 = metadata !{i64 5711}
!5712 = metadata !{i64 5712}
!5713 = metadata !{i64 5713}
!5714 = metadata !{i64 5714}
!5715 = metadata !{i64 5715}
!5716 = metadata !{i64 5716}
!5717 = metadata !{i64 5717}
!5718 = metadata !{i64 5718}
!5719 = metadata !{i64 5719}
!5720 = metadata !{i64 5720}
!5721 = metadata !{i64 5721}
!5722 = metadata !{i64 5722}
!5723 = metadata !{i64 5723}
!5724 = metadata !{i64 5724}
!5725 = metadata !{i64 5725}
!5726 = metadata !{i64 5726}
!5727 = metadata !{i64 5727}
!5728 = metadata !{i64 5728}
!5729 = metadata !{i64 5729}
!5730 = metadata !{i64 5730}
!5731 = metadata !{i64 5731}
!5732 = metadata !{i64 5732}
!5733 = metadata !{i64 5733}
!5734 = metadata !{i64 5734}
!5735 = metadata !{i64 5735}
!5736 = metadata !{i64 5736}
!5737 = metadata !{i64 5737}
!5738 = metadata !{i64 5738}
!5739 = metadata !{i64 5739}
!5740 = metadata !{i64 5740}
!5741 = metadata !{i64 5741}
!5742 = metadata !{i64 5742}
!5743 = metadata !{i64 5743}
!5744 = metadata !{i64 5744}
!5745 = metadata !{i64 5745}
!5746 = metadata !{i64 5746}
!5747 = metadata !{i64 5747}
!5748 = metadata !{i64 5748}
!5749 = metadata !{i64 5749}
!5750 = metadata !{i64 5750}
!5751 = metadata !{i64 5751}
!5752 = metadata !{i64 5752}
!5753 = metadata !{i64 5753}
!5754 = metadata !{i64 5754}
!5755 = metadata !{i64 5755}
!5756 = metadata !{i64 5756}
!5757 = metadata !{i64 5757}
!5758 = metadata !{i64 5758}
!5759 = metadata !{i64 5759}
!5760 = metadata !{i64 5760}
!5761 = metadata !{i64 5761}
!5762 = metadata !{i64 5762}
!5763 = metadata !{i64 5763}
!5764 = metadata !{i64 5764}
!5765 = metadata !{i64 5765}
!5766 = metadata !{i64 5766}
!5767 = metadata !{i64 5767}
!5768 = metadata !{i64 5768}
!5769 = metadata !{i64 5769}
!5770 = metadata !{i64 5770}
!5771 = metadata !{i64 5771}
!5772 = metadata !{i64 5772}
!5773 = metadata !{i64 5773}
!5774 = metadata !{i64 5774}
!5775 = metadata !{i64 5775}
!5776 = metadata !{i64 5776}
!5777 = metadata !{i64 5777}
!5778 = metadata !{i64 5778}
!5779 = metadata !{i64 5779}
!5780 = metadata !{i64 5780}
!5781 = metadata !{i64 5781}
!5782 = metadata !{i64 5782}
!5783 = metadata !{i64 5783}
!5784 = metadata !{i64 5784}
!5785 = metadata !{i64 5785}
!5786 = metadata !{i64 5786}
!5787 = metadata !{i64 5787}
!5788 = metadata !{i64 5788}
!5789 = metadata !{i64 5789}
!5790 = metadata !{i64 5790}
!5791 = metadata !{i64 5791}
!5792 = metadata !{i64 5792}
!5793 = metadata !{i64 5793}
!5794 = metadata !{i64 5794}
!5795 = metadata !{i64 5795}
!5796 = metadata !{i64 5796}
!5797 = metadata !{i64 5797}
!5798 = metadata !{i64 5798}
!5799 = metadata !{i64 5799}
!5800 = metadata !{i64 5800}
!5801 = metadata !{i64 5801}
!5802 = metadata !{i64 5802}
!5803 = metadata !{i64 5803}
!5804 = metadata !{i64 5804}
!5805 = metadata !{i64 5805}
!5806 = metadata !{i64 5806}
!5807 = metadata !{i64 5807}
!5808 = metadata !{i64 5808}
!5809 = metadata !{i64 5809}
!5810 = metadata !{i64 5810}
!5811 = metadata !{i64 5811}
!5812 = metadata !{i64 5812}
!5813 = metadata !{i64 5813}
!5814 = metadata !{i64 5814}
!5815 = metadata !{i64 5815}
!5816 = metadata !{i64 5816}
!5817 = metadata !{i64 5817}
!5818 = metadata !{i64 5818}
!5819 = metadata !{i64 5819}
!5820 = metadata !{i64 5820}
!5821 = metadata !{i64 5821}
!5822 = metadata !{i64 5822}
!5823 = metadata !{i64 5823}
!5824 = metadata !{i64 5824}
!5825 = metadata !{i64 5825}
!5826 = metadata !{i64 5826}
!5827 = metadata !{i64 5827}
!5828 = metadata !{i64 5828}
!5829 = metadata !{i64 5829}
!5830 = metadata !{i64 5830}
!5831 = metadata !{i64 5831}
!5832 = metadata !{i64 5832}
!5833 = metadata !{i64 5833}
!5834 = metadata !{i64 5834}
!5835 = metadata !{i64 5835}
!5836 = metadata !{i64 5836}
!5837 = metadata !{i64 5837}
!5838 = metadata !{i64 5838}
!5839 = metadata !{i64 5839}
!5840 = metadata !{i64 5840}
!5841 = metadata !{i64 5841}
!5842 = metadata !{i64 5842}
!5843 = metadata !{i64 5843}
!5844 = metadata !{i64 5844}
!5845 = metadata !{i64 5845}
!5846 = metadata !{i64 5846}
!5847 = metadata !{i64 5847}
!5848 = metadata !{i64 5848}
!5849 = metadata !{i64 5849}
!5850 = metadata !{i64 5850}
!5851 = metadata !{i64 5851}
!5852 = metadata !{i64 5852}
!5853 = metadata !{i64 5853}
!5854 = metadata !{i64 5854}
!5855 = metadata !{i64 5855}
!5856 = metadata !{i64 5856}
!5857 = metadata !{i64 5857}
!5858 = metadata !{i64 5858}
!5859 = metadata !{i64 5859}
!5860 = metadata !{i64 5860}
!5861 = metadata !{i64 5861}
!5862 = metadata !{i64 5862}
!5863 = metadata !{i64 5863}
!5864 = metadata !{i64 5864}
!5865 = metadata !{i64 5865}
!5866 = metadata !{i64 5866}
!5867 = metadata !{i64 5867}
!5868 = metadata !{i64 5868}
!5869 = metadata !{i64 5869}
!5870 = metadata !{i64 5870}
!5871 = metadata !{i64 5871}
!5872 = metadata !{i64 5872}
!5873 = metadata !{i64 5873}
!5874 = metadata !{i64 5874}
!5875 = metadata !{i64 5875}
!5876 = metadata !{i64 5876}
!5877 = metadata !{i64 5877}
!5878 = metadata !{i64 5878}
!5879 = metadata !{i64 5879}
!5880 = metadata !{i64 5880}
!5881 = metadata !{i64 5881}
!5882 = metadata !{i64 5882}
!5883 = metadata !{i64 5883}
!5884 = metadata !{i64 5884}
!5885 = metadata !{i64 5885}
!5886 = metadata !{i64 5886}
!5887 = metadata !{i64 5887}
!5888 = metadata !{i64 5888}
!5889 = metadata !{i64 5889}
!5890 = metadata !{i64 5890}
!5891 = metadata !{i64 5891}
!5892 = metadata !{i64 5892}
!5893 = metadata !{i64 5893}
!5894 = metadata !{i64 5894}
!5895 = metadata !{i64 5895}
!5896 = metadata !{i64 5896}
!5897 = metadata !{i64 5897}
!5898 = metadata !{i64 5898}
!5899 = metadata !{i64 5899}
!5900 = metadata !{i64 5900}
!5901 = metadata !{i64 5901}
!5902 = metadata !{i64 5902}
!5903 = metadata !{i64 5903}
!5904 = metadata !{i64 5904}
!5905 = metadata !{i64 5905}
!5906 = metadata !{i64 5906}
!5907 = metadata !{i64 5907}
!5908 = metadata !{i64 5908}
!5909 = metadata !{i64 5909}
!5910 = metadata !{i64 5910}
!5911 = metadata !{i64 5911}
!5912 = metadata !{i64 5912}
!5913 = metadata !{i64 5913}
!5914 = metadata !{i64 5914}
!5915 = metadata !{i64 5915}
!5916 = metadata !{i64 5916}
!5917 = metadata !{i64 5917}
!5918 = metadata !{i64 5918}
!5919 = metadata !{i64 5919}
!5920 = metadata !{i64 5920}
!5921 = metadata !{i64 5921}
!5922 = metadata !{i64 5922}
!5923 = metadata !{i64 5923}
!5924 = metadata !{i64 5924}
!5925 = metadata !{i64 5925}
!5926 = metadata !{i64 5926}
!5927 = metadata !{i64 5927}
!5928 = metadata !{i64 5928}
!5929 = metadata !{i64 5929}
!5930 = metadata !{i64 5930}
!5931 = metadata !{i64 5931}
!5932 = metadata !{i64 5932}
!5933 = metadata !{i64 5933}
!5934 = metadata !{i64 5934}
!5935 = metadata !{i64 5935}
!5936 = metadata !{i64 5936}
!5937 = metadata !{i64 5937}
!5938 = metadata !{i64 5938}
!5939 = metadata !{i64 5939}
!5940 = metadata !{i64 5940}
!5941 = metadata !{i64 5941}
!5942 = metadata !{i64 5942}
!5943 = metadata !{i64 5943}
!5944 = metadata !{i64 5944}
!5945 = metadata !{i64 5945}
!5946 = metadata !{i64 5946}
!5947 = metadata !{i64 5947}
!5948 = metadata !{i64 5948}
!5949 = metadata !{i64 5949}
!5950 = metadata !{i64 5950}
!5951 = metadata !{i64 5951}
!5952 = metadata !{i64 5952}
!5953 = metadata !{i64 5953}
!5954 = metadata !{i64 5954}
!5955 = metadata !{i64 5955}
!5956 = metadata !{i64 5956}
!5957 = metadata !{i64 5957}
!5958 = metadata !{i64 5958}
!5959 = metadata !{i64 5959}
!5960 = metadata !{i64 5960}
!5961 = metadata !{i64 5961}
!5962 = metadata !{i64 5962}
!5963 = metadata !{i64 5963}
!5964 = metadata !{i64 5964}
!5965 = metadata !{i64 5965}
!5966 = metadata !{i64 5966}
!5967 = metadata !{i64 5967}
!5968 = metadata !{i64 5968}
!5969 = metadata !{i64 5969}
!5970 = metadata !{i64 5970}
!5971 = metadata !{i64 5971}
!5972 = metadata !{i64 5972}
!5973 = metadata !{i64 5973}
!5974 = metadata !{i64 5974}
!5975 = metadata !{i64 5975}
!5976 = metadata !{i64 5976}
!5977 = metadata !{i64 5977}
!5978 = metadata !{i64 5978}
!5979 = metadata !{i64 5979}
!5980 = metadata !{i64 5980}
!5981 = metadata !{i64 5981}
!5982 = metadata !{i64 5982}
!5983 = metadata !{i64 5983}
!5984 = metadata !{i64 5984}
!5985 = metadata !{i64 5985}
!5986 = metadata !{i64 5986}
!5987 = metadata !{i64 5987}
!5988 = metadata !{i64 5988}
!5989 = metadata !{i64 5989}
!5990 = metadata !{i64 5990}
!5991 = metadata !{i64 5991}
!5992 = metadata !{i64 5992}
!5993 = metadata !{i64 5993}
!5994 = metadata !{i64 5994}
!5995 = metadata !{i64 5995}
!5996 = metadata !{i64 5996}
!5997 = metadata !{i64 5997}
!5998 = metadata !{i64 5998}
!5999 = metadata !{i64 5999}
!6000 = metadata !{i64 6000}
!6001 = metadata !{i64 6001}
!6002 = metadata !{i64 6002}
!6003 = metadata !{i64 6003}
!6004 = metadata !{i64 6004}
!6005 = metadata !{i64 6005}
!6006 = metadata !{i64 6006}
!6007 = metadata !{i64 6007}
!6008 = metadata !{i64 6008}
!6009 = metadata !{i64 6009}
!6010 = metadata !{i64 6010}
!6011 = metadata !{i64 6011}
!6012 = metadata !{i64 6012}
!6013 = metadata !{i64 6013}
!6014 = metadata !{i64 6014}
!6015 = metadata !{i64 6015}
!6016 = metadata !{i64 6016}
!6017 = metadata !{i64 6017}
!6018 = metadata !{i64 6018}
!6019 = metadata !{i64 6019}
!6020 = metadata !{i64 6020}
!6021 = metadata !{i64 6021}
!6022 = metadata !{i64 6022}
!6023 = metadata !{i64 6023}
!6024 = metadata !{i64 6024}
!6025 = metadata !{i64 6025}
!6026 = metadata !{i64 6026}
!6027 = metadata !{i64 6027}
!6028 = metadata !{i64 6028}
!6029 = metadata !{i64 6029}
!6030 = metadata !{i64 6030}
!6031 = metadata !{i64 6031}
!6032 = metadata !{i64 6032}
!6033 = metadata !{i64 6033}
!6034 = metadata !{i64 6034}
!6035 = metadata !{i64 6035}
!6036 = metadata !{i64 6036}
!6037 = metadata !{i64 6037}
!6038 = metadata !{i64 6038}
!6039 = metadata !{i64 6039}
!6040 = metadata !{i64 6040}
!6041 = metadata !{i64 6041}
!6042 = metadata !{i64 6042}
!6043 = metadata !{i64 6043}
!6044 = metadata !{i64 6044}
!6045 = metadata !{i64 6045}
!6046 = metadata !{i64 6046}
!6047 = metadata !{i64 6047}
!6048 = metadata !{i64 6048}
!6049 = metadata !{i64 6049}
!6050 = metadata !{i64 6050}
!6051 = metadata !{i64 6051}
!6052 = metadata !{i64 6052}
!6053 = metadata !{i64 6053}
!6054 = metadata !{i64 6054}
!6055 = metadata !{i64 6055}
!6056 = metadata !{i64 6056}
!6057 = metadata !{i64 6057}
!6058 = metadata !{i64 6058}
!6059 = metadata !{i64 6059}
!6060 = metadata !{i64 6060}
!6061 = metadata !{i64 6061}
!6062 = metadata !{i64 6062}
!6063 = metadata !{i64 6063}
!6064 = metadata !{i64 6064}
!6065 = metadata !{i64 6065}
!6066 = metadata !{i64 6066}
!6067 = metadata !{i64 6067}
!6068 = metadata !{i64 6068}
!6069 = metadata !{i64 6069}
!6070 = metadata !{i64 6070}
!6071 = metadata !{i64 6071}
!6072 = metadata !{i64 6072}
!6073 = metadata !{i64 6073}
!6074 = metadata !{i64 6074}
!6075 = metadata !{i64 6075}
!6076 = metadata !{i64 6076}
!6077 = metadata !{i64 6077}
!6078 = metadata !{i64 6078}
!6079 = metadata !{i64 6079}
!6080 = metadata !{i64 6080}
!6081 = metadata !{i64 6081}
!6082 = metadata !{i64 6082}
!6083 = metadata !{i64 6083}
!6084 = metadata !{i64 6084}
!6085 = metadata !{i64 6085}
!6086 = metadata !{i64 6086}
!6087 = metadata !{i64 6087}
!6088 = metadata !{i64 6088}
!6089 = metadata !{i64 6089}
!6090 = metadata !{i64 6090}
!6091 = metadata !{i64 6091}
!6092 = metadata !{i64 6092}
!6093 = metadata !{i64 6093}
!6094 = metadata !{i64 6094}
!6095 = metadata !{i64 6095}
!6096 = metadata !{i64 6096}
!6097 = metadata !{i64 6097}
!6098 = metadata !{i64 6098}
!6099 = metadata !{i64 6099}
!6100 = metadata !{i64 6100}
!6101 = metadata !{i64 6101}
!6102 = metadata !{i64 6102}
!6103 = metadata !{i64 6103}
!6104 = metadata !{i64 6104}
!6105 = metadata !{i64 6105}
!6106 = metadata !{i64 6106}
!6107 = metadata !{i64 6107}
!6108 = metadata !{i64 6108}
!6109 = metadata !{i64 6109}
!6110 = metadata !{i64 6110}
!6111 = metadata !{i64 6111}
!6112 = metadata !{i64 6112}
!6113 = metadata !{i64 6113}
!6114 = metadata !{i64 6114}
!6115 = metadata !{i64 6115}
!6116 = metadata !{i64 6116}
!6117 = metadata !{i64 6117}
!6118 = metadata !{i64 6118}
!6119 = metadata !{i64 6119}
!6120 = metadata !{i64 6120}
!6121 = metadata !{i64 6121}
!6122 = metadata !{i64 6122}
!6123 = metadata !{i64 6123}
!6124 = metadata !{i64 6124}
!6125 = metadata !{i64 6125}
!6126 = metadata !{i64 6126}
!6127 = metadata !{i64 6127}
!6128 = metadata !{i64 6128}
!6129 = metadata !{i64 6129}
!6130 = metadata !{i64 6130}
!6131 = metadata !{i64 6131}
!6132 = metadata !{i64 6132}
!6133 = metadata !{i64 6133}
!6134 = metadata !{i64 6134}
!6135 = metadata !{i64 6135}
!6136 = metadata !{i64 6136}
!6137 = metadata !{i64 6137}
!6138 = metadata !{i64 6138}
!6139 = metadata !{i64 6139}
!6140 = metadata !{i64 6140}
!6141 = metadata !{i64 6141}
!6142 = metadata !{i64 6142}
!6143 = metadata !{i64 6143}
!6144 = metadata !{i64 6144}
!6145 = metadata !{i64 6145}
!6146 = metadata !{i64 6146}
!6147 = metadata !{i64 6147}
!6148 = metadata !{i64 6148}
!6149 = metadata !{i64 6149}
!6150 = metadata !{i64 6150}
!6151 = metadata !{i64 6151}
!6152 = metadata !{i64 6152}
!6153 = metadata !{i64 6153}
!6154 = metadata !{i64 6154}
!6155 = metadata !{i64 6155}
!6156 = metadata !{i64 6156}
!6157 = metadata !{i64 6157}
!6158 = metadata !{i64 6158}
!6159 = metadata !{i64 6159}
!6160 = metadata !{i64 6160}
!6161 = metadata !{i64 6161}
!6162 = metadata !{i64 6162}
!6163 = metadata !{i64 6163}
!6164 = metadata !{i64 6164}
!6165 = metadata !{i64 6165}
!6166 = metadata !{i64 6166}
!6167 = metadata !{i64 6167}
!6168 = metadata !{i64 6168}
!6169 = metadata !{i64 6169}
!6170 = metadata !{i64 6170}
!6171 = metadata !{i64 6171}
!6172 = metadata !{i64 6172}
!6173 = metadata !{i64 6173}
!6174 = metadata !{i64 6174}
!6175 = metadata !{i64 6175}
!6176 = metadata !{i64 6176}
!6177 = metadata !{i64 6177}
!6178 = metadata !{i64 6178}
!6179 = metadata !{i64 6179}
!6180 = metadata !{i64 6180}
!6181 = metadata !{i64 6181}
!6182 = metadata !{i64 6182}
!6183 = metadata !{i64 6183}
!6184 = metadata !{i64 6184}
!6185 = metadata !{i64 6185}
!6186 = metadata !{i64 6186}
!6187 = metadata !{i64 6187}
!6188 = metadata !{i64 6188}
!6189 = metadata !{i64 6189}
!6190 = metadata !{i64 6190}
!6191 = metadata !{i64 6191}
!6192 = metadata !{i64 6192}
!6193 = metadata !{i64 6193}
!6194 = metadata !{i64 6194}
!6195 = metadata !{i64 6195}
!6196 = metadata !{i64 6196}
!6197 = metadata !{i64 6197}
!6198 = metadata !{i64 6198}
!6199 = metadata !{i64 6199}
!6200 = metadata !{i64 6200}
!6201 = metadata !{i64 6201}
!6202 = metadata !{i64 6202}
!6203 = metadata !{i64 6203}
!6204 = metadata !{i64 6204}
!6205 = metadata !{i64 6205}
!6206 = metadata !{i64 6206}
!6207 = metadata !{i64 6207}
!6208 = metadata !{i64 6208}
!6209 = metadata !{i64 6209}
!6210 = metadata !{i64 6210}
!6211 = metadata !{i64 6211}
!6212 = metadata !{i64 6212}
!6213 = metadata !{i64 6213}
!6214 = metadata !{i64 6214}
!6215 = metadata !{i64 6215}
!6216 = metadata !{i64 6216}
!6217 = metadata !{i64 6217}
!6218 = metadata !{i64 6218}
!6219 = metadata !{i64 6219}
!6220 = metadata !{i64 6220}
!6221 = metadata !{i64 6221}
!6222 = metadata !{i64 6222}
!6223 = metadata !{i64 6223}
!6224 = metadata !{i64 6224}
!6225 = metadata !{i64 6225}
!6226 = metadata !{i64 6226}
!6227 = metadata !{i64 6227}
!6228 = metadata !{i64 6228}
!6229 = metadata !{i64 6229}
!6230 = metadata !{i64 6230}
!6231 = metadata !{i64 6231}
!6232 = metadata !{i64 6232}
!6233 = metadata !{i64 6233}
!6234 = metadata !{i64 6234}
!6235 = metadata !{i64 6235}
!6236 = metadata !{i64 6236}
!6237 = metadata !{i64 6237}
!6238 = metadata !{i64 6238}
!6239 = metadata !{i64 6239}
!6240 = metadata !{i64 6240}
!6241 = metadata !{i64 6241}
!6242 = metadata !{i64 6242}
!6243 = metadata !{i64 6243}
!6244 = metadata !{i64 6244}
!6245 = metadata !{i64 6245}
!6246 = metadata !{i64 6246}
!6247 = metadata !{i64 6247}
!6248 = metadata !{i64 6248}
!6249 = metadata !{i64 6249}
!6250 = metadata !{i64 6250}
!6251 = metadata !{i64 6251}
!6252 = metadata !{i64 6252}
!6253 = metadata !{i64 6253}
!6254 = metadata !{i64 6254}
!6255 = metadata !{i64 6255}
!6256 = metadata !{i64 6256}
!6257 = metadata !{i64 6257}
!6258 = metadata !{i64 6258}
!6259 = metadata !{i64 6259}
!6260 = metadata !{i64 6260}
!6261 = metadata !{i64 6261}
!6262 = metadata !{i64 6262}
!6263 = metadata !{i64 6263}
!6264 = metadata !{i64 6264}
!6265 = metadata !{i64 6265}
!6266 = metadata !{i64 6266}
!6267 = metadata !{i64 6267}
!6268 = metadata !{i64 6268}
!6269 = metadata !{i64 6269}
!6270 = metadata !{i64 6270}
!6271 = metadata !{i64 6271}
!6272 = metadata !{i64 6272}
!6273 = metadata !{i64 6273}
!6274 = metadata !{i64 6274}
!6275 = metadata !{i64 6275}
!6276 = metadata !{i64 6276}
!6277 = metadata !{i64 6277}
!6278 = metadata !{i64 6278}
!6279 = metadata !{i64 6279}
!6280 = metadata !{i64 6280}
!6281 = metadata !{i64 6281}
!6282 = metadata !{i64 6282}
!6283 = metadata !{i64 6283}
!6284 = metadata !{i64 6284}
!6285 = metadata !{i64 6285}
!6286 = metadata !{i64 6286}
!6287 = metadata !{i64 6287}
!6288 = metadata !{i64 6288}
!6289 = metadata !{i64 6289}
!6290 = metadata !{i64 6290}
!6291 = metadata !{i64 6291}
!6292 = metadata !{i64 6292}
!6293 = metadata !{i64 6293}
!6294 = metadata !{i64 6294}
!6295 = metadata !{i64 6295}
!6296 = metadata !{i64 6296}
!6297 = metadata !{i64 6297}
!6298 = metadata !{i64 6298}
!6299 = metadata !{i64 6299}
!6300 = metadata !{i64 6300}
!6301 = metadata !{i64 6301}
!6302 = metadata !{i64 6302}
!6303 = metadata !{i64 6303}
!6304 = metadata !{i64 6304}
!6305 = metadata !{i64 6305}
!6306 = metadata !{i64 6306}
!6307 = metadata !{i64 6307}
!6308 = metadata !{i64 6308}
!6309 = metadata !{i64 6309}
!6310 = metadata !{i64 6310}
!6311 = metadata !{i64 6311}
!6312 = metadata !{i64 6312}
!6313 = metadata !{i64 6313}
!6314 = metadata !{i64 6314}
!6315 = metadata !{i64 6315}
!6316 = metadata !{i64 6316}
!6317 = metadata !{i64 6317}
!6318 = metadata !{i64 6318}
!6319 = metadata !{i64 6319}
!6320 = metadata !{i64 6320}
!6321 = metadata !{i64 6321}
!6322 = metadata !{i64 6322}
!6323 = metadata !{i64 6323}
!6324 = metadata !{i64 6324}
!6325 = metadata !{i64 6325}
!6326 = metadata !{i64 6326}
!6327 = metadata !{i64 6327}
!6328 = metadata !{i64 6328}
!6329 = metadata !{i64 6329}
!6330 = metadata !{i64 6330}
!6331 = metadata !{i64 6331}
!6332 = metadata !{i64 6332}
!6333 = metadata !{i64 6333}
!6334 = metadata !{i64 6334}
!6335 = metadata !{i64 6335}
!6336 = metadata !{i64 6336}
!6337 = metadata !{i64 6337}
!6338 = metadata !{i64 6338}
!6339 = metadata !{i64 6339}
!6340 = metadata !{i64 6340}
!6341 = metadata !{i64 6341}
!6342 = metadata !{i64 6342}
!6343 = metadata !{i64 6343}
!6344 = metadata !{i64 6344}
!6345 = metadata !{i64 6345}
!6346 = metadata !{i64 6346}
!6347 = metadata !{i64 6347}
!6348 = metadata !{i64 6348}
!6349 = metadata !{i64 6349}
!6350 = metadata !{i64 6350}
!6351 = metadata !{i64 6351}
!6352 = metadata !{i64 6352}
!6353 = metadata !{i64 6353}
!6354 = metadata !{i64 6354}
!6355 = metadata !{i64 6355}
!6356 = metadata !{i64 6356}
!6357 = metadata !{i64 6357}
!6358 = metadata !{i64 6358}
!6359 = metadata !{i64 6359}
!6360 = metadata !{i64 6360}
!6361 = metadata !{i64 6361}
!6362 = metadata !{i64 6362}
!6363 = metadata !{i64 6363}
!6364 = metadata !{i64 6364}
!6365 = metadata !{i64 6365}
!6366 = metadata !{i64 6366}
!6367 = metadata !{i64 6367}
!6368 = metadata !{i64 6368}
!6369 = metadata !{i64 6369}
!6370 = metadata !{i64 6370}
!6371 = metadata !{i64 6371}
!6372 = metadata !{i64 6372}
!6373 = metadata !{i64 6373}
!6374 = metadata !{i64 6374}
!6375 = metadata !{i64 6375}
!6376 = metadata !{i64 6376}
!6377 = metadata !{i64 6377}
!6378 = metadata !{i64 6378}
!6379 = metadata !{i64 6379}
!6380 = metadata !{i64 6380}
!6381 = metadata !{i64 6381}
!6382 = metadata !{i64 6382}
!6383 = metadata !{i64 6383}
!6384 = metadata !{i64 6384}
!6385 = metadata !{i64 6385}
!6386 = metadata !{i64 6386}
!6387 = metadata !{i64 6387}
!6388 = metadata !{i64 6388}
!6389 = metadata !{i64 6389}
!6390 = metadata !{i64 6390}
!6391 = metadata !{i64 6391}
!6392 = metadata !{i64 6392}
!6393 = metadata !{i64 6393}
!6394 = metadata !{i64 6394}
!6395 = metadata !{i64 6395}
!6396 = metadata !{i64 6396}
!6397 = metadata !{i64 6397}
!6398 = metadata !{i64 6398}
!6399 = metadata !{i64 6399}
!6400 = metadata !{i64 6400}
!6401 = metadata !{i64 6401}
!6402 = metadata !{i64 6402}
!6403 = metadata !{i64 6403}
!6404 = metadata !{i64 6404}
!6405 = metadata !{i64 6405}
!6406 = metadata !{i64 6406}
!6407 = metadata !{i64 6407}
!6408 = metadata !{i64 6408}
!6409 = metadata !{i64 6409}
!6410 = metadata !{i64 6410}
!6411 = metadata !{i64 6411}
!6412 = metadata !{i64 6412}
!6413 = metadata !{i64 6413}
!6414 = metadata !{i64 6414}
!6415 = metadata !{i64 6415}
!6416 = metadata !{i64 6416}
!6417 = metadata !{i64 6417}
!6418 = metadata !{i64 6418}
!6419 = metadata !{i64 6419}
!6420 = metadata !{i64 6420}
!6421 = metadata !{i64 6421}
!6422 = metadata !{i64 6422}
!6423 = metadata !{i64 6423}
!6424 = metadata !{i64 6424}
!6425 = metadata !{i64 6425}
!6426 = metadata !{i64 6426}
!6427 = metadata !{i64 6427}
!6428 = metadata !{i64 6428}
!6429 = metadata !{i64 6429}
!6430 = metadata !{i64 6430}
!6431 = metadata !{i64 6431}
!6432 = metadata !{i64 6432}
!6433 = metadata !{i64 6433}
!6434 = metadata !{i64 6434}
!6435 = metadata !{i64 6435}
!6436 = metadata !{i64 6436}
!6437 = metadata !{i64 6437}
!6438 = metadata !{i64 6438}
!6439 = metadata !{i64 6439}
!6440 = metadata !{i64 6440}
!6441 = metadata !{i64 6441}
!6442 = metadata !{i64 6442}
!6443 = metadata !{i64 6443}
!6444 = metadata !{i64 6444}
!6445 = metadata !{i64 6445}
!6446 = metadata !{i64 6446}
!6447 = metadata !{i64 6447}
!6448 = metadata !{i64 6448}
!6449 = metadata !{i64 6449}
!6450 = metadata !{i64 6450}
!6451 = metadata !{i64 6451}
!6452 = metadata !{i64 6452}
!6453 = metadata !{i64 6453}
!6454 = metadata !{i64 6454}
!6455 = metadata !{i64 6455}
!6456 = metadata !{i64 6456}
!6457 = metadata !{i64 6457}
!6458 = metadata !{i64 6458}
!6459 = metadata !{i64 6459}
!6460 = metadata !{i64 6460}
!6461 = metadata !{i64 6461}
!6462 = metadata !{i64 6462}
!6463 = metadata !{i64 6463}
!6464 = metadata !{i64 6464}
!6465 = metadata !{i64 6465}
!6466 = metadata !{i64 6466}
!6467 = metadata !{i64 6467}
!6468 = metadata !{i64 6468}
!6469 = metadata !{i64 6469}
!6470 = metadata !{i64 6470}
!6471 = metadata !{i64 6471}
!6472 = metadata !{i64 6472}
!6473 = metadata !{i64 6473}
!6474 = metadata !{i64 6474}
!6475 = metadata !{i64 6475}
!6476 = metadata !{i64 6476}
!6477 = metadata !{i64 6477}
!6478 = metadata !{i64 6478}
!6479 = metadata !{i64 6479}
!6480 = metadata !{i64 6480}
!6481 = metadata !{i64 6481}
!6482 = metadata !{i64 6482}
!6483 = metadata !{i64 6483}
!6484 = metadata !{i64 6484}
!6485 = metadata !{i64 6485}
!6486 = metadata !{i64 6486}
!6487 = metadata !{i64 6487}
!6488 = metadata !{i64 6488}
!6489 = metadata !{i64 6489}
!6490 = metadata !{i64 6490}
!6491 = metadata !{i64 6491}
!6492 = metadata !{i64 6492}
!6493 = metadata !{i64 6493}
!6494 = metadata !{i64 6494}
!6495 = metadata !{i64 6495}
!6496 = metadata !{i64 6496}
!6497 = metadata !{i64 6497}
!6498 = metadata !{i64 6498}
!6499 = metadata !{i64 6499}
!6500 = metadata !{i64 6500}
!6501 = metadata !{i64 6501}
!6502 = metadata !{i64 6502}
!6503 = metadata !{i64 6503}
!6504 = metadata !{i64 6504}
!6505 = metadata !{i64 6505}
!6506 = metadata !{i64 6506}
!6507 = metadata !{i64 6507}
!6508 = metadata !{i64 6508}
!6509 = metadata !{i64 6509}
!6510 = metadata !{i64 6510}
!6511 = metadata !{i64 6511}
!6512 = metadata !{i64 6512}
!6513 = metadata !{i64 6513}
!6514 = metadata !{i64 6514}
!6515 = metadata !{i64 6515}
!6516 = metadata !{i64 6516}
!6517 = metadata !{i64 6517}
!6518 = metadata !{i64 6518}
!6519 = metadata !{i64 6519}
!6520 = metadata !{i64 6520}
!6521 = metadata !{i64 6521}
!6522 = metadata !{i64 6522}
!6523 = metadata !{i64 6523}
!6524 = metadata !{i64 6524}
!6525 = metadata !{i64 6525}
!6526 = metadata !{i64 6526}
!6527 = metadata !{i64 6527}
!6528 = metadata !{i64 6528}
!6529 = metadata !{i64 6529}
!6530 = metadata !{i64 6530}
!6531 = metadata !{i64 6531}
!6532 = metadata !{i64 6532}
!6533 = metadata !{i64 6533}
!6534 = metadata !{i64 6534}
!6535 = metadata !{i64 6535}
!6536 = metadata !{i64 6536}
!6537 = metadata !{i64 6537}
!6538 = metadata !{i64 6538}
!6539 = metadata !{i64 6539}
!6540 = metadata !{i64 6540}
!6541 = metadata !{i64 6541}
!6542 = metadata !{i64 6542}
!6543 = metadata !{i64 6543}
!6544 = metadata !{i64 6544}
!6545 = metadata !{i64 6545}
!6546 = metadata !{i64 6546}
!6547 = metadata !{i64 6547}
!6548 = metadata !{i64 6548}
!6549 = metadata !{i64 6549}
!6550 = metadata !{i64 6550}
!6551 = metadata !{i64 6551}
!6552 = metadata !{i64 6552}
!6553 = metadata !{i64 6553}
!6554 = metadata !{i64 6554}
!6555 = metadata !{i64 6555}
!6556 = metadata !{i64 6556}
!6557 = metadata !{i64 6557}
!6558 = metadata !{i64 6558}
!6559 = metadata !{i64 6559}
!6560 = metadata !{i64 6560}
!6561 = metadata !{i64 6561}
!6562 = metadata !{i64 6562}
!6563 = metadata !{i64 6563}
!6564 = metadata !{i64 6564}
!6565 = metadata !{i64 6565}
!6566 = metadata !{i64 6566}
!6567 = metadata !{i64 6567}
!6568 = metadata !{i64 6568}
!6569 = metadata !{i64 6569}
!6570 = metadata !{i64 6570}
!6571 = metadata !{i64 6571}
!6572 = metadata !{i64 6572}
!6573 = metadata !{i64 6573}
!6574 = metadata !{i64 6574}
!6575 = metadata !{i64 6575}
!6576 = metadata !{i64 6576}
!6577 = metadata !{i64 6577}
!6578 = metadata !{i64 6578}
!6579 = metadata !{i64 6579}
!6580 = metadata !{i64 6580}
!6581 = metadata !{i64 6581}
!6582 = metadata !{i64 6582}
!6583 = metadata !{i64 6583}
!6584 = metadata !{i64 6584}
!6585 = metadata !{i64 6585}
!6586 = metadata !{i64 6586}
!6587 = metadata !{i64 6587}
!6588 = metadata !{i64 6588}
!6589 = metadata !{i64 6589}
!6590 = metadata !{i64 6590}
!6591 = metadata !{i64 6591}
!6592 = metadata !{i64 6592}
!6593 = metadata !{i64 6593}
!6594 = metadata !{i64 6594}
!6595 = metadata !{i64 6595}
!6596 = metadata !{i64 6596}
!6597 = metadata !{i64 6597}
!6598 = metadata !{i64 6598}
!6599 = metadata !{i64 6599}
!6600 = metadata !{i64 6600}
!6601 = metadata !{i64 6601}
!6602 = metadata !{i64 6602}
!6603 = metadata !{i64 6603}
!6604 = metadata !{i64 6604}
!6605 = metadata !{i64 6605}
!6606 = metadata !{i64 6606}
!6607 = metadata !{i64 6607}
!6608 = metadata !{i64 6608}
!6609 = metadata !{i64 6609}
!6610 = metadata !{i64 6610}
!6611 = metadata !{i64 6611}
!6612 = metadata !{i64 6612}
!6613 = metadata !{i64 6613}
!6614 = metadata !{i64 6614}
!6615 = metadata !{i64 6615}
!6616 = metadata !{i64 6616}
!6617 = metadata !{i64 6617}
!6618 = metadata !{i64 6618}
!6619 = metadata !{i64 6619}
!6620 = metadata !{i64 6620}
!6621 = metadata !{i64 6621}
!6622 = metadata !{i64 6622}
!6623 = metadata !{i64 6623}
!6624 = metadata !{i64 6624}
!6625 = metadata !{i64 6625}
!6626 = metadata !{i64 6626}
!6627 = metadata !{i64 6627}
!6628 = metadata !{i64 6628}
!6629 = metadata !{i64 6629}
!6630 = metadata !{i64 6630}
!6631 = metadata !{i64 6631}
!6632 = metadata !{i64 6632}
!6633 = metadata !{i64 6633}
!6634 = metadata !{i64 6634}
!6635 = metadata !{i64 6635}
!6636 = metadata !{i64 6636}
!6637 = metadata !{i64 6637}
!6638 = metadata !{i64 6638}
!6639 = metadata !{i64 6639}
!6640 = metadata !{i64 6640}
!6641 = metadata !{i64 6641}
!6642 = metadata !{i64 6642}
!6643 = metadata !{i64 6643}
!6644 = metadata !{i64 6644}
!6645 = metadata !{i64 6645}
!6646 = metadata !{i64 6646}
!6647 = metadata !{i64 6647}
!6648 = metadata !{i64 6648}
!6649 = metadata !{i64 6649}
!6650 = metadata !{i64 6650}
!6651 = metadata !{i64 6651}
!6652 = metadata !{i64 6652}
!6653 = metadata !{i64 6653}
!6654 = metadata !{i64 6654}
!6655 = metadata !{i64 6655}
!6656 = metadata !{i64 6656}
!6657 = metadata !{i64 6657}
!6658 = metadata !{i64 6658}
!6659 = metadata !{i64 6659}
!6660 = metadata !{i64 6660}
!6661 = metadata !{i64 6661}
!6662 = metadata !{i64 6662}
!6663 = metadata !{i64 6663}
!6664 = metadata !{i64 6664}
!6665 = metadata !{i64 6665}
!6666 = metadata !{i64 6666}
!6667 = metadata !{i64 6667}
!6668 = metadata !{i64 6668}
!6669 = metadata !{i64 6669}
!6670 = metadata !{i64 6670}
!6671 = metadata !{i64 6671}
!6672 = metadata !{i64 6672}
!6673 = metadata !{i64 6673}
!6674 = metadata !{i64 6674}
!6675 = metadata !{i64 6675}
!6676 = metadata !{i64 6676}
!6677 = metadata !{i64 6677}
!6678 = metadata !{i64 6678}
!6679 = metadata !{i64 6679}
!6680 = metadata !{i64 6680}
!6681 = metadata !{i64 6681}
!6682 = metadata !{i64 6682}
!6683 = metadata !{i64 6683}
!6684 = metadata !{i64 6684}
!6685 = metadata !{i64 6685}
!6686 = metadata !{i64 6686}
!6687 = metadata !{i64 6687}
!6688 = metadata !{i64 6688}
!6689 = metadata !{i64 6689}
!6690 = metadata !{i64 6690}
!6691 = metadata !{i64 6691}
!6692 = metadata !{i64 6692}
!6693 = metadata !{i64 6693}
!6694 = metadata !{i64 6694}
!6695 = metadata !{i64 6695}
!6696 = metadata !{i64 6696}
!6697 = metadata !{i64 6697}
!6698 = metadata !{i64 6698}
!6699 = metadata !{i64 6699}
!6700 = metadata !{i64 6700}
!6701 = metadata !{i64 6701}
!6702 = metadata !{i64 6702}
!6703 = metadata !{i64 6703}
!6704 = metadata !{i64 6704}
!6705 = metadata !{i64 6705}
!6706 = metadata !{i64 6706}
!6707 = metadata !{i64 6707}
!6708 = metadata !{i64 6708}
!6709 = metadata !{i64 6709}
!6710 = metadata !{i64 6710}
!6711 = metadata !{i64 6711}
!6712 = metadata !{i64 6712}
!6713 = metadata !{i64 6713}
!6714 = metadata !{i64 6714}
!6715 = metadata !{i64 6715}
!6716 = metadata !{i64 6716}
!6717 = metadata !{i64 6717}
!6718 = metadata !{i64 6718}
!6719 = metadata !{i64 6719}
!6720 = metadata !{i64 6720}
!6721 = metadata !{i64 6721}
!6722 = metadata !{i64 6722}
!6723 = metadata !{i64 6723}
!6724 = metadata !{i64 6724}
!6725 = metadata !{i64 6725}
!6726 = metadata !{i64 6726}
!6727 = metadata !{i64 6727}
!6728 = metadata !{i64 6728}
!6729 = metadata !{i64 6729}
!6730 = metadata !{i64 6730}
!6731 = metadata !{i64 6731}
!6732 = metadata !{i64 6732}
!6733 = metadata !{i64 6733}
!6734 = metadata !{i64 6734}
!6735 = metadata !{i64 6735}
!6736 = metadata !{i64 6736}
!6737 = metadata !{i64 6737}
!6738 = metadata !{i64 6738}
!6739 = metadata !{i64 6739}
!6740 = metadata !{i64 6740}
!6741 = metadata !{i64 6741}
!6742 = metadata !{i64 6742}
!6743 = metadata !{i64 6743}
!6744 = metadata !{i64 6744}
!6745 = metadata !{i64 6745}
!6746 = metadata !{i64 6746}
!6747 = metadata !{i64 6747}
!6748 = metadata !{i64 6748}
!6749 = metadata !{i64 6749}
!6750 = metadata !{i64 6750}
!6751 = metadata !{i64 6751}
!6752 = metadata !{i64 6752}
!6753 = metadata !{i64 6753}
!6754 = metadata !{i64 6754}
!6755 = metadata !{i64 6755}
!6756 = metadata !{i64 6756}
!6757 = metadata !{i64 6757}
!6758 = metadata !{i64 6758}
!6759 = metadata !{i64 6759}
!6760 = metadata !{i64 6760}
!6761 = metadata !{i64 6761}
!6762 = metadata !{i64 6762}
!6763 = metadata !{i64 6763}
!6764 = metadata !{i64 6764}
!6765 = metadata !{i64 6765}
!6766 = metadata !{i64 6766}
!6767 = metadata !{i64 6767}
!6768 = metadata !{i64 6768}
!6769 = metadata !{i64 6769}
!6770 = metadata !{i64 6770}
!6771 = metadata !{i64 6771}
!6772 = metadata !{i64 6772}
!6773 = metadata !{i64 6773}
!6774 = metadata !{i64 6774}
!6775 = metadata !{i64 6775}
!6776 = metadata !{i64 6776}
!6777 = metadata !{i64 6777}
!6778 = metadata !{i64 6778}
!6779 = metadata !{i64 6779}
!6780 = metadata !{i64 6780}
!6781 = metadata !{i64 6781}
!6782 = metadata !{i64 6782}
!6783 = metadata !{i64 6783}
!6784 = metadata !{i64 6784}
!6785 = metadata !{i64 6785}
!6786 = metadata !{i64 6786}
!6787 = metadata !{i64 6787}
!6788 = metadata !{i64 6788}
!6789 = metadata !{i64 6789}
!6790 = metadata !{i64 6790}
!6791 = metadata !{i64 6791}
!6792 = metadata !{i64 6792}
!6793 = metadata !{i64 6793}
!6794 = metadata !{i64 6794}
!6795 = metadata !{i64 6795}
!6796 = metadata !{i64 6796}
!6797 = metadata !{i64 6797}
!6798 = metadata !{i64 6798}
!6799 = metadata !{i64 6799}
!6800 = metadata !{i64 6800}
!6801 = metadata !{i64 6801}
!6802 = metadata !{i64 6802}
!6803 = metadata !{i64 6803}
!6804 = metadata !{i64 6804}
!6805 = metadata !{i64 6805}
!6806 = metadata !{i64 6806}
!6807 = metadata !{i64 6807}
!6808 = metadata !{i64 6808}
!6809 = metadata !{i64 6809}
!6810 = metadata !{i64 6810}
!6811 = metadata !{i64 6811}
!6812 = metadata !{i64 6812}
!6813 = metadata !{i64 6813}
!6814 = metadata !{i64 6814}
!6815 = metadata !{i64 6815}
!6816 = metadata !{i64 6816}
!6817 = metadata !{i64 6817}
!6818 = metadata !{i64 6818}
!6819 = metadata !{i64 6819}
!6820 = metadata !{i64 6820}
!6821 = metadata !{i64 6821}
!6822 = metadata !{i64 6822}
!6823 = metadata !{i64 6823}
!6824 = metadata !{i64 6824}
!6825 = metadata !{i64 6825}
!6826 = metadata !{i64 6826}
!6827 = metadata !{i64 6827}
!6828 = metadata !{i64 6828}
!6829 = metadata !{i64 6829}
!6830 = metadata !{i64 6830}
!6831 = metadata !{i64 6831}
!6832 = metadata !{i64 6832}
!6833 = metadata !{i64 6833}
!6834 = metadata !{i64 6834}
!6835 = metadata !{i64 6835}
!6836 = metadata !{i64 6836}
!6837 = metadata !{i64 6837}
!6838 = metadata !{i64 6838}
!6839 = metadata !{i64 6839}
!6840 = metadata !{i64 6840}
!6841 = metadata !{i64 6841}
!6842 = metadata !{i64 6842}
!6843 = metadata !{i64 6843}
!6844 = metadata !{i64 6844}
!6845 = metadata !{i64 6845}
!6846 = metadata !{i64 6846}
!6847 = metadata !{i64 6847}
!6848 = metadata !{i64 6848}
!6849 = metadata !{i64 6849}
!6850 = metadata !{i64 6850}
!6851 = metadata !{i64 6851}
!6852 = metadata !{i64 6852}
!6853 = metadata !{i64 6853}
!6854 = metadata !{i64 6854}
!6855 = metadata !{i64 6855}
!6856 = metadata !{i64 6856}
!6857 = metadata !{i64 6857}
!6858 = metadata !{i64 6858}
!6859 = metadata !{i64 6859}
!6860 = metadata !{i64 6860}
!6861 = metadata !{i64 6861}
!6862 = metadata !{i64 6862}
!6863 = metadata !{i64 6863}
!6864 = metadata !{i64 6864}
!6865 = metadata !{i64 6865}
!6866 = metadata !{i64 6866}
!6867 = metadata !{i64 6867}
!6868 = metadata !{i64 6868}
!6869 = metadata !{i64 6869}
!6870 = metadata !{i64 6870}
!6871 = metadata !{i64 6871}
!6872 = metadata !{i64 6872}
!6873 = metadata !{i64 6873}
!6874 = metadata !{i64 6874}
!6875 = metadata !{i64 6875}
!6876 = metadata !{i64 6876}
!6877 = metadata !{i64 6877}
!6878 = metadata !{i64 6878}
!6879 = metadata !{i64 6879}
!6880 = metadata !{i64 6880}
!6881 = metadata !{i64 6881}
!6882 = metadata !{i64 6882}
!6883 = metadata !{i64 6883}
!6884 = metadata !{i64 6884}
!6885 = metadata !{i64 6885}
!6886 = metadata !{i64 6886}
!6887 = metadata !{i64 6887}
!6888 = metadata !{i64 6888}
!6889 = metadata !{i64 6889}
!6890 = metadata !{i64 6890}
!6891 = metadata !{i64 6891}
!6892 = metadata !{i64 6892}
!6893 = metadata !{i64 6893}
!6894 = metadata !{i64 6894}
!6895 = metadata !{i64 6895}
!6896 = metadata !{i64 6896}
!6897 = metadata !{i64 6897}
!6898 = metadata !{i64 6898}
!6899 = metadata !{i64 6899}
!6900 = metadata !{i64 6900}
!6901 = metadata !{i64 6901}
!6902 = metadata !{i64 6902}
!6903 = metadata !{i64 6903}
!6904 = metadata !{i64 6904}
!6905 = metadata !{i64 6905}
!6906 = metadata !{i64 6906}
!6907 = metadata !{i64 6907}
!6908 = metadata !{i64 6908}
!6909 = metadata !{i64 6909}
!6910 = metadata !{i64 6910}
!6911 = metadata !{i64 6911}
!6912 = metadata !{i64 6912}
!6913 = metadata !{i64 6913}
!6914 = metadata !{i64 6914}
!6915 = metadata !{i64 6915}
!6916 = metadata !{i64 6916}
!6917 = metadata !{i64 6917}
!6918 = metadata !{i64 6918}
!6919 = metadata !{i64 6919}
!6920 = metadata !{i64 6920}
!6921 = metadata !{i64 6921}
!6922 = metadata !{i64 6922}
!6923 = metadata !{i64 6923}
!6924 = metadata !{i64 6924}
!6925 = metadata !{i64 6925}
!6926 = metadata !{i64 6926}
!6927 = metadata !{i64 6927}
!6928 = metadata !{i64 6928}
!6929 = metadata !{i64 6929}
!6930 = metadata !{i64 6930}
!6931 = metadata !{i64 6931}
!6932 = metadata !{i64 6932}
!6933 = metadata !{i64 6933}
!6934 = metadata !{i64 6934}
!6935 = metadata !{i64 6935}
!6936 = metadata !{i64 6936}
!6937 = metadata !{i64 6937}
!6938 = metadata !{i64 6938}
!6939 = metadata !{i64 6939}
!6940 = metadata !{i64 6940}
!6941 = metadata !{i64 6941}
!6942 = metadata !{i64 6942}
!6943 = metadata !{i64 6943}
!6944 = metadata !{i64 6944}
!6945 = metadata !{i64 6945}
!6946 = metadata !{i64 6946}
!6947 = metadata !{i64 6947}
!6948 = metadata !{i64 6948}
!6949 = metadata !{i64 6949}
!6950 = metadata !{i64 6950}
!6951 = metadata !{i64 6951}
!6952 = metadata !{i64 6952}
!6953 = metadata !{i64 6953}
!6954 = metadata !{i64 6954}
!6955 = metadata !{i64 6955}
!6956 = metadata !{i64 6956}
!6957 = metadata !{i64 6957}
!6958 = metadata !{i64 6958}
!6959 = metadata !{i64 6959}
!6960 = metadata !{i64 6960}
!6961 = metadata !{i64 6961}
!6962 = metadata !{i64 6962}
!6963 = metadata !{i64 6963}
!6964 = metadata !{i64 6964}
!6965 = metadata !{i64 6965}
!6966 = metadata !{i64 6966}
!6967 = metadata !{i64 6967}
!6968 = metadata !{i64 6968}
!6969 = metadata !{i64 6969}
!6970 = metadata !{i64 6970}
!6971 = metadata !{i64 6971}
!6972 = metadata !{i64 6972}
!6973 = metadata !{i64 6973}
!6974 = metadata !{i64 6974}
!6975 = metadata !{i64 6975}
!6976 = metadata !{i64 6976}
!6977 = metadata !{i64 6977}
!6978 = metadata !{i64 6978}
!6979 = metadata !{i64 6979}
!6980 = metadata !{i64 6980}
!6981 = metadata !{i64 6981}
!6982 = metadata !{i64 6982}
!6983 = metadata !{i64 6983}
!6984 = metadata !{i64 6984}
!6985 = metadata !{i64 6985}
!6986 = metadata !{i64 6986}
!6987 = metadata !{i64 6987}
!6988 = metadata !{i64 6988}
!6989 = metadata !{i64 6989}
!6990 = metadata !{i64 6990}
!6991 = metadata !{i64 6991}
!6992 = metadata !{i64 6992}
!6993 = metadata !{i64 6993}
!6994 = metadata !{i64 6994}
!6995 = metadata !{i64 6995}
!6996 = metadata !{i64 6996}
!6997 = metadata !{i64 6997}
!6998 = metadata !{i64 6998}
!6999 = metadata !{i64 6999}
!7000 = metadata !{i64 7000}
!7001 = metadata !{i64 7001}
!7002 = metadata !{i64 7002}
!7003 = metadata !{i64 7003}
!7004 = metadata !{i64 7004}
!7005 = metadata !{i64 7005}
!7006 = metadata !{i64 7006}
!7007 = metadata !{i64 7007}
!7008 = metadata !{i64 7008}
!7009 = metadata !{i64 7009}
!7010 = metadata !{i64 7010}
!7011 = metadata !{i64 7011}
!7012 = metadata !{i64 7012}
!7013 = metadata !{i64 7013}
!7014 = metadata !{i64 7014}
!7015 = metadata !{i64 7015}
!7016 = metadata !{i64 7016}
!7017 = metadata !{i64 7017}
!7018 = metadata !{i64 7018}
!7019 = metadata !{i64 7019}
!7020 = metadata !{i64 7020}
!7021 = metadata !{i64 7021}
!7022 = metadata !{i64 7022}
!7023 = metadata !{i64 7023}
!7024 = metadata !{i64 7024}
!7025 = metadata !{i64 7025}
!7026 = metadata !{i64 7026}
!7027 = metadata !{i64 7027}
!7028 = metadata !{i64 7028}
!7029 = metadata !{i64 7029}
!7030 = metadata !{i64 7030}
!7031 = metadata !{i64 7031}
!7032 = metadata !{i64 7032}
!7033 = metadata !{i64 7033}
!7034 = metadata !{i64 7034}
!7035 = metadata !{i64 7035}
!7036 = metadata !{i64 7036}
!7037 = metadata !{i64 7037}
!7038 = metadata !{i64 7038}
!7039 = metadata !{i64 7039}
!7040 = metadata !{i64 7040}
!7041 = metadata !{i64 7041}
!7042 = metadata !{i64 7042}
!7043 = metadata !{i64 7043}
!7044 = metadata !{i64 7044}
!7045 = metadata !{i64 7045}
!7046 = metadata !{i64 7046}
!7047 = metadata !{i64 7047}
!7048 = metadata !{i64 7048}
!7049 = metadata !{i64 7049}
!7050 = metadata !{i64 7050}
!7051 = metadata !{i64 7051}
!7052 = metadata !{i64 7052}
!7053 = metadata !{i64 7053}
!7054 = metadata !{i64 7054}
!7055 = metadata !{i64 7055}
!7056 = metadata !{i64 7056}
!7057 = metadata !{i64 7057}
!7058 = metadata !{i64 7058}
!7059 = metadata !{i64 7059}
!7060 = metadata !{i64 7060}
!7061 = metadata !{i64 7061}
!7062 = metadata !{i64 7062}
!7063 = metadata !{i64 7063}
!7064 = metadata !{i64 7064}
!7065 = metadata !{i64 7065}
!7066 = metadata !{i64 7066}
!7067 = metadata !{i64 7067}
!7068 = metadata !{i64 7068}
!7069 = metadata !{i64 7069}
!7070 = metadata !{i64 7070}
!7071 = metadata !{i64 7071}
!7072 = metadata !{i64 7072}
!7073 = metadata !{i64 7073}
!7074 = metadata !{i64 7074}
!7075 = metadata !{i64 7075}
!7076 = metadata !{i64 7076}
!7077 = metadata !{i64 7077}
!7078 = metadata !{i64 7078}
!7079 = metadata !{i64 7079}
!7080 = metadata !{i64 7080}
!7081 = metadata !{i64 7081}
!7082 = metadata !{i64 7082}
!7083 = metadata !{i64 7083}
!7084 = metadata !{i64 7084}
!7085 = metadata !{i64 7085}
!7086 = metadata !{i64 7086}
!7087 = metadata !{i64 7087}
!7088 = metadata !{i64 7088}
!7089 = metadata !{i64 7089}
!7090 = metadata !{i64 7090}
!7091 = metadata !{i64 7091}
!7092 = metadata !{i64 7092}
!7093 = metadata !{i64 7093}
!7094 = metadata !{i64 7094}
!7095 = metadata !{i64 7095}
!7096 = metadata !{i64 7096}
!7097 = metadata !{i64 7097}
!7098 = metadata !{i64 7098}
!7099 = metadata !{i64 7099}
!7100 = metadata !{i64 7100}
!7101 = metadata !{i64 7101}
!7102 = metadata !{i64 7102}
!7103 = metadata !{i64 7103}
!7104 = metadata !{i64 7104}
!7105 = metadata !{i64 7105}
!7106 = metadata !{i64 7106}
!7107 = metadata !{i64 7107}
!7108 = metadata !{i64 7108}
!7109 = metadata !{i64 7109}
!7110 = metadata !{i64 7110}
!7111 = metadata !{i64 7111}
!7112 = metadata !{i64 7112}
!7113 = metadata !{i64 7113}
!7114 = metadata !{i64 7114}
!7115 = metadata !{i64 7115}
!7116 = metadata !{i64 7116}
!7117 = metadata !{i64 7117}
!7118 = metadata !{i64 7118}
!7119 = metadata !{i64 7119}
!7120 = metadata !{i64 7120}
!7121 = metadata !{i64 7121}
!7122 = metadata !{i64 7122}
!7123 = metadata !{i64 7123}
!7124 = metadata !{i64 7124}
!7125 = metadata !{i64 7125}
!7126 = metadata !{i64 7126}
!7127 = metadata !{i64 7127}
!7128 = metadata !{i64 7128}
!7129 = metadata !{i64 7129}
!7130 = metadata !{i64 7130}
!7131 = metadata !{i64 7131}
!7132 = metadata !{i64 7132}
!7133 = metadata !{i64 7133}
!7134 = metadata !{i64 7134}
!7135 = metadata !{i64 7135}
!7136 = metadata !{i64 7136}
!7137 = metadata !{i64 7137}
!7138 = metadata !{i64 7138}
!7139 = metadata !{i64 7139}
!7140 = metadata !{i64 7140}
!7141 = metadata !{i64 7141}
!7142 = metadata !{i64 7142}
!7143 = metadata !{i64 7143}
!7144 = metadata !{i64 7144}
!7145 = metadata !{i64 7145}
!7146 = metadata !{i64 7146}
!7147 = metadata !{i64 7147}
!7148 = metadata !{i64 7148}
!7149 = metadata !{i64 7149}
!7150 = metadata !{i64 7150}
!7151 = metadata !{i64 7151}
!7152 = metadata !{i64 7152}
!7153 = metadata !{i64 7153}
!7154 = metadata !{i64 7154}
!7155 = metadata !{i64 7155}
!7156 = metadata !{i64 7156}
!7157 = metadata !{i64 7157}
!7158 = metadata !{i64 7158}
!7159 = metadata !{i64 7159}
!7160 = metadata !{i64 7160}
!7161 = metadata !{i64 7161}
!7162 = metadata !{i64 7162}
!7163 = metadata !{i64 7163}
!7164 = metadata !{i64 7164}
!7165 = metadata !{i64 7165}
!7166 = metadata !{i64 7166}
!7167 = metadata !{i64 7167}
!7168 = metadata !{i64 7168}
!7169 = metadata !{i64 7169}
!7170 = metadata !{i64 7170}
!7171 = metadata !{i64 7171}
!7172 = metadata !{i64 7172}
!7173 = metadata !{i64 7173}
!7174 = metadata !{i64 7174}
!7175 = metadata !{i64 7175}
!7176 = metadata !{i64 7176}
!7177 = metadata !{i64 7177}
!7178 = metadata !{i64 7178}
!7179 = metadata !{i64 7179}
!7180 = metadata !{i64 7180}
!7181 = metadata !{i64 7181}
!7182 = metadata !{i64 7182}
!7183 = metadata !{i64 7183}
!7184 = metadata !{i64 7184}
!7185 = metadata !{i64 7185}
!7186 = metadata !{i64 7186}
!7187 = metadata !{i64 7187}
!7188 = metadata !{i64 7188}
!7189 = metadata !{i64 7189}
!7190 = metadata !{i64 7190}
!7191 = metadata !{i64 7191}
!7192 = metadata !{i64 7192}
!7193 = metadata !{i64 7193}
!7194 = metadata !{i64 7194}
!7195 = metadata !{i64 7195}
!7196 = metadata !{i64 7196}
!7197 = metadata !{i64 7197}
!7198 = metadata !{i64 7198}
!7199 = metadata !{i64 7199}
!7200 = metadata !{i64 7200}
!7201 = metadata !{i64 7201}
!7202 = metadata !{i64 7202}
!7203 = metadata !{i64 7203}
!7204 = metadata !{i64 7204}
!7205 = metadata !{i64 7205}
!7206 = metadata !{i64 7206}
!7207 = metadata !{i64 7207}
!7208 = metadata !{i64 7208}
!7209 = metadata !{i64 7209}
!7210 = metadata !{i64 7210}
!7211 = metadata !{i64 7211}
!7212 = metadata !{i64 7212}
!7213 = metadata !{i64 7213}
!7214 = metadata !{i64 7214}
!7215 = metadata !{i64 7215}
!7216 = metadata !{i64 7216}
!7217 = metadata !{i64 7217}
!7218 = metadata !{i64 7218}
!7219 = metadata !{i64 7219}
!7220 = metadata !{i64 7220}
!7221 = metadata !{i64 7221}
!7222 = metadata !{i64 7222}
!7223 = metadata !{i64 7223}
!7224 = metadata !{i64 7224}
!7225 = metadata !{i64 7225}
!7226 = metadata !{i64 7226}
!7227 = metadata !{i64 7227}
!7228 = metadata !{i64 7228}
!7229 = metadata !{i64 7229}
!7230 = metadata !{i64 7230}
!7231 = metadata !{i64 7231}
!7232 = metadata !{i64 7232}
!7233 = metadata !{i64 7233}
!7234 = metadata !{i64 7234}
!7235 = metadata !{i64 7235}
!7236 = metadata !{i64 7236}
!7237 = metadata !{i64 7237}
!7238 = metadata !{i64 7238}
!7239 = metadata !{i64 7239}
!7240 = metadata !{i64 7240}
!7241 = metadata !{i64 7241}
!7242 = metadata !{i64 7242}
!7243 = metadata !{i64 7243}
!7244 = metadata !{i64 7244}
!7245 = metadata !{i64 7245}
!7246 = metadata !{i64 7246}
!7247 = metadata !{i64 7247}
!7248 = metadata !{i64 7248}
!7249 = metadata !{i64 7249}
!7250 = metadata !{i64 7250}
!7251 = metadata !{i64 7251}
!7252 = metadata !{i64 7252}
!7253 = metadata !{i64 7253}
!7254 = metadata !{i64 7254}
!7255 = metadata !{i64 7255}
!7256 = metadata !{i64 7256}
!7257 = metadata !{i64 7257}
!7258 = metadata !{i64 7258}
!7259 = metadata !{i64 7259}
!7260 = metadata !{i64 7260}
!7261 = metadata !{i64 7261}
!7262 = metadata !{i64 7262}
!7263 = metadata !{i64 7263}
!7264 = metadata !{i64 7264}
!7265 = metadata !{i64 7265}
!7266 = metadata !{i64 7266}
!7267 = metadata !{i64 7267}
!7268 = metadata !{i64 7268}
!7269 = metadata !{i64 7269}
!7270 = metadata !{i64 7270}
!7271 = metadata !{i64 7271}
!7272 = metadata !{i64 7272}
!7273 = metadata !{i64 7273}
!7274 = metadata !{i64 7274}
!7275 = metadata !{i64 7275}
!7276 = metadata !{i64 7276}
!7277 = metadata !{i64 7277}
!7278 = metadata !{i64 7278}
!7279 = metadata !{i64 7279}
!7280 = metadata !{i64 7280}
!7281 = metadata !{i64 7281}
!7282 = metadata !{i64 7282}
!7283 = metadata !{i64 7283}
!7284 = metadata !{i64 7284}
!7285 = metadata !{i64 7285}
!7286 = metadata !{i64 7286}
!7287 = metadata !{i64 7287}
!7288 = metadata !{i64 7288}
!7289 = metadata !{i64 7289}
!7290 = metadata !{i64 7290}
!7291 = metadata !{i64 7291}
!7292 = metadata !{i64 7292}
!7293 = metadata !{i64 7293}
!7294 = metadata !{i64 7294}
!7295 = metadata !{i64 7295}
!7296 = metadata !{i64 7296}
!7297 = metadata !{i64 7297}
!7298 = metadata !{i64 7298}
!7299 = metadata !{i64 7299}
!7300 = metadata !{i64 7300}
!7301 = metadata !{i64 7301}
!7302 = metadata !{i64 7302}
!7303 = metadata !{i64 7303}
!7304 = metadata !{i64 7304}
!7305 = metadata !{i64 7305}
!7306 = metadata !{i64 7306}
!7307 = metadata !{i64 7307}
!7308 = metadata !{i64 7308}
!7309 = metadata !{i64 7309}
!7310 = metadata !{i64 7310}
!7311 = metadata !{i64 7311}
!7312 = metadata !{i64 7312}
!7313 = metadata !{i64 7313}
!7314 = metadata !{i64 7314}
!7315 = metadata !{i64 7315}
!7316 = metadata !{i64 7316}
!7317 = metadata !{i64 7317}
!7318 = metadata !{i64 7318}
!7319 = metadata !{i64 7319}
!7320 = metadata !{i64 7320}
!7321 = metadata !{i64 7321}
!7322 = metadata !{i64 7322}
!7323 = metadata !{i64 7323}
!7324 = metadata !{i64 7324}
!7325 = metadata !{i64 7325}
!7326 = metadata !{i64 7326}
!7327 = metadata !{i64 7327}
!7328 = metadata !{i64 7328}
!7329 = metadata !{i64 7329}
!7330 = metadata !{i64 7330}
!7331 = metadata !{i64 7331}
!7332 = metadata !{i64 7332}
!7333 = metadata !{i64 7333}
!7334 = metadata !{i64 7334}
!7335 = metadata !{i64 7335}
!7336 = metadata !{i64 7336}
!7337 = metadata !{i64 7337}
!7338 = metadata !{i64 7338}
!7339 = metadata !{i64 7339}
!7340 = metadata !{i64 7340}
!7341 = metadata !{i64 7341}
!7342 = metadata !{i64 7342}
!7343 = metadata !{i64 7343}
!7344 = metadata !{i64 7344}
!7345 = metadata !{i64 7345}
!7346 = metadata !{i64 7346}
!7347 = metadata !{i64 7347}
!7348 = metadata !{i64 7348}
!7349 = metadata !{i64 7349}
!7350 = metadata !{i64 7350}
!7351 = metadata !{i64 7351}
!7352 = metadata !{i64 7352}
!7353 = metadata !{i64 7353}
!7354 = metadata !{i64 7354}
!7355 = metadata !{i64 7355}
!7356 = metadata !{i64 7356}
!7357 = metadata !{i64 7357}
!7358 = metadata !{i64 7358}
!7359 = metadata !{i64 7359}
!7360 = metadata !{i64 7360}
!7361 = metadata !{i64 7361}
!7362 = metadata !{i64 7362}
!7363 = metadata !{i64 7363}
!7364 = metadata !{i64 7364}
!7365 = metadata !{i64 7365}
!7366 = metadata !{i64 7366}
!7367 = metadata !{i64 7367}
!7368 = metadata !{i64 7368}
!7369 = metadata !{i64 7369}
!7370 = metadata !{i64 7370}
!7371 = metadata !{i64 7371}
!7372 = metadata !{i64 7372}
!7373 = metadata !{i64 7373}
!7374 = metadata !{i64 7374}
!7375 = metadata !{i64 7375}
!7376 = metadata !{i64 7376}
!7377 = metadata !{i64 7377}
!7378 = metadata !{i64 7378}
!7379 = metadata !{i64 7379}
!7380 = metadata !{i64 7380}
!7381 = metadata !{i64 7381}
!7382 = metadata !{i64 7382}
!7383 = metadata !{i64 7383}
!7384 = metadata !{i64 7384}
!7385 = metadata !{i64 7385}
!7386 = metadata !{i64 7386}
!7387 = metadata !{i64 7387}
!7388 = metadata !{i64 7388}
!7389 = metadata !{i64 7389}
!7390 = metadata !{i64 7390}
!7391 = metadata !{i64 7391}
!7392 = metadata !{i64 7392}
!7393 = metadata !{i64 7393}
!7394 = metadata !{i64 7394}
!7395 = metadata !{i64 7395}
!7396 = metadata !{i64 7396}
!7397 = metadata !{i64 7397}
!7398 = metadata !{i64 7398}
!7399 = metadata !{i64 7399}
!7400 = metadata !{i64 7400}
!7401 = metadata !{i64 7401}
!7402 = metadata !{i64 7402}
!7403 = metadata !{i64 7403}
!7404 = metadata !{i64 7404}
!7405 = metadata !{i64 7405}
!7406 = metadata !{i64 7406}
!7407 = metadata !{i64 7407}
!7408 = metadata !{i64 7408}
!7409 = metadata !{i64 7409}
!7410 = metadata !{i64 7410}
!7411 = metadata !{i64 7411}
!7412 = metadata !{i64 7412}
!7413 = metadata !{i64 7413}
!7414 = metadata !{i64 7414}
!7415 = metadata !{i64 7415}
!7416 = metadata !{i64 7416}
!7417 = metadata !{i64 7417}
!7418 = metadata !{i64 7418}
!7419 = metadata !{i64 7419}
!7420 = metadata !{i64 7420}
!7421 = metadata !{i64 7421}
!7422 = metadata !{i64 7422}
!7423 = metadata !{i64 7423}
!7424 = metadata !{i64 7424}
!7425 = metadata !{i64 7425}
!7426 = metadata !{i64 7426}
!7427 = metadata !{i64 7427}
!7428 = metadata !{i64 7428}
!7429 = metadata !{i64 7429}
!7430 = metadata !{i64 7430}
!7431 = metadata !{i64 7431}
!7432 = metadata !{i64 7432}
!7433 = metadata !{i64 7433}
!7434 = metadata !{i64 7434}
!7435 = metadata !{i64 7435}
!7436 = metadata !{i64 7436}
!7437 = metadata !{i64 7437}
!7438 = metadata !{i64 7438}
!7439 = metadata !{i64 7439}
!7440 = metadata !{i64 7440}
!7441 = metadata !{i64 7441}
!7442 = metadata !{i64 7442}
!7443 = metadata !{i64 7443}
!7444 = metadata !{i64 7444}
!7445 = metadata !{i64 7445}
!7446 = metadata !{i64 7446}
!7447 = metadata !{i64 7447}
!7448 = metadata !{i64 7448}
!7449 = metadata !{i64 7449}
!7450 = metadata !{i64 7450}
!7451 = metadata !{i64 7451}
!7452 = metadata !{i64 7452}
!7453 = metadata !{i64 7453}
!7454 = metadata !{i64 7454}
!7455 = metadata !{i64 7455}
!7456 = metadata !{i64 7456}
!7457 = metadata !{i64 7457}
!7458 = metadata !{i64 7458}
!7459 = metadata !{i64 7459}
!7460 = metadata !{i64 7460}
!7461 = metadata !{i64 7461}
!7462 = metadata !{i64 7462}
!7463 = metadata !{i64 7463}
!7464 = metadata !{i64 7464}
!7465 = metadata !{i64 7465}
!7466 = metadata !{i64 7466}
!7467 = metadata !{i64 7467}
!7468 = metadata !{i64 7468}
!7469 = metadata !{i64 7469}
!7470 = metadata !{i64 7470}
!7471 = metadata !{i64 7471}
!7472 = metadata !{i64 7472}
!7473 = metadata !{i64 7473}
!7474 = metadata !{i64 7474}
!7475 = metadata !{i64 7475}
!7476 = metadata !{i64 7476}
!7477 = metadata !{i64 7477}
!7478 = metadata !{i64 7478}
!7479 = metadata !{i64 7479}
!7480 = metadata !{i64 7480}
!7481 = metadata !{i64 7481}
!7482 = metadata !{i64 7482}
!7483 = metadata !{i64 7483}
!7484 = metadata !{i64 7484}
!7485 = metadata !{i64 7485}
!7486 = metadata !{i64 7486}
!7487 = metadata !{i64 7487}
!7488 = metadata !{i64 7488}
!7489 = metadata !{i64 7489}
!7490 = metadata !{i64 7490}
!7491 = metadata !{i64 7491}
!7492 = metadata !{i64 7492}
!7493 = metadata !{i64 7493}
!7494 = metadata !{i64 7494}
!7495 = metadata !{i64 7495}
!7496 = metadata !{i64 7496}
!7497 = metadata !{i64 7497}
!7498 = metadata !{i64 7498}
!7499 = metadata !{i64 7499}
!7500 = metadata !{i64 7500}
!7501 = metadata !{i64 7501}
!7502 = metadata !{i64 7502}
!7503 = metadata !{i64 7503}
!7504 = metadata !{i64 7504}
!7505 = metadata !{i64 7505}
!7506 = metadata !{i64 7506}
!7507 = metadata !{i64 7507}
!7508 = metadata !{i64 7508}
!7509 = metadata !{i64 7509}
!7510 = metadata !{i64 7510}
!7511 = metadata !{i64 7511}
!7512 = metadata !{i64 7512}
!7513 = metadata !{i64 7513}
!7514 = metadata !{i64 7514}
!7515 = metadata !{i64 7515}
!7516 = metadata !{i64 7516}
!7517 = metadata !{i64 7517}
!7518 = metadata !{i64 7518}
!7519 = metadata !{i64 7519}
!7520 = metadata !{i64 7520}
!7521 = metadata !{i64 7521}
!7522 = metadata !{i64 7522}
!7523 = metadata !{i64 7523}
!7524 = metadata !{i64 7524}
!7525 = metadata !{i64 7525}
!7526 = metadata !{i64 7526}
!7527 = metadata !{i64 7527}
!7528 = metadata !{i64 7528}
!7529 = metadata !{i64 7529}
!7530 = metadata !{i64 7530}
!7531 = metadata !{i64 7531}
!7532 = metadata !{i64 7532}
!7533 = metadata !{i64 7533}
!7534 = metadata !{i64 7534}
!7535 = metadata !{i64 7535}
!7536 = metadata !{i64 7536}
!7537 = metadata !{i64 7537}
!7538 = metadata !{i64 7538}
!7539 = metadata !{i64 7539}
!7540 = metadata !{i64 7540}
!7541 = metadata !{i64 7541}
!7542 = metadata !{i64 7542}
!7543 = metadata !{i64 7543}
!7544 = metadata !{i64 7544}
!7545 = metadata !{i64 7545}
!7546 = metadata !{i64 7546}
!7547 = metadata !{i64 7547}
!7548 = metadata !{i64 7548}
!7549 = metadata !{i64 7549}
!7550 = metadata !{i64 7550}
!7551 = metadata !{i64 7551}
!7552 = metadata !{i64 7552}
!7553 = metadata !{i64 7553}
!7554 = metadata !{i64 7554}
!7555 = metadata !{i64 7555}
!7556 = metadata !{i64 7556}
!7557 = metadata !{i64 7557}
!7558 = metadata !{i64 7558}
!7559 = metadata !{i64 7559}
!7560 = metadata !{i64 7560}
!7561 = metadata !{i64 7561}
!7562 = metadata !{i64 7562}
!7563 = metadata !{i64 7563}
!7564 = metadata !{i64 7564}
!7565 = metadata !{i64 7565}
!7566 = metadata !{i64 7566}
!7567 = metadata !{i64 7567}
!7568 = metadata !{i64 7568}
!7569 = metadata !{i64 7569}
!7570 = metadata !{i64 7570}
!7571 = metadata !{i64 7571}
!7572 = metadata !{i64 7572}
!7573 = metadata !{i64 7573}
!7574 = metadata !{i64 7574}
!7575 = metadata !{i64 7575}
!7576 = metadata !{i64 7576}
!7577 = metadata !{i64 7577}
!7578 = metadata !{i64 7578}
!7579 = metadata !{i64 7579}
!7580 = metadata !{i64 7580}
!7581 = metadata !{i64 7581}
!7582 = metadata !{i64 7582}
!7583 = metadata !{i64 7583}
!7584 = metadata !{i64 7584}
!7585 = metadata !{i64 7585}
!7586 = metadata !{i64 7586}
!7587 = metadata !{i64 7587}
!7588 = metadata !{i64 7588}
!7589 = metadata !{i64 7589}
!7590 = metadata !{i64 7590}
!7591 = metadata !{i64 7591}
!7592 = metadata !{i64 7592}
!7593 = metadata !{i64 7593}
!7594 = metadata !{i64 7594}
!7595 = metadata !{i64 7595}
!7596 = metadata !{i64 7596}
!7597 = metadata !{i64 7597}
!7598 = metadata !{i64 7598}
!7599 = metadata !{i64 7599}
!7600 = metadata !{i64 7600}
!7601 = metadata !{i64 7601}
!7602 = metadata !{i64 7602}
!7603 = metadata !{i64 7603}
!7604 = metadata !{i64 7604}
!7605 = metadata !{i64 7605}
!7606 = metadata !{i64 7606}
!7607 = metadata !{i64 7607}
!7608 = metadata !{i64 7608}
!7609 = metadata !{i64 7609}
!7610 = metadata !{i64 7610}
!7611 = metadata !{i64 7611}
!7612 = metadata !{i64 7612}
!7613 = metadata !{i64 7613}
!7614 = metadata !{i64 7614}
!7615 = metadata !{i64 7615}
!7616 = metadata !{i64 7616}
!7617 = metadata !{i64 7617}
!7618 = metadata !{i64 7618}
!7619 = metadata !{i64 7619}
!7620 = metadata !{i64 7620}
!7621 = metadata !{i64 7621}
!7622 = metadata !{i64 7622}
!7623 = metadata !{i64 7623}
!7624 = metadata !{i64 7624}
!7625 = metadata !{i64 7625}
!7626 = metadata !{i64 7626}
!7627 = metadata !{i64 7627}
!7628 = metadata !{i64 7628}
!7629 = metadata !{i64 7629}
!7630 = metadata !{i64 7630}
!7631 = metadata !{i64 7631}
!7632 = metadata !{i64 7632}
!7633 = metadata !{i64 7633}
!7634 = metadata !{i64 7634}
!7635 = metadata !{i64 7635}
!7636 = metadata !{i64 7636}
!7637 = metadata !{i64 7637}
!7638 = metadata !{i64 7638}
!7639 = metadata !{i64 7639}
!7640 = metadata !{i64 7640}
!7641 = metadata !{i64 7641}
!7642 = metadata !{i64 7642}
!7643 = metadata !{i64 7643}
!7644 = metadata !{i64 7644}
!7645 = metadata !{i64 7645}
!7646 = metadata !{i64 7646}
!7647 = metadata !{i64 7647}
!7648 = metadata !{i64 7648}
!7649 = metadata !{i64 7649}
!7650 = metadata !{i64 7650}
!7651 = metadata !{i64 7651}
!7652 = metadata !{i64 7652}
!7653 = metadata !{i64 7653}
!7654 = metadata !{i64 7654}
!7655 = metadata !{i64 7655}
!7656 = metadata !{i64 7656}
!7657 = metadata !{i64 7657}
!7658 = metadata !{i64 7658}
!7659 = metadata !{i64 7659}
!7660 = metadata !{i64 7660}
!7661 = metadata !{i64 7661}
!7662 = metadata !{i64 7662}
!7663 = metadata !{i64 7663}
!7664 = metadata !{i64 7664}
!7665 = metadata !{i64 7665}
!7666 = metadata !{i64 7666}
!7667 = metadata !{i64 7667}
!7668 = metadata !{i64 7668}
!7669 = metadata !{i64 7669}
!7670 = metadata !{i64 7670}
!7671 = metadata !{i64 7671}
!7672 = metadata !{i64 7672}
!7673 = metadata !{i64 7673}
!7674 = metadata !{i64 7674}
!7675 = metadata !{i64 7675}
!7676 = metadata !{i64 7676}
!7677 = metadata !{i64 7677}
!7678 = metadata !{i64 7678}
!7679 = metadata !{i64 7679}
!7680 = metadata !{i64 7680}
!7681 = metadata !{i64 7681}
!7682 = metadata !{i64 7682}
!7683 = metadata !{i64 7683}
!7684 = metadata !{i64 7684}
!7685 = metadata !{i64 7685}
!7686 = metadata !{i64 7686}
!7687 = metadata !{i64 7687}
!7688 = metadata !{i64 7688}
!7689 = metadata !{i64 7689}
!7690 = metadata !{i64 7690}
!7691 = metadata !{i64 7691}
!7692 = metadata !{i64 7692}
!7693 = metadata !{i64 7693}
!7694 = metadata !{i64 7694}
!7695 = metadata !{i64 7695}
!7696 = metadata !{i64 7696}
!7697 = metadata !{i64 7697}
!7698 = metadata !{i64 7698}
!7699 = metadata !{i64 7699}
!7700 = metadata !{i64 7700}
!7701 = metadata !{i64 7701}
!7702 = metadata !{i64 7702}
!7703 = metadata !{i64 7703}
!7704 = metadata !{i64 7704}
!7705 = metadata !{i64 7705}
!7706 = metadata !{i64 7706}
!7707 = metadata !{i64 7707}
!7708 = metadata !{i64 7708}
!7709 = metadata !{i64 7709}
!7710 = metadata !{i64 7710}
!7711 = metadata !{i64 7711}
!7712 = metadata !{i64 7712}
!7713 = metadata !{i64 7713}
!7714 = metadata !{i64 7714}
!7715 = metadata !{i64 7715}
!7716 = metadata !{i64 7716}
!7717 = metadata !{i64 7717}
!7718 = metadata !{i64 7718}
!7719 = metadata !{i64 7719}
!7720 = metadata !{i64 7720}
!7721 = metadata !{i64 7721}
!7722 = metadata !{i64 7722}
!7723 = metadata !{i64 7723}
!7724 = metadata !{i64 7724}
!7725 = metadata !{i64 7725}
!7726 = metadata !{i64 7726}
!7727 = metadata !{i64 7727}
!7728 = metadata !{i64 7728}
!7729 = metadata !{i64 7729}
!7730 = metadata !{i64 7730}
!7731 = metadata !{i64 7731}
!7732 = metadata !{i64 7732}
!7733 = metadata !{i64 7733}
!7734 = metadata !{i64 7734}
!7735 = metadata !{i64 7735}
!7736 = metadata !{i64 7736}
!7737 = metadata !{i64 7737}
!7738 = metadata !{i64 7738}
!7739 = metadata !{i64 7739}
!7740 = metadata !{i64 7740}
!7741 = metadata !{i64 7741}
!7742 = metadata !{i64 7742}
!7743 = metadata !{i64 7743}
!7744 = metadata !{i64 7744}
!7745 = metadata !{i64 7745}
!7746 = metadata !{i64 7746}
!7747 = metadata !{i64 7747}
!7748 = metadata !{i64 7748}
!7749 = metadata !{i64 7749}
!7750 = metadata !{i64 7750}
!7751 = metadata !{i64 7751}
!7752 = metadata !{i64 7752}
!7753 = metadata !{i64 7753}
!7754 = metadata !{i64 7754}
!7755 = metadata !{i64 7755}
!7756 = metadata !{i64 7756}
!7757 = metadata !{i64 7757}
!7758 = metadata !{i64 7758}
!7759 = metadata !{i64 7759}
!7760 = metadata !{i64 7760}
!7761 = metadata !{i64 7761}
!7762 = metadata !{i64 7762}
!7763 = metadata !{i64 7763}
!7764 = metadata !{i64 7764}
!7765 = metadata !{i64 7765}
!7766 = metadata !{i64 7766}
!7767 = metadata !{i64 7767}
!7768 = metadata !{i64 7768}
!7769 = metadata !{i64 7769}
!7770 = metadata !{i64 7770}
!7771 = metadata !{i64 7771}
!7772 = metadata !{i64 7772}
!7773 = metadata !{i64 7773}
!7774 = metadata !{i64 7774}
!7775 = metadata !{i64 7775}
!7776 = metadata !{i64 7776}
!7777 = metadata !{i64 7777}
!7778 = metadata !{i64 7778}
!7779 = metadata !{i64 7779}
!7780 = metadata !{i64 7780}
!7781 = metadata !{i64 7781}
!7782 = metadata !{i64 7782}
!7783 = metadata !{i64 7783}
!7784 = metadata !{i64 7784}
!7785 = metadata !{i64 7785}
!7786 = metadata !{i64 7786}
!7787 = metadata !{i64 7787}
!7788 = metadata !{i64 7788}
!7789 = metadata !{i64 7789}
!7790 = metadata !{i64 7790}
!7791 = metadata !{i64 7791}
!7792 = metadata !{i64 7792}
!7793 = metadata !{i64 7793}
!7794 = metadata !{i64 7794}
!7795 = metadata !{i64 7795}
!7796 = metadata !{i64 7796}
!7797 = metadata !{i64 7797}
!7798 = metadata !{i64 7798}
!7799 = metadata !{i64 7799}
!7800 = metadata !{i64 7800}
!7801 = metadata !{i64 7801}
!7802 = metadata !{i64 7802}
!7803 = metadata !{i64 7803}
!7804 = metadata !{i64 7804}
!7805 = metadata !{i64 7805}
!7806 = metadata !{i64 7806}
!7807 = metadata !{i64 7807}
!7808 = metadata !{i64 7808}
!7809 = metadata !{i64 7809}
!7810 = metadata !{i64 7810}
!7811 = metadata !{i64 7811}
!7812 = metadata !{i64 7812}
!7813 = metadata !{i64 7813}
!7814 = metadata !{i64 7814}
!7815 = metadata !{i64 7815}
!7816 = metadata !{i64 7816}
!7817 = metadata !{i64 7817}
!7818 = metadata !{i64 7818}
!7819 = metadata !{i64 7819}
!7820 = metadata !{i64 7820}
!7821 = metadata !{i64 7821}
!7822 = metadata !{i64 7822}
!7823 = metadata !{i64 7823}
!7824 = metadata !{i64 7824}
!7825 = metadata !{i64 7825}
!7826 = metadata !{i64 7826}
!7827 = metadata !{i64 7827}
!7828 = metadata !{i64 7828}
!7829 = metadata !{i64 7829}
!7830 = metadata !{i64 7830}
!7831 = metadata !{i64 7831}
!7832 = metadata !{i64 7832}
!7833 = metadata !{i64 7833}
!7834 = metadata !{i64 7834}
!7835 = metadata !{i64 7835}
!7836 = metadata !{i64 7836}
!7837 = metadata !{i64 7837}
!7838 = metadata !{i64 7838}
!7839 = metadata !{i64 7839}
!7840 = metadata !{i64 7840}
!7841 = metadata !{i64 7841}
!7842 = metadata !{i64 7842}
!7843 = metadata !{i64 7843}
!7844 = metadata !{i64 7844}
!7845 = metadata !{i64 7845}
!7846 = metadata !{i64 7846}
!7847 = metadata !{i64 7847}
!7848 = metadata !{i64 7848}
!7849 = metadata !{i64 7849}
!7850 = metadata !{i64 7850}
!7851 = metadata !{i64 7851}
!7852 = metadata !{i64 7852}
!7853 = metadata !{i64 7853}
!7854 = metadata !{i64 7854}
!7855 = metadata !{i64 7855}
!7856 = metadata !{i64 7856}
!7857 = metadata !{i64 7857}
!7858 = metadata !{i64 7858}
!7859 = metadata !{i64 7859}
!7860 = metadata !{i64 7860}
!7861 = metadata !{i64 7861}
!7862 = metadata !{i64 7862}
!7863 = metadata !{i64 7863}
!7864 = metadata !{i64 7864}
!7865 = metadata !{i64 7865}
!7866 = metadata !{i64 7866}
!7867 = metadata !{i64 7867}
!7868 = metadata !{i64 7868}
!7869 = metadata !{i64 7869}
!7870 = metadata !{i64 7870}
!7871 = metadata !{i64 7871}
!7872 = metadata !{i64 7872}
!7873 = metadata !{i64 7873}
!7874 = metadata !{i64 7874}
!7875 = metadata !{i64 7875}
!7876 = metadata !{i64 7876}
!7877 = metadata !{i64 7877}
!7878 = metadata !{i64 7878}
!7879 = metadata !{i64 7879}
!7880 = metadata !{i64 7880}
!7881 = metadata !{i64 7881}
!7882 = metadata !{i64 7882}
!7883 = metadata !{i64 7883}
!7884 = metadata !{i64 7884}
!7885 = metadata !{i64 7885}
!7886 = metadata !{i64 7886}
!7887 = metadata !{i64 7887}
!7888 = metadata !{i64 7888}
!7889 = metadata !{i64 7889}
!7890 = metadata !{i64 7890}
!7891 = metadata !{i64 7891}
!7892 = metadata !{i64 7892}
!7893 = metadata !{i64 7893}
!7894 = metadata !{i64 7894}
!7895 = metadata !{i64 7895}
!7896 = metadata !{i64 7896}
!7897 = metadata !{i64 7897}
!7898 = metadata !{i64 7898}
!7899 = metadata !{i64 7899}
!7900 = metadata !{i64 7900}
!7901 = metadata !{i64 7901}
!7902 = metadata !{i64 7902}
!7903 = metadata !{i64 7903}
!7904 = metadata !{i64 7904}
!7905 = metadata !{i64 7905}
!7906 = metadata !{i64 7906}
!7907 = metadata !{i64 7907}
!7908 = metadata !{i64 7908}
!7909 = metadata !{i64 7909}
!7910 = metadata !{i64 7910}
!7911 = metadata !{i64 7911}
!7912 = metadata !{i64 7912}
!7913 = metadata !{i64 7913}
!7914 = metadata !{i64 7914}
!7915 = metadata !{i64 7915}
!7916 = metadata !{i64 7916}
!7917 = metadata !{i64 7917}
!7918 = metadata !{i64 7918}
!7919 = metadata !{i64 7919}
!7920 = metadata !{i64 7920}
!7921 = metadata !{i64 7921}
!7922 = metadata !{i64 7922}
!7923 = metadata !{i64 7923}
!7924 = metadata !{i64 7924}
!7925 = metadata !{i64 7925}
!7926 = metadata !{i64 7926}
!7927 = metadata !{i64 7927}
!7928 = metadata !{i64 7928}
!7929 = metadata !{i64 7929}
!7930 = metadata !{i64 7930}
!7931 = metadata !{i64 7931}
!7932 = metadata !{i64 7932}
!7933 = metadata !{i64 7933}
!7934 = metadata !{i64 7934}
!7935 = metadata !{i64 7935}
!7936 = metadata !{i64 7936}
!7937 = metadata !{i64 7937}
!7938 = metadata !{i64 7938}
!7939 = metadata !{i64 7939}
!7940 = metadata !{i64 7940}
!7941 = metadata !{i64 7941}
!7942 = metadata !{i64 7942}
!7943 = metadata !{i64 7943}
!7944 = metadata !{i64 7944}
!7945 = metadata !{i64 7945}
!7946 = metadata !{i64 7946}
!7947 = metadata !{i64 7947}
!7948 = metadata !{i64 7948}
!7949 = metadata !{i64 7949}
!7950 = metadata !{i64 7950}
!7951 = metadata !{i64 7951}
!7952 = metadata !{i64 7952}
!7953 = metadata !{i64 7953}
!7954 = metadata !{i64 7954}
!7955 = metadata !{i64 7955}
!7956 = metadata !{i64 7956}
!7957 = metadata !{i64 7957}
!7958 = metadata !{i64 7958}
!7959 = metadata !{i64 7959}
!7960 = metadata !{i64 7960}
!7961 = metadata !{i64 7961}
!7962 = metadata !{i64 7962}
!7963 = metadata !{i64 7963}
!7964 = metadata !{i64 7964}
!7965 = metadata !{i64 7965}
!7966 = metadata !{i64 7966}
!7967 = metadata !{i64 7967}
!7968 = metadata !{i64 7968}
!7969 = metadata !{i64 7969}
!7970 = metadata !{i64 7970}
!7971 = metadata !{i64 7971}
!7972 = metadata !{i64 7972}
!7973 = metadata !{i64 7973}
!7974 = metadata !{i64 7974}
!7975 = metadata !{i64 7975}
!7976 = metadata !{i64 7976}
!7977 = metadata !{i64 7977}
!7978 = metadata !{i64 7978}
!7979 = metadata !{i64 7979}
!7980 = metadata !{i64 7980}
!7981 = metadata !{i64 7981}
!7982 = metadata !{i64 7982}
!7983 = metadata !{i64 7983}
!7984 = metadata !{i64 7984}
!7985 = metadata !{i64 7985}
!7986 = metadata !{i64 7986}
!7987 = metadata !{i64 7987}
!7988 = metadata !{i64 7988}
!7989 = metadata !{i64 7989}
!7990 = metadata !{i64 7990}
!7991 = metadata !{i64 7991}
!7992 = metadata !{i64 7992}
!7993 = metadata !{i64 7993}
!7994 = metadata !{i64 7994}
!7995 = metadata !{i64 7995}
!7996 = metadata !{i64 7996}
!7997 = metadata !{i64 7997}
!7998 = metadata !{i64 7998}
!7999 = metadata !{i64 7999}
!8000 = metadata !{i64 8000}
!8001 = metadata !{i64 8001}
!8002 = metadata !{i64 8002}
!8003 = metadata !{i64 8003}
!8004 = metadata !{i64 8004}
!8005 = metadata !{i64 8005}
!8006 = metadata !{i64 8006}
!8007 = metadata !{i64 8007}
!8008 = metadata !{i64 8008}
!8009 = metadata !{i64 8009}
!8010 = metadata !{i64 8010}
!8011 = metadata !{i64 8011}
!8012 = metadata !{i64 8012}
!8013 = metadata !{i64 8013}
!8014 = metadata !{i64 8014}
!8015 = metadata !{i64 8015}
!8016 = metadata !{i64 8016}
!8017 = metadata !{i64 8017}
!8018 = metadata !{i64 8018}
!8019 = metadata !{i64 8019}
!8020 = metadata !{i64 8020}
!8021 = metadata !{i64 8021}
!8022 = metadata !{i64 8022}
!8023 = metadata !{i64 8023}
!8024 = metadata !{i64 8024}
!8025 = metadata !{i64 8025}
!8026 = metadata !{i64 8026}
!8027 = metadata !{i64 8027}
!8028 = metadata !{i64 8028}
!8029 = metadata !{i64 8029}
!8030 = metadata !{i64 8030}
!8031 = metadata !{i64 8031}
!8032 = metadata !{i64 8032}
!8033 = metadata !{i64 8033}
!8034 = metadata !{i64 8034}
!8035 = metadata !{i64 8035}
!8036 = metadata !{i64 8036}
!8037 = metadata !{i64 8037}
!8038 = metadata !{i64 8038}
!8039 = metadata !{i64 8039}
!8040 = metadata !{i64 8040}
!8041 = metadata !{i64 8041}
!8042 = metadata !{i64 8042}
!8043 = metadata !{i64 8043}
!8044 = metadata !{i64 8044}
!8045 = metadata !{i64 8045}
!8046 = metadata !{i64 8046}
!8047 = metadata !{i64 8047}
!8048 = metadata !{i64 8048}
!8049 = metadata !{i64 8049}
!8050 = metadata !{i64 8050}
!8051 = metadata !{i64 8051}
!8052 = metadata !{i64 8052}
!8053 = metadata !{i64 8053}
!8054 = metadata !{i64 8054}
!8055 = metadata !{i64 8055}
!8056 = metadata !{i64 8056}
!8057 = metadata !{i64 8057}
!8058 = metadata !{i64 8058}
!8059 = metadata !{i64 8059}
!8060 = metadata !{i64 8060}
!8061 = metadata !{i64 8061}
!8062 = metadata !{i64 8062}
!8063 = metadata !{i64 8063}
!8064 = metadata !{i64 8064}
!8065 = metadata !{i64 8065}
!8066 = metadata !{i64 8066}
!8067 = metadata !{i64 8067}
!8068 = metadata !{i64 8068}
!8069 = metadata !{i64 8069}
!8070 = metadata !{i64 8070}
!8071 = metadata !{i64 8071}
!8072 = metadata !{i64 8072}
!8073 = metadata !{i64 8073}
!8074 = metadata !{i64 8074}
!8075 = metadata !{i64 8075}
!8076 = metadata !{i64 8076}
!8077 = metadata !{i64 8077}
!8078 = metadata !{i64 8078}
!8079 = metadata !{i64 8079}
!8080 = metadata !{i64 8080}
!8081 = metadata !{i64 8081}
!8082 = metadata !{i64 8082}
!8083 = metadata !{i64 8083}
!8084 = metadata !{i64 8084}
!8085 = metadata !{i64 8085}
!8086 = metadata !{i64 8086}
!8087 = metadata !{i64 8087}
!8088 = metadata !{i64 8088}
!8089 = metadata !{i64 8089}
!8090 = metadata !{i64 8090}
!8091 = metadata !{i64 8091}
!8092 = metadata !{i64 8092}
!8093 = metadata !{i64 8093}
!8094 = metadata !{i64 8094}
!8095 = metadata !{i64 8095}
!8096 = metadata !{i64 8096}
!8097 = metadata !{i64 8097}
!8098 = metadata !{i64 8098}
!8099 = metadata !{i64 8099}
!8100 = metadata !{i64 8100}
!8101 = metadata !{i64 8101}
!8102 = metadata !{i64 8102}
!8103 = metadata !{i64 8103}
!8104 = metadata !{i64 8104}
!8105 = metadata !{i64 8105}
!8106 = metadata !{i64 8106}
!8107 = metadata !{i64 8107}
!8108 = metadata !{i64 8108}
!8109 = metadata !{i64 8109}
!8110 = metadata !{i64 8110}
!8111 = metadata !{i64 8111}
!8112 = metadata !{i64 8112}
!8113 = metadata !{i64 8113}
!8114 = metadata !{i64 8114}
!8115 = metadata !{i64 8115}
!8116 = metadata !{i64 8116}
!8117 = metadata !{i64 8117}
!8118 = metadata !{i64 8118}
!8119 = metadata !{i64 8119}
!8120 = metadata !{i64 8120}
!8121 = metadata !{i64 8121}
!8122 = metadata !{i64 8122}
!8123 = metadata !{i64 8123}
!8124 = metadata !{i64 8124}
!8125 = metadata !{i64 8125}
!8126 = metadata !{i64 8126}
!8127 = metadata !{i64 8127}
!8128 = metadata !{i64 8128}
!8129 = metadata !{i64 8129}
!8130 = metadata !{i64 8130}
!8131 = metadata !{i64 8131}
!8132 = metadata !{i64 8132}
!8133 = metadata !{i64 8133}
!8134 = metadata !{i64 8134}
!8135 = metadata !{i64 8135}
!8136 = metadata !{i64 8136}
!8137 = metadata !{i64 8137}
!8138 = metadata !{i64 8138}
!8139 = metadata !{i64 8139}
!8140 = metadata !{i64 8140}
!8141 = metadata !{i64 8141}
!8142 = metadata !{i64 8142}
!8143 = metadata !{i64 8143}
!8144 = metadata !{i64 8144}
!8145 = metadata !{i64 8145}
!8146 = metadata !{i64 8146}
!8147 = metadata !{i64 8147}
!8148 = metadata !{i64 8148}
!8149 = metadata !{i64 8149}
!8150 = metadata !{i64 8150}
!8151 = metadata !{i64 8151}
!8152 = metadata !{i64 8152}
!8153 = metadata !{i64 8153}
!8154 = metadata !{i64 8154}
!8155 = metadata !{i64 8155}
!8156 = metadata !{i64 8156}
!8157 = metadata !{i64 8157}
!8158 = metadata !{i64 8158}
!8159 = metadata !{i64 8159}
!8160 = metadata !{i64 8160}
!8161 = metadata !{i64 8161}
!8162 = metadata !{i64 8162}
!8163 = metadata !{i64 8163}
!8164 = metadata !{i64 8164}
!8165 = metadata !{i64 8165}
!8166 = metadata !{i64 8166}
!8167 = metadata !{i64 8167}
!8168 = metadata !{i64 8168}
!8169 = metadata !{i64 8169}
!8170 = metadata !{i64 8170}
!8171 = metadata !{i64 8171}
!8172 = metadata !{i64 8172}
!8173 = metadata !{i64 8173}
!8174 = metadata !{i64 8174}
!8175 = metadata !{i64 8175}
!8176 = metadata !{i64 8176}
!8177 = metadata !{i64 8177}
!8178 = metadata !{i64 8178}
!8179 = metadata !{i64 8179}
!8180 = metadata !{i64 8180}
!8181 = metadata !{i64 8181}
!8182 = metadata !{i64 8182}
!8183 = metadata !{i64 8183}
!8184 = metadata !{i64 8184}
!8185 = metadata !{i64 8185}
!8186 = metadata !{i64 8186}
!8187 = metadata !{i64 8187}
!8188 = metadata !{i64 8188}
!8189 = metadata !{i64 8189}
!8190 = metadata !{i64 8190}
!8191 = metadata !{i64 8191}
!8192 = metadata !{i64 8192}
!8193 = metadata !{i64 8193}
!8194 = metadata !{i64 8194}
!8195 = metadata !{i64 8195}
!8196 = metadata !{i64 8196}
!8197 = metadata !{i64 8197}
!8198 = metadata !{i64 8198}
!8199 = metadata !{i64 8199}
!8200 = metadata !{i64 8200}
!8201 = metadata !{i64 8201}
!8202 = metadata !{i64 8202}
!8203 = metadata !{i64 8203}
!8204 = metadata !{i64 8204}
!8205 = metadata !{i64 8205}
!8206 = metadata !{i64 8206}
!8207 = metadata !{i64 8207}
!8208 = metadata !{i64 8208}
!8209 = metadata !{i64 8209}
!8210 = metadata !{i64 8210}
!8211 = metadata !{i64 8211}
!8212 = metadata !{i64 8212}
!8213 = metadata !{i64 8213}
!8214 = metadata !{i64 8214}
!8215 = metadata !{i64 8215}
!8216 = metadata !{i64 8216}
!8217 = metadata !{i64 8217}
!8218 = metadata !{i64 8218}
!8219 = metadata !{i64 8219}
!8220 = metadata !{i64 8220}
!8221 = metadata !{i64 8221}
!8222 = metadata !{i64 8222}
!8223 = metadata !{i64 8223}
!8224 = metadata !{i64 8224}
!8225 = metadata !{i64 8225}
!8226 = metadata !{i64 8226}
!8227 = metadata !{i64 8227}
!8228 = metadata !{i64 8228}
!8229 = metadata !{i64 8229}
!8230 = metadata !{i64 8230}
!8231 = metadata !{i64 8231}
!8232 = metadata !{i64 8232}
!8233 = metadata !{i64 8233}
!8234 = metadata !{i64 8234}
!8235 = metadata !{i64 8235}
!8236 = metadata !{i64 8236}
!8237 = metadata !{i64 8237}
!8238 = metadata !{i64 8238}
!8239 = metadata !{i64 8239}
!8240 = metadata !{i64 8240}
!8241 = metadata !{i64 8241}
!8242 = metadata !{i64 8242}
!8243 = metadata !{i64 8243}
!8244 = metadata !{i64 8244}
!8245 = metadata !{i64 8245}
!8246 = metadata !{i64 8246}
!8247 = metadata !{i64 8247}
!8248 = metadata !{i64 8248}
!8249 = metadata !{i64 8249}
!8250 = metadata !{i64 8250}
!8251 = metadata !{i64 8251}
!8252 = metadata !{i64 8252}
!8253 = metadata !{i64 8253}
!8254 = metadata !{i64 8254}
!8255 = metadata !{i64 8255}
!8256 = metadata !{i64 8256}
!8257 = metadata !{i64 8257}
!8258 = metadata !{i64 8258}
!8259 = metadata !{i64 8259}
!8260 = metadata !{i64 8260}
!8261 = metadata !{i64 8261}
!8262 = metadata !{i64 8262}
!8263 = metadata !{i64 8263}
!8264 = metadata !{i64 8264}
!8265 = metadata !{i64 8265}
!8266 = metadata !{i64 8266}
!8267 = metadata !{i64 8267}
!8268 = metadata !{i64 8268}
!8269 = metadata !{i64 8269}
!8270 = metadata !{i64 8270}
!8271 = metadata !{i64 8271}
!8272 = metadata !{i64 8272}
!8273 = metadata !{i64 8273}
!8274 = metadata !{i64 8274}
!8275 = metadata !{i64 8275}
!8276 = metadata !{i64 8276}
!8277 = metadata !{i64 8277}
!8278 = metadata !{i64 8278}
!8279 = metadata !{i64 8279}
!8280 = metadata !{i64 8280}
!8281 = metadata !{i64 8281}
!8282 = metadata !{i64 8282}
!8283 = metadata !{i64 8283}
!8284 = metadata !{i64 8284}
!8285 = metadata !{i64 8285}
!8286 = metadata !{i64 8286}
!8287 = metadata !{i64 8287}
!8288 = metadata !{i64 8288}
!8289 = metadata !{i64 8289}
!8290 = metadata !{i64 8290}
!8291 = metadata !{i64 8291}
!8292 = metadata !{i64 8292}
!8293 = metadata !{i64 8293}
!8294 = metadata !{i64 8294}
!8295 = metadata !{i64 8295}
!8296 = metadata !{i64 8296}
!8297 = metadata !{i64 8297}
!8298 = metadata !{i64 8298}
!8299 = metadata !{i64 8299}
!8300 = metadata !{i64 8300}
!8301 = metadata !{i64 8301}
!8302 = metadata !{i64 8302}
!8303 = metadata !{i64 8303}
!8304 = metadata !{i64 8304}
!8305 = metadata !{i64 8305}
!8306 = metadata !{i64 8306}
!8307 = metadata !{i64 8307}
!8308 = metadata !{i64 8308}
!8309 = metadata !{i64 8309}
!8310 = metadata !{i64 8310}
!8311 = metadata !{i64 8311}
!8312 = metadata !{i64 8312}
!8313 = metadata !{i64 8313}
!8314 = metadata !{i64 8314}
!8315 = metadata !{i64 8315}
!8316 = metadata !{i64 8316}
!8317 = metadata !{i64 8317}
!8318 = metadata !{i64 8318}
!8319 = metadata !{i64 8319}
!8320 = metadata !{i64 8320}
!8321 = metadata !{i64 8321}
!8322 = metadata !{i64 8322}
!8323 = metadata !{i64 8323}
!8324 = metadata !{i64 8324}
!8325 = metadata !{i64 8325}
!8326 = metadata !{i64 8326}
!8327 = metadata !{i64 8327}
!8328 = metadata !{i64 8328}
!8329 = metadata !{i64 8329}
!8330 = metadata !{i64 8330}
!8331 = metadata !{i64 8331}
!8332 = metadata !{i64 8332}
!8333 = metadata !{i64 8333}
!8334 = metadata !{i64 8334}
!8335 = metadata !{i64 8335}
!8336 = metadata !{i64 8336}
!8337 = metadata !{i64 8337}
!8338 = metadata !{i64 8338}
!8339 = metadata !{i64 8339}
!8340 = metadata !{i64 8340}
!8341 = metadata !{i64 8341}
!8342 = metadata !{i64 8342}
!8343 = metadata !{i64 8343}
!8344 = metadata !{i64 8344}
!8345 = metadata !{i64 8345}
!8346 = metadata !{i64 8346}
!8347 = metadata !{i64 8347}
!8348 = metadata !{i64 8348}
!8349 = metadata !{i64 8349}
!8350 = metadata !{i64 8350}
!8351 = metadata !{i64 8351}
!8352 = metadata !{i64 8352}
!8353 = metadata !{i64 8353}
!8354 = metadata !{i64 8354}
!8355 = metadata !{i64 8355}
!8356 = metadata !{i64 8356}
!8357 = metadata !{i64 8357}
!8358 = metadata !{i64 8358}
!8359 = metadata !{i64 8359}
!8360 = metadata !{i64 8360}
!8361 = metadata !{i64 8361}
!8362 = metadata !{i64 8362}
!8363 = metadata !{i64 8363}
!8364 = metadata !{i64 8364}
!8365 = metadata !{i64 8365}
!8366 = metadata !{i64 8366}
!8367 = metadata !{i64 8367}
!8368 = metadata !{i64 8368}
!8369 = metadata !{i64 8369}
!8370 = metadata !{i64 8370}
!8371 = metadata !{i64 8371}
!8372 = metadata !{i64 8372}
!8373 = metadata !{i64 8373}
!8374 = metadata !{i64 8374}
!8375 = metadata !{i64 8375}
!8376 = metadata !{i64 8376}
!8377 = metadata !{i64 8377}
!8378 = metadata !{i64 8378}
!8379 = metadata !{i64 8379}
!8380 = metadata !{i64 8380}
!8381 = metadata !{i64 8381}
!8382 = metadata !{i64 8382}
!8383 = metadata !{i64 8383}
!8384 = metadata !{i64 8384}
!8385 = metadata !{i64 8385}
!8386 = metadata !{i64 8386}
!8387 = metadata !{i64 8387}
!8388 = metadata !{i64 8388}
!8389 = metadata !{i64 8389}
!8390 = metadata !{i64 8390}
!8391 = metadata !{i64 8391}
!8392 = metadata !{i64 8392}
!8393 = metadata !{i64 8393}
!8394 = metadata !{i64 8394}
!8395 = metadata !{i64 8395}
!8396 = metadata !{i64 8396}
!8397 = metadata !{i64 8397}
!8398 = metadata !{i64 8398}
!8399 = metadata !{i64 8399}
!8400 = metadata !{i64 8400}
!8401 = metadata !{i64 8401}
!8402 = metadata !{i64 8402}
!8403 = metadata !{i64 8403}
!8404 = metadata !{i64 8404}
!8405 = metadata !{i64 8405}
!8406 = metadata !{i64 8406}
!8407 = metadata !{i64 8407}
!8408 = metadata !{i64 8408}
!8409 = metadata !{i64 8409}
!8410 = metadata !{i64 8410}
!8411 = metadata !{i64 8411}
!8412 = metadata !{i64 8412}
!8413 = metadata !{i64 8413}
!8414 = metadata !{i64 8414}
!8415 = metadata !{i64 8415}
!8416 = metadata !{i64 8416}
!8417 = metadata !{i64 8417}
!8418 = metadata !{i64 8418}
!8419 = metadata !{i64 8419}
!8420 = metadata !{i64 8420}
!8421 = metadata !{i64 8421}
!8422 = metadata !{i64 8422}
!8423 = metadata !{i64 8423}
!8424 = metadata !{i64 8424}
!8425 = metadata !{i64 8425}
!8426 = metadata !{i64 8426}
!8427 = metadata !{i64 8427}
!8428 = metadata !{i64 8428}
!8429 = metadata !{i64 8429}
!8430 = metadata !{i64 8430}
!8431 = metadata !{i64 8431}
!8432 = metadata !{i64 8432}
!8433 = metadata !{i64 8433}
!8434 = metadata !{i64 8434}
!8435 = metadata !{i64 8435}
!8436 = metadata !{i64 8436}
!8437 = metadata !{i64 8437}
!8438 = metadata !{i64 8438}
!8439 = metadata !{i64 8439}
!8440 = metadata !{i64 8440}
!8441 = metadata !{i64 8441}
!8442 = metadata !{i64 8442}
!8443 = metadata !{i64 8443}
!8444 = metadata !{i64 8444}
!8445 = metadata !{i64 8445}
!8446 = metadata !{i64 8446}
!8447 = metadata !{i64 8447}
!8448 = metadata !{i64 8448}
!8449 = metadata !{i64 8449}
!8450 = metadata !{i64 8450}
!8451 = metadata !{i64 8451}
!8452 = metadata !{i64 8452}
!8453 = metadata !{i64 8453}
!8454 = metadata !{i64 8454}
!8455 = metadata !{i64 8455}
!8456 = metadata !{i64 8456}
!8457 = metadata !{i64 8457}
!8458 = metadata !{i64 8458}
!8459 = metadata !{i64 8459}
!8460 = metadata !{i64 8460}
!8461 = metadata !{i64 8461}
!8462 = metadata !{i64 8462}
!8463 = metadata !{i64 8463}
!8464 = metadata !{i64 8464}
!8465 = metadata !{i64 8465}
!8466 = metadata !{i64 8466}
!8467 = metadata !{i64 8467}
!8468 = metadata !{i64 8468}
!8469 = metadata !{i64 8469}
!8470 = metadata !{i64 8470}
!8471 = metadata !{i64 8471}
!8472 = metadata !{i64 8472}
!8473 = metadata !{i64 8473}
!8474 = metadata !{i64 8474}
!8475 = metadata !{i64 8475}
!8476 = metadata !{i64 8476}
!8477 = metadata !{i64 8477}
!8478 = metadata !{i64 8478}
!8479 = metadata !{i64 8479}
!8480 = metadata !{i64 8480}
!8481 = metadata !{i64 8481}
!8482 = metadata !{i64 8482}
!8483 = metadata !{i64 8483}
!8484 = metadata !{i64 8484}
!8485 = metadata !{i64 8485}
!8486 = metadata !{i64 8486}
!8487 = metadata !{i64 8487}
!8488 = metadata !{i64 8488}
!8489 = metadata !{i64 8489}
!8490 = metadata !{i64 8490}
!8491 = metadata !{i64 8491}
!8492 = metadata !{i64 8492}
!8493 = metadata !{i64 8493}
!8494 = metadata !{i64 8494}
!8495 = metadata !{i64 8495}
!8496 = metadata !{i64 8496}
!8497 = metadata !{i64 8497}
!8498 = metadata !{i64 8498}
!8499 = metadata !{i64 8499}
!8500 = metadata !{i64 8500}
!8501 = metadata !{i64 8501}
!8502 = metadata !{i64 8502}
!8503 = metadata !{i64 8503}
!8504 = metadata !{i64 8504}
!8505 = metadata !{i64 8505}
!8506 = metadata !{i64 8506}
!8507 = metadata !{i64 8507}
!8508 = metadata !{i64 8508}
!8509 = metadata !{i64 8509}
!8510 = metadata !{i64 8510}
!8511 = metadata !{i64 8511}
!8512 = metadata !{i64 8512}
!8513 = metadata !{i64 8513}
!8514 = metadata !{i64 8514}
!8515 = metadata !{i64 8515}
!8516 = metadata !{i64 8516}
!8517 = metadata !{i64 8517}
!8518 = metadata !{i64 8518}
!8519 = metadata !{i64 8519}
!8520 = metadata !{i64 8520}
!8521 = metadata !{i64 8521}
!8522 = metadata !{i64 8522}
!8523 = metadata !{i64 8523}
!8524 = metadata !{i64 8524}
!8525 = metadata !{i64 8525}
!8526 = metadata !{i64 8526}
!8527 = metadata !{i64 8527}
!8528 = metadata !{i64 8528}
!8529 = metadata !{i64 8529}
!8530 = metadata !{i64 8530}
!8531 = metadata !{i64 8531}
!8532 = metadata !{i64 8532}
!8533 = metadata !{i64 8533}
!8534 = metadata !{i64 8534}
!8535 = metadata !{i64 8535}
!8536 = metadata !{i64 8536}
!8537 = metadata !{i64 8537}
!8538 = metadata !{i64 8538}
!8539 = metadata !{i64 8539}
!8540 = metadata !{i64 8540}
!8541 = metadata !{i64 8541}
!8542 = metadata !{i64 8542}
!8543 = metadata !{i64 8543}
!8544 = metadata !{i64 8544}
!8545 = metadata !{i64 8545}
!8546 = metadata !{i64 8546}
!8547 = metadata !{i64 8547}
!8548 = metadata !{i64 8548}
!8549 = metadata !{i64 8549}
!8550 = metadata !{i64 8550}
!8551 = metadata !{i64 8551}
!8552 = metadata !{i64 8552}
!8553 = metadata !{i64 8553}
!8554 = metadata !{i64 8554}
!8555 = metadata !{i64 8555}
!8556 = metadata !{i64 8556}
!8557 = metadata !{i64 8557}
!8558 = metadata !{i64 8558}
!8559 = metadata !{i64 8559}
!8560 = metadata !{i64 8560}
!8561 = metadata !{i64 8561}
!8562 = metadata !{i64 8562}
!8563 = metadata !{i64 8563}
!8564 = metadata !{i64 8564}
!8565 = metadata !{i64 8565}
!8566 = metadata !{i64 8566}
!8567 = metadata !{i64 8567}
!8568 = metadata !{i64 8568}
!8569 = metadata !{i64 8569}
!8570 = metadata !{i64 8570}
!8571 = metadata !{i64 8571}
!8572 = metadata !{i64 8572}
!8573 = metadata !{i64 8573}
!8574 = metadata !{i64 8574}
!8575 = metadata !{i64 8575}
!8576 = metadata !{i64 8576}
!8577 = metadata !{i64 8577}
!8578 = metadata !{i64 8578}
!8579 = metadata !{i64 8579}
!8580 = metadata !{i64 8580}
!8581 = metadata !{i64 8581}
!8582 = metadata !{i64 8582}
!8583 = metadata !{i64 8583}
!8584 = metadata !{i64 8584}
!8585 = metadata !{i64 8585}
!8586 = metadata !{i64 8586}
!8587 = metadata !{i64 8587}
!8588 = metadata !{i64 8588}
!8589 = metadata !{i64 8589}
!8590 = metadata !{i64 8590}
!8591 = metadata !{i64 8591}
!8592 = metadata !{i64 8592}
!8593 = metadata !{i64 8593}
!8594 = metadata !{i64 8594}
!8595 = metadata !{i64 8595}
!8596 = metadata !{i64 8596}
!8597 = metadata !{i64 8597}
!8598 = metadata !{i64 8598}
!8599 = metadata !{i64 8599}
!8600 = metadata !{i64 8600}
!8601 = metadata !{i64 8601}
!8602 = metadata !{i64 8602}
!8603 = metadata !{i64 8603}
!8604 = metadata !{i64 8604}
!8605 = metadata !{i64 8605}
!8606 = metadata !{i64 8606}
!8607 = metadata !{i64 8607}
!8608 = metadata !{i64 8608}
!8609 = metadata !{i64 8609}
!8610 = metadata !{i64 8610}
!8611 = metadata !{i64 8611}
!8612 = metadata !{i64 8612}
!8613 = metadata !{i64 8613}
!8614 = metadata !{i64 8614}
!8615 = metadata !{i64 8615}
!8616 = metadata !{i64 8616}
!8617 = metadata !{i64 8617}
!8618 = metadata !{i64 8618}
!8619 = metadata !{i64 8619}
!8620 = metadata !{i64 8620}
!8621 = metadata !{i64 8621}
!8622 = metadata !{i64 8622}
!8623 = metadata !{i64 8623}
!8624 = metadata !{i64 8624}
!8625 = metadata !{i64 8625}
!8626 = metadata !{i64 8626}
!8627 = metadata !{i64 8627}
!8628 = metadata !{i64 8628}
!8629 = metadata !{i64 8629}
!8630 = metadata !{i64 8630}
!8631 = metadata !{i64 8631}
!8632 = metadata !{i64 8632}
!8633 = metadata !{i64 8633}
!8634 = metadata !{i64 8634}
!8635 = metadata !{i64 8635}
!8636 = metadata !{i64 8636}
!8637 = metadata !{i64 8637}
!8638 = metadata !{i64 8638}
!8639 = metadata !{i64 8639}
!8640 = metadata !{i64 8640}
!8641 = metadata !{i64 8641}
!8642 = metadata !{i64 8642}
!8643 = metadata !{i64 8643}
!8644 = metadata !{i64 8644}
!8645 = metadata !{i64 8645}
!8646 = metadata !{i64 8646}
!8647 = metadata !{i64 8647}
!8648 = metadata !{i64 8648}
!8649 = metadata !{i64 8649}
!8650 = metadata !{i64 8650}
!8651 = metadata !{i64 8651}
!8652 = metadata !{i64 8652}
!8653 = metadata !{i64 8653}
!8654 = metadata !{i64 8654}
!8655 = metadata !{i64 8655}
!8656 = metadata !{i64 8656}
!8657 = metadata !{i64 8657}
!8658 = metadata !{i64 8658}
!8659 = metadata !{i64 8659}
!8660 = metadata !{i64 8660}
!8661 = metadata !{i64 8661}
!8662 = metadata !{i64 8662}
!8663 = metadata !{i64 8663}
!8664 = metadata !{i64 8664}
!8665 = metadata !{i64 8665}
!8666 = metadata !{i64 8666}
!8667 = metadata !{i64 8667}
!8668 = metadata !{i64 8668}
!8669 = metadata !{i64 8669}
!8670 = metadata !{i64 8670}
!8671 = metadata !{i64 8671}
!8672 = metadata !{i64 8672}
!8673 = metadata !{i64 8673}
!8674 = metadata !{i64 8674}
!8675 = metadata !{i64 8675}
!8676 = metadata !{i64 8676}
!8677 = metadata !{i64 8677}
!8678 = metadata !{i64 8678}
!8679 = metadata !{i64 8679}
!8680 = metadata !{i64 8680}
!8681 = metadata !{i64 8681}
!8682 = metadata !{i64 8682}
!8683 = metadata !{i64 8683}
!8684 = metadata !{i64 8684}
!8685 = metadata !{i64 8685}
!8686 = metadata !{i64 8686}
!8687 = metadata !{i64 8687}
!8688 = metadata !{i64 8688}
!8689 = metadata !{i64 8689}
!8690 = metadata !{i64 8690}
!8691 = metadata !{i64 8691}
!8692 = metadata !{i64 8692}
!8693 = metadata !{i64 8693}
!8694 = metadata !{i64 8694}
!8695 = metadata !{i64 8695}
!8696 = metadata !{i64 8696}
!8697 = metadata !{i64 8697}
!8698 = metadata !{i64 8698}
!8699 = metadata !{i64 8699}
!8700 = metadata !{i64 8700}
!8701 = metadata !{i64 8701}
!8702 = metadata !{i64 8702}
!8703 = metadata !{i64 8703}
!8704 = metadata !{i64 8704}
!8705 = metadata !{i64 8705}
!8706 = metadata !{i64 8706}
!8707 = metadata !{i64 8707}
!8708 = metadata !{i64 8708}
!8709 = metadata !{i64 8709}
!8710 = metadata !{i64 8710}
!8711 = metadata !{i64 8711}
!8712 = metadata !{i64 8712}
!8713 = metadata !{i64 8713}
!8714 = metadata !{i64 8714}
!8715 = metadata !{i64 8715}
!8716 = metadata !{i64 8716}
!8717 = metadata !{i64 8717}
!8718 = metadata !{i64 8718}
!8719 = metadata !{i64 8719}
!8720 = metadata !{i64 8720}
!8721 = metadata !{i64 8721}
!8722 = metadata !{i64 8722}
!8723 = metadata !{i64 8723}
!8724 = metadata !{i64 8724}
!8725 = metadata !{i64 8725}
!8726 = metadata !{i64 8726}
!8727 = metadata !{i64 8727}
!8728 = metadata !{i64 8728}
!8729 = metadata !{i64 8729}
!8730 = metadata !{i64 8730}
!8731 = metadata !{i64 8731}
!8732 = metadata !{i64 8732}
!8733 = metadata !{i64 8733}
!8734 = metadata !{i64 8734}
!8735 = metadata !{i64 8735}
!8736 = metadata !{i64 8736}
!8737 = metadata !{i64 8737}
!8738 = metadata !{i64 8738}
!8739 = metadata !{i64 8739}
!8740 = metadata !{i64 8740}
!8741 = metadata !{i64 8741}
!8742 = metadata !{i64 8742}
!8743 = metadata !{i64 8743}
!8744 = metadata !{i64 8744}
!8745 = metadata !{i64 8745}
!8746 = metadata !{i64 8746}
!8747 = metadata !{i64 8747}
!8748 = metadata !{i64 8748}
!8749 = metadata !{i64 8749}
!8750 = metadata !{i64 8750}
!8751 = metadata !{i64 8751}
!8752 = metadata !{i64 8752}
!8753 = metadata !{i64 8753}
!8754 = metadata !{i64 8754}
!8755 = metadata !{i64 8755}
!8756 = metadata !{i64 8756}
!8757 = metadata !{i64 8757}
!8758 = metadata !{i64 8758}
!8759 = metadata !{i64 8759}
!8760 = metadata !{i64 8760}
!8761 = metadata !{i64 8761}
!8762 = metadata !{i64 8762}
!8763 = metadata !{i64 8763}
!8764 = metadata !{i64 8764}
!8765 = metadata !{i64 8765}
!8766 = metadata !{i64 8766}
!8767 = metadata !{i64 8767}
!8768 = metadata !{i64 8768}
!8769 = metadata !{i64 8769}
!8770 = metadata !{i64 8770}
!8771 = metadata !{i64 8771}
!8772 = metadata !{i64 8772}
!8773 = metadata !{i64 8773}
!8774 = metadata !{i64 8774}
!8775 = metadata !{i64 8775}
!8776 = metadata !{i64 8776}
!8777 = metadata !{i64 8777}
!8778 = metadata !{i64 8778}
!8779 = metadata !{i64 8779}
!8780 = metadata !{i64 8780}
!8781 = metadata !{i64 8781}
!8782 = metadata !{i64 8782}
!8783 = metadata !{i64 8783}
!8784 = metadata !{i64 8784}
!8785 = metadata !{i64 8785}
!8786 = metadata !{i64 8786}
!8787 = metadata !{i64 8787}
!8788 = metadata !{i64 8788}
!8789 = metadata !{i64 8789}
!8790 = metadata !{i64 8790}
!8791 = metadata !{i64 8791}
!8792 = metadata !{i64 8792}
!8793 = metadata !{i64 8793}
!8794 = metadata !{i64 8794}
!8795 = metadata !{i64 8795}
!8796 = metadata !{i64 8796}
!8797 = metadata !{i64 8797}
!8798 = metadata !{i64 8798}
!8799 = metadata !{i64 8799}
!8800 = metadata !{i64 8800}
!8801 = metadata !{i64 8801}
!8802 = metadata !{i64 8802}
!8803 = metadata !{i64 8803}
!8804 = metadata !{i64 8804}
!8805 = metadata !{i64 8805}
!8806 = metadata !{i64 8806}
!8807 = metadata !{i64 8807}
!8808 = metadata !{i64 8808}
!8809 = metadata !{i64 8809}
!8810 = metadata !{i64 8810}
!8811 = metadata !{i64 8811}
!8812 = metadata !{i64 8812}
!8813 = metadata !{i64 8813}
!8814 = metadata !{i64 8814}
!8815 = metadata !{i64 8815}
!8816 = metadata !{i64 8816}
!8817 = metadata !{i64 8817}
!8818 = metadata !{i64 8818}
!8819 = metadata !{i64 8819}
!8820 = metadata !{i64 8820}
!8821 = metadata !{i64 8821}
!8822 = metadata !{i64 8822}
!8823 = metadata !{i64 8823}
!8824 = metadata !{i64 8824}
!8825 = metadata !{i64 8825}
!8826 = metadata !{i64 8826}
!8827 = metadata !{i64 8827}
!8828 = metadata !{i64 8828}
!8829 = metadata !{i64 8829}
!8830 = metadata !{i64 8830}
!8831 = metadata !{i64 8831}
!8832 = metadata !{i64 8832}
!8833 = metadata !{i64 8833}
!8834 = metadata !{i64 8834}
!8835 = metadata !{i64 8835}
!8836 = metadata !{i64 8836}
!8837 = metadata !{i64 8837}
!8838 = metadata !{i64 8838}
!8839 = metadata !{i64 8839}
!8840 = metadata !{i64 8840}
!8841 = metadata !{i64 8841}
!8842 = metadata !{i64 8842}
!8843 = metadata !{i64 8843}
!8844 = metadata !{i64 8844}
!8845 = metadata !{i64 8845}
!8846 = metadata !{i64 8846}
!8847 = metadata !{i64 8847}
!8848 = metadata !{i64 8848}
!8849 = metadata !{i64 8849}
!8850 = metadata !{i64 8850}
!8851 = metadata !{i64 8851}
!8852 = metadata !{i64 8852}
!8853 = metadata !{i64 8853}
!8854 = metadata !{i64 8854}
!8855 = metadata !{i64 8855}
!8856 = metadata !{i64 8856}
!8857 = metadata !{i64 8857}
!8858 = metadata !{i64 8858}
!8859 = metadata !{i64 8859}
!8860 = metadata !{i64 8860}
!8861 = metadata !{i64 8861}
!8862 = metadata !{i64 8862}
!8863 = metadata !{i64 8863}
!8864 = metadata !{i64 8864}
!8865 = metadata !{i64 8865}
!8866 = metadata !{i64 8866}
!8867 = metadata !{i64 8867}
!8868 = metadata !{i64 8868}
!8869 = metadata !{i64 8869}
!8870 = metadata !{i64 8870}
!8871 = metadata !{i64 8871}
!8872 = metadata !{i64 8872}
!8873 = metadata !{i64 8873}
!8874 = metadata !{i64 8874}
!8875 = metadata !{i64 8875}
!8876 = metadata !{i64 8876}
!8877 = metadata !{i64 8877}
!8878 = metadata !{i64 8878}
!8879 = metadata !{i64 8879}
!8880 = metadata !{i64 8880}
!8881 = metadata !{i64 8881}
!8882 = metadata !{i64 8882}
!8883 = metadata !{i64 8883}
!8884 = metadata !{i64 8884}
!8885 = metadata !{i64 8885}
!8886 = metadata !{i64 8886}
!8887 = metadata !{i64 8887}
!8888 = metadata !{i64 8888}
!8889 = metadata !{i64 8889}
!8890 = metadata !{i64 8890}
!8891 = metadata !{i64 8891}
!8892 = metadata !{i64 8892}
!8893 = metadata !{i64 8893}
!8894 = metadata !{i64 8894}
!8895 = metadata !{i64 8895}
!8896 = metadata !{i64 8896}
!8897 = metadata !{i64 8897}
!8898 = metadata !{i64 8898}
!8899 = metadata !{i64 8899}
!8900 = metadata !{i64 8900}
!8901 = metadata !{i64 8901}
!8902 = metadata !{i64 8902}
!8903 = metadata !{i64 8903}
!8904 = metadata !{i64 8904}
!8905 = metadata !{i64 8905}
!8906 = metadata !{i64 8906}
!8907 = metadata !{i64 8907}
!8908 = metadata !{i64 8908}
!8909 = metadata !{i64 8909}
!8910 = metadata !{i64 8910}
!8911 = metadata !{i64 8911}
!8912 = metadata !{i64 8912}
!8913 = metadata !{i64 8913}
!8914 = metadata !{i64 8914}
!8915 = metadata !{i64 8915}
!8916 = metadata !{i64 8916}
!8917 = metadata !{i64 8917}
!8918 = metadata !{i64 8918}
!8919 = metadata !{i64 8919}
!8920 = metadata !{i64 8920}
!8921 = metadata !{i64 8921}
!8922 = metadata !{i64 8922}
!8923 = metadata !{i64 8923}
!8924 = metadata !{i64 8924}
!8925 = metadata !{i64 8925}
!8926 = metadata !{i64 8926}
!8927 = metadata !{i64 8927}
!8928 = metadata !{i64 8928}
!8929 = metadata !{i64 8929}
!8930 = metadata !{i64 8930}
!8931 = metadata !{i64 8931}
!8932 = metadata !{i64 8932}
!8933 = metadata !{i64 8933}
!8934 = metadata !{i64 8934}
!8935 = metadata !{i64 8935}
!8936 = metadata !{i64 8936}
!8937 = metadata !{i64 8937}
!8938 = metadata !{i64 8938}
!8939 = metadata !{i64 8939}
!8940 = metadata !{i64 8940}
!8941 = metadata !{i64 8941}
!8942 = metadata !{i64 8942}
!8943 = metadata !{i64 8943}
!8944 = metadata !{i64 8944}
!8945 = metadata !{i64 8945}
!8946 = metadata !{i64 8946}
!8947 = metadata !{i64 8947}
!8948 = metadata !{i64 8948}
!8949 = metadata !{i64 8949}
!8950 = metadata !{i64 8950}
!8951 = metadata !{i64 8951}
!8952 = metadata !{i64 8952}
!8953 = metadata !{i64 8953}
!8954 = metadata !{i64 8954}
!8955 = metadata !{i64 8955}
!8956 = metadata !{i64 8956}
!8957 = metadata !{i64 8957}
!8958 = metadata !{i64 8958}
!8959 = metadata !{i64 8959}
!8960 = metadata !{i64 8960}
!8961 = metadata !{i64 8961}
!8962 = metadata !{i64 8962}
!8963 = metadata !{i64 8963}
!8964 = metadata !{i64 8964}
!8965 = metadata !{i64 8965}
!8966 = metadata !{i64 8966}
!8967 = metadata !{i64 8967}
!8968 = metadata !{i64 8968}
!8969 = metadata !{i64 8969}
!8970 = metadata !{i64 8970}
!8971 = metadata !{i64 8971}
!8972 = metadata !{i64 8972}
!8973 = metadata !{i64 8973}
!8974 = metadata !{i64 8974}
!8975 = metadata !{i64 8975}
!8976 = metadata !{i64 8976}
!8977 = metadata !{i64 8977}
!8978 = metadata !{i64 8978}
!8979 = metadata !{i64 8979}
!8980 = metadata !{i64 8980}
!8981 = metadata !{i64 8981}
!8982 = metadata !{i64 8982}
!8983 = metadata !{i64 8983}
!8984 = metadata !{i64 8984}
!8985 = metadata !{i64 8985}
!8986 = metadata !{i64 8986}
!8987 = metadata !{i64 8987}
!8988 = metadata !{i64 8988}
!8989 = metadata !{i64 8989}
!8990 = metadata !{i64 8990}
!8991 = metadata !{i64 8991}
!8992 = metadata !{i64 8992}
!8993 = metadata !{i64 8993}
!8994 = metadata !{i64 8994}
!8995 = metadata !{i64 8995}
!8996 = metadata !{i64 8996}
!8997 = metadata !{i64 8997}
!8998 = metadata !{i64 8998}
!8999 = metadata !{i64 8999}
!9000 = metadata !{i64 9000}
!9001 = metadata !{i64 9001}
!9002 = metadata !{i64 9002}
!9003 = metadata !{i64 9003}
!9004 = metadata !{i64 9004}
!9005 = metadata !{i64 9005}
!9006 = metadata !{i64 9006}
!9007 = metadata !{i64 9007}
!9008 = metadata !{i64 9008}
!9009 = metadata !{i64 9009}
!9010 = metadata !{i64 9010}
!9011 = metadata !{i64 9011}
!9012 = metadata !{i64 9012}
!9013 = metadata !{i64 9013}
!9014 = metadata !{i64 9014}
!9015 = metadata !{i64 9015}
!9016 = metadata !{i64 9016}
!9017 = metadata !{i64 9017}
!9018 = metadata !{i64 9018}
!9019 = metadata !{i64 9019}
!9020 = metadata !{i64 9020}
!9021 = metadata !{i64 9021}
!9022 = metadata !{i64 9022}
!9023 = metadata !{i64 9023}
!9024 = metadata !{i64 9024}
!9025 = metadata !{i64 9025}
!9026 = metadata !{i64 9026}
!9027 = metadata !{i64 9027}
!9028 = metadata !{i64 9028}
!9029 = metadata !{i64 9029}
!9030 = metadata !{i64 9030}
!9031 = metadata !{i64 9031}
!9032 = metadata !{i64 9032}
!9033 = metadata !{i64 9033}
!9034 = metadata !{i64 9034}
!9035 = metadata !{i64 9035}
!9036 = metadata !{i64 9036}
!9037 = metadata !{i64 9037}
!9038 = metadata !{i64 9038}
!9039 = metadata !{i64 9039}
!9040 = metadata !{i64 9040}
!9041 = metadata !{i64 9041}
!9042 = metadata !{i64 9042}
!9043 = metadata !{i64 9043}
!9044 = metadata !{i64 9044}
!9045 = metadata !{i64 9045}
!9046 = metadata !{i64 9046}
!9047 = metadata !{i64 9047}
!9048 = metadata !{i64 9048}
!9049 = metadata !{i64 9049}
!9050 = metadata !{i64 9050}
!9051 = metadata !{i64 9051}
!9052 = metadata !{i64 9052}
!9053 = metadata !{i64 9053}
!9054 = metadata !{i64 9054}
!9055 = metadata !{i64 9055}
!9056 = metadata !{i64 9056}
!9057 = metadata !{i64 9057}
!9058 = metadata !{i64 9058}
!9059 = metadata !{i64 9059}
!9060 = metadata !{i64 9060}
!9061 = metadata !{i64 9061}
!9062 = metadata !{i64 9062}
!9063 = metadata !{i64 9063}
!9064 = metadata !{i64 9064}
!9065 = metadata !{i64 9065}
!9066 = metadata !{i64 9066}
!9067 = metadata !{i64 9067}
!9068 = metadata !{i64 9068}
!9069 = metadata !{i64 9069}
!9070 = metadata !{i64 9070}
!9071 = metadata !{i64 9071}
!9072 = metadata !{i64 9072}
!9073 = metadata !{i64 9073}
!9074 = metadata !{i64 9074}
!9075 = metadata !{i64 9075}
!9076 = metadata !{i64 9076}
!9077 = metadata !{i64 9077}
!9078 = metadata !{i64 9078}
!9079 = metadata !{i64 9079}
!9080 = metadata !{i64 9080}
!9081 = metadata !{i64 9081}
!9082 = metadata !{i64 9082}
!9083 = metadata !{i64 9083}
!9084 = metadata !{i64 9084}
!9085 = metadata !{i64 9085}
!9086 = metadata !{i64 9086}
!9087 = metadata !{i64 9087}
!9088 = metadata !{i64 9088}
!9089 = metadata !{i64 9089}
!9090 = metadata !{i64 9090}
!9091 = metadata !{i64 9091}
!9092 = metadata !{i64 9092}
!9093 = metadata !{i64 9093}
!9094 = metadata !{i64 9094}
!9095 = metadata !{i64 9095}
!9096 = metadata !{i64 9096}
!9097 = metadata !{i64 9097}
!9098 = metadata !{i64 9098}
!9099 = metadata !{i64 9099}
!9100 = metadata !{i64 9100}
!9101 = metadata !{i64 9101}
!9102 = metadata !{i64 9102}
!9103 = metadata !{i64 9103}
!9104 = metadata !{i64 9104}
!9105 = metadata !{i64 9105}
!9106 = metadata !{i64 9106}
!9107 = metadata !{i64 9107}
!9108 = metadata !{i64 9108}
!9109 = metadata !{i64 9109}
!9110 = metadata !{i64 9110}
!9111 = metadata !{i64 9111}
!9112 = metadata !{i64 9112}
!9113 = metadata !{i64 9113}
!9114 = metadata !{i64 9114}
!9115 = metadata !{i64 9115}
!9116 = metadata !{i64 9116}
!9117 = metadata !{i64 9117}
!9118 = metadata !{i64 9118}
!9119 = metadata !{i64 9119}
!9120 = metadata !{i64 9120}
!9121 = metadata !{i64 9121}
!9122 = metadata !{i64 9122}
!9123 = metadata !{i64 9123}
!9124 = metadata !{i64 9124}
!9125 = metadata !{i64 9125}
!9126 = metadata !{i64 9126}
!9127 = metadata !{i64 9127}
!9128 = metadata !{i64 9128}
!9129 = metadata !{i64 9129}
!9130 = metadata !{i64 9130}
!9131 = metadata !{i64 9131}
!9132 = metadata !{i64 9132}
!9133 = metadata !{i64 9133}
!9134 = metadata !{i64 9134}
!9135 = metadata !{i64 9135}
!9136 = metadata !{i64 9136}
!9137 = metadata !{i64 9137}
!9138 = metadata !{i64 9138}
!9139 = metadata !{i64 9139}
!9140 = metadata !{i64 9140}
!9141 = metadata !{i64 9141}
!9142 = metadata !{i64 9142}
!9143 = metadata !{i64 9143}
!9144 = metadata !{i64 9144}
!9145 = metadata !{i64 9145}
!9146 = metadata !{i64 9146}
!9147 = metadata !{i64 9147}
!9148 = metadata !{i64 9148}
!9149 = metadata !{i64 9149}
!9150 = metadata !{i64 9150}
!9151 = metadata !{i64 9151}
!9152 = metadata !{i64 9152}
!9153 = metadata !{i64 9153}
!9154 = metadata !{i64 9154}
!9155 = metadata !{i64 9155}
!9156 = metadata !{i64 9156}
!9157 = metadata !{i64 9157}
!9158 = metadata !{i64 9158}
!9159 = metadata !{i64 9159}
!9160 = metadata !{i64 9160}
!9161 = metadata !{i64 9161}
!9162 = metadata !{i64 9162}
!9163 = metadata !{i64 9163}
!9164 = metadata !{i64 9164}
!9165 = metadata !{i64 9165}
!9166 = metadata !{i64 9166}
!9167 = metadata !{i64 9167}
!9168 = metadata !{i64 9168}
!9169 = metadata !{i64 9169}
!9170 = metadata !{i64 9170}
!9171 = metadata !{i64 9171}
!9172 = metadata !{i64 9172}
!9173 = metadata !{i64 9173}
!9174 = metadata !{i64 9174}
!9175 = metadata !{i64 9175}
!9176 = metadata !{i64 9176}
!9177 = metadata !{i64 9177}
!9178 = metadata !{i64 9178}
!9179 = metadata !{i64 9179}
!9180 = metadata !{i64 9180}
!9181 = metadata !{i64 9181}
!9182 = metadata !{i64 9182}
!9183 = metadata !{i64 9183}
!9184 = metadata !{i64 9184}
!9185 = metadata !{i64 9185}
!9186 = metadata !{i64 9186}
!9187 = metadata !{i64 9187}
!9188 = metadata !{i64 9188}
!9189 = metadata !{i64 9189}
!9190 = metadata !{i64 9190}
!9191 = metadata !{i64 9191}
!9192 = metadata !{i64 9192}
!9193 = metadata !{i64 9193}
!9194 = metadata !{i64 9194}
!9195 = metadata !{i64 9195}
!9196 = metadata !{i64 9196}
!9197 = metadata !{i64 9197}
!9198 = metadata !{i64 9198}
!9199 = metadata !{i64 9199}
!9200 = metadata !{i64 9200}
!9201 = metadata !{i64 9201}
!9202 = metadata !{i64 9202}
!9203 = metadata !{i64 9203}
!9204 = metadata !{i64 9204}
!9205 = metadata !{i64 9205}
!9206 = metadata !{i64 9206}
!9207 = metadata !{i64 9207}
!9208 = metadata !{i64 9208}
!9209 = metadata !{i64 9209}
!9210 = metadata !{i64 9210}
!9211 = metadata !{i64 9211}
!9212 = metadata !{i64 9212}
!9213 = metadata !{i64 9213}
!9214 = metadata !{i64 9214}
!9215 = metadata !{i64 9215}
!9216 = metadata !{i64 9216}
!9217 = metadata !{i64 9217}
!9218 = metadata !{i64 9218}
!9219 = metadata !{i64 9219}
!9220 = metadata !{i64 9220}
!9221 = metadata !{i64 9221}
!9222 = metadata !{i64 9222}
!9223 = metadata !{i64 9223}
!9224 = metadata !{i64 9224}
!9225 = metadata !{i64 9225}
!9226 = metadata !{i64 9226}
!9227 = metadata !{i64 9227}
!9228 = metadata !{i64 9228}
!9229 = metadata !{i64 9229}
!9230 = metadata !{i64 9230}
!9231 = metadata !{i64 9231}
!9232 = metadata !{i64 9232}
!9233 = metadata !{i64 9233}
!9234 = metadata !{i64 9234}
!9235 = metadata !{i64 9235}
!9236 = metadata !{i64 9236}
!9237 = metadata !{i64 9237}
!9238 = metadata !{i64 9238}
!9239 = metadata !{i64 9239}
!9240 = metadata !{i64 9240}
!9241 = metadata !{i64 9241}
!9242 = metadata !{i64 9242}
!9243 = metadata !{i64 9243}
!9244 = metadata !{i64 9244}
!9245 = metadata !{i64 9245}
!9246 = metadata !{i64 9246}
!9247 = metadata !{i64 9247}
!9248 = metadata !{i64 9248}
!9249 = metadata !{i64 9249}
!9250 = metadata !{i64 9250}
!9251 = metadata !{i64 9251}
!9252 = metadata !{i64 9252}
!9253 = metadata !{i64 9253}
!9254 = metadata !{i64 9254}
!9255 = metadata !{i64 9255}
!9256 = metadata !{i64 9256}
!9257 = metadata !{i64 9257}
!9258 = metadata !{i64 9258}
!9259 = metadata !{i64 9259}
!9260 = metadata !{i64 9260}
!9261 = metadata !{i64 9261}
!9262 = metadata !{i64 9262}
!9263 = metadata !{i64 9263}
!9264 = metadata !{i64 9264}
!9265 = metadata !{i64 9265}
!9266 = metadata !{i64 9266}
!9267 = metadata !{i64 9267}
!9268 = metadata !{i64 9268}
!9269 = metadata !{i64 9269}
!9270 = metadata !{i64 9270}
!9271 = metadata !{i64 9271}
!9272 = metadata !{i64 9272}
!9273 = metadata !{i64 9273}
!9274 = metadata !{i64 9274}
!9275 = metadata !{i64 9275}
!9276 = metadata !{i64 9276}
!9277 = metadata !{i64 9277}
!9278 = metadata !{i64 9278}
!9279 = metadata !{i64 9279}
!9280 = metadata !{i64 9280}
!9281 = metadata !{i64 9281}
!9282 = metadata !{i64 9282}
!9283 = metadata !{i64 9283}
!9284 = metadata !{i64 9284}
!9285 = metadata !{i64 9285}
!9286 = metadata !{i64 9286}
!9287 = metadata !{i64 9287}
!9288 = metadata !{i64 9288}
!9289 = metadata !{i64 9289}
!9290 = metadata !{i64 9290}
!9291 = metadata !{i64 9291}
!9292 = metadata !{i64 9292}
!9293 = metadata !{i64 9293}
!9294 = metadata !{i64 9294}
!9295 = metadata !{i64 9295}
!9296 = metadata !{i64 9296}
!9297 = metadata !{i64 9297}
!9298 = metadata !{i64 9298}
!9299 = metadata !{i64 9299}
!9300 = metadata !{i64 9300}
!9301 = metadata !{i64 9301}
!9302 = metadata !{i64 9302}
!9303 = metadata !{i64 9303}
!9304 = metadata !{i64 9304}
!9305 = metadata !{i64 9305}
!9306 = metadata !{i64 9306}
!9307 = metadata !{i64 9307}
!9308 = metadata !{i64 9308}
!9309 = metadata !{i64 9309}
!9310 = metadata !{i64 9310}
!9311 = metadata !{i64 9311}
!9312 = metadata !{i64 9312}
!9313 = metadata !{i64 9313}
!9314 = metadata !{i64 9314}
!9315 = metadata !{i64 9315}
!9316 = metadata !{i64 9316}
!9317 = metadata !{i64 9317}
!9318 = metadata !{i64 9318}
!9319 = metadata !{i64 9319}
!9320 = metadata !{i64 9320}
!9321 = metadata !{i64 9321}
!9322 = metadata !{i64 9322}
!9323 = metadata !{i64 9323}
!9324 = metadata !{i64 9324}
!9325 = metadata !{i64 9325}
!9326 = metadata !{i64 9326}
!9327 = metadata !{i64 9327}
!9328 = metadata !{i64 9328}
!9329 = metadata !{i64 9329}
!9330 = metadata !{i64 9330}
!9331 = metadata !{i64 9331}
!9332 = metadata !{i64 9332}
!9333 = metadata !{i64 9333}
!9334 = metadata !{i64 9334}
!9335 = metadata !{i64 9335}
!9336 = metadata !{i64 9336}
!9337 = metadata !{i64 9337}
!9338 = metadata !{i64 9338}
!9339 = metadata !{i64 9339}
!9340 = metadata !{i64 9340}
!9341 = metadata !{i64 9341}
!9342 = metadata !{i64 9342}
!9343 = metadata !{i64 9343}
!9344 = metadata !{i64 9344}
!9345 = metadata !{i64 9345}
!9346 = metadata !{i64 9346}
!9347 = metadata !{i64 9347}
!9348 = metadata !{i64 9348}
!9349 = metadata !{i64 9349}
!9350 = metadata !{i64 9350}
!9351 = metadata !{i64 9351}
!9352 = metadata !{i64 9352}
!9353 = metadata !{i64 9353}
!9354 = metadata !{i64 9354}
!9355 = metadata !{i64 9355}
!9356 = metadata !{i64 9356}
!9357 = metadata !{i64 9357}
!9358 = metadata !{i64 9358}
!9359 = metadata !{i64 9359}
!9360 = metadata !{i64 9360}
!9361 = metadata !{i64 9361}
!9362 = metadata !{i64 9362}
!9363 = metadata !{i64 9363}
!9364 = metadata !{i64 9364}
!9365 = metadata !{i64 9365}
!9366 = metadata !{i64 9366}
!9367 = metadata !{i64 9367}
!9368 = metadata !{i64 9368}
!9369 = metadata !{i64 9369}
!9370 = metadata !{i64 9370}
!9371 = metadata !{i64 9371}
!9372 = metadata !{i64 9372}
!9373 = metadata !{i64 9373}
!9374 = metadata !{i64 9374}
!9375 = metadata !{i64 9375}
!9376 = metadata !{i64 9376}
!9377 = metadata !{i64 9377}
!9378 = metadata !{i64 9378}
!9379 = metadata !{i64 9379}
!9380 = metadata !{i64 9380}
!9381 = metadata !{i64 9381}
!9382 = metadata !{i64 9382}
!9383 = metadata !{i64 9383}
!9384 = metadata !{i64 9384}
!9385 = metadata !{i64 9385}
!9386 = metadata !{i64 9386}
!9387 = metadata !{i64 9387}
!9388 = metadata !{i64 9388}
!9389 = metadata !{i64 9389}
!9390 = metadata !{i64 9390}
!9391 = metadata !{i64 9391}
!9392 = metadata !{i64 9392}
!9393 = metadata !{i64 9393}
!9394 = metadata !{i64 9394}
!9395 = metadata !{i64 9395}
!9396 = metadata !{i64 9396}
!9397 = metadata !{i64 9397}
!9398 = metadata !{i64 9398}
!9399 = metadata !{i64 9399}
!9400 = metadata !{i64 9400}
!9401 = metadata !{i64 9401}
!9402 = metadata !{i64 9402}
!9403 = metadata !{i64 9403}
!9404 = metadata !{i64 9404}
!9405 = metadata !{i64 9405}
!9406 = metadata !{i64 9406}
!9407 = metadata !{i64 9407}
!9408 = metadata !{i64 9408}
!9409 = metadata !{i64 9409}
!9410 = metadata !{i64 9410}
!9411 = metadata !{i64 9411}
!9412 = metadata !{i64 9412}
!9413 = metadata !{i64 9413}
!9414 = metadata !{i64 9414}
!9415 = metadata !{i64 9415}
!9416 = metadata !{i64 9416}
!9417 = metadata !{i64 9417}
!9418 = metadata !{i64 9418}
!9419 = metadata !{i64 9419}
!9420 = metadata !{i64 9420}
!9421 = metadata !{i64 9421}
!9422 = metadata !{i64 9422}
!9423 = metadata !{i64 9423}
!9424 = metadata !{i64 9424}
!9425 = metadata !{i64 9425}
!9426 = metadata !{i64 9426}
!9427 = metadata !{i64 9427}
!9428 = metadata !{i64 9428}
!9429 = metadata !{i64 9429}
!9430 = metadata !{i64 9430}
!9431 = metadata !{i64 9431}
!9432 = metadata !{i64 9432}
!9433 = metadata !{i64 9433}
!9434 = metadata !{i64 9434}
!9435 = metadata !{i64 9435}
!9436 = metadata !{i64 9436}
!9437 = metadata !{i64 9437}
!9438 = metadata !{i64 9438}
!9439 = metadata !{i64 9439}
!9440 = metadata !{i64 9440}
!9441 = metadata !{i64 9441}
!9442 = metadata !{i64 9442}
!9443 = metadata !{i64 9443}
!9444 = metadata !{i64 9444}
!9445 = metadata !{i64 9445}
!9446 = metadata !{i64 9446}
!9447 = metadata !{i64 9447}
!9448 = metadata !{i64 9448}
!9449 = metadata !{i64 9449}
!9450 = metadata !{i64 9450}
!9451 = metadata !{i64 9451}
!9452 = metadata !{i64 9452}
!9453 = metadata !{i64 9453}
!9454 = metadata !{i64 9454}
!9455 = metadata !{i64 9455}
!9456 = metadata !{i64 9456}
!9457 = metadata !{i64 9457}
!9458 = metadata !{i64 9458}
!9459 = metadata !{i64 9459}
!9460 = metadata !{i64 9460}
!9461 = metadata !{i64 9461}
!9462 = metadata !{i64 9462}
!9463 = metadata !{i64 9463}
!9464 = metadata !{i64 9464}
!9465 = metadata !{i64 9465}
!9466 = metadata !{i64 9466}
!9467 = metadata !{i64 9467}
!9468 = metadata !{i64 9468}
!9469 = metadata !{i64 9469}
!9470 = metadata !{i64 9470}
!9471 = metadata !{i64 9471}
!9472 = metadata !{i64 9472}
!9473 = metadata !{i64 9473}
!9474 = metadata !{i64 9474}
!9475 = metadata !{i64 9475}
!9476 = metadata !{i64 9476}
!9477 = metadata !{i64 9477}
!9478 = metadata !{i64 9478}
!9479 = metadata !{i64 9479}
!9480 = metadata !{i64 9480}
!9481 = metadata !{i64 9481}
!9482 = metadata !{i64 9482}
!9483 = metadata !{i64 9483}
!9484 = metadata !{i64 9484}
!9485 = metadata !{i64 9485}
!9486 = metadata !{i64 9486}
!9487 = metadata !{i64 9487}
!9488 = metadata !{i64 9488}
!9489 = metadata !{i64 9489}
!9490 = metadata !{i64 9490}
!9491 = metadata !{i64 9491}
!9492 = metadata !{i64 9492}
!9493 = metadata !{i64 9493}
!9494 = metadata !{i64 9494}
!9495 = metadata !{i64 9495}
!9496 = metadata !{i64 9496}
!9497 = metadata !{i64 9497}
!9498 = metadata !{i64 9498}
!9499 = metadata !{i64 9499}
!9500 = metadata !{i64 9500}
!9501 = metadata !{i64 9501}
!9502 = metadata !{i64 9502}
!9503 = metadata !{i64 9503}
!9504 = metadata !{i64 9504}
!9505 = metadata !{i64 9505}
!9506 = metadata !{i64 9506}
!9507 = metadata !{i64 9507}
!9508 = metadata !{i64 9508}
!9509 = metadata !{i64 9509}
!9510 = metadata !{i64 9510}
!9511 = metadata !{i64 9511}
!9512 = metadata !{i64 9512}
!9513 = metadata !{i64 9513}
!9514 = metadata !{i64 9514}
!9515 = metadata !{i64 9515}
!9516 = metadata !{i64 9516}
!9517 = metadata !{i64 9517}
!9518 = metadata !{i64 9518}
!9519 = metadata !{i64 9519}
!9520 = metadata !{i64 9520}
!9521 = metadata !{i64 9521}
!9522 = metadata !{i64 9522}
!9523 = metadata !{i64 9523}
!9524 = metadata !{i64 9524}
!9525 = metadata !{i64 9525}
!9526 = metadata !{i64 9526}
!9527 = metadata !{i64 9527}
!9528 = metadata !{i64 9528}
!9529 = metadata !{i64 9529}
!9530 = metadata !{i64 9530}
!9531 = metadata !{i64 9531}
!9532 = metadata !{i64 9532}
!9533 = metadata !{i64 9533}
!9534 = metadata !{i64 9534}
!9535 = metadata !{i64 9535}
!9536 = metadata !{i64 9536}
!9537 = metadata !{i64 9537}
!9538 = metadata !{i64 9538}
!9539 = metadata !{i64 9539}
!9540 = metadata !{i64 9540}
!9541 = metadata !{i64 9541}
!9542 = metadata !{i64 9542}
!9543 = metadata !{i64 9543}
!9544 = metadata !{i64 9544}
!9545 = metadata !{i64 9545}
!9546 = metadata !{i64 9546}
!9547 = metadata !{i64 9547}
!9548 = metadata !{i64 9548}
!9549 = metadata !{i64 9549}
!9550 = metadata !{i64 9550}
!9551 = metadata !{i64 9551}
!9552 = metadata !{i64 9552}
!9553 = metadata !{i64 9553}
!9554 = metadata !{i64 9554}
!9555 = metadata !{i64 9555}
!9556 = metadata !{i64 9556}
!9557 = metadata !{i64 9557}
!9558 = metadata !{i64 9558}
!9559 = metadata !{i64 9559}
!9560 = metadata !{i64 9560}
!9561 = metadata !{i64 9561}
!9562 = metadata !{i64 9562}
!9563 = metadata !{i64 9563}
!9564 = metadata !{i64 9564}
!9565 = metadata !{i64 9565}
!9566 = metadata !{i64 9566}
!9567 = metadata !{i64 9567}
!9568 = metadata !{i64 9568}
!9569 = metadata !{i64 9569}
!9570 = metadata !{i64 9570}
!9571 = metadata !{i64 9571}
!9572 = metadata !{i64 9572}
!9573 = metadata !{i64 9573}
!9574 = metadata !{i64 9574}
!9575 = metadata !{i64 9575}
!9576 = metadata !{i64 9576}
!9577 = metadata !{i64 9577}
!9578 = metadata !{i64 9578}
!9579 = metadata !{i64 9579}
!9580 = metadata !{i64 9580}
!9581 = metadata !{i64 9581}
!9582 = metadata !{i64 9582}
!9583 = metadata !{i64 9583}
!9584 = metadata !{i64 9584}
!9585 = metadata !{i64 9585}
!9586 = metadata !{i64 9586}
!9587 = metadata !{i64 9587}
!9588 = metadata !{i64 9588}
!9589 = metadata !{i64 9589}
!9590 = metadata !{i64 9590}
!9591 = metadata !{i64 9591}
!9592 = metadata !{i64 9592}
!9593 = metadata !{i64 9593}
!9594 = metadata !{i64 9594}
!9595 = metadata !{i64 9595}
!9596 = metadata !{i64 9596}
!9597 = metadata !{i64 9597}
!9598 = metadata !{i64 9598}
!9599 = metadata !{i64 9599}
!9600 = metadata !{i64 9600}
!9601 = metadata !{i64 9601}
!9602 = metadata !{i64 9602}
!9603 = metadata !{i64 9603}
!9604 = metadata !{i64 9604}
!9605 = metadata !{i64 9605}
!9606 = metadata !{i64 9606}
!9607 = metadata !{i64 9607}
!9608 = metadata !{i64 9608}
!9609 = metadata !{i64 9609}
!9610 = metadata !{i64 9610}
!9611 = metadata !{i64 9611}
!9612 = metadata !{i64 9612}
!9613 = metadata !{i64 9613}
!9614 = metadata !{i64 9614}
!9615 = metadata !{i64 9615}
!9616 = metadata !{i64 9616}
!9617 = metadata !{i64 9617}
!9618 = metadata !{i64 9618}
!9619 = metadata !{i64 9619}
!9620 = metadata !{i64 9620}
!9621 = metadata !{i64 9621}
!9622 = metadata !{i64 9622}
!9623 = metadata !{i64 9623}
!9624 = metadata !{i64 9624}
!9625 = metadata !{i64 9625}
!9626 = metadata !{i64 9626}
!9627 = metadata !{i64 9627}
!9628 = metadata !{i64 9628}
!9629 = metadata !{i64 9629}
!9630 = metadata !{i64 9630}
!9631 = metadata !{i64 9631}
!9632 = metadata !{i64 9632}
!9633 = metadata !{i64 9633}
!9634 = metadata !{i64 9634}
!9635 = metadata !{i64 9635}
!9636 = metadata !{i64 9636}
!9637 = metadata !{i64 9637}
!9638 = metadata !{i64 9638}
!9639 = metadata !{i64 9639}
!9640 = metadata !{i64 9640}
!9641 = metadata !{i64 9641}
!9642 = metadata !{i64 9642}
!9643 = metadata !{i64 9643}
!9644 = metadata !{i64 9644}
!9645 = metadata !{i64 9645}
!9646 = metadata !{i64 9646}
!9647 = metadata !{i64 9647}
!9648 = metadata !{i64 9648}
!9649 = metadata !{i64 9649}
!9650 = metadata !{i64 9650}
!9651 = metadata !{i64 9651}
!9652 = metadata !{i64 9652}
!9653 = metadata !{i64 9653}
!9654 = metadata !{i64 9654}
!9655 = metadata !{i64 9655}
!9656 = metadata !{i64 9656}
!9657 = metadata !{i64 9657}
!9658 = metadata !{i64 9658}
!9659 = metadata !{i64 9659}
!9660 = metadata !{i64 9660}
!9661 = metadata !{i64 9661}
!9662 = metadata !{i64 9662}
!9663 = metadata !{i64 9663}
!9664 = metadata !{i64 9664}
!9665 = metadata !{i64 9665}
!9666 = metadata !{i64 9666}
!9667 = metadata !{i64 9667}
!9668 = metadata !{i64 9668}
!9669 = metadata !{i64 9669}
!9670 = metadata !{i64 9670}
!9671 = metadata !{i64 9671}
!9672 = metadata !{i64 9672}
!9673 = metadata !{i64 9673}
!9674 = metadata !{i64 9674}
!9675 = metadata !{i64 9675}
!9676 = metadata !{i64 9676}
!9677 = metadata !{i64 9677}
!9678 = metadata !{i64 9678}
!9679 = metadata !{i64 9679}
!9680 = metadata !{i64 9680}
!9681 = metadata !{i64 9681}
!9682 = metadata !{i64 9682}
!9683 = metadata !{i64 9683}
!9684 = metadata !{i64 9684}
!9685 = metadata !{i64 9685}
!9686 = metadata !{i64 9686}
!9687 = metadata !{i64 9687}
!9688 = metadata !{i64 9688}
!9689 = metadata !{i64 9689}
!9690 = metadata !{i64 9690}
!9691 = metadata !{i64 9691}
!9692 = metadata !{i64 9692}
!9693 = metadata !{i64 9693}
!9694 = metadata !{i64 9694}
!9695 = metadata !{i64 9695}
!9696 = metadata !{i64 9696}
!9697 = metadata !{i64 9697}
!9698 = metadata !{i64 9698}
!9699 = metadata !{i64 9699}
!9700 = metadata !{i64 9700}
!9701 = metadata !{i64 9701}
!9702 = metadata !{i64 9702}
!9703 = metadata !{i64 9703}
!9704 = metadata !{i64 9704}
!9705 = metadata !{i64 9705}
!9706 = metadata !{i64 9706}
!9707 = metadata !{i64 9707}
!9708 = metadata !{i64 9708}
!9709 = metadata !{i64 9709}
!9710 = metadata !{i64 9710}
!9711 = metadata !{i64 9711}
!9712 = metadata !{i64 9712}
!9713 = metadata !{i64 9713}
!9714 = metadata !{i64 9714}
!9715 = metadata !{i64 9715}
!9716 = metadata !{i64 9716}
!9717 = metadata !{i64 9717}
!9718 = metadata !{i64 9718}
!9719 = metadata !{i64 9719}
!9720 = metadata !{i64 9720}
!9721 = metadata !{i64 9721}
!9722 = metadata !{i64 9722}
!9723 = metadata !{i64 9723}
!9724 = metadata !{i64 9724}
!9725 = metadata !{i64 9725}
!9726 = metadata !{i64 9726}
!9727 = metadata !{i64 9727}
!9728 = metadata !{i64 9728}
!9729 = metadata !{i64 9729}
!9730 = metadata !{i64 9730}
!9731 = metadata !{i64 9731}
!9732 = metadata !{i64 9732}
!9733 = metadata !{i64 9733}
!9734 = metadata !{i64 9734}
!9735 = metadata !{i64 9735}
!9736 = metadata !{i64 9736}
!9737 = metadata !{i64 9737}
!9738 = metadata !{i64 9738}
!9739 = metadata !{i64 9739}
!9740 = metadata !{i64 9740}
!9741 = metadata !{i64 9741}
!9742 = metadata !{i64 9742}
!9743 = metadata !{i64 9743}
!9744 = metadata !{i64 9744}
!9745 = metadata !{i64 9745}
!9746 = metadata !{i64 9746}
!9747 = metadata !{i64 9747}
!9748 = metadata !{i64 9748}
!9749 = metadata !{i64 9749}
!9750 = metadata !{i64 9750}
!9751 = metadata !{i64 9751}
!9752 = metadata !{i64 9752}
!9753 = metadata !{i64 9753}
!9754 = metadata !{i64 9754}
!9755 = metadata !{i64 9755}
!9756 = metadata !{i64 9756}
!9757 = metadata !{i64 9757}
!9758 = metadata !{i64 9758}
!9759 = metadata !{i64 9759}
!9760 = metadata !{i64 9760}
!9761 = metadata !{i64 9761}
!9762 = metadata !{i64 9762}
!9763 = metadata !{i64 9763}
!9764 = metadata !{i64 9764}
!9765 = metadata !{i64 9765}
!9766 = metadata !{i64 9766}
!9767 = metadata !{i64 9767}
!9768 = metadata !{i64 9768}
!9769 = metadata !{i64 9769}
!9770 = metadata !{i64 9770}
!9771 = metadata !{i64 9771}
!9772 = metadata !{i64 9772}
!9773 = metadata !{i64 9773}
!9774 = metadata !{i64 9774}
!9775 = metadata !{i64 9775}
!9776 = metadata !{i64 9776}
!9777 = metadata !{i64 9777}
!9778 = metadata !{i64 9778}
!9779 = metadata !{i64 9779}
!9780 = metadata !{i64 9780}
!9781 = metadata !{i64 9781}
!9782 = metadata !{i64 9782}
!9783 = metadata !{i64 9783}
!9784 = metadata !{i64 9784}
!9785 = metadata !{i64 9785}
!9786 = metadata !{i64 9786}
!9787 = metadata !{i64 9787}
!9788 = metadata !{i64 9788}
!9789 = metadata !{i64 9789}
!9790 = metadata !{i64 9790}
!9791 = metadata !{i64 9791}
!9792 = metadata !{i64 9792}
!9793 = metadata !{i64 9793}
!9794 = metadata !{i64 9794}
!9795 = metadata !{i64 9795}
!9796 = metadata !{i64 9796}
!9797 = metadata !{i64 9797}
!9798 = metadata !{i64 9798}
!9799 = metadata !{i64 9799}
!9800 = metadata !{i64 9800}
!9801 = metadata !{i64 9801}
!9802 = metadata !{i64 9802}
!9803 = metadata !{i64 9803}
!9804 = metadata !{i64 9804}
!9805 = metadata !{i64 9805}
!9806 = metadata !{i64 9806}
!9807 = metadata !{i64 9807}
!9808 = metadata !{i64 9808}
!9809 = metadata !{i64 9809}
!9810 = metadata !{i64 9810}
!9811 = metadata !{i64 9811}
!9812 = metadata !{i64 9812}
!9813 = metadata !{i64 9813}
!9814 = metadata !{i64 9814}
!9815 = metadata !{i64 9815}
!9816 = metadata !{i64 9816}
!9817 = metadata !{i64 9817}
!9818 = metadata !{i64 9818}
!9819 = metadata !{i64 9819}
!9820 = metadata !{i64 9820}
!9821 = metadata !{i64 9821}
!9822 = metadata !{i64 9822}
!9823 = metadata !{i64 9823}
!9824 = metadata !{i64 9824}
!9825 = metadata !{i64 9825}
!9826 = metadata !{i64 9826}
!9827 = metadata !{i64 9827}
!9828 = metadata !{i64 9828}
!9829 = metadata !{i64 9829}
!9830 = metadata !{i64 9830}
!9831 = metadata !{i64 9831}
!9832 = metadata !{i64 9832}
!9833 = metadata !{i64 9833}
!9834 = metadata !{i64 9834}
!9835 = metadata !{i64 9835}
!9836 = metadata !{i64 9836}
!9837 = metadata !{i64 9837}
!9838 = metadata !{i64 9838}
!9839 = metadata !{i64 9839}
!9840 = metadata !{i64 9840}
!9841 = metadata !{i64 9841}
!9842 = metadata !{i64 9842}
!9843 = metadata !{i64 9843}
!9844 = metadata !{i64 9844}
!9845 = metadata !{i64 9845}
!9846 = metadata !{i64 9846}
!9847 = metadata !{i64 9847}
!9848 = metadata !{i64 9848}
!9849 = metadata !{i64 9849}
!9850 = metadata !{i64 9850}
!9851 = metadata !{i64 9851}
!9852 = metadata !{i64 9852}
!9853 = metadata !{i64 9853}
!9854 = metadata !{i64 9854}
!9855 = metadata !{i64 9855}
!9856 = metadata !{i64 9856}
!9857 = metadata !{i64 9857}
!9858 = metadata !{i64 9858}
!9859 = metadata !{i64 9859}
!9860 = metadata !{i64 9860}
!9861 = metadata !{i64 9861}
!9862 = metadata !{i64 9862}
!9863 = metadata !{i64 9863}
!9864 = metadata !{i64 9864}
!9865 = metadata !{i64 9865}
!9866 = metadata !{i64 9866}
!9867 = metadata !{i64 9867}
!9868 = metadata !{i64 9868}
!9869 = metadata !{i64 9869}
!9870 = metadata !{i64 9870}
!9871 = metadata !{i64 9871}
!9872 = metadata !{i64 9872}
!9873 = metadata !{i64 9873}
!9874 = metadata !{i64 9874}
!9875 = metadata !{i64 9875}
!9876 = metadata !{i64 9876}
!9877 = metadata !{i64 9877}
!9878 = metadata !{i64 9878}
!9879 = metadata !{i64 9879}
!9880 = metadata !{i64 9880}
!9881 = metadata !{i64 9881}
!9882 = metadata !{i64 9882}
!9883 = metadata !{i64 9883}
!9884 = metadata !{i64 9884}
!9885 = metadata !{i64 9885}
!9886 = metadata !{i64 9886}
!9887 = metadata !{i64 9887}
!9888 = metadata !{i64 9888}
!9889 = metadata !{i64 9889}
!9890 = metadata !{i64 9890}
!9891 = metadata !{i64 9891}
!9892 = metadata !{i64 9892}
!9893 = metadata !{i64 9893}
!9894 = metadata !{i64 9894}
!9895 = metadata !{i64 9895}
!9896 = metadata !{i64 9896}
!9897 = metadata !{i64 9897}
!9898 = metadata !{i64 9898}
!9899 = metadata !{i64 9899}
!9900 = metadata !{i64 9900}
!9901 = metadata !{i64 9901}
!9902 = metadata !{i64 9902}
!9903 = metadata !{i64 9903}
!9904 = metadata !{i64 9904}
!9905 = metadata !{i64 9905}
!9906 = metadata !{i64 9906}
!9907 = metadata !{i64 9907}
!9908 = metadata !{i64 9908}
!9909 = metadata !{i64 9909}
!9910 = metadata !{i64 9910}
!9911 = metadata !{i64 9911}
!9912 = metadata !{i64 9912}
!9913 = metadata !{i64 9913}
!9914 = metadata !{i64 9914}
!9915 = metadata !{i64 9915}
!9916 = metadata !{i64 9916}
!9917 = metadata !{i64 9917}
!9918 = metadata !{i64 9918}
!9919 = metadata !{i64 9919}
!9920 = metadata !{i64 9920}
!9921 = metadata !{i64 9921}
!9922 = metadata !{i64 9922}
!9923 = metadata !{i64 9923}
!9924 = metadata !{i64 9924}
!9925 = metadata !{i64 9925}
!9926 = metadata !{i64 9926}
!9927 = metadata !{i64 9927}
!9928 = metadata !{i64 9928}
!9929 = metadata !{i64 9929}
!9930 = metadata !{i64 9930}
!9931 = metadata !{i64 9931}
!9932 = metadata !{i64 9932}
!9933 = metadata !{i64 9933}
!9934 = metadata !{i64 9934}
!9935 = metadata !{i64 9935}
!9936 = metadata !{i64 9936}
!9937 = metadata !{i64 9937}
!9938 = metadata !{i64 9938}
